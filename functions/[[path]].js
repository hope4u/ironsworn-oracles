var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value;
var __esm = (fn, res) => function() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var __publicField = (obj, key, value) => (__defNormalProp(obj, typeof key != "symbol" ? key + "" : key, value), value);

// node_modules/esbuild-plugin-polyfill-node/polyfills/global.js
var init_global = __esm({
  "node_modules/esbuild-plugin-polyfill-node/polyfills/global.js"() {
  }
});

// node_modules/esbuild-plugin-polyfill-node/polyfills/__dirname.js
var init_dirname = __esm({
  "node_modules/esbuild-plugin-polyfill-node/polyfills/__dirname.js"() {
  }
});

// node_modules/esbuild-plugin-polyfill-node/polyfills/__filename.js
var init_filename = __esm({
  "node_modules/esbuild-plugin-polyfill-node/polyfills/__filename.js"() {
  }
});

// node_modules/@jspm/core/nodelibs/browser/process.js
function Item(fun, array) {
  this.fun = fun, this.array = array;
}
function hrtime(previousTimestamp) {
  var baseNow = Math.floor((Date.now() - _performance.now()) * 1e-3), clocktime = _performance.now() * 1e-3, seconds = Math.floor(clocktime) + baseNow, nanoseconds = Math.floor(clocktime % 1 * 1e9);
  return previousTimestamp && (seconds = seconds - previousTimestamp[0], nanoseconds = nanoseconds - previousTimestamp[1], nanoseconds < 0 && (seconds--, nanoseconds += nanoPerSec)), [seconds, nanoseconds];
}
var env, _performance, nowOffset, nanoPerSec, init_process = __esm({
  "node_modules/@jspm/core/nodelibs/browser/process.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    Item.prototype.run = function() {
      this.fun.apply(null, this.array);
    };
    env = {
      PATH: "/usr/bin",
      LANG: navigator.language + ".UTF-8",
      PWD: "/",
      HOME: "/home",
      TMP: "/tmp"
    }, _performance = {
      now: typeof performance < "u" ? performance.now.bind(performance) : void 0,
      timing: typeof performance < "u" ? performance.timing : void 0
    };
    _performance.now === void 0 && (nowOffset = Date.now(), _performance.timing && _performance.timing.navigationStart && (nowOffset = _performance.timing.navigationStart), _performance.now = () => Date.now() - nowOffset);
    nanoPerSec = 1e9;
    hrtime.bigint = function(time) {
      var diff = hrtime(time);
      return typeof BigInt > "u" ? diff[0] * nanoPerSec + diff[1] : BigInt(diff[0] * nanoPerSec) + BigInt(diff[1]);
    };
  }
});

// node_modules/esbuild-plugin-polyfill-node/polyfills/process.js
var init_process2 = __esm({
  "node_modules/esbuild-plugin-polyfill-node/polyfills/process.js"() {
    init_process();
  }
});

// node_modules/@jspm/core/nodelibs/browser/buffer.js
function dew$2() {
  if (_dewExec$2)
    return exports$3;
  _dewExec$2 = !0, exports$3.byteLength = byteLength, exports$3.toByteArray = toByteArray, exports$3.fromByteArray = fromByteArray;
  for (var lookup = [], revLookup = [], Arr = typeof Uint8Array < "u" ? Uint8Array : Array, code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = 0, len = code.length; i < len; ++i)
    lookup[i] = code[i], revLookup[code.charCodeAt(i)] = i;
  revLookup["-".charCodeAt(0)] = 62, revLookup["_".charCodeAt(0)] = 63;
  function getLens(b64) {
    var len2 = b64.length;
    if (len2 % 4 > 0)
      throw new Error("Invalid string. Length must be a multiple of 4");
    var validLen = b64.indexOf("=");
    validLen === -1 && (validLen = len2);
    var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;
    return [validLen, placeHoldersLen];
  }
  function byteLength(b64) {
    var lens = getLens(b64), validLen = lens[0], placeHoldersLen = lens[1];
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
  }
  function _byteLength(b64, validLen, placeHoldersLen) {
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
  }
  function toByteArray(b64) {
    var tmp, lens = getLens(b64), validLen = lens[0], placeHoldersLen = lens[1], arr = new Arr(_byteLength(b64, validLen, placeHoldersLen)), curByte = 0, len2 = placeHoldersLen > 0 ? validLen - 4 : validLen, i2;
    for (i2 = 0; i2 < len2; i2 += 4)
      tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)], arr[curByte++] = tmp >> 16 & 255, arr[curByte++] = tmp >> 8 & 255, arr[curByte++] = tmp & 255;
    return placeHoldersLen === 2 && (tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4, arr[curByte++] = tmp & 255), placeHoldersLen === 1 && (tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2, arr[curByte++] = tmp >> 8 & 255, arr[curByte++] = tmp & 255), arr;
  }
  function tripletToBase64(num) {
    return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
  }
  function encodeChunk(uint8, start, end) {
    for (var tmp, output = [], i2 = start; i2 < end; i2 += 3)
      tmp = (uint8[i2] << 16 & 16711680) + (uint8[i2 + 1] << 8 & 65280) + (uint8[i2 + 2] & 255), output.push(tripletToBase64(tmp));
    return output.join("");
  }
  function fromByteArray(uint8) {
    for (var tmp, len2 = uint8.length, extraBytes = len2 % 3, parts = [], maxChunkLength = 16383, i2 = 0, len22 = len2 - extraBytes; i2 < len22; i2 += maxChunkLength)
      parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));
    return extraBytes === 1 ? (tmp = uint8[len2 - 1], parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "==")) : extraBytes === 2 && (tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1], parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "=")), parts.join("");
  }
  return exports$3;
}
function dew$1() {
  if (_dewExec$1)
    return exports$2;
  _dewExec$1 = !0;
  return exports$2.read = function(buffer, offset, isLE, mLen, nBytes) {
    var e, m, eLen = nBytes * 8 - mLen - 1, eMax = (1 << eLen) - 1, eBias = eMax >> 1, nBits = -7, i = isLE ? nBytes - 1 : 0, d = isLE ? -1 : 1, s = buffer[offset + i];
    for (i += d, e = s & (1 << -nBits) - 1, s >>= -nBits, nBits += eLen; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8)
      ;
    for (m = e & (1 << -nBits) - 1, e >>= -nBits, nBits += mLen; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8)
      ;
    if (e === 0)
      e = 1 - eBias;
    else {
      if (e === eMax)
        return m ? NaN : (s ? -1 : 1) * (1 / 0);
      m = m + Math.pow(2, mLen), e = e - eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
  }, exports$2.write = function(buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c, eLen = nBytes * 8 - mLen - 1, eMax = (1 << eLen) - 1, eBias = eMax >> 1, rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, i = isLE ? 0 : nBytes - 1, d = isLE ? 1 : -1, s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    for (value = Math.abs(value), isNaN(value) || value === 1 / 0 ? (m = isNaN(value) ? 1 : 0, e = eMax) : (e = Math.floor(Math.log(value) / Math.LN2), value * (c = Math.pow(2, -e)) < 1 && (e--, c *= 2), e + eBias >= 1 ? value += rt / c : value += rt * Math.pow(2, 1 - eBias), value * c >= 2 && (e++, c /= 2), e + eBias >= eMax ? (m = 0, e = eMax) : e + eBias >= 1 ? (m = (value * c - 1) * Math.pow(2, mLen), e = e + eBias) : (m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen), e = 0)); mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8)
      ;
    for (e = e << mLen | m, eLen += mLen; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8)
      ;
    buffer[offset + i - d] |= s * 128;
  }, exports$2;
}
function dew() {
  if (_dewExec)
    return exports$1;
  _dewExec = !0;
  let base64 = dew$2(), ieee754 = dew$1(), customInspectSymbol = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  exports$1.Buffer = Buffer3, exports$1.SlowBuffer = SlowBuffer, exports$1.INSPECT_MAX_BYTES = 50;
  let K_MAX_LENGTH = 2147483647;
  exports$1.kMaxLength = K_MAX_LENGTH, Buffer3.TYPED_ARRAY_SUPPORT = typedArraySupport(), !Buffer3.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
  function typedArraySupport() {
    try {
      let arr = new Uint8Array(1), proto = {
        foo: function() {
          return 42;
        }
      };
      return Object.setPrototypeOf(proto, Uint8Array.prototype), Object.setPrototypeOf(arr, proto), arr.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(Buffer3.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (Buffer3.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(Buffer3.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (Buffer3.isBuffer(this))
        return this.byteOffset;
    }
  });
  function createBuffer(length) {
    if (length > K_MAX_LENGTH)
      throw new RangeError('The value "' + length + '" is invalid for option "size"');
    let buf = new Uint8Array(length);
    return Object.setPrototypeOf(buf, Buffer3.prototype), buf;
  }
  function Buffer3(arg, encodingOrOffset, length) {
    if (typeof arg == "number") {
      if (typeof encodingOrOffset == "string")
        throw new TypeError('The "string" argument must be of type string. Received type number');
      return allocUnsafe(arg);
    }
    return from(arg, encodingOrOffset, length);
  }
  Buffer3.poolSize = 8192;
  function from(value, encodingOrOffset, length) {
    if (typeof value == "string")
      return fromString(value, encodingOrOffset);
    if (ArrayBuffer.isView(value))
      return fromArrayView(value);
    if (value == null)
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer)))
      return fromArrayBuffer(value, encodingOrOffset, length);
    if (typeof value == "number")
      throw new TypeError('The "value" argument must not be of type number. Received type number');
    let valueOf = value.valueOf && value.valueOf();
    if (valueOf != null && valueOf !== value)
      return Buffer3.from(valueOf, encodingOrOffset, length);
    let b = fromObject(value);
    if (b)
      return b;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] == "function")
      return Buffer3.from(value[Symbol.toPrimitive]("string"), encodingOrOffset, length);
    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
  }
  Buffer3.from = function(value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
  }, Object.setPrototypeOf(Buffer3.prototype, Uint8Array.prototype), Object.setPrototypeOf(Buffer3, Uint8Array);
  function assertSize(size) {
    if (typeof size != "number")
      throw new TypeError('"size" argument must be of type number');
    if (size < 0)
      throw new RangeError('The value "' + size + '" is invalid for option "size"');
  }
  function alloc(size, fill, encoding) {
    return assertSize(size), size <= 0 ? createBuffer(size) : fill !== void 0 ? typeof encoding == "string" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill) : createBuffer(size);
  }
  Buffer3.alloc = function(size, fill, encoding) {
    return alloc(size, fill, encoding);
  };
  function allocUnsafe(size) {
    return assertSize(size), createBuffer(size < 0 ? 0 : checked(size) | 0);
  }
  Buffer3.allocUnsafe = function(size) {
    return allocUnsafe(size);
  }, Buffer3.allocUnsafeSlow = function(size) {
    return allocUnsafe(size);
  };
  function fromString(string, encoding) {
    if ((typeof encoding != "string" || encoding === "") && (encoding = "utf8"), !Buffer3.isEncoding(encoding))
      throw new TypeError("Unknown encoding: " + encoding);
    let length = byteLength(string, encoding) | 0, buf = createBuffer(length), actual = buf.write(string, encoding);
    return actual !== length && (buf = buf.slice(0, actual)), buf;
  }
  function fromArrayLike(array) {
    let length = array.length < 0 ? 0 : checked(array.length) | 0, buf = createBuffer(length);
    for (let i = 0; i < length; i += 1)
      buf[i] = array[i] & 255;
    return buf;
  }
  function fromArrayView(arrayView) {
    if (isInstance(arrayView, Uint8Array)) {
      let copy = new Uint8Array(arrayView);
      return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
    }
    return fromArrayLike(arrayView);
  }
  function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (array.byteLength < byteOffset + (length || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    let buf;
    return byteOffset === void 0 && length === void 0 ? buf = new Uint8Array(array) : length === void 0 ? buf = new Uint8Array(array, byteOffset) : buf = new Uint8Array(array, byteOffset, length), Object.setPrototypeOf(buf, Buffer3.prototype), buf;
  }
  function fromObject(obj) {
    if (Buffer3.isBuffer(obj)) {
      let len = checked(obj.length) | 0, buf = createBuffer(len);
      return buf.length === 0 || obj.copy(buf, 0, 0, len), buf;
    }
    if (obj.length !== void 0)
      return typeof obj.length != "number" || numberIsNaN(obj.length) ? createBuffer(0) : fromArrayLike(obj);
    if (obj.type === "Buffer" && Array.isArray(obj.data))
      return fromArrayLike(obj.data);
  }
  function checked(length) {
    if (length >= K_MAX_LENGTH)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
    return length | 0;
  }
  function SlowBuffer(length) {
    return +length != length && (length = 0), Buffer3.alloc(+length);
  }
  Buffer3.isBuffer = function(b) {
    return b != null && b._isBuffer === !0 && b !== Buffer3.prototype;
  }, Buffer3.compare = function(a, b) {
    if (isInstance(a, Uint8Array) && (a = Buffer3.from(a, a.offset, a.byteLength)), isInstance(b, Uint8Array) && (b = Buffer3.from(b, b.offset, b.byteLength)), !Buffer3.isBuffer(a) || !Buffer3.isBuffer(b))
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    if (a === b)
      return 0;
    let x = a.length, y = b.length;
    for (let i = 0, len = Math.min(x, y); i < len; ++i)
      if (a[i] !== b[i]) {
        x = a[i], y = b[i];
        break;
      }
    return x < y ? -1 : y < x ? 1 : 0;
  }, Buffer3.isEncoding = function(encoding) {
    switch (String(encoding).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, Buffer3.concat = function(list2, length) {
    if (!Array.isArray(list2))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (list2.length === 0)
      return Buffer3.alloc(0);
    let i;
    if (length === void 0)
      for (length = 0, i = 0; i < list2.length; ++i)
        length += list2[i].length;
    let buffer = Buffer3.allocUnsafe(length), pos = 0;
    for (i = 0; i < list2.length; ++i) {
      let buf = list2[i];
      if (isInstance(buf, Uint8Array))
        pos + buf.length > buffer.length ? (Buffer3.isBuffer(buf) || (buf = Buffer3.from(buf)), buf.copy(buffer, pos)) : Uint8Array.prototype.set.call(buffer, buf, pos);
      else if (Buffer3.isBuffer(buf))
        buf.copy(buffer, pos);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      pos += buf.length;
    }
    return buffer;
  };
  function byteLength(string, encoding) {
    if (Buffer3.isBuffer(string))
      return string.length;
    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer))
      return string.byteLength;
    if (typeof string != "string")
      throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);
    let len = string.length, mustMatch = arguments.length > 2 && arguments[2] === !0;
    if (!mustMatch && len === 0)
      return 0;
    let loweredCase = !1;
    for (; ; )
      switch (encoding) {
        case "ascii":
        case "latin1":
        case "binary":
          return len;
        case "utf8":
        case "utf-8":
          return utf8ToBytes(string).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return len * 2;
        case "hex":
          return len >>> 1;
        case "base64":
          return base64ToBytes(string).length;
        default:
          if (loweredCase)
            return mustMatch ? -1 : utf8ToBytes(string).length;
          encoding = ("" + encoding).toLowerCase(), loweredCase = !0;
      }
  }
  Buffer3.byteLength = byteLength;
  function slowToString(encoding, start, end) {
    let loweredCase = !1;
    if ((start === void 0 || start < 0) && (start = 0), start > this.length || ((end === void 0 || end > this.length) && (end = this.length), end <= 0) || (end >>>= 0, start >>>= 0, end <= start))
      return "";
    for (encoding || (encoding = "utf8"); ; )
      switch (encoding) {
        case "hex":
          return hexSlice(this, start, end);
        case "utf8":
        case "utf-8":
          return utf8Slice(this, start, end);
        case "ascii":
          return asciiSlice(this, start, end);
        case "latin1":
        case "binary":
          return latin1Slice(this, start, end);
        case "base64":
          return base64Slice(this, start, end);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return utf16leSlice(this, start, end);
        default:
          if (loweredCase)
            throw new TypeError("Unknown encoding: " + encoding);
          encoding = (encoding + "").toLowerCase(), loweredCase = !0;
      }
  }
  Buffer3.prototype._isBuffer = !0;
  function swap(b, n, m) {
    let i = b[n];
    b[n] = b[m], b[m] = i;
  }
  Buffer3.prototype.swap16 = function() {
    let len = this.length;
    if (len % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (let i = 0; i < len; i += 2)
      swap(this, i, i + 1);
    return this;
  }, Buffer3.prototype.swap32 = function() {
    let len = this.length;
    if (len % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (let i = 0; i < len; i += 4)
      swap(this, i, i + 3), swap(this, i + 1, i + 2);
    return this;
  }, Buffer3.prototype.swap64 = function() {
    let len = this.length;
    if (len % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (let i = 0; i < len; i += 8)
      swap(this, i, i + 7), swap(this, i + 1, i + 6), swap(this, i + 2, i + 5), swap(this, i + 3, i + 4);
    return this;
  }, Buffer3.prototype.toString = function() {
    let length = this.length;
    return length === 0 ? "" : arguments.length === 0 ? utf8Slice(this, 0, length) : slowToString.apply(this, arguments);
  }, Buffer3.prototype.toLocaleString = Buffer3.prototype.toString, Buffer3.prototype.equals = function(b) {
    if (!Buffer3.isBuffer(b))
      throw new TypeError("Argument must be a Buffer");
    return this === b ? !0 : Buffer3.compare(this, b) === 0;
  }, Buffer3.prototype.inspect = function() {
    let str = "", max = exports$1.INSPECT_MAX_BYTES;
    return str = this.toString("hex", 0, max).replace(/(.{2})/g, "$1 ").trim(), this.length > max && (str += " ... "), "<Buffer " + str + ">";
  }, customInspectSymbol && (Buffer3.prototype[customInspectSymbol] = Buffer3.prototype.inspect), Buffer3.prototype.compare = function(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array) && (target = Buffer3.from(target, target.offset, target.byteLength)), !Buffer3.isBuffer(target))
      throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);
    if (start === void 0 && (start = 0), end === void 0 && (end = target ? target.length : 0), thisStart === void 0 && (thisStart = 0), thisEnd === void 0 && (thisEnd = this.length), start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length)
      throw new RangeError("out of range index");
    if (thisStart >= thisEnd && start >= end)
      return 0;
    if (thisStart >= thisEnd)
      return -1;
    if (start >= end)
      return 1;
    if (start >>>= 0, end >>>= 0, thisStart >>>= 0, thisEnd >>>= 0, this === target)
      return 0;
    let x = thisEnd - thisStart, y = end - start, len = Math.min(x, y), thisCopy = this.slice(thisStart, thisEnd), targetCopy = target.slice(start, end);
    for (let i = 0; i < len; ++i)
      if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i], y = targetCopy[i];
        break;
      }
    return x < y ? -1 : y < x ? 1 : 0;
  };
  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    if (buffer.length === 0)
      return -1;
    if (typeof byteOffset == "string" ? (encoding = byteOffset, byteOffset = 0) : byteOffset > 2147483647 ? byteOffset = 2147483647 : byteOffset < -2147483648 && (byteOffset = -2147483648), byteOffset = +byteOffset, numberIsNaN(byteOffset) && (byteOffset = dir ? 0 : buffer.length - 1), byteOffset < 0 && (byteOffset = buffer.length + byteOffset), byteOffset >= buffer.length) {
      if (dir)
        return -1;
      byteOffset = buffer.length - 1;
    } else if (byteOffset < 0)
      if (dir)
        byteOffset = 0;
      else
        return -1;
    if (typeof val == "string" && (val = Buffer3.from(val, encoding)), Buffer3.isBuffer(val))
      return val.length === 0 ? -1 : arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    if (typeof val == "number")
      return val = val & 255, typeof Uint8Array.prototype.indexOf == "function" ? dir ? Uint8Array.prototype.indexOf.call(buffer, val, byteOffset) : Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset) : arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
    throw new TypeError("val must be string, number or Buffer");
  }
  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    let indexSize = 1, arrLength = arr.length, valLength = val.length;
    if (encoding !== void 0 && (encoding = String(encoding).toLowerCase(), encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le")) {
      if (arr.length < 2 || val.length < 2)
        return -1;
      indexSize = 2, arrLength /= 2, valLength /= 2, byteOffset /= 2;
    }
    function read(buf, i2) {
      return indexSize === 1 ? buf[i2] : buf.readUInt16BE(i2 * indexSize);
    }
    let i;
    if (dir) {
      let foundIndex = -1;
      for (i = byteOffset; i < arrLength; i++)
        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
          if (foundIndex === -1 && (foundIndex = i), i - foundIndex + 1 === valLength)
            return foundIndex * indexSize;
        } else
          foundIndex !== -1 && (i -= i - foundIndex), foundIndex = -1;
    } else
      for (byteOffset + valLength > arrLength && (byteOffset = arrLength - valLength), i = byteOffset; i >= 0; i--) {
        let found = !0;
        for (let j = 0; j < valLength; j++)
          if (read(arr, i + j) !== read(val, j)) {
            found = !1;
            break;
          }
        if (found)
          return i;
      }
    return -1;
  }
  Buffer3.prototype.includes = function(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
  }, Buffer3.prototype.indexOf = function(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, !0);
  }, Buffer3.prototype.lastIndexOf = function(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, !1);
  };
  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    let remaining = buf.length - offset;
    length ? (length = Number(length), length > remaining && (length = remaining)) : length = remaining;
    let strLen = string.length;
    length > strLen / 2 && (length = strLen / 2);
    let i;
    for (i = 0; i < length; ++i) {
      let parsed = parseInt(string.substr(i * 2, 2), 16);
      if (numberIsNaN(parsed))
        return i;
      buf[offset + i] = parsed;
    }
    return i;
  }
  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }
  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }
  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }
  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }
  Buffer3.prototype.write = function(string, offset, length, encoding) {
    if (offset === void 0)
      encoding = "utf8", length = this.length, offset = 0;
    else if (length === void 0 && typeof offset == "string")
      encoding = offset, length = this.length, offset = 0;
    else if (isFinite(offset))
      offset = offset >>> 0, isFinite(length) ? (length = length >>> 0, encoding === void 0 && (encoding = "utf8")) : (encoding = length, length = void 0);
    else
      throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
    let remaining = this.length - offset;
    if ((length === void 0 || length > remaining) && (length = remaining), string.length > 0 && (length < 0 || offset < 0) || offset > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    encoding || (encoding = "utf8");
    let loweredCase = !1;
    for (; ; )
      switch (encoding) {
        case "hex":
          return hexWrite(this, string, offset, length);
        case "utf8":
        case "utf-8":
          return utf8Write(this, string, offset, length);
        case "ascii":
        case "latin1":
        case "binary":
          return asciiWrite(this, string, offset, length);
        case "base64":
          return base64Write(this, string, offset, length);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return ucs2Write(this, string, offset, length);
        default:
          if (loweredCase)
            throw new TypeError("Unknown encoding: " + encoding);
          encoding = ("" + encoding).toLowerCase(), loweredCase = !0;
      }
  }, Buffer3.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function base64Slice(buf, start, end) {
    return start === 0 && end === buf.length ? base64.fromByteArray(buf) : base64.fromByteArray(buf.slice(start, end));
  }
  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    let res = [], i = start;
    for (; i < end; ) {
      let firstByte = buf[i], codePoint = null, bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
      if (i + bytesPerSequence <= end) {
        let secondByte, thirdByte, fourthByte, tempCodePoint;
        switch (bytesPerSequence) {
          case 1:
            firstByte < 128 && (codePoint = firstByte);
            break;
          case 2:
            secondByte = buf[i + 1], (secondByte & 192) === 128 && (tempCodePoint = (firstByte & 31) << 6 | secondByte & 63, tempCodePoint > 127 && (codePoint = tempCodePoint));
            break;
          case 3:
            secondByte = buf[i + 1], thirdByte = buf[i + 2], (secondByte & 192) === 128 && (thirdByte & 192) === 128 && (tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63, tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343) && (codePoint = tempCodePoint));
            break;
          case 4:
            secondByte = buf[i + 1], thirdByte = buf[i + 2], fourthByte = buf[i + 3], (secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128 && (tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63, tempCodePoint > 65535 && tempCodePoint < 1114112 && (codePoint = tempCodePoint));
        }
      }
      codePoint === null ? (codePoint = 65533, bytesPerSequence = 1) : codePoint > 65535 && (codePoint -= 65536, res.push(codePoint >>> 10 & 1023 | 55296), codePoint = 56320 | codePoint & 1023), res.push(codePoint), i += bytesPerSequence;
    }
    return decodeCodePointsArray(res);
  }
  let MAX_ARGUMENTS_LENGTH = 4096;
  function decodeCodePointsArray(codePoints) {
    let len = codePoints.length;
    if (len <= MAX_ARGUMENTS_LENGTH)
      return String.fromCharCode.apply(String, codePoints);
    let res = "", i = 0;
    for (; i < len; )
      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    return res;
  }
  function asciiSlice(buf, start, end) {
    let ret = "";
    end = Math.min(buf.length, end);
    for (let i = start; i < end; ++i)
      ret += String.fromCharCode(buf[i] & 127);
    return ret;
  }
  function latin1Slice(buf, start, end) {
    let ret = "";
    end = Math.min(buf.length, end);
    for (let i = start; i < end; ++i)
      ret += String.fromCharCode(buf[i]);
    return ret;
  }
  function hexSlice(buf, start, end) {
    let len = buf.length;
    (!start || start < 0) && (start = 0), (!end || end < 0 || end > len) && (end = len);
    let out = "";
    for (let i = start; i < end; ++i)
      out += hexSliceLookupTable[buf[i]];
    return out;
  }
  function utf16leSlice(buf, start, end) {
    let bytes = buf.slice(start, end), res = "";
    for (let i = 0; i < bytes.length - 1; i += 2)
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    return res;
  }
  Buffer3.prototype.slice = function(start, end) {
    let len = this.length;
    start = ~~start, end = end === void 0 ? len : ~~end, start < 0 ? (start += len, start < 0 && (start = 0)) : start > len && (start = len), end < 0 ? (end += len, end < 0 && (end = 0)) : end > len && (end = len), end < start && (end = start);
    let newBuf = this.subarray(start, end);
    return Object.setPrototypeOf(newBuf, Buffer3.prototype), newBuf;
  };
  function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0)
      throw new RangeError("offset is not uint");
    if (offset + ext > length)
      throw new RangeError("Trying to access beyond buffer length");
  }
  Buffer3.prototype.readUintLE = Buffer3.prototype.readUIntLE = function(offset, byteLength2, noAssert) {
    offset = offset >>> 0, byteLength2 = byteLength2 >>> 0, noAssert || checkOffset(offset, byteLength2, this.length);
    let val = this[offset], mul = 1, i = 0;
    for (; ++i < byteLength2 && (mul *= 256); )
      val += this[offset + i] * mul;
    return val;
  }, Buffer3.prototype.readUintBE = Buffer3.prototype.readUIntBE = function(offset, byteLength2, noAssert) {
    offset = offset >>> 0, byteLength2 = byteLength2 >>> 0, noAssert || checkOffset(offset, byteLength2, this.length);
    let val = this[offset + --byteLength2], mul = 1;
    for (; byteLength2 > 0 && (mul *= 256); )
      val += this[offset + --byteLength2] * mul;
    return val;
  }, Buffer3.prototype.readUint8 = Buffer3.prototype.readUInt8 = function(offset, noAssert) {
    return offset = offset >>> 0, noAssert || checkOffset(offset, 1, this.length), this[offset];
  }, Buffer3.prototype.readUint16LE = Buffer3.prototype.readUInt16LE = function(offset, noAssert) {
    return offset = offset >>> 0, noAssert || checkOffset(offset, 2, this.length), this[offset] | this[offset + 1] << 8;
  }, Buffer3.prototype.readUint16BE = Buffer3.prototype.readUInt16BE = function(offset, noAssert) {
    return offset = offset >>> 0, noAssert || checkOffset(offset, 2, this.length), this[offset] << 8 | this[offset + 1];
  }, Buffer3.prototype.readUint32LE = Buffer3.prototype.readUInt32LE = function(offset, noAssert) {
    return offset = offset >>> 0, noAssert || checkOffset(offset, 4, this.length), (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
  }, Buffer3.prototype.readUint32BE = Buffer3.prototype.readUInt32BE = function(offset, noAssert) {
    return offset = offset >>> 0, noAssert || checkOffset(offset, 4, this.length), this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
  }, Buffer3.prototype.readBigUInt64LE = defineBigIntMethod(function(offset) {
    offset = offset >>> 0, validateNumber(offset, "offset");
    let first = this[offset], last = this[offset + 7];
    (first === void 0 || last === void 0) && boundsError(offset, this.length - 8);
    let lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24, hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;
    return BigInt(lo) + (BigInt(hi) << BigInt(32));
  }), Buffer3.prototype.readBigUInt64BE = defineBigIntMethod(function(offset) {
    offset = offset >>> 0, validateNumber(offset, "offset");
    let first = this[offset], last = this[offset + 7];
    (first === void 0 || last === void 0) && boundsError(offset, this.length - 8);
    let hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset], lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
    return (BigInt(hi) << BigInt(32)) + BigInt(lo);
  }), Buffer3.prototype.readIntLE = function(offset, byteLength2, noAssert) {
    offset = offset >>> 0, byteLength2 = byteLength2 >>> 0, noAssert || checkOffset(offset, byteLength2, this.length);
    let val = this[offset], mul = 1, i = 0;
    for (; ++i < byteLength2 && (mul *= 256); )
      val += this[offset + i] * mul;
    return mul *= 128, val >= mul && (val -= Math.pow(2, 8 * byteLength2)), val;
  }, Buffer3.prototype.readIntBE = function(offset, byteLength2, noAssert) {
    offset = offset >>> 0, byteLength2 = byteLength2 >>> 0, noAssert || checkOffset(offset, byteLength2, this.length);
    let i = byteLength2, mul = 1, val = this[offset + --i];
    for (; i > 0 && (mul *= 256); )
      val += this[offset + --i] * mul;
    return mul *= 128, val >= mul && (val -= Math.pow(2, 8 * byteLength2)), val;
  }, Buffer3.prototype.readInt8 = function(offset, noAssert) {
    return offset = offset >>> 0, noAssert || checkOffset(offset, 1, this.length), this[offset] & 128 ? (255 - this[offset] + 1) * -1 : this[offset];
  }, Buffer3.prototype.readInt16LE = function(offset, noAssert) {
    offset = offset >>> 0, noAssert || checkOffset(offset, 2, this.length);
    let val = this[offset] | this[offset + 1] << 8;
    return val & 32768 ? val | 4294901760 : val;
  }, Buffer3.prototype.readInt16BE = function(offset, noAssert) {
    offset = offset >>> 0, noAssert || checkOffset(offset, 2, this.length);
    let val = this[offset + 1] | this[offset] << 8;
    return val & 32768 ? val | 4294901760 : val;
  }, Buffer3.prototype.readInt32LE = function(offset, noAssert) {
    return offset = offset >>> 0, noAssert || checkOffset(offset, 4, this.length), this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
  }, Buffer3.prototype.readInt32BE = function(offset, noAssert) {
    return offset = offset >>> 0, noAssert || checkOffset(offset, 4, this.length), this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
  }, Buffer3.prototype.readBigInt64LE = defineBigIntMethod(function(offset) {
    offset = offset >>> 0, validateNumber(offset, "offset");
    let first = this[offset], last = this[offset + 7];
    (first === void 0 || last === void 0) && boundsError(offset, this.length - 8);
    let val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);
    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);
  }), Buffer3.prototype.readBigInt64BE = defineBigIntMethod(function(offset) {
    offset = offset >>> 0, validateNumber(offset, "offset");
    let first = this[offset], last = this[offset + 7];
    (first === void 0 || last === void 0) && boundsError(offset, this.length - 8);
    let val = (first << 24) + // Overflow
    this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);
  }), Buffer3.prototype.readFloatLE = function(offset, noAssert) {
    return offset = offset >>> 0, noAssert || checkOffset(offset, 4, this.length), ieee754.read(this, offset, !0, 23, 4);
  }, Buffer3.prototype.readFloatBE = function(offset, noAssert) {
    return offset = offset >>> 0, noAssert || checkOffset(offset, 4, this.length), ieee754.read(this, offset, !1, 23, 4);
  }, Buffer3.prototype.readDoubleLE = function(offset, noAssert) {
    return offset = offset >>> 0, noAssert || checkOffset(offset, 8, this.length), ieee754.read(this, offset, !0, 52, 8);
  }, Buffer3.prototype.readDoubleBE = function(offset, noAssert) {
    return offset = offset >>> 0, noAssert || checkOffset(offset, 8, this.length), ieee754.read(this, offset, !1, 52, 8);
  };
  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer3.isBuffer(buf))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min)
      throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length)
      throw new RangeError("Index out of range");
  }
  Buffer3.prototype.writeUintLE = Buffer3.prototype.writeUIntLE = function(value, offset, byteLength2, noAssert) {
    if (value = +value, offset = offset >>> 0, byteLength2 = byteLength2 >>> 0, !noAssert) {
      let maxBytes = Math.pow(2, 8 * byteLength2) - 1;
      checkInt(this, value, offset, byteLength2, maxBytes, 0);
    }
    let mul = 1, i = 0;
    for (this[offset] = value & 255; ++i < byteLength2 && (mul *= 256); )
      this[offset + i] = value / mul & 255;
    return offset + byteLength2;
  }, Buffer3.prototype.writeUintBE = Buffer3.prototype.writeUIntBE = function(value, offset, byteLength2, noAssert) {
    if (value = +value, offset = offset >>> 0, byteLength2 = byteLength2 >>> 0, !noAssert) {
      let maxBytes = Math.pow(2, 8 * byteLength2) - 1;
      checkInt(this, value, offset, byteLength2, maxBytes, 0);
    }
    let i = byteLength2 - 1, mul = 1;
    for (this[offset + i] = value & 255; --i >= 0 && (mul *= 256); )
      this[offset + i] = value / mul & 255;
    return offset + byteLength2;
  }, Buffer3.prototype.writeUint8 = Buffer3.prototype.writeUInt8 = function(value, offset, noAssert) {
    return value = +value, offset = offset >>> 0, noAssert || checkInt(this, value, offset, 1, 255, 0), this[offset] = value & 255, offset + 1;
  }, Buffer3.prototype.writeUint16LE = Buffer3.prototype.writeUInt16LE = function(value, offset, noAssert) {
    return value = +value, offset = offset >>> 0, noAssert || checkInt(this, value, offset, 2, 65535, 0), this[offset] = value & 255, this[offset + 1] = value >>> 8, offset + 2;
  }, Buffer3.prototype.writeUint16BE = Buffer3.prototype.writeUInt16BE = function(value, offset, noAssert) {
    return value = +value, offset = offset >>> 0, noAssert || checkInt(this, value, offset, 2, 65535, 0), this[offset] = value >>> 8, this[offset + 1] = value & 255, offset + 2;
  }, Buffer3.prototype.writeUint32LE = Buffer3.prototype.writeUInt32LE = function(value, offset, noAssert) {
    return value = +value, offset = offset >>> 0, noAssert || checkInt(this, value, offset, 4, 4294967295, 0), this[offset + 3] = value >>> 24, this[offset + 2] = value >>> 16, this[offset + 1] = value >>> 8, this[offset] = value & 255, offset + 4;
  }, Buffer3.prototype.writeUint32BE = Buffer3.prototype.writeUInt32BE = function(value, offset, noAssert) {
    return value = +value, offset = offset >>> 0, noAssert || checkInt(this, value, offset, 4, 4294967295, 0), this[offset] = value >>> 24, this[offset + 1] = value >>> 16, this[offset + 2] = value >>> 8, this[offset + 3] = value & 255, offset + 4;
  };
  function wrtBigUInt64LE(buf, value, offset, min, max) {
    checkIntBI(value, min, max, buf, offset, 7);
    let lo = Number(value & BigInt(4294967295));
    buf[offset++] = lo, lo = lo >> 8, buf[offset++] = lo, lo = lo >> 8, buf[offset++] = lo, lo = lo >> 8, buf[offset++] = lo;
    let hi = Number(value >> BigInt(32) & BigInt(4294967295));
    return buf[offset++] = hi, hi = hi >> 8, buf[offset++] = hi, hi = hi >> 8, buf[offset++] = hi, hi = hi >> 8, buf[offset++] = hi, offset;
  }
  function wrtBigUInt64BE(buf, value, offset, min, max) {
    checkIntBI(value, min, max, buf, offset, 7);
    let lo = Number(value & BigInt(4294967295));
    buf[offset + 7] = lo, lo = lo >> 8, buf[offset + 6] = lo, lo = lo >> 8, buf[offset + 5] = lo, lo = lo >> 8, buf[offset + 4] = lo;
    let hi = Number(value >> BigInt(32) & BigInt(4294967295));
    return buf[offset + 3] = hi, hi = hi >> 8, buf[offset + 2] = hi, hi = hi >> 8, buf[offset + 1] = hi, hi = hi >> 8, buf[offset] = hi, offset + 8;
  }
  Buffer3.prototype.writeBigUInt64LE = defineBigIntMethod(function(value, offset = 0) {
    return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
  }), Buffer3.prototype.writeBigUInt64BE = defineBigIntMethod(function(value, offset = 0) {
    return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
  }), Buffer3.prototype.writeIntLE = function(value, offset, byteLength2, noAssert) {
    if (value = +value, offset = offset >>> 0, !noAssert) {
      let limit = Math.pow(2, 8 * byteLength2 - 1);
      checkInt(this, value, offset, byteLength2, limit - 1, -limit);
    }
    let i = 0, mul = 1, sub = 0;
    for (this[offset] = value & 255; ++i < byteLength2 && (mul *= 256); )
      value < 0 && sub === 0 && this[offset + i - 1] !== 0 && (sub = 1), this[offset + i] = (value / mul >> 0) - sub & 255;
    return offset + byteLength2;
  }, Buffer3.prototype.writeIntBE = function(value, offset, byteLength2, noAssert) {
    if (value = +value, offset = offset >>> 0, !noAssert) {
      let limit = Math.pow(2, 8 * byteLength2 - 1);
      checkInt(this, value, offset, byteLength2, limit - 1, -limit);
    }
    let i = byteLength2 - 1, mul = 1, sub = 0;
    for (this[offset + i] = value & 255; --i >= 0 && (mul *= 256); )
      value < 0 && sub === 0 && this[offset + i + 1] !== 0 && (sub = 1), this[offset + i] = (value / mul >> 0) - sub & 255;
    return offset + byteLength2;
  }, Buffer3.prototype.writeInt8 = function(value, offset, noAssert) {
    return value = +value, offset = offset >>> 0, noAssert || checkInt(this, value, offset, 1, 127, -128), value < 0 && (value = 255 + value + 1), this[offset] = value & 255, offset + 1;
  }, Buffer3.prototype.writeInt16LE = function(value, offset, noAssert) {
    return value = +value, offset = offset >>> 0, noAssert || checkInt(this, value, offset, 2, 32767, -32768), this[offset] = value & 255, this[offset + 1] = value >>> 8, offset + 2;
  }, Buffer3.prototype.writeInt16BE = function(value, offset, noAssert) {
    return value = +value, offset = offset >>> 0, noAssert || checkInt(this, value, offset, 2, 32767, -32768), this[offset] = value >>> 8, this[offset + 1] = value & 255, offset + 2;
  }, Buffer3.prototype.writeInt32LE = function(value, offset, noAssert) {
    return value = +value, offset = offset >>> 0, noAssert || checkInt(this, value, offset, 4, 2147483647, -2147483648), this[offset] = value & 255, this[offset + 1] = value >>> 8, this[offset + 2] = value >>> 16, this[offset + 3] = value >>> 24, offset + 4;
  }, Buffer3.prototype.writeInt32BE = function(value, offset, noAssert) {
    return value = +value, offset = offset >>> 0, noAssert || checkInt(this, value, offset, 4, 2147483647, -2147483648), value < 0 && (value = 4294967295 + value + 1), this[offset] = value >>> 24, this[offset + 1] = value >>> 16, this[offset + 2] = value >>> 8, this[offset + 3] = value & 255, offset + 4;
  }, Buffer3.prototype.writeBigInt64LE = defineBigIntMethod(function(value, offset = 0) {
    return wrtBigUInt64LE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  }), Buffer3.prototype.writeBigInt64BE = defineBigIntMethod(function(value, offset = 0) {
    return wrtBigUInt64BE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  });
  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length)
      throw new RangeError("Index out of range");
    if (offset < 0)
      throw new RangeError("Index out of range");
  }
  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    return value = +value, offset = offset >>> 0, noAssert || checkIEEE754(buf, value, offset, 4), ieee754.write(buf, value, offset, littleEndian, 23, 4), offset + 4;
  }
  Buffer3.prototype.writeFloatLE = function(value, offset, noAssert) {
    return writeFloat(this, value, offset, !0, noAssert);
  }, Buffer3.prototype.writeFloatBE = function(value, offset, noAssert) {
    return writeFloat(this, value, offset, !1, noAssert);
  };
  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    return value = +value, offset = offset >>> 0, noAssert || checkIEEE754(buf, value, offset, 8), ieee754.write(buf, value, offset, littleEndian, 52, 8), offset + 8;
  }
  Buffer3.prototype.writeDoubleLE = function(value, offset, noAssert) {
    return writeDouble(this, value, offset, !0, noAssert);
  }, Buffer3.prototype.writeDoubleBE = function(value, offset, noAssert) {
    return writeDouble(this, value, offset, !1, noAssert);
  }, Buffer3.prototype.copy = function(target, targetStart, start, end) {
    if (!Buffer3.isBuffer(target))
      throw new TypeError("argument should be a Buffer");
    if (start || (start = 0), !end && end !== 0 && (end = this.length), targetStart >= target.length && (targetStart = target.length), targetStart || (targetStart = 0), end > 0 && end < start && (end = start), end === start || target.length === 0 || this.length === 0)
      return 0;
    if (targetStart < 0)
      throw new RangeError("targetStart out of bounds");
    if (start < 0 || start >= this.length)
      throw new RangeError("Index out of range");
    if (end < 0)
      throw new RangeError("sourceEnd out of bounds");
    end > this.length && (end = this.length), target.length - targetStart < end - start && (end = target.length - targetStart + start);
    let len = end - start;
    return this === target && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(targetStart, start, end) : Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart), len;
  }, Buffer3.prototype.fill = function(val, start, end, encoding) {
    if (typeof val == "string") {
      if (typeof start == "string" ? (encoding = start, start = 0, end = this.length) : typeof end == "string" && (encoding = end, end = this.length), encoding !== void 0 && typeof encoding != "string")
        throw new TypeError("encoding must be a string");
      if (typeof encoding == "string" && !Buffer3.isEncoding(encoding))
        throw new TypeError("Unknown encoding: " + encoding);
      if (val.length === 1) {
        let code = val.charCodeAt(0);
        (encoding === "utf8" && code < 128 || encoding === "latin1") && (val = code);
      }
    } else
      typeof val == "number" ? val = val & 255 : typeof val == "boolean" && (val = Number(val));
    if (start < 0 || this.length < start || this.length < end)
      throw new RangeError("Out of range index");
    if (end <= start)
      return this;
    start = start >>> 0, end = end === void 0 ? this.length : end >>> 0, val || (val = 0);
    let i;
    if (typeof val == "number")
      for (i = start; i < end; ++i)
        this[i] = val;
    else {
      let bytes = Buffer3.isBuffer(val) ? val : Buffer3.from(val, encoding), len = bytes.length;
      if (len === 0)
        throw new TypeError('The value "' + val + '" is invalid for argument "value"');
      for (i = 0; i < end - start; ++i)
        this[i + start] = bytes[i % len];
    }
    return this;
  };
  let errors = {};
  function E(sym, getMessage, Base) {
    errors[sym] = class extends Base {
      constructor() {
        super(), Object.defineProperty(this, "message", {
          value: getMessage.apply(this, arguments),
          writable: !0,
          configurable: !0
        }), this.name = `${this.name} [${sym}]`, this.stack, delete this.name;
      }
      get code() {
        return sym;
      }
      set code(value) {
        Object.defineProperty(this, "code", {
          configurable: !0,
          enumerable: !0,
          value,
          writable: !0
        });
      }
      toString() {
        return `${this.name} [${sym}]: ${this.message}`;
      }
    };
  }
  E("ERR_BUFFER_OUT_OF_BOUNDS", function(name) {
    return name ? `${name} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
  }, RangeError), E("ERR_INVALID_ARG_TYPE", function(name, actual) {
    return `The "${name}" argument must be of type number. Received type ${typeof actual}`;
  }, TypeError), E("ERR_OUT_OF_RANGE", function(str, range, input) {
    let msg = `The value of "${str}" is out of range.`, received = input;
    return Number.isInteger(input) && Math.abs(input) > 2 ** 32 ? received = addNumericalSeparator(String(input)) : typeof input == "bigint" && (received = String(input), (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) && (received = addNumericalSeparator(received)), received += "n"), msg += ` It must be ${range}. Received ${received}`, msg;
  }, RangeError);
  function addNumericalSeparator(val) {
    let res = "", i = val.length, start = val[0] === "-" ? 1 : 0;
    for (; i >= start + 4; i -= 3)
      res = `_${val.slice(i - 3, i)}${res}`;
    return `${val.slice(0, i)}${res}`;
  }
  function checkBounds(buf, offset, byteLength2) {
    validateNumber(offset, "offset"), (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) && boundsError(offset, buf.length - (byteLength2 + 1));
  }
  function checkIntBI(value, min, max, buf, offset, byteLength2) {
    if (value > max || value < min) {
      let n = typeof min == "bigint" ? "n" : "", range;
      throw byteLength2 > 3 ? min === 0 || min === BigInt(0) ? range = `>= 0${n} and < 2${n} ** ${(byteLength2 + 1) * 8}${n}` : range = `>= -(2${n} ** ${(byteLength2 + 1) * 8 - 1}${n}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n}` : range = `>= ${min}${n} and <= ${max}${n}`, new errors.ERR_OUT_OF_RANGE("value", range, value);
    }
    checkBounds(buf, offset, byteLength2);
  }
  function validateNumber(value, name) {
    if (typeof value != "number")
      throw new errors.ERR_INVALID_ARG_TYPE(name, "number", value);
  }
  function boundsError(value, length, type) {
    throw Math.floor(value) !== value ? (validateNumber(value, type), new errors.ERR_OUT_OF_RANGE(type || "offset", "an integer", value)) : length < 0 ? new errors.ERR_BUFFER_OUT_OF_BOUNDS() : new errors.ERR_OUT_OF_RANGE(type || "offset", `>= ${type ? 1 : 0} and <= ${length}`, value);
  }
  let INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
  function base64clean(str) {
    if (str = str.split("=")[0], str = str.trim().replace(INVALID_BASE64_RE, ""), str.length < 2)
      return "";
    for (; str.length % 4 !== 0; )
      str = str + "=";
    return str;
  }
  function utf8ToBytes(string, units) {
    units = units || 1 / 0;
    let codePoint, length = string.length, leadSurrogate = null, bytes = [];
    for (let i = 0; i < length; ++i) {
      if (codePoint = string.charCodeAt(i), codePoint > 55295 && codePoint < 57344) {
        if (!leadSurrogate) {
          if (codePoint > 56319) {
            (units -= 3) > -1 && bytes.push(239, 191, 189);
            continue;
          } else if (i + 1 === length) {
            (units -= 3) > -1 && bytes.push(239, 191, 189);
            continue;
          }
          leadSurrogate = codePoint;
          continue;
        }
        if (codePoint < 56320) {
          (units -= 3) > -1 && bytes.push(239, 191, 189), leadSurrogate = codePoint;
          continue;
        }
        codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
      } else
        leadSurrogate && (units -= 3) > -1 && bytes.push(239, 191, 189);
      if (leadSurrogate = null, codePoint < 128) {
        if ((units -= 1) < 0)
          break;
        bytes.push(codePoint);
      } else if (codePoint < 2048) {
        if ((units -= 2) < 0)
          break;
        bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);
      } else if (codePoint < 65536) {
        if ((units -= 3) < 0)
          break;
        bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
      } else if (codePoint < 1114112) {
        if ((units -= 4) < 0)
          break;
        bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
      } else
        throw new Error("Invalid code point");
    }
    return bytes;
  }
  function asciiToBytes(str) {
    let byteArray = [];
    for (let i = 0; i < str.length; ++i)
      byteArray.push(str.charCodeAt(i) & 255);
    return byteArray;
  }
  function utf16leToBytes(str, units) {
    let c, hi, lo, byteArray = [];
    for (let i = 0; i < str.length && !((units -= 2) < 0); ++i)
      c = str.charCodeAt(i), hi = c >> 8, lo = c % 256, byteArray.push(lo), byteArray.push(hi);
    return byteArray;
  }
  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }
  function blitBuffer(src, dst, offset, length) {
    let i;
    for (i = 0; i < length && !(i + offset >= dst.length || i >= src.length); ++i)
      dst[i + offset] = src[i];
    return i;
  }
  function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
  }
  function numberIsNaN(obj) {
    return obj !== obj;
  }
  let hexSliceLookupTable = function() {
    let alphabet = "0123456789abcdef", table = new Array(256);
    for (let i = 0; i < 16; ++i) {
      let i16 = i * 16;
      for (let j = 0; j < 16; ++j)
        table[i16 + j] = alphabet[i] + alphabet[j];
    }
    return table;
  }();
  function defineBigIntMethod(fn) {
    return typeof BigInt > "u" ? BufferBigIntNotDefined : fn;
  }
  function BufferBigIntNotDefined() {
    throw new Error("BigInt not supported");
  }
  return exports$1;
}
var exports$3, _dewExec$2, exports$2, _dewExec$1, exports$1, _dewExec, exports, Buffer2, INSPECT_MAX_BYTES, kMaxLength, init_buffer = __esm({
  "node_modules/@jspm/core/nodelibs/browser/buffer.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    exports$3 = {}, _dewExec$2 = !1;
    exports$2 = {}, _dewExec$1 = !1;
    exports$1 = {}, _dewExec = !1;
    exports = dew();
    exports.Buffer;
    exports.SlowBuffer;
    exports.INSPECT_MAX_BYTES;
    exports.kMaxLength;
    Buffer2 = exports.Buffer, INSPECT_MAX_BYTES = exports.INSPECT_MAX_BYTES, kMaxLength = exports.kMaxLength;
  }
});

// node_modules/esbuild-plugin-polyfill-node/polyfills/buffer.js
var init_buffer2 = __esm({
  "node_modules/esbuild-plugin-polyfill-node/polyfills/buffer.js"() {
    init_buffer();
  }
});

// node_modules/cookie/index.js
var require_cookie = __commonJS({
  "node_modules/cookie/index.js"(exports2) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    exports2.parse = parse2;
    exports2.serialize = serialize2;
    var decode = decodeURIComponent, encode = encodeURIComponent, fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse2(str, options2) {
      if (typeof str != "string")
        throw new TypeError("argument str must be a string");
      for (var obj = {}, opt = options2 || {}, pairs = str.split(";"), dec = opt.decode || decode, i = 0; i < pairs.length; i++) {
        var pair = pairs[i], index = pair.indexOf("=");
        if (!(index < 0)) {
          var key = pair.substring(0, index).trim();
          if (obj[key] == null) {
            var val = pair.substring(index + 1, pair.length).trim();
            val[0] === '"' && (val = val.slice(1, -1)), obj[key] = tryDecode(val, dec);
          }
        }
      }
      return obj;
    }
    function serialize2(name, val, options2) {
      var opt = options2 || {}, enc = opt.encode || encode;
      if (typeof enc != "function")
        throw new TypeError("option encode is invalid");
      if (!fieldContentRegExp.test(name))
        throw new TypeError("argument name is invalid");
      var value = enc(val);
      if (value && !fieldContentRegExp.test(value))
        throw new TypeError("argument val is invalid");
      var str = name + "=" + value;
      if (opt.maxAge != null) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge))
          throw new TypeError("option maxAge is invalid");
        str += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain))
          throw new TypeError("option domain is invalid");
        str += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path))
          throw new TypeError("option path is invalid");
        str += "; Path=" + opt.path;
      }
      if (opt.expires) {
        if (typeof opt.expires.toUTCString != "function")
          throw new TypeError("option expires is invalid");
        str += "; Expires=" + opt.expires.toUTCString();
      }
      if (opt.httpOnly && (str += "; HttpOnly"), opt.secure && (str += "; Secure"), opt.sameSite) {
        var sameSite = typeof opt.sameSite == "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case !0:
            str += "; SameSite=Strict";
            break;
          case "lax":
            str += "; SameSite=Lax";
            break;
          case "strict":
            str += "; SameSite=Strict";
            break;
          case "none":
            str += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str;
    }
    function tryDecode(str, decode2) {
      try {
        return decode2(str);
      } catch {
        return str;
      }
    }
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/warnings.js
function warnOnce(condition, message) {
  !condition && !alreadyWarned[message] && (alreadyWarned[message] = !0, console.warn(message));
}
var alreadyWarned, init_warnings = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/warnings.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    alreadyWarned = {};
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/cookies.js
async function encodeCookieValue(sign, value, secrets) {
  let encoded = encodeData(value);
  return secrets.length > 0 && (encoded = await sign(encoded, secrets[0])), encoded;
}
async function decodeCookieValue(unsign, value, secrets) {
  if (secrets.length > 0) {
    for (let secret of secrets) {
      let unsignedValue = await unsign(value, secret);
      if (unsignedValue !== !1)
        return decodeData(unsignedValue);
    }
    return null;
  }
  return decodeData(value);
}
function encodeData(value) {
  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));
}
function decodeData(value) {
  try {
    return JSON.parse(decodeURIComponent(myEscape(atob(value))));
  } catch {
    return {};
  }
}
function myEscape(value) {
  let str = value.toString(), result = "", index = 0, chr, code;
  for (; index < str.length; )
    chr = str.charAt(index++), /[\w*+\-./@]/.exec(chr) ? result += chr : (code = chr.charCodeAt(0), code < 256 ? result += "%" + hex(code, 2) : result += "%u" + hex(code, 4).toUpperCase());
  return result;
}
function hex(code, length) {
  let result = code.toString(16);
  for (; result.length < length; )
    result = "0" + result;
  return result;
}
function myUnescape(value) {
  let str = value.toString(), result = "", index = 0, chr, part;
  for (; index < str.length; ) {
    if (chr = str.charAt(index++), chr === "%") {
      if (str.charAt(index) === "u") {
        if (part = str.slice(index + 1, index + 5), /^[\da-f]{4}$/i.exec(part)) {
          result += String.fromCharCode(parseInt(part, 16)), index += 5;
          continue;
        }
      } else if (part = str.slice(index, index + 2), /^[\da-f]{2}$/i.exec(part)) {
        result += String.fromCharCode(parseInt(part, 16)), index += 2;
        continue;
      }
    }
    result += chr;
  }
  return result;
}
function warnOnceAboutExpiresCookie(name, expires) {
  warnOnce(!expires, `The "${name}" cookie has an "expires" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \`commitSession(session, { expires })\` if using a session storage object, or \`cookie.serialize("value", { expires })\` if you're using the cookie directly.`);
}
var import_cookie, createCookieFactory, isCookie, init_cookies = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/cookies.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    import_cookie = __toESM(require_cookie());
    init_warnings();
    createCookieFactory = ({
      sign,
      unsign
    }) => (name, cookieOptions = {}) => {
      let {
        secrets = [],
        ...options2
      } = {
        path: "/",
        sameSite: "lax",
        ...cookieOptions
      };
      return warnOnceAboutExpiresCookie(name, options2.expires), {
        get name() {
          return name;
        },
        get isSigned() {
          return secrets.length > 0;
        },
        get expires() {
          return typeof options2.maxAge < "u" ? new Date(Date.now() + options2.maxAge * 1e3) : options2.expires;
        },
        async parse(cookieHeader, parseOptions) {
          if (!cookieHeader)
            return null;
          let cookies = (0, import_cookie.parse)(cookieHeader, {
            ...options2,
            ...parseOptions
          });
          return name in cookies ? cookies[name] === "" ? "" : await decodeCookieValue(unsign, cookies[name], secrets) : null;
        },
        async serialize(value, serializeOptions) {
          return (0, import_cookie.serialize)(name, value === "" ? "" : await encodeCookieValue(sign, value, secrets), {
            ...options2,
            ...serializeOptions
          });
        }
      };
    }, isCookie = (object) => object != null && typeof object.name == "string" && typeof object.isSigned == "boolean" && typeof object.parse == "function" && typeof object.serialize == "function";
  }
});

// node_modules/@web3-storage/multipart-parser/esm/src/utils.js
function stringToArray(s) {
  let utf8 = unescape(encodeURIComponent(s));
  return Uint8Array.from(utf8, (_, i) => utf8.charCodeAt(i));
}
function arrayToString(a) {
  let utf8 = String.fromCharCode.apply(null, a);
  return decodeURIComponent(escape(utf8));
}
function mergeArrays(...arrays) {
  let out = new Uint8Array(arrays.reduce((total, arr) => total + arr.length, 0)), offset = 0;
  for (let arr of arrays)
    out.set(arr, offset), offset += arr.length;
  return out;
}
function arraysEqual(a, b) {
  if (a.length !== b.length)
    return !1;
  for (let i = 0; i < a.length; i++)
    if (a[i] !== b[i])
      return !1;
  return !0;
}
var init_utils = __esm({
  "node_modules/@web3-storage/multipart-parser/esm/src/utils.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
  }
});

// node_modules/@web3-storage/multipart-parser/esm/src/search.js
function coerce(a) {
  return a instanceof Uint8Array ? (index) => a[index] : a;
}
function jsmemcmp(buf1, pos1, buf2, pos2, len) {
  let fn1 = coerce(buf1), fn2 = coerce(buf2);
  for (let i = 0; i < len; ++i)
    if (fn1(pos1 + i) !== fn2(pos2 + i))
      return !1;
  return !0;
}
function createOccurenceTable(s) {
  let table = new Array(256).fill(s.length);
  if (s.length > 1)
    for (let i = 0; i < s.length - 1; i++)
      table[s[i]] = s.length - 1 - i;
  return table;
}
var MATCH, StreamSearch, ReadableStreamSearch, EOQ, QueueableStreamSearch, init_search = __esm({
  "node_modules/@web3-storage/multipart-parser/esm/src/search.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_utils();
    MATCH = Symbol("Match"), StreamSearch = class {
      constructor(needle) {
        this._lookbehind = new Uint8Array(), typeof needle == "string" ? this._needle = needle = stringToArray(needle) : this._needle = needle, this._lastChar = needle[needle.length - 1], this._occ = createOccurenceTable(needle);
      }
      feed(chunk) {
        let pos = 0, tokens, allTokens = [];
        for (; pos !== chunk.length; )
          [pos, ...tokens] = this._feed(chunk, pos), allTokens.push(...tokens);
        return allTokens;
      }
      end() {
        let tail = this._lookbehind;
        return this._lookbehind = new Uint8Array(), tail;
      }
      _feed(data, bufPos) {
        let tokens = [], pos = -this._lookbehind.length;
        if (pos < 0) {
          for (; pos < 0 && pos <= data.length - this._needle.length; ) {
            let ch = this._charAt(data, pos + this._needle.length - 1);
            if (ch === this._lastChar && this._memcmp(data, pos, this._needle.length - 1))
              return pos > -this._lookbehind.length && tokens.push(this._lookbehind.slice(0, this._lookbehind.length + pos)), tokens.push(MATCH), this._lookbehind = new Uint8Array(), [
                pos + this._needle.length,
                ...tokens
              ];
            pos += this._occ[ch];
          }
          if (pos < 0)
            for (; pos < 0 && !this._memcmp(data, pos, data.length - pos); )
              pos++;
          if (pos >= 0)
            tokens.push(this._lookbehind), this._lookbehind = new Uint8Array();
          else {
            let bytesToCutOff = this._lookbehind.length + pos;
            return bytesToCutOff > 0 && (tokens.push(this._lookbehind.slice(0, bytesToCutOff)), this._lookbehind = this._lookbehind.slice(bytesToCutOff)), this._lookbehind = Uint8Array.from(new Array(this._lookbehind.length + data.length), (_, i) => this._charAt(data, i - this._lookbehind.length)), [
              data.length,
              ...tokens
            ];
          }
        }
        for (pos += bufPos; pos <= data.length - this._needle.length; ) {
          let ch = data[pos + this._needle.length - 1];
          if (ch === this._lastChar && data[pos] === this._needle[0] && jsmemcmp(this._needle, 0, data, pos, this._needle.length - 1))
            return pos > bufPos && tokens.push(data.slice(bufPos, pos)), tokens.push(MATCH), [
              pos + this._needle.length,
              ...tokens
            ];
          pos += this._occ[ch];
        }
        if (pos < data.length) {
          for (; pos < data.length && (data[pos] !== this._needle[0] || !jsmemcmp(data, pos, this._needle, 0, data.length - pos)); )
            ++pos;
          pos < data.length && (this._lookbehind = data.slice(pos));
        }
        return pos > 0 && tokens.push(data.slice(bufPos, pos < data.length ? pos : data.length)), [
          data.length,
          ...tokens
        ];
      }
      _charAt(data, pos) {
        return pos < 0 ? this._lookbehind[this._lookbehind.length + pos] : data[pos];
      }
      _memcmp(data, pos, len) {
        return jsmemcmp(this._charAt.bind(this, data), pos, this._needle, 0, len);
      }
    }, ReadableStreamSearch = class {
      constructor(needle, _readableStream) {
        this._readableStream = _readableStream, this._search = new StreamSearch(needle);
      }
      async *[Symbol.asyncIterator]() {
        let reader = this._readableStream.getReader();
        try {
          for (; ; ) {
            let result = await reader.read();
            if (result.done)
              break;
            yield* this._search.feed(result.value);
          }
          let tail = this._search.end();
          tail.length && (yield tail);
        } finally {
          reader.releaseLock();
        }
      }
    }, EOQ = Symbol("End of Queue"), QueueableStreamSearch = class {
      constructor(needle) {
        this._chunksQueue = [], this._closed = !1, this._search = new StreamSearch(needle);
      }
      push(...chunks) {
        if (this._closed)
          throw new Error("cannot call push after close");
        this._chunksQueue.push(...chunks), this._notify && this._notify();
      }
      close() {
        if (this._closed)
          throw new Error("close was already called");
        this._closed = !0, this._chunksQueue.push(EOQ), this._notify && this._notify();
      }
      async *[Symbol.asyncIterator]() {
        for (; ; ) {
          let chunk;
          for (; !(chunk = this._chunksQueue.shift()); )
            await new Promise((resolve) => this._notify = resolve), this._notify = void 0;
          if (chunk === EOQ)
            break;
          yield* this._search.feed(chunk);
        }
        let tail = this._search.end();
        tail.length && (yield tail);
      }
    };
  }
});

// node_modules/@web3-storage/multipart-parser/esm/src/index.js
function parseContentDisposition(header) {
  let parts = header.split(";").map((part) => part.trim());
  if (parts.shift() !== "form-data")
    throw new Error('malformed content-disposition header: missing "form-data" in `' + JSON.stringify(parts) + "`");
  let out = {};
  for (let part of parts) {
    let kv = part.split("=", 2);
    if (kv.length !== 2)
      throw new Error("malformed content-disposition header: key-value pair not found - " + part + " in `" + header + "`");
    let [name, value] = kv;
    if (value[0] === '"' && value[value.length - 1] === '"')
      out[name] = value.slice(1, -1).replace(/\\"/g, '"');
    else if (value[0] !== '"' && value[value.length - 1] !== '"')
      out[name] = value;
    else if (value[0] === '"' && value[value.length - 1] !== '"' || value[0] !== '"' && value[value.length - 1] === '"')
      throw new Error("malformed content-disposition header: mismatched quotations in `" + header + "`");
  }
  if (!out.name)
    throw new Error("malformed content-disposition header: missing field name in `" + header + "`");
  return out;
}
function parsePartHeaders(lines) {
  let entries = [], disposition = !1, line;
  for (; typeof (line = lines.shift()) < "u"; ) {
    let colon = line.indexOf(":");
    if (colon === -1)
      throw new Error("malformed multipart-form header: missing colon");
    let header = line.slice(0, colon).trim().toLowerCase(), value = line.slice(colon + 1).trim();
    switch (header) {
      case "content-disposition":
        disposition = !0, entries.push(...Object.entries(parseContentDisposition(value)));
        break;
      case "content-type":
        entries.push([
          "contentType",
          value
        ]);
    }
  }
  if (!disposition)
    throw new Error("malformed multipart-form header: missing content-disposition");
  return Object.fromEntries(entries);
}
async function readHeaderLines(it, needle) {
  let firstChunk = !0, lastTokenWasMatch = !1, headerLines = [[]], crlfSearch = new StreamSearch(CRLF);
  for (; ; ) {
    let result = await it.next();
    if (result.done)
      throw new Error("malformed multipart-form data: unexpected end of stream");
    if (firstChunk && result.value !== MATCH && arraysEqual(result.value.slice(0, 2), dash))
      return [
        void 0,
        new Uint8Array()
      ];
    let chunk;
    if (result.value !== MATCH)
      chunk = result.value;
    else if (!lastTokenWasMatch)
      chunk = needle;
    else
      throw new Error("malformed multipart-form data: unexpected boundary");
    if (!chunk.length)
      continue;
    firstChunk && (firstChunk = !1);
    let tokens = crlfSearch.feed(chunk);
    for (let [i, token] of tokens.entries()) {
      let isMatch = token === MATCH;
      if (!(!isMatch && !token.length)) {
        if (lastTokenWasMatch && isMatch)
          return tokens.push(crlfSearch.end()), [
            headerLines.filter((chunks) => chunks.length).map(mergeArrays2).map(arrayToString),
            mergeArrays(...tokens.slice(i + 1).map((token2) => token2 === MATCH ? CRLF : token2))
          ];
        (lastTokenWasMatch = isMatch) ? headerLines.push([]) : headerLines[headerLines.length - 1].push(token);
      }
    }
  }
}
async function* streamMultipart(body, boundary) {
  let needle = mergeArrays(dash, stringToArray(boundary)), it = new ReadableStreamSearch(needle, body)[Symbol.asyncIterator]();
  for (; ; ) {
    let result = await it.next();
    if (result.done)
      return;
    if (result.value === MATCH)
      break;
  }
  let crlfSearch = new StreamSearch(CRLF);
  for (; ; ) {
    let feedChunk = function(chunk) {
      let chunks = [];
      for (let token of crlfSearch.feed(chunk))
        trailingCRLF && chunks.push(CRLF), (trailingCRLF = token === MATCH) || chunks.push(token);
      return mergeArrays(...chunks);
    }, [headerLines, tail] = await readHeaderLines(it, needle);
    if (!headerLines)
      return;
    async function nextToken() {
      let result = await it.next();
      if (result.done)
        throw new Error("malformed multipart-form data: unexpected end of stream");
      return result;
    }
    let trailingCRLF = !1, done = !1;
    async function nextChunk() {
      let result = await nextToken(), chunk;
      if (result.value !== MATCH)
        chunk = result.value;
      else if (!trailingCRLF)
        chunk = CRLF;
      else
        return done = !0, { value: crlfSearch.end() };
      return { value: feedChunk(chunk) };
    }
    let bufferedChunks = [{ value: feedChunk(tail) }];
    for (yield {
      ...parsePartHeaders(headerLines),
      data: {
        [Symbol.asyncIterator]() {
          return this;
        },
        async next() {
          for (; ; ) {
            let result = bufferedChunks.shift();
            if (!result)
              break;
            if (result.value.length > 0)
              return result;
          }
          for (; ; ) {
            if (done)
              return {
                done,
                value: void 0
              };
            let result = await nextChunk();
            if (result.value.length > 0)
              return result;
          }
        }
      }
    }; !done; )
      bufferedChunks.push(await nextChunk());
  }
}
var mergeArrays2, dash, CRLF, init_src = __esm({
  "node_modules/@web3-storage/multipart-parser/esm/src/index.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_search();
    init_utils();
    mergeArrays2 = Function.prototype.apply.bind(mergeArrays, void 0), dash = stringToArray("--"), CRLF = stringToArray(`\r
`);
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/formData.js
function composeUploadHandlers(...handlers) {
  return async (part) => {
    for (let handler of handlers) {
      let value = await handler(part);
      if (typeof value < "u" && value !== null)
        return value;
    }
  };
}
async function parseMultipartFormData(request, uploadHandler) {
  let contentType = request.headers.get("Content-Type") || "", [type, boundary] = contentType.split(/\s*;\s*boundary=/);
  if (!request.body || !boundary || type !== "multipart/form-data")
    throw new TypeError("Could not parse content as FormData.");
  let formData = new FormData(), parts = streamMultipart(request.body, boundary);
  for await (let part of parts) {
    if (part.done)
      break;
    typeof part.filename == "string" && (part.filename = part.filename.split(/[/\\]/).pop());
    let value = await uploadHandler(part);
    typeof value < "u" && value !== null && formData.append(part.name, value);
  }
  return formData;
}
var init_formData = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/formData.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_src();
  }
});

// node_modules/@remix-run/router/dist/router.js
var router_exports = {};
__export(router_exports, {
  AbortedDeferredError: () => AbortedDeferredError,
  Action: () => Action,
  ErrorResponse: () => ErrorResponse,
  IDLE_BLOCKER: () => IDLE_BLOCKER,
  IDLE_FETCHER: () => IDLE_FETCHER,
  IDLE_NAVIGATION: () => IDLE_NAVIGATION,
  UNSAFE_DEFERRED_SYMBOL: () => UNSAFE_DEFERRED_SYMBOL,
  UNSAFE_DeferredData: () => DeferredData,
  UNSAFE_convertRoutesToDataRoutes: () => convertRoutesToDataRoutes,
  UNSAFE_getPathContributingMatches: () => getPathContributingMatches,
  UNSAFE_invariant: () => invariant,
  UNSAFE_warning: () => warning,
  createBrowserHistory: () => createBrowserHistory,
  createHashHistory: () => createHashHistory,
  createMemoryHistory: () => createMemoryHistory,
  createPath: () => createPath,
  createRouter: () => createRouter,
  createStaticHandler: () => createStaticHandler,
  defer: () => defer,
  generatePath: () => generatePath,
  getStaticContextFromError: () => getStaticContextFromError,
  getToPathname: () => getToPathname,
  isDeferredData: () => isDeferredData,
  isRouteErrorResponse: () => isRouteErrorResponse,
  joinPaths: () => joinPaths,
  json: () => json,
  matchPath: () => matchPath,
  matchRoutes: () => matchRoutes,
  normalizePathname: () => normalizePathname,
  parsePath: () => parsePath,
  redirect: () => redirect,
  resolvePath: () => resolvePath,
  resolveTo: () => resolveTo,
  stripBasename: () => stripBasename
});
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends.apply(this, arguments);
}
function createMemoryHistory(options2) {
  options2 === void 0 && (options2 = {});
  let {
    initialEntries = ["/"],
    initialIndex,
    v5Compat = !1
  } = options2, entries;
  entries = initialEntries.map((entry2, index2) => createMemoryLocation(entry2, typeof entry2 == "string" ? null : entry2.state, index2 === 0 ? "default" : void 0));
  let index = clampIndex(initialIndex ?? entries.length - 1), action = Action.Pop, listener = null;
  function clampIndex(n) {
    return Math.min(Math.max(n, 0), entries.length - 1);
  }
  function getCurrentLocation() {
    return entries[index];
  }
  function createMemoryLocation(to, state, key) {
    state === void 0 && (state = null);
    let location = createLocation(entries ? getCurrentLocation().pathname : "/", to, state, key);
    return warning(location.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(to)), location;
  }
  function createHref(to) {
    return typeof to == "string" ? to : createPath(to);
  }
  return {
    get index() {
      return index;
    },
    get action() {
      return action;
    },
    get location() {
      return getCurrentLocation();
    },
    createHref,
    createURL(to) {
      return new URL(createHref(to), "http://localhost");
    },
    encodeLocation(to) {
      let path = typeof to == "string" ? parsePath(to) : to;
      return {
        pathname: path.pathname || "",
        search: path.search || "",
        hash: path.hash || ""
      };
    },
    push(to, state) {
      action = Action.Push;
      let nextLocation = createMemoryLocation(to, state);
      index += 1, entries.splice(index, entries.length, nextLocation), v5Compat && listener && listener({
        action,
        location: nextLocation,
        delta: 1
      });
    },
    replace(to, state) {
      action = Action.Replace;
      let nextLocation = createMemoryLocation(to, state);
      entries[index] = nextLocation, v5Compat && listener && listener({
        action,
        location: nextLocation,
        delta: 0
      });
    },
    go(delta) {
      action = Action.Pop;
      let nextIndex = clampIndex(index + delta), nextLocation = entries[nextIndex];
      index = nextIndex, listener && listener({
        action,
        location: nextLocation,
        delta
      });
    },
    listen(fn) {
      return listener = fn, () => {
        listener = null;
      };
    }
  };
}
function createBrowserHistory(options2) {
  options2 === void 0 && (options2 = {});
  function createBrowserLocation(window2, globalHistory) {
    let {
      pathname,
      search,
      hash
    } = window2.location;
    return createLocation(
      "",
      {
        pathname,
        search,
        hash
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createBrowserHref(window2, to) {
    return typeof to == "string" ? to : createPath(to);
  }
  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options2);
}
function createHashHistory(options2) {
  options2 === void 0 && (options2 = {});
  function createHashLocation(window2, globalHistory) {
    let {
      pathname = "/",
      search = "",
      hash = ""
    } = parsePath(window2.location.hash.substr(1));
    return createLocation(
      "",
      {
        pathname,
        search,
        hash
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createHashHref(window2, to) {
    let base = window2.document.querySelector("base"), href = "";
    if (base && base.getAttribute("href")) {
      let url = window2.location.href, hashIndex = url.indexOf("#");
      href = hashIndex === -1 ? url : url.slice(0, hashIndex);
    }
    return href + "#" + (typeof to == "string" ? to : createPath(to));
  }
  function validateHashLocation(location, to) {
    warning(location.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");
  }
  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options2);
}
function invariant(value, message) {
  if (value === !1 || value === null || typeof value > "u")
    throw new Error(message);
}
function warning(cond, message) {
  if (!cond) {
    typeof console < "u" && console.warn(message);
    try {
      throw new Error(message);
    } catch {
    }
  }
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
function getHistoryState(location, index) {
  return {
    usr: location.state,
    key: location.key,
    idx: index
  };
}
function createLocation(current, to, state, key) {
  return state === void 0 && (state = null), _extends({
    pathname: typeof current == "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to == "string" ? parsePath(to) : to, {
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  });
}
function createPath(_ref) {
  let {
    pathname = "/",
    search = "",
    hash = ""
  } = _ref;
  return search && search !== "?" && (pathname += search.charAt(0) === "?" ? search : "?" + search), hash && hash !== "#" && (pathname += hash.charAt(0) === "#" ? hash : "#" + hash), pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    hashIndex >= 0 && (parsedPath.hash = path.substr(hashIndex), path = path.substr(0, hashIndex));
    let searchIndex = path.indexOf("?");
    searchIndex >= 0 && (parsedPath.search = path.substr(searchIndex), path = path.substr(0, searchIndex)), path && (parsedPath.pathname = path);
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref, validateLocation, options2) {
  options2 === void 0 && (options2 = {});
  let {
    window: window2 = document.defaultView,
    v5Compat = !1
  } = options2, globalHistory = window2.history, action = Action.Pop, listener = null, index = getIndex();
  index == null && (index = 0, globalHistory.replaceState(_extends({}, globalHistory.state, {
    idx: index
  }), ""));
  function getIndex() {
    return (globalHistory.state || {
      idx: null
    }).idx;
  }
  function handlePop() {
    action = Action.Pop;
    let nextIndex = getIndex(), delta = nextIndex == null ? null : nextIndex - index;
    index = nextIndex, listener && listener({
      action,
      location: history.location,
      delta
    });
  }
  function push(to, state) {
    action = Action.Push;
    let location = createLocation(history.location, to, state);
    validateLocation && validateLocation(location, to), index = getIndex() + 1;
    let historyState = getHistoryState(location, index), url = history.createHref(location);
    try {
      globalHistory.pushState(historyState, "", url);
    } catch {
      window2.location.assign(url);
    }
    v5Compat && listener && listener({
      action,
      location: history.location,
      delta: 1
    });
  }
  function replace(to, state) {
    action = Action.Replace;
    let location = createLocation(history.location, to, state);
    validateLocation && validateLocation(location, to), index = getIndex();
    let historyState = getHistoryState(location, index), url = history.createHref(location);
    globalHistory.replaceState(historyState, "", url), v5Compat && listener && listener({
      action,
      location: history.location,
      delta: 0
    });
  }
  function createURL(to) {
    let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href, href = typeof to == "string" ? to : createPath(to);
    return invariant(base, "No window.location.(origin|href) available to create URL for href: " + href), new URL(href, base);
  }
  let history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener)
        throw new Error("A history only accepts one active listener");
      return window2.addEventListener(PopStateEventType, handlePop), listener = fn, () => {
        window2.removeEventListener(PopStateEventType, handlePop), listener = null;
      };
    },
    createHref(to) {
      return createHref(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push,
    replace,
    go(n) {
      return globalHistory.go(n);
    }
  };
  return history;
}
function isIndexRoute(route) {
  return route.index === !0;
}
function convertRoutesToDataRoutes(routes2, mapRouteProperties2, parentPath, manifest) {
  return parentPath === void 0 && (parentPath = []), manifest === void 0 && (manifest = {}), routes2.map((route, index) => {
    let treePath = [...parentPath, index], id = typeof route.id == "string" ? route.id : treePath.join("-");
    if (invariant(route.index !== !0 || !route.children, "Cannot specify children on an index route"), invariant(!manifest[id], 'Found a route id collision on id "' + id + `".  Route id's must be globally unique within Data Router usages`), isIndexRoute(route)) {
      let indexRoute = _extends({}, route, mapRouteProperties2(route), {
        id
      });
      return manifest[id] = indexRoute, indexRoute;
    } else {
      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties2(route), {
        id,
        children: void 0
      });
      return manifest[id] = pathOrLayoutRoute, route.children && (pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties2, treePath, manifest)), pathOrLayoutRoute;
    }
  });
}
function matchRoutes(routes2, locationArg, basename) {
  basename === void 0 && (basename = "/");
  let location = typeof locationArg == "string" ? parsePath(locationArg) : locationArg, pathname = stripBasename(location.pathname || "/", basename);
  if (pathname == null)
    return null;
  let branches = flattenRoutes(routes2);
  rankRouteBranches(branches);
  let matches = null;
  for (let i = 0; matches == null && i < branches.length; ++i)
    matches = matchRouteBranch(
      branches[i],
      // Incoming pathnames are generally encoded from either window.location
      // or from router.navigate, but we want to match against the unencoded
      // paths in the route definitions.  Memory router locations won't be
      // encoded here but there also shouldn't be anything to decode so this
      // should be a safe operation.  This avoids needing matchRoutes to be
      // history-aware.
      safelyDecodeURI(pathname)
    );
  return matches;
}
function flattenRoutes(routes2, branches, parentsMeta, parentPath) {
  branches === void 0 && (branches = []), parentsMeta === void 0 && (parentsMeta = []), parentPath === void 0 && (parentPath = "");
  let flattenRoute = (route, index, relativePath) => {
    let meta5 = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === !0,
      childrenIndex: index,
      route
    };
    meta5.relativePath.startsWith("/") && (invariant(meta5.relativePath.startsWith(parentPath), 'Absolute route path "' + meta5.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), meta5.relativePath = meta5.relativePath.slice(parentPath.length));
    let path = joinPaths([parentPath, meta5.relativePath]), routesMeta = parentsMeta.concat(meta5);
    route.children && route.children.length > 0 && (invariant(
      // Our types know better, but runtime JS may not!
      // @ts-expect-error
      route.index !== !0,
      "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')
    ), flattenRoutes(route.children, branches, routesMeta, path)), !(route.path == null && !route.index) && branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  };
  return routes2.forEach((route, index) => {
    var _route$path;
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?")))
      flattenRoute(route, index);
    else
      for (let exploded of explodeOptionalSegments(route.path))
        flattenRoute(route, index, exploded);
  }), branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0)
    return [];
  let [first, ...rest] = segments, isOptional = first.endsWith("?"), required = first.replace(/\?$/, "");
  if (rest.length === 0)
    return isOptional ? [required, ""] : [required];
  let restExploded = explodeOptionalSegments(rest.join("/")), result = [];
  return result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/"))), isOptional && result.push(...restExploded), result.map((exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
  branches.sort((a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map((meta5) => meta5.childrenIndex), b.routesMeta.map((meta5) => meta5.childrenIndex)));
}
function computeScore(path, index) {
  let segments = path.split("/"), initialScore = segments.length;
  return segments.some(isSplat) && (initialScore += splatPenalty), index && (initialScore += indexRouteValue), segments.filter((s) => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a, b) {
  return a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]) ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a[a.length - 1] - b[b.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname) {
  let {
    routesMeta
  } = branch, matchedParams = {}, matchedPathname = "/", matches = [];
  for (let i = 0; i < routesMeta.length; ++i) {
    let meta5 = routesMeta[i], end = i === routesMeta.length - 1, remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/", match = matchPath({
      path: meta5.relativePath,
      caseSensitive: meta5.caseSensitive,
      end
    }, remainingPathname);
    if (!match)
      return null;
    Object.assign(matchedParams, match.params);
    let route = meta5.route;
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),
      route
    }), match.pathnameBase !== "/" && (matchedPathname = joinPaths([matchedPathname, match.pathnameBase]));
  }
  return matches;
}
function generatePath(originalPath, params) {
  params === void 0 && (params = {});
  let path = originalPath;
  path.endsWith("*") && path !== "*" && !path.endsWith("/*") && (warning(!1, 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".')), path = path.replace(/\*$/, "/*"));
  let prefix = path.startsWith("/") ? "/" : "", segments = path.split(/\/+/).map((segment, index, array) => {
    if (index === array.length - 1 && segment === "*")
      return params["*"];
    let keyMatch = segment.match(/^:(\w+)(\??)$/);
    if (keyMatch) {
      let [, key, optional] = keyMatch, param = params[key];
      return optional === "?" ? param ?? "" : (param == null && invariant(!1, 'Missing ":' + key + '" param'), param);
    }
    return segment.replace(/\?$/g, "");
  }).filter((segment) => !!segment);
  return prefix + segments.join("/");
}
function matchPath(pattern, pathname) {
  typeof pattern == "string" && (pattern = {
    path: pattern,
    caseSensitive: !1,
    end: !0
  });
  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end), match = pathname.match(matcher);
  if (!match)
    return null;
  let matchedPathname = match[0], pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1"), captureGroups = match.slice(1);
  return {
    params: paramNames.reduce((memo, paramName, index) => {
      if (paramName === "*") {
        let splatValue = captureGroups[index] || "";
        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
      }
      return memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || "", paramName), memo;
    }, {}),
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path, caseSensitive, end) {
  caseSensitive === void 0 && (caseSensitive = !1), end === void 0 && (end = !0), warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
  let paramNames = [], regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^$?{}|()[\]]/g, "\\$&").replace(/\/:(\w+)/g, (_, paramName) => (paramNames.push(paramName), "/([^\\/]+)"));
  return path.endsWith("*") ? (paramNames.push("*"), regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : end ? regexpSource += "\\/*$" : path !== "" && path !== "/" && (regexpSource += "(?:(?=\\/|$))"), [new RegExp(regexpSource, caseSensitive ? void 0 : "i"), paramNames];
}
function safelyDecodeURI(value) {
  try {
    return decodeURI(value);
  } catch (error) {
    return warning(!1, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error + ").")), value;
  }
}
function safelyDecodeURIComponent(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
    return warning(!1, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error + ").")), value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/")
    return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase()))
    return null;
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length, nextChar = pathname.charAt(startIndex);
  return nextChar && nextChar !== "/" ? null : pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname) {
  fromPathname === void 0 && (fromPathname = "/");
  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to == "string" ? parsePath(to) : to;
  return {
    pathname: toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  return relativePath.split("/").forEach((segment) => {
    segment === ".." ? segments.length > 1 && segments.pop() : segment !== "." && segments.push(segment);
  }), segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function getPathContributingMatches(matches) {
  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  isPathRelative === void 0 && (isPathRelative = !1);
  let to;
  typeof toArg == "string" ? to = parsePath(toArg) : (to = _extends({}, toArg), invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to)), invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to)), invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to)));
  let isEmptyPath = toArg === "" || to.pathname === "", toPathname = isEmptyPath ? "/" : to.pathname, from;
  if (isPathRelative || toPathname == null)
    from = locationPathname;
  else {
    let routePathnameIndex = routePathnames.length - 1;
    if (toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      for (; toSegments[0] === ".."; )
        toSegments.shift(), routePathnameIndex -= 1;
      to.pathname = toSegments.join("/");
    }
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath(to, from), hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/"), hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  return !path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash) && (path.pathname += "/"), path;
}
function getToPathname(to) {
  return to === "" || to.pathname === "" ? "/" : typeof to == "string" ? parsePath(to).pathname : to.pathname;
}
function isTrackedPromise(value) {
  return value instanceof Promise && value._tracked === !0;
}
function unwrapTrackedPromise(value) {
  if (!isTrackedPromise(value))
    return value;
  if (value._error)
    throw value._error;
  return value._data;
}
function isRouteErrorResponse(error) {
  return error != null && typeof error.status == "number" && typeof error.statusText == "string" && typeof error.internal == "boolean" && "data" in error;
}
function createRouter(init) {
  invariant(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
  let mapRouteProperties2;
  if (init.mapRouteProperties)
    mapRouteProperties2 = init.mapRouteProperties;
  else if (init.detectErrorBoundary) {
    let detectErrorBoundary = init.detectErrorBoundary;
    mapRouteProperties2 = (route) => ({
      hasErrorBoundary: detectErrorBoundary(route)
    });
  } else
    mapRouteProperties2 = defaultMapRouteProperties;
  let manifest = {}, dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties2, void 0, manifest), inFlightDataRoutes, basename = init.basename || "/", future2 = _extends({
    v7_normalizeFormMethod: !1,
    v7_prependBasename: !1
  }, init.future), unlistenHistory = null, subscribers = /* @__PURE__ */ new Set(), savedScrollPositions2 = null, getScrollRestorationKey = null, getScrollPosition = null, initialScrollRestored = init.hydrationData != null, initialMatches = matchRoutes(dataRoutes, init.history.location, basename), initialErrors = null;
  if (initialMatches == null) {
    let error = getInternalRouterError(404, {
      pathname: init.history.location.pathname
    }), {
      matches,
      route
    } = getShortCircuitMatches(dataRoutes);
    initialMatches = matches, initialErrors = {
      [route.id]: error
    };
  }
  let initialized = (
    // All initialMatches need to be loaded before we're ready.  If we have lazy
    // functions around still then we'll need to run them in initialize()
    !initialMatches.some((m) => m.route.lazy) && // And we have to either have no loaders or have been provided hydrationData
    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null)
  ), router, state = {
    historyAction: init.history.action,
    location: init.history.location,
    matches: initialMatches,
    initialized,
    navigation: IDLE_NAVIGATION,
    // Don't restore on initial updateState() if we were SSR'd
    restoreScrollPosition: init.hydrationData != null ? !1 : null,
    preventScrollReset: !1,
    revalidation: "idle",
    loaderData: init.hydrationData && init.hydrationData.loaderData || {},
    actionData: init.hydrationData && init.hydrationData.actionData || null,
    errors: init.hydrationData && init.hydrationData.errors || initialErrors,
    fetchers: /* @__PURE__ */ new Map(),
    blockers: /* @__PURE__ */ new Map()
  }, pendingAction = Action.Pop, pendingPreventScrollReset = !1, pendingNavigationController, isUninterruptedRevalidation = !1, isRevalidationRequired = !1, cancelledDeferredRoutes = [], cancelledFetcherLoads = [], fetchControllers = /* @__PURE__ */ new Map(), incrementingLoadId = 0, pendingNavigationLoadId = -1, fetchReloadIds = /* @__PURE__ */ new Map(), fetchRedirectIds = /* @__PURE__ */ new Set(), fetchLoadMatches = /* @__PURE__ */ new Map(), activeDeferreds = /* @__PURE__ */ new Map(), blockerFunctions = /* @__PURE__ */ new Map(), ignoreNextHistoryUpdate = !1;
  function initialize() {
    return unlistenHistory = init.history.listen((_ref) => {
      let {
        action: historyAction,
        location,
        delta
      } = _ref;
      if (ignoreNextHistoryUpdate) {
        ignoreNextHistoryUpdate = !1;
        return;
      }
      warning(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
      let blockerKey = shouldBlockNavigation({
        currentLocation: state.location,
        nextLocation: location,
        historyAction
      });
      if (blockerKey && delta != null) {
        ignoreNextHistoryUpdate = !0, init.history.go(delta * -1), updateBlocker(blockerKey, {
          state: "blocked",
          location,
          proceed() {
            updateBlocker(blockerKey, {
              state: "proceeding",
              proceed: void 0,
              reset: void 0,
              location
            }), init.history.go(delta);
          },
          reset() {
            deleteBlocker(blockerKey), updateState({
              blockers: new Map(router.state.blockers)
            });
          }
        });
        return;
      }
      return startNavigation(historyAction, location);
    }), state.initialized || startNavigation(Action.Pop, state.location), router;
  }
  function dispose() {
    unlistenHistory && unlistenHistory(), subscribers.clear(), pendingNavigationController && pendingNavigationController.abort(), state.fetchers.forEach((_, key) => deleteFetcher(key)), state.blockers.forEach((_, key) => deleteBlocker(key));
  }
  function subscribe(fn) {
    return subscribers.add(fn), () => subscribers.delete(fn);
  }
  function updateState(newState) {
    state = _extends({}, state, newState), subscribers.forEach((subscriber) => subscriber(state));
  }
  function completeNavigation(location, newState) {
    var _location$state, _location$state2;
    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== !0, actionData;
    newState.actionData ? Object.keys(newState.actionData).length > 0 ? actionData = newState.actionData : actionData = null : isActionReload ? actionData = state.actionData : actionData = null;
    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;
    for (let [key] of blockerFunctions)
      deleteBlocker(key);
    let preventScrollReset = pendingPreventScrollReset === !0 || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== !0;
    inFlightDataRoutes && (dataRoutes = inFlightDataRoutes, inFlightDataRoutes = void 0), updateState(_extends({}, newState, {
      actionData,
      loaderData,
      historyAction: pendingAction,
      location,
      initialized: !0,
      navigation: IDLE_NAVIGATION,
      revalidation: "idle",
      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),
      preventScrollReset,
      blockers: new Map(state.blockers)
    })), isUninterruptedRevalidation || pendingAction === Action.Pop || (pendingAction === Action.Push ? init.history.push(location, location.state) : pendingAction === Action.Replace && init.history.replace(location, location.state)), pendingAction = Action.Pop, pendingPreventScrollReset = !1, isUninterruptedRevalidation = !1, isRevalidationRequired = !1, cancelledDeferredRoutes = [], cancelledFetcherLoads = [];
  }
  async function navigate(to, opts) {
    if (typeof to == "number") {
      init.history.go(to);
      return;
    }
    let normalizedPath = normalizeTo(state.location, state.matches, basename, future2.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative), {
      path,
      submission,
      error
    } = normalizeNavigateOptions(future2.v7_normalizeFormMethod, !1, normalizedPath, opts), currentLocation = state.location, nextLocation = createLocation(state.location, path, opts && opts.state);
    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));
    let userReplace = opts && opts.replace != null ? opts.replace : void 0, historyAction = Action.Push;
    userReplace === !0 ? historyAction = Action.Replace : userReplace === !1 || submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search && (historyAction = Action.Replace);
    let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === !0 : void 0, blockerKey = shouldBlockNavigation({
      currentLocation,
      nextLocation,
      historyAction
    });
    if (blockerKey) {
      updateBlocker(blockerKey, {
        state: "blocked",
        location: nextLocation,
        proceed() {
          updateBlocker(blockerKey, {
            state: "proceeding",
            proceed: void 0,
            reset: void 0,
            location: nextLocation
          }), navigate(to, opts);
        },
        reset() {
          deleteBlocker(blockerKey), updateState({
            blockers: new Map(state.blockers)
          });
        }
      });
      return;
    }
    return await startNavigation(historyAction, nextLocation, {
      submission,
      // Send through the formData serialization error if we have one so we can
      // render at the right error boundary after we match routes
      pendingError: error,
      preventScrollReset,
      replace: opts && opts.replace
    });
  }
  function revalidate() {
    if (interruptActiveLoads(), updateState({
      revalidation: "loading"
    }), state.navigation.state !== "submitting") {
      if (state.navigation.state === "idle") {
        startNavigation(state.historyAction, state.location, {
          startUninterruptedRevalidation: !0
        });
        return;
      }
      startNavigation(pendingAction || state.historyAction, state.navigation.location, {
        overrideNavigation: state.navigation
      });
    }
  }
  async function startNavigation(historyAction, location, opts) {
    pendingNavigationController && pendingNavigationController.abort(), pendingNavigationController = null, pendingAction = historyAction, isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === !0, saveScrollPosition(state.location, state.matches), pendingPreventScrollReset = (opts && opts.preventScrollReset) === !0;
    let routesToUse = inFlightDataRoutes || dataRoutes, loadingNavigation = opts && opts.overrideNavigation, matches = matchRoutes(routesToUse, location, basename);
    if (!matches) {
      let error = getInternalRouterError(404, {
        pathname: location.pathname
      }), {
        matches: notFoundMatches,
        route
      } = getShortCircuitMatches(routesToUse);
      cancelActiveDeferreds(), completeNavigation(location, {
        matches: notFoundMatches,
        loaderData: {},
        errors: {
          [route.id]: error
        }
      });
      return;
    }
    if (state.initialized && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
      completeNavigation(location, {
        matches
      });
      return;
    }
    pendingNavigationController = new AbortController();
    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission), pendingActionData, pendingError;
    if (opts && opts.pendingError)
      pendingError = {
        [findNearestBoundary(matches).route.id]: opts.pendingError
      };
    else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
      let actionOutput = await handleAction(request, location, opts.submission, matches, {
        replace: opts.replace
      });
      if (actionOutput.shortCircuited)
        return;
      pendingActionData = actionOutput.pendingActionData, pendingError = actionOutput.pendingActionError, loadingNavigation = _extends({
        state: "loading",
        location
      }, opts.submission), request = new Request(request.url, {
        signal: request.signal
      });
    }
    let {
      shortCircuited,
      loaderData,
      errors
    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);
    shortCircuited || (pendingNavigationController = null, completeNavigation(location, _extends({
      matches
    }, pendingActionData ? {
      actionData: pendingActionData
    } : {}, {
      loaderData,
      errors
    })));
  }
  async function handleAction(request, location, submission, matches, opts) {
    interruptActiveLoads();
    let navigation = _extends({
      state: "submitting",
      location
    }, submission);
    updateState({
      navigation
    });
    let result, actionMatch = getTargetMatch(matches, location);
    if (!actionMatch.route.action && !actionMatch.route.lazy)
      result = {
        type: ResultType.error,
        error: getInternalRouterError(405, {
          method: request.method,
          pathname: location.pathname,
          routeId: actionMatch.route.id
        })
      };
    else if (result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties2, basename), request.signal.aborted)
      return {
        shortCircuited: !0
      };
    if (isRedirectResult(result)) {
      let replace;
      return opts && opts.replace != null ? replace = opts.replace : replace = result.location === state.location.pathname + state.location.search, await startRedirectNavigation(state, result, {
        submission,
        replace
      }), {
        shortCircuited: !0
      };
    }
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
      return (opts && opts.replace) !== !0 && (pendingAction = Action.Push), {
        // Send back an empty object we can use to clear out any prior actionData
        pendingActionData: {},
        pendingActionError: {
          [boundaryMatch.route.id]: result.error
        }
      };
    }
    if (isDeferredResult(result))
      throw getInternalRouterError(400, {
        type: "defer-action"
      });
    return {
      pendingActionData: {
        [actionMatch.route.id]: result.data
      }
    };
  }
  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {
    let loadingNavigation = overrideNavigation;
    loadingNavigation || (loadingNavigation = _extends({
      state: "loading",
      location,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0
    }, submission));
    let activeSubmission = submission || fetcherSubmission ? submission || fetcherSubmission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {
      formMethod: loadingNavigation.formMethod,
      formAction: loadingNavigation.formAction,
      formData: loadingNavigation.formData,
      formEncType: loadingNavigation.formEncType
    } : void 0, routesToUse = inFlightDataRoutes || dataRoutes, [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError);
    if (cancelActiveDeferreds((routeId) => !(matches && matches.some((m) => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId)), matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {
      let updatedFetchers2 = markFetchRedirectsDone();
      return completeNavigation(location, _extends({
        matches,
        loaderData: {},
        // Commit pending error if we're short circuiting
        errors: pendingError || null
      }, pendingActionData ? {
        actionData: pendingActionData
      } : {}, updatedFetchers2 ? {
        fetchers: new Map(state.fetchers)
      } : {})), {
        shortCircuited: !0
      };
    }
    if (!isUninterruptedRevalidation) {
      revalidatingFetchers.forEach((rf) => {
        let fetcher = state.fetchers.get(rf.key), revalidatingFetcher = {
          state: "loading",
          data: fetcher && fetcher.data,
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0,
          " _hasFetcherDoneAnything ": !0
        };
        state.fetchers.set(rf.key, revalidatingFetcher);
      });
      let actionData = pendingActionData || state.actionData;
      updateState(_extends({
        navigation: loadingNavigation
      }, actionData ? Object.keys(actionData).length === 0 ? {
        actionData: null
      } : {
        actionData
      } : {}, revalidatingFetchers.length > 0 ? {
        fetchers: new Map(state.fetchers)
      } : {}));
    }
    pendingNavigationLoadId = ++incrementingLoadId, revalidatingFetchers.forEach((rf) => {
      rf.controller && fetchControllers.set(rf.key, rf.controller);
    });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));
    pendingNavigationController && pendingNavigationController.signal.addEventListener("abort", abortPendingFetchRevalidations);
    let {
      results,
      loaderResults,
      fetcherResults
    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);
    if (request.signal.aborted)
      return {
        shortCircuited: !0
      };
    pendingNavigationController && pendingNavigationController.signal.removeEventListener("abort", abortPendingFetchRevalidations), revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));
    let redirect4 = findRedirect(results);
    if (redirect4)
      return await startRedirectNavigation(state, redirect4, {
        replace
      }), {
        shortCircuited: !0
      };
    let {
      loaderData,
      errors
    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);
    activeDeferreds.forEach((deferredData, routeId) => {
      deferredData.subscribe((aborted) => {
        (aborted || deferredData.done) && activeDeferreds.delete(routeId);
      });
    });
    let updatedFetchers = markFetchRedirectsDone(), didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId), shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
    return _extends({
      loaderData,
      errors
    }, shouldUpdateFetchers ? {
      fetchers: new Map(state.fetchers)
    } : {});
  }
  function getFetcher(key) {
    return state.fetchers.get(key) || IDLE_FETCHER;
  }
  function fetch2(key, routeId, href, opts) {
    if (isServer)
      throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");
    fetchControllers.has(key) && abortFetcher(key);
    let routesToUse = inFlightDataRoutes || dataRoutes, normalizedPath = normalizeTo(state.location, state.matches, basename, future2.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative), matches = matchRoutes(routesToUse, normalizedPath, basename);
    if (!matches) {
      setFetcherError(key, routeId, getInternalRouterError(404, {
        pathname: normalizedPath
      }));
      return;
    }
    let {
      path,
      submission
    } = normalizeNavigateOptions(future2.v7_normalizeFormMethod, !0, normalizedPath, opts), match = getTargetMatch(matches, path);
    if (pendingPreventScrollReset = (opts && opts.preventScrollReset) === !0, submission && isMutationMethod(submission.formMethod)) {
      handleFetcherAction(key, routeId, path, match, matches, submission);
      return;
    }
    fetchLoadMatches.set(key, {
      routeId,
      path
    }), handleFetcherLoader(key, routeId, path, match, matches, submission);
  }
  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {
    if (interruptActiveLoads(), fetchLoadMatches.delete(key), !match.route.action && !match.route.lazy) {
      let error = getInternalRouterError(405, {
        method: submission.formMethod,
        pathname: path,
        routeId
      });
      setFetcherError(key, routeId, error);
      return;
    }
    let existingFetcher = state.fetchers.get(key), fetcher = _extends({
      state: "submitting"
    }, submission, {
      data: existingFetcher && existingFetcher.data,
      " _hasFetcherDoneAnything ": !0
    });
    state.fetchers.set(key, fetcher), updateState({
      fetchers: new Map(state.fetchers)
    });
    let abortController = new AbortController(), fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);
    fetchControllers.set(key, abortController);
    let actionResult = await callLoaderOrAction("action", fetchRequest, match, requestMatches, manifest, mapRouteProperties2, basename);
    if (fetchRequest.signal.aborted) {
      fetchControllers.get(key) === abortController && fetchControllers.delete(key);
      return;
    }
    if (isRedirectResult(actionResult)) {
      fetchControllers.delete(key), fetchRedirectIds.add(key);
      let loadingFetcher = _extends({
        state: "loading"
      }, submission, {
        data: void 0,
        " _hasFetcherDoneAnything ": !0
      });
      return state.fetchers.set(key, loadingFetcher), updateState({
        fetchers: new Map(state.fetchers)
      }), startRedirectNavigation(state, actionResult, {
        submission,
        isFetchActionRedirect: !0
      });
    }
    if (isErrorResult(actionResult)) {
      setFetcherError(key, routeId, actionResult.error);
      return;
    }
    if (isDeferredResult(actionResult))
      throw getInternalRouterError(400, {
        type: "defer-action"
      });
    let nextLocation = state.navigation.location || state.location, revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal), routesToUse = inFlightDataRoutes || dataRoutes, matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;
    invariant(matches, "Didn't find any matches after fetcher action");
    let loadId = ++incrementingLoadId;
    fetchReloadIds.set(key, loadId);
    let loadFetcher = _extends({
      state: "loading",
      data: actionResult.data
    }, submission, {
      " _hasFetcherDoneAnything ": !0
    });
    state.fetchers.set(key, loadFetcher);
    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(
      init.history,
      state,
      matches,
      submission,
      nextLocation,
      isRevalidationRequired,
      cancelledDeferredRoutes,
      cancelledFetcherLoads,
      fetchLoadMatches,
      routesToUse,
      basename,
      {
        [match.route.id]: actionResult.data
      },
      void 0
      // No need to send through errors since we short circuit above
    );
    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {
      let staleKey = rf.key, existingFetcher2 = state.fetchers.get(staleKey), revalidatingFetcher = {
        state: "loading",
        data: existingFetcher2 && existingFetcher2.data,
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0,
        " _hasFetcherDoneAnything ": !0
      };
      state.fetchers.set(staleKey, revalidatingFetcher), rf.controller && fetchControllers.set(staleKey, rf.controller);
    }), updateState({
      fetchers: new Map(state.fetchers)
    });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));
    abortController.signal.addEventListener("abort", abortPendingFetchRevalidations);
    let {
      results,
      loaderResults,
      fetcherResults
    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);
    if (abortController.signal.aborted)
      return;
    abortController.signal.removeEventListener("abort", abortPendingFetchRevalidations), fetchReloadIds.delete(key), fetchControllers.delete(key), revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));
    let redirect4 = findRedirect(results);
    if (redirect4)
      return startRedirectNavigation(state, redirect4);
    let {
      loaderData,
      errors
    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, void 0, revalidatingFetchers, fetcherResults, activeDeferreds), doneFetcher = {
      state: "idle",
      data: actionResult.data,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      " _hasFetcherDoneAnything ": !0
    };
    state.fetchers.set(key, doneFetcher);
    let didAbortFetchLoads = abortStaleFetchLoads(loadId);
    state.navigation.state === "loading" && loadId > pendingNavigationLoadId ? (invariant(pendingAction, "Expected pending action"), pendingNavigationController && pendingNavigationController.abort(), completeNavigation(state.navigation.location, {
      matches,
      loaderData,
      errors,
      fetchers: new Map(state.fetchers)
    })) : (updateState(_extends({
      errors,
      loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)
    }, didAbortFetchLoads ? {
      fetchers: new Map(state.fetchers)
    } : {})), isRevalidationRequired = !1);
  }
  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {
    let existingFetcher = state.fetchers.get(key), loadingFetcher = _extends({
      state: "loading",
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0
    }, submission, {
      data: existingFetcher && existingFetcher.data,
      " _hasFetcherDoneAnything ": !0
    });
    state.fetchers.set(key, loadingFetcher), updateState({
      fetchers: new Map(state.fetchers)
    });
    let abortController = new AbortController(), fetchRequest = createClientSideRequest(init.history, path, abortController.signal);
    fetchControllers.set(key, abortController);
    let result = await callLoaderOrAction("loader", fetchRequest, match, matches, manifest, mapRouteProperties2, basename);
    if (isDeferredResult(result) && (result = await resolveDeferredData(result, fetchRequest.signal, !0) || result), fetchControllers.get(key) === abortController && fetchControllers.delete(key), fetchRequest.signal.aborted)
      return;
    if (isRedirectResult(result)) {
      fetchRedirectIds.add(key), await startRedirectNavigation(state, result);
      return;
    }
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(state.matches, routeId);
      state.fetchers.delete(key), updateState({
        fetchers: new Map(state.fetchers),
        errors: {
          [boundaryMatch.route.id]: result.error
        }
      });
      return;
    }
    invariant(!isDeferredResult(result), "Unhandled fetcher deferred data");
    let doneFetcher = {
      state: "idle",
      data: result.data,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      " _hasFetcherDoneAnything ": !0
    };
    state.fetchers.set(key, doneFetcher), updateState({
      fetchers: new Map(state.fetchers)
    });
  }
  async function startRedirectNavigation(state2, redirect4, _temp) {
    var _window;
    let {
      submission,
      replace,
      isFetchActionRedirect
    } = _temp === void 0 ? {} : _temp;
    redirect4.revalidate && (isRevalidationRequired = !0);
    let redirectLocation = createLocation(
      state2.location,
      redirect4.location,
      // TODO: This can be removed once we get rid of useTransition in Remix v2
      _extends({
        _isRedirect: !0
      }, isFetchActionRedirect ? {
        _isFetchActionRedirect: !0
      } : {})
    );
    if (invariant(redirectLocation, "Expected a location on the redirect navigation"), ABSOLUTE_URL_REGEX.test(redirect4.location) && isBrowser && typeof ((_window = window) == null ? void 0 : _window.location) < "u") {
      let url = init.history.createURL(redirect4.location), isDifferentBasename = stripBasename(url.pathname, basename) == null;
      if (window.location.origin !== url.origin || isDifferentBasename) {
        replace ? window.location.replace(redirect4.location) : window.location.assign(redirect4.location);
        return;
      }
    }
    pendingNavigationController = null;
    let redirectHistoryAction = replace === !0 ? Action.Replace : Action.Push, {
      formMethod,
      formAction,
      formEncType,
      formData
    } = state2.navigation;
    !submission && formMethod && formAction && formData && formEncType && (submission = {
      formMethod,
      formAction,
      formEncType,
      formData
    }), redirectPreserveMethodStatusCodes.has(redirect4.status) && submission && isMutationMethod(submission.formMethod) ? await startNavigation(redirectHistoryAction, redirectLocation, {
      submission: _extends({}, submission, {
        formAction: redirect4.location
      }),
      // Preserve this flag across redirects
      preventScrollReset: pendingPreventScrollReset
    }) : isFetchActionRedirect ? await startNavigation(redirectHistoryAction, redirectLocation, {
      overrideNavigation: {
        state: "loading",
        location: redirectLocation,
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0
      },
      fetcherSubmission: submission,
      // Preserve this flag across redirects
      preventScrollReset: pendingPreventScrollReset
    }) : await startNavigation(redirectHistoryAction, redirectLocation, {
      overrideNavigation: {
        state: "loading",
        location: redirectLocation,
        formMethod: submission ? submission.formMethod : void 0,
        formAction: submission ? submission.formAction : void 0,
        formEncType: submission ? submission.formEncType : void 0,
        formData: submission ? submission.formData : void 0
      },
      // Preserve this flag across redirects
      preventScrollReset: pendingPreventScrollReset
    });
  }
  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {
    let results = await Promise.all([...matchesToLoad.map((match) => callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties2, basename)), ...fetchersToLoad.map((f) => f.matches && f.match && f.controller ? callLoaderOrAction("loader", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties2, basename) : {
      type: ResultType.error,
      error: getInternalRouterError(404, {
        pathname: f.path
      })
    })]), loaderResults = results.slice(0, matchesToLoad.length), fetcherResults = results.slice(matchesToLoad.length);
    return await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), !1, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map((f) => f.match), fetcherResults, fetchersToLoad.map((f) => f.controller ? f.controller.signal : null), !0)]), {
      results,
      loaderResults,
      fetcherResults
    };
  }
  function interruptActiveLoads() {
    isRevalidationRequired = !0, cancelledDeferredRoutes.push(...cancelActiveDeferreds()), fetchLoadMatches.forEach((_, key) => {
      fetchControllers.has(key) && (cancelledFetcherLoads.push(key), abortFetcher(key));
    });
  }
  function setFetcherError(key, routeId, error) {
    let boundaryMatch = findNearestBoundary(state.matches, routeId);
    deleteFetcher(key), updateState({
      errors: {
        [boundaryMatch.route.id]: error
      },
      fetchers: new Map(state.fetchers)
    });
  }
  function deleteFetcher(key) {
    fetchControllers.has(key) && abortFetcher(key), fetchLoadMatches.delete(key), fetchReloadIds.delete(key), fetchRedirectIds.delete(key), state.fetchers.delete(key);
  }
  function abortFetcher(key) {
    let controller = fetchControllers.get(key);
    invariant(controller, "Expected fetch controller: " + key), controller.abort(), fetchControllers.delete(key);
  }
  function markFetchersDone(keys) {
    for (let key of keys) {
      let doneFetcher = {
        state: "idle",
        data: getFetcher(key).data,
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0,
        " _hasFetcherDoneAnything ": !0
      };
      state.fetchers.set(key, doneFetcher);
    }
  }
  function markFetchRedirectsDone() {
    let doneKeys = [], updatedFetchers = !1;
    for (let key of fetchRedirectIds) {
      let fetcher = state.fetchers.get(key);
      invariant(fetcher, "Expected fetcher: " + key), fetcher.state === "loading" && (fetchRedirectIds.delete(key), doneKeys.push(key), updatedFetchers = !0);
    }
    return markFetchersDone(doneKeys), updatedFetchers;
  }
  function abortStaleFetchLoads(landedId) {
    let yeetedKeys = [];
    for (let [key, id] of fetchReloadIds)
      if (id < landedId) {
        let fetcher = state.fetchers.get(key);
        invariant(fetcher, "Expected fetcher: " + key), fetcher.state === "loading" && (abortFetcher(key), fetchReloadIds.delete(key), yeetedKeys.push(key));
      }
    return markFetchersDone(yeetedKeys), yeetedKeys.length > 0;
  }
  function getBlocker(key, fn) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    return blockerFunctions.get(key) !== fn && blockerFunctions.set(key, fn), blocker;
  }
  function deleteBlocker(key) {
    state.blockers.delete(key), blockerFunctions.delete(key);
  }
  function updateBlocker(key, newBlocker) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    invariant(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", "Invalid blocker state transition: " + blocker.state + " -> " + newBlocker.state), state.blockers.set(key, newBlocker), updateState({
      blockers: new Map(state.blockers)
    });
  }
  function shouldBlockNavigation(_ref2) {
    let {
      currentLocation,
      nextLocation,
      historyAction
    } = _ref2;
    if (blockerFunctions.size === 0)
      return;
    blockerFunctions.size > 1 && warning(!1, "A router only supports one blocker at a time");
    let entries = Array.from(blockerFunctions.entries()), [blockerKey, blockerFunction] = entries[entries.length - 1], blocker = state.blockers.get(blockerKey);
    if (!(blocker && blocker.state === "proceeding") && blockerFunction({
      currentLocation,
      nextLocation,
      historyAction
    }))
      return blockerKey;
  }
  function cancelActiveDeferreds(predicate) {
    let cancelledRouteIds = [];
    return activeDeferreds.forEach((dfd, routeId) => {
      (!predicate || predicate(routeId)) && (dfd.cancel(), cancelledRouteIds.push(routeId), activeDeferreds.delete(routeId));
    }), cancelledRouteIds;
  }
  function enableScrollRestoration(positions, getPosition, getKey) {
    if (savedScrollPositions2 = positions, getScrollPosition = getPosition, getScrollRestorationKey = getKey || ((location) => location.key), !initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
      initialScrollRestored = !0;
      let y = getSavedScrollPosition(state.location, state.matches);
      y != null && updateState({
        restoreScrollPosition: y
      });
    }
    return () => {
      savedScrollPositions2 = null, getScrollPosition = null, getScrollRestorationKey = null;
    };
  }
  function saveScrollPosition(location, matches) {
    if (savedScrollPositions2 && getScrollRestorationKey && getScrollPosition) {
      let userMatches = matches.map((m) => createUseMatchesMatch(m, state.loaderData)), key = getScrollRestorationKey(location, userMatches) || location.key;
      savedScrollPositions2[key] = getScrollPosition();
    }
  }
  function getSavedScrollPosition(location, matches) {
    if (savedScrollPositions2 && getScrollRestorationKey && getScrollPosition) {
      let userMatches = matches.map((m) => createUseMatchesMatch(m, state.loaderData)), key = getScrollRestorationKey(location, userMatches) || location.key, y = savedScrollPositions2[key];
      if (typeof y == "number")
        return y;
    }
    return null;
  }
  function _internalSetRoutes(newRoutes) {
    manifest = {}, inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties2, void 0, manifest);
  }
  return router = {
    get basename() {
      return basename;
    },
    get state() {
      return state;
    },
    get routes() {
      return dataRoutes;
    },
    initialize,
    subscribe,
    enableScrollRestoration,
    navigate,
    fetch: fetch2,
    revalidate,
    // Passthrough to history-aware createHref used by useHref so we get proper
    // hash-aware URLs in DOM paths
    createHref: (to) => init.history.createHref(to),
    encodeLocation: (to) => init.history.encodeLocation(to),
    getFetcher,
    deleteFetcher,
    dispose,
    getBlocker,
    deleteBlocker,
    _internalFetchControllers: fetchControllers,
    _internalActiveDeferreds: activeDeferreds,
    // TODO: Remove setRoutes, it's temporary to avoid dealing with
    // updating the tree while validating the update algorithm.
    _internalSetRoutes
  }, router;
}
function createStaticHandler(routes2, opts) {
  invariant(routes2.length > 0, "You must provide a non-empty routes array to createStaticHandler");
  let manifest = {}, basename = (opts ? opts.basename : null) || "/", mapRouteProperties2;
  if (opts != null && opts.mapRouteProperties)
    mapRouteProperties2 = opts.mapRouteProperties;
  else if (opts != null && opts.detectErrorBoundary) {
    let detectErrorBoundary = opts.detectErrorBoundary;
    mapRouteProperties2 = (route) => ({
      hasErrorBoundary: detectErrorBoundary(route)
    });
  } else
    mapRouteProperties2 = defaultMapRouteProperties;
  let dataRoutes = convertRoutesToDataRoutes(routes2, mapRouteProperties2, void 0, manifest);
  async function query(request, _temp2) {
    let {
      requestContext
    } = _temp2 === void 0 ? {} : _temp2, url = new URL(request.url), method = request.method, location = createLocation("", createPath(url), null, "default"), matches = matchRoutes(dataRoutes, location, basename);
    if (!isValidMethod(method) && method !== "HEAD") {
      let error = getInternalRouterError(405, {
        method
      }), {
        matches: methodNotAllowedMatches,
        route
      } = getShortCircuitMatches(dataRoutes);
      return {
        basename,
        location,
        matches: methodNotAllowedMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {},
        activeDeferreds: null
      };
    } else if (!matches) {
      let error = getInternalRouterError(404, {
        pathname: location.pathname
      }), {
        matches: notFoundMatches,
        route
      } = getShortCircuitMatches(dataRoutes);
      return {
        basename,
        location,
        matches: notFoundMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {},
        activeDeferreds: null
      };
    }
    let result = await queryImpl(request, location, matches, requestContext);
    return isResponse(result) ? result : _extends({
      location,
      basename
    }, result);
  }
  async function queryRoute(request, _temp3) {
    let {
      routeId,
      requestContext
    } = _temp3 === void 0 ? {} : _temp3, url = new URL(request.url), method = request.method, location = createLocation("", createPath(url), null, "default"), matches = matchRoutes(dataRoutes, location, basename);
    if (!isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS")
      throw getInternalRouterError(405, {
        method
      });
    if (!matches)
      throw getInternalRouterError(404, {
        pathname: location.pathname
      });
    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);
    if (routeId && !match)
      throw getInternalRouterError(403, {
        pathname: location.pathname,
        routeId
      });
    if (!match)
      throw getInternalRouterError(404, {
        pathname: location.pathname
      });
    let result = await queryImpl(request, location, matches, requestContext, match);
    if (isResponse(result))
      return result;
    let error = result.errors ? Object.values(result.errors)[0] : void 0;
    if (error !== void 0)
      throw error;
    if (result.actionData)
      return Object.values(result.actionData)[0];
    if (result.loaderData) {
      var _result$activeDeferre;
      let data = Object.values(result.loaderData)[0];
      return (_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id] && (data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id]), data;
    }
  }
  async function queryImpl(request, location, matches, requestContext, routeMatch) {
    invariant(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
    try {
      if (isMutationMethod(request.method.toLowerCase()))
        return await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);
      let result = await loadRouteData(request, matches, requestContext, routeMatch);
      return isResponse(result) ? result : _extends({}, result, {
        actionData: null,
        actionHeaders: {}
      });
    } catch (e) {
      if (isQueryRouteResponse(e)) {
        if (e.type === ResultType.error && !isRedirectResponse(e.response))
          throw e.response;
        return e.response;
      }
      if (isRedirectResponse(e))
        return e;
      throw e;
    }
  }
  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {
    let result;
    if (!actionMatch.route.action && !actionMatch.route.lazy) {
      let error = getInternalRouterError(405, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: actionMatch.route.id
      });
      if (isRouteRequest)
        throw error;
      result = {
        type: ResultType.error,
        error
      };
    } else if (result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties2, basename, !0, isRouteRequest, requestContext), request.signal.aborted) {
      let method = isRouteRequest ? "queryRoute" : "query";
      throw new Error(method + "() call aborted");
    }
    if (isRedirectResult(result))
      throw new Response(null, {
        status: result.status,
        headers: {
          Location: result.location
        }
      });
    if (isDeferredResult(result)) {
      let error = getInternalRouterError(400, {
        type: "defer-action"
      });
      if (isRouteRequest)
        throw error;
      result = {
        type: ResultType.error,
        error
      };
    }
    if (isRouteRequest) {
      if (isErrorResult(result))
        throw result.error;
      return {
        matches: [actionMatch],
        loaderData: {},
        actionData: {
          [actionMatch.route.id]: result.data
        },
        errors: null,
        // Note: statusCode + headers are unused here since queryRoute will
        // return the raw Response or value
        statusCode: 200,
        loaderHeaders: {},
        actionHeaders: {},
        activeDeferreds: null
      };
    }
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id), context2 = await loadRouteData(request, matches, requestContext, void 0, {
        [boundaryMatch.route.id]: result.error
      });
      return _extends({}, context2, {
        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,
        actionData: null,
        actionHeaders: _extends({}, result.headers ? {
          [actionMatch.route.id]: result.headers
        } : {})
      });
    }
    let loaderRequest = new Request(request.url, {
      headers: request.headers,
      redirect: request.redirect,
      signal: request.signal
    }), context = await loadRouteData(loaderRequest, matches, requestContext);
    return _extends({}, context, result.statusCode ? {
      statusCode: result.statusCode
    } : {}, {
      actionData: {
        [actionMatch.route.id]: result.data
      },
      actionHeaders: _extends({}, result.headers ? {
        [actionMatch.route.id]: result.headers
      } : {})
    });
  }
  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {
    let isRouteRequest = routeMatch != null;
    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy))
      throw getInternalRouterError(400, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: routeMatch == null ? void 0 : routeMatch.route.id
      });
    let matchesToLoad = (routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0])).filter((m) => m.route.loader || m.route.lazy);
    if (matchesToLoad.length === 0)
      return {
        matches,
        // Add a null for all matched routes for proper revalidation on the client
        loaderData: matches.reduce((acc, m) => Object.assign(acc, {
          [m.route.id]: null
        }), {}),
        errors: pendingActionError || null,
        statusCode: 200,
        loaderHeaders: {},
        activeDeferreds: null
      };
    let results = await Promise.all([...matchesToLoad.map((match) => callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties2, basename, !0, isRouteRequest, requestContext))]);
    if (request.signal.aborted) {
      let method = isRouteRequest ? "queryRoute" : "query";
      throw new Error(method + "() call aborted");
    }
    let activeDeferreds = /* @__PURE__ */ new Map(), context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds), executedLoaders = new Set(matchesToLoad.map((match) => match.route.id));
    return matches.forEach((match) => {
      executedLoaders.has(match.route.id) || (context.loaderData[match.route.id] = null);
    }), _extends({}, context, {
      matches,
      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null
    });
  }
  return {
    dataRoutes,
    query,
    queryRoute
  };
}
function getStaticContextFromError(routes2, context, error) {
  return _extends({}, context, {
    statusCode: 500,
    errors: {
      [context._deepestRenderedBoundaryId || routes2[0].id]: error
    }
  });
}
function isSubmissionNavigation(opts) {
  return opts != null && "formData" in opts;
}
function normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {
  let contextualMatches, activeRouteMatch;
  if (fromRouteId != null && relative !== "path") {
    contextualMatches = [];
    for (let match of matches)
      if (contextualMatches.push(match), match.route.id === fromRouteId) {
        activeRouteMatch = match;
        break;
      }
  } else
    contextualMatches = matches, activeRouteMatch = matches[matches.length - 1];
  let path = resolveTo(to || ".", getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === "path");
  return to == null && (path.search = location.search, path.hash = location.hash), (to == null || to === "" || to === ".") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search) && (path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index"), prependBasename && basename !== "/" && (path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname])), createPath(path);
}
function normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {
  if (!opts || !isSubmissionNavigation(opts))
    return {
      path
    };
  if (opts.formMethod && !isValidMethod(opts.formMethod))
    return {
      path,
      error: getInternalRouterError(405, {
        method: opts.formMethod
      })
    };
  let submission;
  if (opts.formData) {
    let formMethod = opts.formMethod || "get";
    if (submission = {
      formMethod: normalizeFormMethod ? formMethod.toUpperCase() : formMethod.toLowerCase(),
      formAction: stripHashFromPath(path),
      formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
      formData: opts.formData
    }, isMutationMethod(submission.formMethod))
      return {
        path,
        submission
      };
  }
  let parsedPath = parsePath(path), searchParams = convertFormDataToSearchParams(opts.formData);
  return isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search) && searchParams.append("index", ""), parsedPath.search = "?" + searchParams, {
    path: createPath(parsedPath),
    submission
  };
}
function getLoaderMatchesUntilBoundary(matches, boundaryId) {
  let boundaryMatches = matches;
  if (boundaryId) {
    let index = matches.findIndex((m) => m.route.id === boundaryId);
    index >= 0 && (boundaryMatches = matches.slice(0, index));
  }
  return boundaryMatches;
}
function getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError) {
  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : void 0, currentUrl = history.createURL(state.location), nextUrl = history.createURL(location), boundaryId = pendingError ? Object.keys(pendingError)[0] : void 0, navigationMatches = getLoaderMatchesUntilBoundary(matches, boundaryId).filter((match, index) => {
    if (match.route.lazy)
      return !0;
    if (match.route.loader == null)
      return !1;
    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some((id) => id === match.route.id))
      return !0;
    let currentRouteMatch = state.matches[index], nextRouteMatch = match;
    return shouldRevalidateLoader(match, _extends({
      currentUrl,
      currentParams: currentRouteMatch.params,
      nextUrl,
      nextParams: nextRouteMatch.params
    }, submission, {
      actionResult,
      defaultShouldRevalidate: (
        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
        isRevalidationRequired || // Clicked the same link, resubmitted a GET form
        currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)
      )
    }));
  }), revalidatingFetchers = [];
  return fetchLoadMatches.forEach((f, key) => {
    if (!matches.some((m) => m.route.id === f.routeId))
      return;
    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);
    if (!fetcherMatches) {
      revalidatingFetchers.push({
        key,
        routeId: f.routeId,
        path: f.path,
        matches: null,
        match: null,
        controller: null
      });
      return;
    }
    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);
    if (cancelledFetcherLoads.includes(key)) {
      revalidatingFetchers.push({
        key,
        routeId: f.routeId,
        path: f.path,
        matches: fetcherMatches,
        match: fetcherMatch,
        controller: new AbortController()
      });
      return;
    }
    shouldRevalidateLoader(fetcherMatch, _extends({
      currentUrl,
      currentParams: state.matches[state.matches.length - 1].params,
      nextUrl,
      nextParams: matches[matches.length - 1].params
    }, submission, {
      actionResult,
      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
      defaultShouldRevalidate: isRevalidationRequired
    })) && revalidatingFetchers.push({
      key,
      routeId: f.routeId,
      path: f.path,
      matches: fetcherMatches,
      match: fetcherMatch,
      controller: new AbortController()
    });
  }), [navigationMatches, revalidatingFetchers];
}
function isNewLoader(currentLoaderData, currentMatch, match) {
  let isNew = (
    // [a] -> [a, b]
    !currentMatch || // [a, b] -> [a, c]
    match.route.id !== currentMatch.route.id
  ), isMissingData = currentLoaderData[match.route.id] === void 0;
  return isNew || isMissingData;
}
function isNewRouteInstance(currentMatch, match) {
  let currentPath = currentMatch.route.path;
  return (
    // param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]
  );
}
function shouldRevalidateLoader(loaderMatch, arg) {
  if (loaderMatch.route.shouldRevalidate) {
    let routeChoice = loaderMatch.route.shouldRevalidate(arg);
    if (typeof routeChoice == "boolean")
      return routeChoice;
  }
  return arg.defaultShouldRevalidate;
}
async function loadLazyRouteModule(route, mapRouteProperties2, manifest) {
  if (!route.lazy)
    return;
  let lazyRoute = await route.lazy();
  if (!route.lazy)
    return;
  let routeToUpdate = manifest[route.id];
  invariant(routeToUpdate, "No route found in manifest");
  let routeUpdates = {};
  for (let lazyRouteProperty in lazyRoute) {
    let isPropertyStaticallyDefined = routeToUpdate[lazyRouteProperty] !== void 0 && // This property isn't static since it should always be updated based
    // on the route updates
    lazyRouteProperty !== "hasErrorBoundary";
    warning(!isPropertyStaticallyDefined, 'Route "' + routeToUpdate.id + '" has a static property "' + lazyRouteProperty + '" defined but its lazy function is also returning a value for this property. ' + ('The lazy route property "' + lazyRouteProperty + '" will be ignored.')), !isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty) && (routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty]);
  }
  Object.assign(routeToUpdate, routeUpdates), Object.assign(routeToUpdate, _extends({}, mapRouteProperties2(routeToUpdate), {
    lazy: void 0
  }));
}
async function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties2, basename, isStaticRequest, isRouteRequest, requestContext) {
  isStaticRequest === void 0 && (isStaticRequest = !1), isRouteRequest === void 0 && (isRouteRequest = !1);
  let resultType, result, onReject, runHandler = (handler) => {
    let reject, abortPromise = new Promise((_, r) => reject = r);
    return onReject = () => reject(), request.signal.addEventListener("abort", onReject), Promise.race([handler({
      request,
      params: match.params,
      context: requestContext
    }), abortPromise]);
  };
  try {
    let handler = match.route[type];
    if (match.route.lazy)
      if (handler)
        result = (await Promise.all([runHandler(handler), loadLazyRouteModule(match.route, mapRouteProperties2, manifest)]))[0];
      else if (await loadLazyRouteModule(match.route, mapRouteProperties2, manifest), handler = match.route[type], handler)
        result = await runHandler(handler);
      else if (type === "action") {
        let url = new URL(request.url), pathname = url.pathname + url.search;
        throw getInternalRouterError(405, {
          method: request.method,
          pathname,
          routeId: match.route.id
        });
      } else
        return {
          type: ResultType.data,
          data: void 0
        };
    else if (handler)
      result = await runHandler(handler);
    else {
      let url = new URL(request.url), pathname = url.pathname + url.search;
      throw getInternalRouterError(404, {
        pathname
      });
    }
    invariant(result !== void 0, "You defined " + (type === "action" ? "an action" : "a loader") + " for route " + ('"' + match.route.id + "\" but didn't return anything from your `" + type + "` ") + "function. Please return a value or `null`.");
  } catch (e) {
    resultType = ResultType.error, result = e;
  } finally {
    onReject && request.signal.removeEventListener("abort", onReject);
  }
  if (isResponse(result)) {
    let status = result.status;
    if (redirectStatusCodes.has(status)) {
      let location = result.headers.get("Location");
      if (invariant(location, "Redirects returned/thrown from loaders/actions must have a Location header"), !ABSOLUTE_URL_REGEX.test(location))
        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, !0, location);
      else if (!isStaticRequest) {
        let currentUrl = new URL(request.url), url = location.startsWith("//") ? new URL(currentUrl.protocol + location) : new URL(location), isSameBasename = stripBasename(url.pathname, basename) != null;
        url.origin === currentUrl.origin && isSameBasename && (location = url.pathname + url.search + url.hash);
      }
      if (isStaticRequest)
        throw result.headers.set("Location", location), result;
      return {
        type: ResultType.redirect,
        status,
        location,
        revalidate: result.headers.get("X-Remix-Revalidate") !== null
      };
    }
    if (isRouteRequest)
      throw {
        type: resultType || ResultType.data,
        response: result
      };
    let data, contentType = result.headers.get("Content-Type");
    return contentType && /\bapplication\/json\b/.test(contentType) ? data = await result.json() : data = await result.text(), resultType === ResultType.error ? {
      type: resultType,
      error: new ErrorResponse(status, result.statusText, data),
      headers: result.headers
    } : {
      type: ResultType.data,
      data,
      statusCode: result.status,
      headers: result.headers
    };
  }
  if (resultType === ResultType.error)
    return {
      type: resultType,
      error: result
    };
  if (isDeferredData(result)) {
    var _result$init, _result$init2;
    return {
      type: ResultType.deferred,
      deferredData: result,
      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,
      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)
    };
  }
  return {
    type: ResultType.data,
    data: result
  };
}
function createClientSideRequest(history, location, signal, submission) {
  let url = history.createURL(stripHashFromPath(location)).toString(), init = {
    signal
  };
  if (submission && isMutationMethod(submission.formMethod)) {
    let {
      formMethod,
      formEncType,
      formData
    } = submission;
    init.method = formMethod.toUpperCase(), init.body = formEncType === "application/x-www-form-urlencoded" ? convertFormDataToSearchParams(formData) : formData;
  }
  return new Request(url, init);
}
function convertFormDataToSearchParams(formData) {
  let searchParams = new URLSearchParams();
  for (let [key, value] of formData.entries())
    searchParams.append(key, value instanceof File ? value.name : value);
  return searchParams;
}
function processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {
  let loaderData = {}, errors = null, statusCode, foundError = !1, loaderHeaders = {};
  return results.forEach((result, index) => {
    let id = matchesToLoad[index].route.id;
    if (invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData"), isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, id), error = result.error;
      pendingError && (error = Object.values(pendingError)[0], pendingError = void 0), errors = errors || {}, errors[boundaryMatch.route.id] == null && (errors[boundaryMatch.route.id] = error), loaderData[id] = void 0, foundError || (foundError = !0, statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500), result.headers && (loaderHeaders[id] = result.headers);
    } else
      isDeferredResult(result) ? (activeDeferreds.set(id, result.deferredData), loaderData[id] = result.deferredData.data) : loaderData[id] = result.data, result.statusCode != null && result.statusCode !== 200 && !foundError && (statusCode = result.statusCode), result.headers && (loaderHeaders[id] = result.headers);
  }), pendingError && (errors = pendingError, loaderData[Object.keys(pendingError)[0]] = void 0), {
    loaderData,
    errors,
    statusCode: statusCode || 200,
    loaderHeaders
  };
}
function processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {
  let {
    loaderData,
    errors
  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);
  for (let index = 0; index < revalidatingFetchers.length; index++) {
    let {
      key,
      match,
      controller
    } = revalidatingFetchers[index];
    invariant(fetcherResults !== void 0 && fetcherResults[index] !== void 0, "Did not find corresponding fetcher result");
    let result = fetcherResults[index];
    if (!(controller && controller.signal.aborted))
      if (isErrorResult(result)) {
        let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);
        errors && errors[boundaryMatch.route.id] || (errors = _extends({}, errors, {
          [boundaryMatch.route.id]: result.error
        })), state.fetchers.delete(key);
      } else if (isRedirectResult(result))
        invariant(!1, "Unhandled fetcher revalidation redirect");
      else if (isDeferredResult(result))
        invariant(!1, "Unhandled fetcher deferred data");
      else {
        let doneFetcher = {
          state: "idle",
          data: result.data,
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0,
          " _hasFetcherDoneAnything ": !0
        };
        state.fetchers.set(key, doneFetcher);
      }
  }
  return {
    loaderData,
    errors
  };
}
function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
  let mergedLoaderData = _extends({}, newLoaderData);
  for (let match of matches) {
    let id = match.route.id;
    if (newLoaderData.hasOwnProperty(id) ? newLoaderData[id] !== void 0 && (mergedLoaderData[id] = newLoaderData[id]) : loaderData[id] !== void 0 && match.route.loader && (mergedLoaderData[id] = loaderData[id]), errors && errors.hasOwnProperty(id))
      break;
  }
  return mergedLoaderData;
}
function findNearestBoundary(matches, routeId) {
  return (routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches]).reverse().find((m) => m.route.hasErrorBoundary === !0) || matches[0];
}
function getShortCircuitMatches(routes2) {
  let route = routes2.find((r) => r.index || !r.path || r.path === "/") || {
    id: "__shim-error-route__"
  };
  return {
    matches: [{
      params: {},
      pathname: "",
      pathnameBase: "",
      route
    }],
    route
  };
}
function getInternalRouterError(status, _temp4) {
  let {
    pathname,
    routeId,
    method,
    type
  } = _temp4 === void 0 ? {} : _temp4, statusText = "Unknown Server Error", errorMessage = "Unknown @remix-run/router error";
  return status === 400 ? (statusText = "Bad Request", method && pathname && routeId ? errorMessage = "You made a " + method + ' request to "' + pathname + '" but ' + ('did not provide a `loader` for route "' + routeId + '", ') + "so there is no way to handle the request." : type === "defer-action" && (errorMessage = "defer() is not supported in actions")) : status === 403 ? (statusText = "Forbidden", errorMessage = 'Route "' + routeId + '" does not match URL "' + pathname + '"') : status === 404 ? (statusText = "Not Found", errorMessage = 'No route matches URL "' + pathname + '"') : status === 405 && (statusText = "Method Not Allowed", method && pathname && routeId ? errorMessage = "You made a " + method.toUpperCase() + ' request to "' + pathname + '" but ' + ('did not provide an `action` for route "' + routeId + '", ') + "so there is no way to handle the request." : method && (errorMessage = 'Invalid request method "' + method.toUpperCase() + '"')), new ErrorResponse(status || 500, statusText, new Error(errorMessage), !0);
}
function findRedirect(results) {
  for (let i = results.length - 1; i >= 0; i--) {
    let result = results[i];
    if (isRedirectResult(result))
      return result;
  }
}
function stripHashFromPath(path) {
  let parsedPath = typeof path == "string" ? parsePath(path) : path;
  return createPath(_extends({}, parsedPath, {
    hash: ""
  }));
}
function isHashChangeOnly(a, b) {
  return a.pathname !== b.pathname || a.search !== b.search ? !1 : a.hash === "" ? b.hash !== "" : a.hash === b.hash ? !0 : b.hash !== "";
}
function isDeferredResult(result) {
  return result.type === ResultType.deferred;
}
function isErrorResult(result) {
  return result.type === ResultType.error;
}
function isRedirectResult(result) {
  return (result && result.type) === ResultType.redirect;
}
function isDeferredData(value) {
  let deferred = value;
  return deferred && typeof deferred == "object" && typeof deferred.data == "object" && typeof deferred.subscribe == "function" && typeof deferred.cancel == "function" && typeof deferred.resolveData == "function";
}
function isResponse(value) {
  return value != null && typeof value.status == "number" && typeof value.statusText == "string" && typeof value.headers == "object" && typeof value.body < "u";
}
function isRedirectResponse(result) {
  if (!isResponse(result))
    return !1;
  let status = result.status, location = result.headers.get("Location");
  return status >= 300 && status <= 399 && location != null;
}
function isQueryRouteResponse(obj) {
  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);
}
function isValidMethod(method) {
  return validRequestMethods.has(method.toLowerCase());
}
function isMutationMethod(method) {
  return validMutationMethods.has(method.toLowerCase());
}
async function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {
  for (let index = 0; index < results.length; index++) {
    let result = results[index], match = matchesToLoad[index];
    if (!match)
      continue;
    let currentMatch = currentMatches.find((m) => m.route.id === match.route.id), isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== void 0;
    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {
      let signal = signals[index];
      invariant(signal, "Expected an AbortSignal for revalidating fetcher deferred result"), await resolveDeferredData(result, signal, isFetcher).then((result2) => {
        result2 && (results[index] = result2 || results[index]);
      });
    }
  }
}
async function resolveDeferredData(result, signal, unwrap) {
  if (unwrap === void 0 && (unwrap = !1), !await result.deferredData.resolveData(signal)) {
    if (unwrap)
      try {
        return {
          type: ResultType.data,
          data: result.deferredData.unwrappedData
        };
      } catch (e) {
        return {
          type: ResultType.error,
          error: e
        };
      }
    return {
      type: ResultType.data,
      data: result.deferredData.data
    };
  }
}
function hasNakedIndexQuery(search) {
  return new URLSearchParams(search).getAll("index").some((v) => v === "");
}
function createUseMatchesMatch(match, loaderData) {
  let {
    route,
    pathname,
    params
  } = match;
  return {
    id: route.id,
    pathname,
    params,
    data: loaderData[route.id],
    handle: route.handle
  };
}
function getTargetMatch(matches, location) {
  let search = typeof location == "string" ? parsePath(location).search : location.search;
  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || ""))
    return matches[matches.length - 1];
  let pathMatches = getPathContributingMatches(matches);
  return pathMatches[pathMatches.length - 1];
}
var Action, PopStateEventType, ResultType, immutableRouteKeys, paramRe, dynamicSegmentValue, indexRouteValue, emptySegmentValue, staticSegmentValue, splatPenalty, isSplat, joinPaths, normalizePathname, normalizeSearch, normalizeHash, json, AbortedDeferredError, DeferredData, defer, redirect, ErrorResponse, validMutationMethodsArr, validMutationMethods, validRequestMethodsArr, validRequestMethods, redirectStatusCodes, redirectPreserveMethodStatusCodes, IDLE_NAVIGATION, IDLE_FETCHER, IDLE_BLOCKER, ABSOLUTE_URL_REGEX, isBrowser, isServer, defaultMapRouteProperties, UNSAFE_DEFERRED_SYMBOL, init_router = __esm({
  "node_modules/@remix-run/router/dist/router.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    (function(Action2) {
      Action2.Pop = "POP", Action2.Push = "PUSH", Action2.Replace = "REPLACE";
    })(Action || (Action = {}));
    PopStateEventType = "popstate";
    (function(ResultType2) {
      ResultType2.data = "data", ResultType2.deferred = "deferred", ResultType2.redirect = "redirect", ResultType2.error = "error";
    })(ResultType || (ResultType = {}));
    immutableRouteKeys = /* @__PURE__ */ new Set(["lazy", "caseSensitive", "path", "id", "index", "children"]);
    paramRe = /^:\w+$/, dynamicSegmentValue = 3, indexRouteValue = 2, emptySegmentValue = 1, staticSegmentValue = 10, splatPenalty = -2, isSplat = (s) => s === "*";
    joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/"), normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/"), normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search, normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash, json = function(data, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init, headers = new Headers(responseInit.headers);
      return headers.has("Content-Type") || headers.set("Content-Type", "application/json; charset=utf-8"), new Response(JSON.stringify(data), _extends({}, responseInit, {
        headers
      }));
    }, AbortedDeferredError = class extends Error {
    }, DeferredData = class {
      constructor(data, responseInit) {
        this.pendingKeysSet = /* @__PURE__ */ new Set(), this.subscribers = /* @__PURE__ */ new Set(), this.deferredKeys = [], invariant(data && typeof data == "object" && !Array.isArray(data), "defer() only accepts plain objects");
        let reject;
        this.abortPromise = new Promise((_, r) => reject = r), this.controller = new AbortController();
        let onAbort = () => reject(new AbortedDeferredError("Deferred data aborted"));
        this.unlistenAbortSignal = () => this.controller.signal.removeEventListener("abort", onAbort), this.controller.signal.addEventListener("abort", onAbort), this.data = Object.entries(data).reduce((acc, _ref) => {
          let [key, value] = _ref;
          return Object.assign(acc, {
            [key]: this.trackPromise(key, value)
          });
        }, {}), this.done && this.unlistenAbortSignal(), this.init = responseInit;
      }
      trackPromise(key, value) {
        if (!(value instanceof Promise))
          return value;
        this.deferredKeys.push(key), this.pendingKeysSet.add(key);
        let promise = Promise.race([value, this.abortPromise]).then((data) => this.onSettle(promise, key, null, data), (error) => this.onSettle(promise, key, error));
        return promise.catch(() => {
        }), Object.defineProperty(promise, "_tracked", {
          get: () => !0
        }), promise;
      }
      onSettle(promise, key, error, data) {
        return this.controller.signal.aborted && error instanceof AbortedDeferredError ? (this.unlistenAbortSignal(), Object.defineProperty(promise, "_error", {
          get: () => error
        }), Promise.reject(error)) : (this.pendingKeysSet.delete(key), this.done && this.unlistenAbortSignal(), error ? (Object.defineProperty(promise, "_error", {
          get: () => error
        }), this.emit(!1, key), Promise.reject(error)) : (Object.defineProperty(promise, "_data", {
          get: () => data
        }), this.emit(!1, key), data));
      }
      emit(aborted, settledKey) {
        this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));
      }
      subscribe(fn) {
        return this.subscribers.add(fn), () => this.subscribers.delete(fn);
      }
      cancel() {
        this.controller.abort(), this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k)), this.emit(!0);
      }
      async resolveData(signal) {
        let aborted = !1;
        if (!this.done) {
          let onAbort = () => this.cancel();
          signal.addEventListener("abort", onAbort), aborted = await new Promise((resolve) => {
            this.subscribe((aborted2) => {
              signal.removeEventListener("abort", onAbort), (aborted2 || this.done) && resolve(aborted2);
            });
          });
        }
        return aborted;
      }
      get done() {
        return this.pendingKeysSet.size === 0;
      }
      get unwrappedData() {
        return invariant(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds"), Object.entries(this.data).reduce((acc, _ref2) => {
          let [key, value] = _ref2;
          return Object.assign(acc, {
            [key]: unwrapTrackedPromise(value)
          });
        }, {});
      }
      get pendingKeys() {
        return Array.from(this.pendingKeysSet);
      }
    };
    defer = function(data, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init;
      return new DeferredData(data, responseInit);
    }, redirect = function(url, init) {
      init === void 0 && (init = 302);
      let responseInit = init;
      typeof responseInit == "number" ? responseInit = {
        status: responseInit
      } : typeof responseInit.status > "u" && (responseInit.status = 302);
      let headers = new Headers(responseInit.headers);
      return headers.set("Location", url), new Response(null, _extends({}, responseInit, {
        headers
      }));
    }, ErrorResponse = class {
      constructor(status, statusText, data, internal) {
        internal === void 0 && (internal = !1), this.status = status, this.statusText = statusText || "", this.internal = internal, data instanceof Error ? (this.data = data.toString(), this.error = data) : this.data = data;
      }
    };
    validMutationMethodsArr = ["post", "put", "patch", "delete"], validMutationMethods = new Set(validMutationMethodsArr), validRequestMethodsArr = ["get", ...validMutationMethodsArr], validRequestMethods = new Set(validRequestMethodsArr), redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]), redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]), IDLE_NAVIGATION = {
      state: "idle",
      location: void 0,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0
    }, IDLE_FETCHER = {
      state: "idle",
      data: void 0,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0
    }, IDLE_BLOCKER = {
      state: "unblocked",
      proceed: void 0,
      reset: void 0,
      location: void 0
    }, ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, isBrowser = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", isServer = !isBrowser, defaultMapRouteProperties = (route) => ({
      hasErrorBoundary: Boolean(route.hasErrorBoundary)
    });
    UNSAFE_DEFERRED_SYMBOL = Symbol("deferred");
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/mode.js
function isServerMode(value) {
  return value === ServerMode.Development || value === ServerMode.Production || value === ServerMode.Test;
}
var ServerMode, init_mode = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/mode.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    ServerMode = /* @__PURE__ */ function(ServerMode2) {
      return ServerMode2.Development = "development", ServerMode2.Production = "production", ServerMode2.Test = "test", ServerMode2;
    }({});
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/errors.js
function sanitizeError(error, serverMode) {
  if (error instanceof Error && serverMode !== ServerMode.Development) {
    let sanitized = new Error("Unexpected Server Error");
    return sanitized.stack = void 0, sanitized;
  }
  return error;
}
function sanitizeErrors(errors, serverMode) {
  return Object.entries(errors).reduce((acc, [routeId, error]) => Object.assign(acc, {
    [routeId]: sanitizeError(error, serverMode)
  }), {});
}
function serializeError(error, serverMode) {
  let sanitized = sanitizeError(error, serverMode);
  return {
    message: sanitized.message,
    stack: sanitized.stack
  };
}
function serializeErrors(errors, serverMode) {
  if (!errors)
    return null;
  let entries = Object.entries(errors), serialized = {};
  for (let [key, val] of entries)
    if (isRouteErrorResponse(val))
      serialized[key] = {
        ...val,
        __type: "RouteErrorResponse"
      };
    else if (val instanceof Error) {
      let sanitized = sanitizeError(val, serverMode);
      serialized[key] = {
        message: sanitized.message,
        stack: sanitized.stack,
        __type: "Error"
      };
    } else
      serialized[key] = val;
  return serialized;
}
var init_errors = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/errors.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_router();
    init_mode();
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/responses.js
function isDeferredData2(value) {
  let deferred = value;
  return deferred && typeof deferred == "object" && typeof deferred.data == "object" && typeof deferred.subscribe == "function" && typeof deferred.cancel == "function" && typeof deferred.resolveData == "function";
}
function isResponse2(value) {
  return value != null && typeof value.status == "number" && typeof value.statusText == "string" && typeof value.headers == "object" && typeof value.body < "u";
}
function isRedirectStatusCode(statusCode) {
  return redirectStatusCodes2.has(statusCode);
}
function isRedirectResponse2(response) {
  return isRedirectStatusCode(response.status);
}
function isTrackedPromise2(value) {
  return value != null && typeof value.then == "function" && value._tracked === !0;
}
function createDeferredReadableStream(deferredData, signal, serverMode) {
  let encoder = new TextEncoder();
  return new ReadableStream({
    async start(controller) {
      let criticalData = {}, preresolvedKeys = [];
      for (let [key, value] of Object.entries(deferredData.data))
        isTrackedPromise2(value) ? (criticalData[key] = `${DEFERRED_VALUE_PLACEHOLDER_PREFIX}${key}`, (typeof value._data < "u" || typeof value._error < "u") && preresolvedKeys.push(key)) : criticalData[key] = value;
      controller.enqueue(encoder.encode(JSON.stringify(criticalData) + `

`));
      for (let preresolvedKey of preresolvedKeys)
        enqueueTrackedPromise(controller, encoder, preresolvedKey, deferredData.data[preresolvedKey], serverMode);
      let unsubscribe = deferredData.subscribe((aborted, settledKey) => {
        settledKey && enqueueTrackedPromise(controller, encoder, settledKey, deferredData.data[settledKey], serverMode);
      });
      await deferredData.resolveData(signal), unsubscribe(), controller.close();
    }
  });
}
function enqueueTrackedPromise(controller, encoder, settledKey, promise, serverMode) {
  "_error" in promise ? controller.enqueue(encoder.encode("error:" + JSON.stringify({
    [settledKey]: promise._error instanceof Error ? serializeError(promise._error, serverMode) : promise._error
  }) + `

`)) : controller.enqueue(encoder.encode("data:" + JSON.stringify({
    [settledKey]: promise._data ?? null
  }) + `

`));
}
var json3, defer3, redirect3, redirectStatusCodes2, DEFERRED_VALUE_PLACEHOLDER_PREFIX, init_responses = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/responses.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_router();
    init_errors();
    json3 = (data, init = {}) => json(data, init), defer3 = (data, init = {}) => defer(data, init), redirect3 = (url, init = 302) => redirect(url, init);
    redirectStatusCodes2 = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);
    DEFERRED_VALUE_PLACEHOLDER_PREFIX = "__deferred_promise:";
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/entry.js
function createEntryRouteModules(manifest) {
  return Object.keys(manifest).reduce((memo, routeId) => (memo[routeId] = manifest[routeId].module, memo), {});
}
var init_entry = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/entry.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
  }
});

// node_modules/set-cookie-parser/lib/set-cookie.js
var require_set_cookie = __commonJS({
  "node_modules/set-cookie-parser/lib/set-cookie.js"(exports2, module) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    var defaultParseOptions = {
      decodeValues: !0,
      map: !1,
      silent: !1
    };
    function isNonEmptyString(str) {
      return typeof str == "string" && !!str.trim();
    }
    function parseString(setCookieValue, options2) {
      var parts = setCookieValue.split(";").filter(isNonEmptyString), nameValuePairStr = parts.shift(), parsed = parseNameValuePair(nameValuePairStr), name = parsed.name, value = parsed.value;
      options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;
      try {
        value = options2.decodeValues ? decodeURIComponent(value) : value;
      } catch (e) {
        console.error(
          "set-cookie-parser encountered an error while decoding a cookie with value '" + value + "'. Set options.decodeValues to false to disable this feature.",
          e
        );
      }
      var cookie = {
        name,
        value
      };
      return parts.forEach(function(part) {
        var sides = part.split("="), key = sides.shift().trimLeft().toLowerCase(), value2 = sides.join("=");
        key === "expires" ? cookie.expires = new Date(value2) : key === "max-age" ? cookie.maxAge = parseInt(value2, 10) : key === "secure" ? cookie.secure = !0 : key === "httponly" ? cookie.httpOnly = !0 : key === "samesite" ? cookie.sameSite = value2 : cookie[key] = value2;
      }), cookie;
    }
    function parseNameValuePair(nameValuePairStr) {
      var name = "", value = "", nameValueArr = nameValuePairStr.split("=");
      return nameValueArr.length > 1 ? (name = nameValueArr.shift(), value = nameValueArr.join("=")) : value = nameValuePairStr, { name, value };
    }
    function parse2(input, options2) {
      if (options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions, !input)
        return options2.map ? {} : [];
      if (input.headers)
        if (typeof input.headers.getSetCookie == "function")
          input = input.headers.getSetCookie();
        else if (input.headers["set-cookie"])
          input = input.headers["set-cookie"];
        else {
          var sch = input.headers[Object.keys(input.headers).find(function(key) {
            return key.toLowerCase() === "set-cookie";
          })];
          !sch && input.headers.cookie && !options2.silent && console.warn(
            "Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning."
          ), input = sch;
        }
      if (Array.isArray(input) || (input = [input]), options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions, options2.map) {
        var cookies = {};
        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {
          var cookie = parseString(str, options2);
          return cookies2[cookie.name] = cookie, cookies2;
        }, cookies);
      } else
        return input.filter(isNonEmptyString).map(function(str) {
          return parseString(str, options2);
        });
    }
    function splitCookiesString2(cookiesString) {
      if (Array.isArray(cookiesString))
        return cookiesString;
      if (typeof cookiesString != "string")
        return [];
      var cookiesStrings = [], pos = 0, start, ch, lastComma, nextStart, cookiesSeparatorFound;
      function skipWhitespace() {
        for (; pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos)); )
          pos += 1;
        return pos < cookiesString.length;
      }
      function notSpecialChar() {
        return ch = cookiesString.charAt(pos), ch !== "=" && ch !== ";" && ch !== ",";
      }
      for (; pos < cookiesString.length; ) {
        for (start = pos, cookiesSeparatorFound = !1; skipWhitespace(); )
          if (ch = cookiesString.charAt(pos), ch === ",") {
            for (lastComma = pos, pos += 1, skipWhitespace(), nextStart = pos; pos < cookiesString.length && notSpecialChar(); )
              pos += 1;
            pos < cookiesString.length && cookiesString.charAt(pos) === "=" ? (cookiesSeparatorFound = !0, pos = nextStart, cookiesStrings.push(cookiesString.substring(start, lastComma)), start = pos) : pos = lastComma + 1;
          } else
            pos += 1;
        (!cookiesSeparatorFound || pos >= cookiesString.length) && cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
      }
      return cookiesStrings;
    }
    module.exports = parse2;
    module.exports.parse = parse2;
    module.exports.parseString = parseString;
    module.exports.splitCookiesString = splitCookiesString2;
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/headers.js
function getDocumentHeadersRR(build, context) {
  return (context.errors ? context.matches.slice(0, context.matches.findIndex((m) => context.errors[m.route.id]) + 1) : context.matches).reduce((parentHeaders, match) => {
    let {
      id
    } = match.route, routeModule = build.routes[id].module, loaderHeaders = context.loaderHeaders[id] || new Headers(), actionHeaders = context.actionHeaders[id] || new Headers(), headers = new Headers(routeModule.headers ? typeof routeModule.headers == "function" ? routeModule.headers({
      loaderHeaders,
      parentHeaders,
      actionHeaders
    }) : routeModule.headers : void 0);
    return prependCookies(actionHeaders, headers), prependCookies(loaderHeaders, headers), prependCookies(parentHeaders, headers), headers;
  }, new Headers());
}
function prependCookies(parentHeaders, childHeaders) {
  let parentSetCookieString = parentHeaders.get("Set-Cookie");
  parentSetCookieString && (0, import_set_cookie_parser.splitCookiesString)(parentSetCookieString).forEach((cookie) => {
    childHeaders.append("Set-Cookie", cookie);
  });
}
var import_set_cookie_parser, init_headers = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/headers.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    import_set_cookie_parser = __toESM(require_set_cookie());
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/invariant.js
function invariant2(value, message) {
  if (value === !1 || value === null || typeof value > "u")
    throw console.error("The following error is a bug in Remix; please open an issue! https://github.com/remix-run/remix/issues/new"), new Error(message);
}
var init_invariant = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/invariant.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/routeMatching.js
function matchServerRoutes(routes2, pathname) {
  let matches = matchRoutes(routes2, pathname);
  return matches ? matches.map((match) => ({
    params: match.params,
    pathname: match.pathname,
    route: match.route
  })) : null;
}
var init_routeMatching = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/routeMatching.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_router();
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/data.js
async function callRouteActionRR({
  loadContext,
  action,
  params,
  request,
  routeId
}) {
  let result = await action({
    request: stripDataParam(stripIndexParam(request)),
    context: loadContext,
    params
  });
  if (result === void 0)
    throw new Error(`You defined an action for route "${routeId}" but didn't return anything from your \`action\` function. Please return a value or \`null\`.`);
  return isResponse2(result) ? result : json3(result);
}
async function callRouteLoaderRR({
  loadContext,
  loader: loader8,
  params,
  request,
  routeId
}) {
  let result = await loader8({
    request: stripDataParam(stripIndexParam(request)),
    context: loadContext,
    params
  });
  if (result === void 0)
    throw new Error(`You defined a loader for route "${routeId}" but didn't return anything from your \`loader\` function. Please return a value or \`null\`.`);
  return isDeferredData2(result) ? result.init && isRedirectStatusCode(result.init.status || 200) ? redirect3(new Headers(result.init.headers).get("Location"), result.init) : result : isResponse2(result) ? result : json3(result);
}
function stripIndexParam(request) {
  let url = new URL(request.url), indexValues = url.searchParams.getAll("index");
  url.searchParams.delete("index");
  let indexValuesToKeep = [];
  for (let indexValue of indexValues)
    indexValue && indexValuesToKeep.push(indexValue);
  for (let toKeep of indexValuesToKeep)
    url.searchParams.append("index", toKeep);
  return new Request(url.href, request);
}
function stripDataParam(request) {
  let url = new URL(request.url);
  return url.searchParams.delete("_data"), new Request(url.href, request);
}
var init_data = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/data.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_responses();
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/routes.js
function groupRoutesByParentId(manifest) {
  let routes2 = {};
  return Object.values(manifest).forEach((route) => {
    let parentId = route.parentId || "";
    routes2[parentId] || (routes2[parentId] = []), routes2[parentId].push(route);
  }), routes2;
}
function createRoutes(manifest, parentId = "", routesByParentId = groupRoutesByParentId(manifest)) {
  return (routesByParentId[parentId] || []).map((route) => ({
    ...route,
    children: createRoutes(manifest, route.id, routesByParentId)
  }));
}
function createStaticHandlerDataRoutes(manifest, future2, parentId = "", routesByParentId = groupRoutesByParentId(manifest)) {
  return (routesByParentId[parentId] || []).map((route) => {
    let commonRoute = {
      // Always include root due to default boundaries
      hasErrorBoundary: future2.v2_errorBoundary === !0 ? route.id === "root" || route.module.ErrorBoundary != null : route.id === "root" || route.module.CatchBoundary != null || route.module.ErrorBoundary != null,
      id: route.id,
      path: route.path,
      loader: route.module.loader ? (args) => callRouteLoaderRR({
        request: args.request,
        params: args.params,
        loadContext: args.context,
        loader: route.module.loader,
        routeId: route.id
      }) : void 0,
      action: route.module.action ? (args) => callRouteActionRR({
        request: args.request,
        params: args.params,
        loadContext: args.context,
        action: route.module.action,
        routeId: route.id
      }) : void 0,
      handle: route.module.handle
    };
    return route.index ? {
      index: !0,
      ...commonRoute
    } : {
      caseSensitive: route.caseSensitive,
      children: createStaticHandlerDataRoutes(manifest, future2, route.id, routesByParentId),
      ...commonRoute
    };
  });
}
var init_routes = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/routes.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_data();
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/markup.js
function escapeHtml(html) {
  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);
}
var ESCAPE_LOOKUP, ESCAPE_REGEX, init_markup = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/markup.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    ESCAPE_LOOKUP = {
      "&": "\\u0026",
      ">": "\\u003e",
      "<": "\\u003c",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    }, ESCAPE_REGEX = /[&><\u2028\u2029]/g;
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/serverHandoff.js
function createServerHandoffString(serverHandoff) {
  return escapeHtml(JSON.stringify(serverHandoff));
}
var init_serverHandoff = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/serverHandoff.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_markup();
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/server.js
async function handleDataRequestRR(serverMode, staticHandler, routeId, request, loadContext) {
  try {
    let response = await staticHandler.queryRoute(request, {
      routeId,
      requestContext: loadContext
    });
    if (isRedirectResponse2(response)) {
      let headers = new Headers(response.headers);
      return headers.set("X-Remix-Redirect", headers.get("Location")), headers.set("X-Remix-Status", response.status), headers.delete("Location"), response.headers.get("Set-Cookie") !== null && headers.set("X-Remix-Revalidate", "yes"), new Response(null, {
        status: 204,
        headers
      });
    }
    if (UNSAFE_DEFERRED_SYMBOL in response) {
      let deferredData = response[UNSAFE_DEFERRED_SYMBOL], body = createDeferredReadableStream(deferredData, request.signal, serverMode), init = deferredData.init || {}, headers = new Headers(init.headers);
      return headers.set("Content-Type", "text/remix-deferred"), init.headers = headers, new Response(body, init);
    }
    return response;
  } catch (error) {
    if (isResponse2(error))
      return error.headers.set("X-Remix-Catch", "yes"), error;
    let status = isRouteErrorResponse(error) ? error.status : 500, errorInstance = isRouteErrorResponse(error) && error.error ? error.error : error instanceof Error ? error : new Error("Unexpected Server Error");
    return logServerErrorIfNotAborted(errorInstance, request, serverMode), json3(serializeError(errorInstance, serverMode), {
      status,
      headers: {
        "X-Remix-Error": "yes"
      }
    });
  }
}
function findParentBoundary(routes2, routeId, error) {
  let route = routes2[routeId] || routes2.root, isCatch = isRouteErrorResponse(error) && (!error.error || error.status === 404);
  return isCatch && route.module.CatchBoundary || !isCatch && route.module.ErrorBoundary || !route.parentId ? route.id : findParentBoundary(routes2, route.parentId, error);
}
function differentiateCatchVersusErrorBoundaries(build, context) {
  if (!context.errors)
    return;
  let errors = {};
  for (let routeId of Object.keys(context.errors)) {
    let error = context.errors[routeId], handlingRouteId = findParentBoundary(build.routes, routeId, error);
    errors[handlingRouteId] = error;
  }
  context.errors = errors;
}
async function handleDocumentRequestRR(serverMode, build, staticHandler, request, loadContext) {
  let context;
  try {
    context = await staticHandler.query(request, {
      requestContext: loadContext
    });
  } catch (error) {
    return logServerErrorIfNotAborted(error, request, serverMode), new Response(null, {
      status: 500
    });
  }
  if (isResponse2(context))
    return context;
  context.errors && (context.errors = sanitizeErrors(context.errors, serverMode)), build.future.v2_errorBoundary !== !0 && differentiateCatchVersusErrorBoundaries(build, context);
  let headers = getDocumentHeadersRR(build, context), entryContext = {
    manifest: build.assets,
    routeModules: createEntryRouteModules(build.routes),
    staticHandlerContext: context,
    serverHandoffString: createServerHandoffString({
      state: {
        loaderData: context.loaderData,
        actionData: context.actionData,
        errors: serializeErrors(context.errors, serverMode)
      },
      future: build.future,
      dev: build.dev
    }),
    future: build.future
  }, handleDocumentRequestFunction = build.entry.module.default;
  try {
    return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);
  } catch (error) {
    context = getStaticContextFromError(staticHandler.dataRoutes, context, error), context.errors && (context.errors = sanitizeErrors(context.errors, serverMode)), build.future.v2_errorBoundary !== !0 && differentiateCatchVersusErrorBoundaries(build, context), entryContext = {
      ...entryContext,
      staticHandlerContext: context,
      serverHandoffString: createServerHandoffString({
        state: {
          loaderData: context.loaderData,
          actionData: context.actionData,
          errors: serializeErrors(context.errors, serverMode)
        },
        future: build.future
      })
    };
    try {
      return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);
    } catch (error2) {
      return logServerErrorIfNotAborted(error2, request, serverMode), returnLastResortErrorResponse(error2, serverMode);
    }
  }
}
async function handleResourceRequestRR(serverMode, staticHandler, routeId, request, loadContext) {
  try {
    let response = await staticHandler.queryRoute(request, {
      routeId,
      requestContext: loadContext
    });
    return invariant2(isResponse2(response), "Expected a Response to be returned from queryRoute"), response;
  } catch (error) {
    return isResponse2(error) ? (error.headers.set("X-Remix-Catch", "yes"), error) : (logServerErrorIfNotAborted(error, request, serverMode), returnLastResortErrorResponse(error, serverMode));
  }
}
function logServerErrorIfNotAborted(error, request, serverMode) {
  serverMode !== ServerMode.Test && !request.signal.aborted && console.error(error);
}
function returnLastResortErrorResponse(error, serverMode) {
  let message = "Unexpected Server Error";
  return serverMode !== ServerMode.Production && (message += `

${String(error)}`), new Response(message, {
    status: 500,
    headers: {
      "Content-Type": "text/plain"
    }
  });
}
var createRequestHandler, init_server = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/server.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_router();
    init_entry();
    init_errors();
    init_headers();
    init_invariant();
    init_mode();
    init_routeMatching();
    init_routes();
    init_responses();
    init_serverHandoff();
    createRequestHandler = (build, mode) => {
      let routes2 = createRoutes(build.routes), dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future), serverMode = isServerMode(mode) ? mode : ServerMode.Production, staticHandler = createStaticHandler(dataRoutes);
      return async function(request, loadContext = {}) {
        let url = new URL(request.url), matches = matchServerRoutes(routes2, url.pathname), response;
        if (url.searchParams.has("_data")) {
          let routeId = url.searchParams.get("_data");
          if (response = await handleDataRequestRR(serverMode, staticHandler, routeId, request, loadContext), build.entry.module.handleDataRequest) {
            let match = matches.find((match2) => match2.route.id == routeId);
            response = await build.entry.module.handleDataRequest(response, {
              context: loadContext,
              params: match ? match.params : {},
              request
            });
          }
        } else
          matches && matches[matches.length - 1].route.module.default == null ? response = await handleResourceRequestRR(serverMode, staticHandler, matches.slice(-1)[0].route.id, request, loadContext) : response = await handleDocumentRequestRR(serverMode, build, staticHandler, request, loadContext);
        return request.method === "HEAD" ? new Response(null, {
          headers: response.headers,
          status: response.status,
          statusText: response.statusText
        }) : response;
      };
    };
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/sessions.js
function flash(name) {
  return `__flash_${name}__`;
}
function warnOnceAboutSigningSessionCookie(cookie) {
  warnOnce(cookie.isSigned, `The "${cookie.name}" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`);
}
var createSession, isSession, createSessionStorageFactory, init_sessions = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/sessions.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_cookies();
    init_warnings();
    createSession = (initialData = {}, id = "") => {
      let map = new Map(Object.entries(initialData));
      return {
        get id() {
          return id;
        },
        get data() {
          return Object.fromEntries(map);
        },
        has(name) {
          return map.has(name) || map.has(flash(name));
        },
        get(name) {
          if (map.has(name))
            return map.get(name);
          let flashName = flash(name);
          if (map.has(flashName)) {
            let value = map.get(flashName);
            return map.delete(flashName), value;
          }
        },
        set(name, value) {
          map.set(name, value);
        },
        flash(name, value) {
          map.set(flash(name), value);
        },
        unset(name) {
          map.delete(name);
        }
      };
    }, isSession = (object) => object != null && typeof object.id == "string" && typeof object.data < "u" && typeof object.has == "function" && typeof object.get == "function" && typeof object.set == "function" && typeof object.flash == "function" && typeof object.unset == "function", createSessionStorageFactory = (createCookie) => ({
      cookie: cookieArg,
      createData,
      readData,
      updateData,
      deleteData
    }) => {
      let cookie = isCookie(cookieArg) ? cookieArg : createCookie((cookieArg == null ? void 0 : cookieArg.name) || "__session", cookieArg);
      return warnOnceAboutSigningSessionCookie(cookie), {
        async getSession(cookieHeader, options2) {
          let id = cookieHeader && await cookie.parse(cookieHeader, options2), data = id && await readData(id);
          return createSession(data || {}, id || "");
        },
        async commitSession(session, options2) {
          let {
            id,
            data
          } = session;
          return id ? await updateData(id, data, cookie.expires) : id = await createData(data, cookie.expires), cookie.serialize(id, options2);
        },
        async destroySession(session, options2) {
          return await deleteData(session.id), cookie.serialize("", {
            ...options2,
            expires: /* @__PURE__ */ new Date(0)
          });
        }
      };
    };
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/sessions/cookieStorage.js
var createCookieSessionStorageFactory, init_cookieStorage = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/sessions/cookieStorage.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_cookies();
    init_sessions();
    createCookieSessionStorageFactory = (createCookie) => ({
      cookie: cookieArg
    } = {}) => {
      let cookie = isCookie(cookieArg) ? cookieArg : createCookie((cookieArg == null ? void 0 : cookieArg.name) || "__session", cookieArg);
      return warnOnceAboutSigningSessionCookie(cookie), {
        async getSession(cookieHeader, options2) {
          return createSession(cookieHeader && await cookie.parse(cookieHeader, options2) || {});
        },
        async commitSession(session, options2) {
          let serializedCookie = await cookie.serialize(session.data, options2);
          if (serializedCookie.length > 4096)
            throw new Error("Cookie length will exceed browser maximum. Length: " + serializedCookie.length);
          return serializedCookie;
        },
        async destroySession(_session, options2) {
          return cookie.serialize("", {
            ...options2,
            expires: /* @__PURE__ */ new Date(0)
          });
        }
      };
    };
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/sessions/memoryStorage.js
var createMemorySessionStorageFactory, init_memoryStorage = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/sessions/memoryStorage.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    createMemorySessionStorageFactory = (createSessionStorage) => ({
      cookie
    } = {}) => {
      let uniqueId = 0, map = /* @__PURE__ */ new Map();
      return createSessionStorage({
        cookie,
        async createData(data, expires) {
          let id = (++uniqueId).toString();
          return map.set(id, {
            data,
            expires
          }), id;
        },
        async readData(id) {
          if (map.has(id)) {
            let {
              data,
              expires
            } = map.get(id);
            if (!expires || expires > /* @__PURE__ */ new Date())
              return data;
            expires && map.delete(id);
          }
          return null;
        },
        async updateData(id, data, expires) {
          map.set(id, {
            data,
            expires
          });
        },
        async deleteData(id) {
          map.delete(id);
        }
      });
    };
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/upload/errors.js
var MaxPartSizeExceededError, init_errors2 = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/upload/errors.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    MaxPartSizeExceededError = class extends Error {
      constructor(field, maxBytes) {
        super(`Field "${field}" exceeded upload size of ${maxBytes} bytes.`), this.field = field, this.maxBytes = maxBytes;
      }
    };
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/upload/memoryUploadHandler.js
function createMemoryUploadHandler({
  filter,
  maxPartSize = 3e6
} = {}) {
  return async ({
    filename,
    contentType,
    name,
    data
  }) => {
    if (filter && !await filter({
      filename,
      contentType,
      name
    }))
      return;
    let size = 0, chunks = [];
    for await (let chunk of data) {
      if (size += chunk.byteLength, size > maxPartSize)
        throw new MaxPartSizeExceededError(name, maxPartSize);
      chunks.push(chunk);
    }
    return typeof filename == "string" ? new File(chunks, filename, {
      type: contentType
    }) : await new Blob(chunks, {
      type: contentType
    }).text();
  };
}
var init_memoryUploadHandler = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/upload/memoryUploadHandler.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_errors2();
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/dev.js
function broadcastDevReady(build, origin) {
  if (origin ?? (origin = ""), !origin)
    throw Error("Dev server origin not set");
  fetch(`${origin}/ping`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      buildHash: build.assets.version
    })
  }).catch((error) => {
    console.error(`Could not reach Remix dev server at ${origin}`);
  });
}
function logDevReady(build) {
  console.log(`[REMIX DEV] ${build.assets.version} ready`);
}
var init_dev = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/dev.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
  }
});

// node_modules/@remix-run/server-runtime/dist/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  MaxPartSizeExceededError: () => MaxPartSizeExceededError,
  broadcastDevReady: () => broadcastDevReady,
  createCookieFactory: () => createCookieFactory,
  createCookieSessionStorageFactory: () => createCookieSessionStorageFactory,
  createMemorySessionStorageFactory: () => createMemorySessionStorageFactory,
  createRequestHandler: () => createRequestHandler,
  createSession: () => createSession,
  createSessionStorageFactory: () => createSessionStorageFactory,
  defer: () => defer3,
  isCookie: () => isCookie,
  isSession: () => isSession,
  json: () => json3,
  logDevReady: () => logDevReady,
  redirect: () => redirect3,
  unstable_composeUploadHandlers: () => composeUploadHandlers,
  unstable_createMemoryUploadHandler: () => createMemoryUploadHandler,
  unstable_parseMultipartFormData: () => parseMultipartFormData
});
var init_esm = __esm({
  "node_modules/@remix-run/server-runtime/dist/esm/index.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    init_cookies();
    init_formData();
    init_responses();
    init_server();
    init_sessions();
    init_cookieStorage();
    init_memoryStorage();
    init_memoryUploadHandler();
    init_errors2();
    init_dev();
  }
});

// node_modules/@remix-run/cloudflare/dist/crypto.js
var require_crypto = __commonJS({
  "node_modules/@remix-run/cloudflare/dist/crypto.js"(exports2) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var encoder = new TextEncoder(), sign = async (value, secret) => {
      let key = await createKey2(secret, ["sign"]), data = encoder.encode(value), signature = await crypto.subtle.sign("HMAC", key, data), hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(/=+$/, "");
      return value + "." + hash;
    }, unsign = async (signed, secret) => {
      let index = signed.lastIndexOf("."), value = signed.slice(0, index), hash = signed.slice(index + 1), key = await createKey2(secret, ["verify"]), data = encoder.encode(value), signature = byteStringToUint8Array(atob(hash));
      return await crypto.subtle.verify("HMAC", key, signature, data) ? value : !1;
    };
    async function createKey2(secret, usages) {
      return await crypto.subtle.importKey("raw", encoder.encode(secret), {
        name: "HMAC",
        hash: "SHA-256"
      }, !1, usages);
    }
    function byteStringToUint8Array(byteString) {
      let array = new Uint8Array(byteString.length);
      for (let i = 0; i < byteString.length; i++)
        array[i] = byteString.charCodeAt(i);
      return array;
    }
    exports2.sign = sign;
    exports2.unsign = unsign;
  }
});

// node_modules/@remix-run/cloudflare/dist/implementations.js
var require_implementations = __commonJS({
  "node_modules/@remix-run/cloudflare/dist/implementations.js"(exports2) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var serverRuntime = (init_esm(), __toCommonJS(esm_exports)), crypto2 = require_crypto(), createCookie = serverRuntime.createCookieFactory({
      sign: crypto2.sign,
      unsign: crypto2.unsign
    }), createCookieSessionStorage = serverRuntime.createCookieSessionStorageFactory(createCookie), createSessionStorage = serverRuntime.createSessionStorageFactory(createCookie), createMemorySessionStorage = serverRuntime.createMemorySessionStorageFactory(createSessionStorage);
    exports2.createCookie = createCookie;
    exports2.createCookieSessionStorage = createCookieSessionStorage;
    exports2.createMemorySessionStorage = createMemorySessionStorage;
    exports2.createSessionStorage = createSessionStorage;
  }
});

// node_modules/@remix-run/cloudflare/dist/sessions/workersKVStorage.js
var require_workersKVStorage = __commonJS({
  "node_modules/@remix-run/cloudflare/dist/sessions/workersKVStorage.js"(exports2) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var implementations = require_implementations();
    function createWorkersKVSessionStorage({
      cookie,
      kv
    }) {
      return implementations.createSessionStorage({
        cookie,
        async createData(data, expires) {
          for (; ; ) {
            let randomBytes = new Uint8Array(8);
            crypto.getRandomValues(randomBytes);
            let id = [...randomBytes].map((x) => x.toString(16).padStart(2, "0")).join("");
            if (!await kv.get(id, "json"))
              return await kv.put(id, JSON.stringify(data), {
                expiration: expires ? Math.round(expires.getTime() / 1e3) : void 0
              }), id;
          }
        },
        async readData(id) {
          let session = await kv.get(id);
          return session ? JSON.parse(session) : null;
        },
        async updateData(id, data, expires) {
          await kv.put(id, JSON.stringify(data), {
            expiration: expires ? Math.round(expires.getTime() / 1e3) : void 0
          });
        },
        async deleteData(id) {
          await kv.delete(id);
        }
      });
    }
    exports2.createWorkersKVSessionStorage = createWorkersKVSessionStorage;
  }
});

// node_modules/@remix-run/cloudflare/dist/index.js
var require_dist = __commonJS({
  "node_modules/@remix-run/cloudflare/dist/index.js"(exports2) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var workersKVStorage = require_workersKVStorage(), implementations = require_implementations(), serverRuntime = (init_esm(), __toCommonJS(esm_exports)), warn = (fn, message) => (...args) => (console.warn(message), fn(...args)), createCloudflareKVSessionStorage = warn(workersKVStorage.createWorkersKVSessionStorage, "`createCloudflareKVSessionStorage` is deprecated. Please use `createWorkersKVSessionStorage` instead.");
    exports2.createWorkersKVSessionStorage = workersKVStorage.createWorkersKVSessionStorage;
    exports2.createCookie = implementations.createCookie;
    exports2.createCookieSessionStorage = implementations.createCookieSessionStorage;
    exports2.createMemorySessionStorage = implementations.createMemorySessionStorage;
    exports2.createSessionStorage = implementations.createSessionStorage;
    Object.defineProperty(exports2, "MaxPartSizeExceededError", {
      enumerable: !0,
      get: function() {
        return serverRuntime.MaxPartSizeExceededError;
      }
    });
    Object.defineProperty(exports2, "broadcastDevReady", {
      enumerable: !0,
      get: function() {
        return serverRuntime.broadcastDevReady;
      }
    });
    Object.defineProperty(exports2, "createRequestHandler", {
      enumerable: !0,
      get: function() {
        return serverRuntime.createRequestHandler;
      }
    });
    Object.defineProperty(exports2, "createSession", {
      enumerable: !0,
      get: function() {
        return serverRuntime.createSession;
      }
    });
    Object.defineProperty(exports2, "defer", {
      enumerable: !0,
      get: function() {
        return serverRuntime.defer;
      }
    });
    Object.defineProperty(exports2, "isCookie", {
      enumerable: !0,
      get: function() {
        return serverRuntime.isCookie;
      }
    });
    Object.defineProperty(exports2, "isSession", {
      enumerable: !0,
      get: function() {
        return serverRuntime.isSession;
      }
    });
    Object.defineProperty(exports2, "json", {
      enumerable: !0,
      get: function() {
        return serverRuntime.json;
      }
    });
    Object.defineProperty(exports2, "logDevReady", {
      enumerable: !0,
      get: function() {
        return serverRuntime.logDevReady;
      }
    });
    Object.defineProperty(exports2, "redirect", {
      enumerable: !0,
      get: function() {
        return serverRuntime.redirect;
      }
    });
    Object.defineProperty(exports2, "unstable_composeUploadHandlers", {
      enumerable: !0,
      get: function() {
        return serverRuntime.unstable_composeUploadHandlers;
      }
    });
    Object.defineProperty(exports2, "unstable_createMemoryUploadHandler", {
      enumerable: !0,
      get: function() {
        return serverRuntime.unstable_createMemoryUploadHandler;
      }
    });
    Object.defineProperty(exports2, "unstable_parseMultipartFormData", {
      enumerable: !0,
      get: function() {
        return serverRuntime.unstable_parseMultipartFormData;
      }
    });
    exports2.createCloudflareKVSessionStorage = createCloudflareKVSessionStorage;
  }
});

// node_modules/react/cjs/react.development.js
var require_react_development = __commonJS({
  "node_modules/react/cjs/react.development.js"(exports2, module) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    (function() {
      "use strict";
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var ReactVersion = "18.2.0", REACT_ELEMENT_TYPE = Symbol.for("react.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable != "object")
          return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        return typeof maybeIterator == "function" ? maybeIterator : null;
      }
      var ReactCurrentDispatcher = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, ReactCurrentBatchConfig = {
        transition: null
      }, ReactCurrentActQueue = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1
      }, ReactCurrentOwner = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, ReactDebugCurrentFrame = {}, currentExtraStackFrame = null;
      function setExtraStackFrame(stack) {
        currentExtraStackFrame = stack;
      }
      ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
        currentExtraStackFrame = stack;
      }, ReactDebugCurrentFrame.getCurrentStack = null, ReactDebugCurrentFrame.getStackAddendum = function() {
        var stack = "";
        currentExtraStackFrame && (stack += currentExtraStackFrame);
        var impl = ReactDebugCurrentFrame.getCurrentStack;
        return impl && (stack += impl() || ""), stack;
      };
      var enableScopeAPI = !1, enableCacheElement = !1, enableTransitionTracing = !1, enableLegacyHidden = !1, enableDebugTracing = !1, ReactSharedInternals = {
        ReactCurrentDispatcher,
        ReactCurrentBatchConfig,
        ReactCurrentOwner
      };
      ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame, ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
      function warn(format) {
        {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)
            args[_key - 1] = arguments[_key];
          printWarning("warn", format, args);
        }
      }
      function error(format) {
        {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
            args[_key2 - 1] = arguments[_key2];
          printWarning("error", format, args);
        }
      }
      function printWarning(level, format, args) {
        {
          var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame, stack = ReactDebugCurrentFrame2.getStackAddendum();
          stack !== "" && (format += "%s", args = args.concat([stack]));
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format), Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      var didWarnStateUpdateForUnmountedComponent = {};
      function warnNoop(publicInstance, callerName) {
        {
          var _constructor = publicInstance.constructor, componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass", warningKey = componentName + "." + callerName;
          if (didWarnStateUpdateForUnmountedComponent[warningKey])
            return;
          error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName), didWarnStateUpdateForUnmountedComponent[warningKey] = !0;
        }
      }
      var ReactNoopUpdateQueue = {
        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function(publicInstance) {
          return !1;
        },
        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueForceUpdate: function(publicInstance, callback, callerName) {
          warnNoop(publicInstance, "forceUpdate");
        },
        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} completeState Next state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
          warnNoop(publicInstance, "replaceState");
        },
        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} partialState Next partial state to be merged with state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} Name of the calling function in the public API.
         * @internal
         */
        enqueueSetState: function(publicInstance, partialState, callback, callerName) {
          warnNoop(publicInstance, "setState");
        }
      }, assign = Object.assign, emptyObject = {};
      Object.freeze(emptyObject);
      function Component2(props, context, updater) {
        this.props = props, this.context = context, this.refs = emptyObject, this.updater = updater || ReactNoopUpdateQueue;
      }
      Component2.prototype.isReactComponent = {}, Component2.prototype.setState = function(partialState, callback) {
        if (typeof partialState != "object" && typeof partialState != "function" && partialState != null)
          throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, "setState");
      }, Component2.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
      };
      {
        var deprecatedAPIs = {
          isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
          replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
        }, defineDeprecationWarning = function(methodName, info) {
          Object.defineProperty(Component2.prototype, methodName, {
            get: function() {
              warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
            }
          });
        };
        for (var fnName in deprecatedAPIs)
          deprecatedAPIs.hasOwnProperty(fnName) && defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
      }
      function ComponentDummy() {
      }
      ComponentDummy.prototype = Component2.prototype;
      function PureComponent(props, context, updater) {
        this.props = props, this.context = context, this.refs = emptyObject, this.updater = updater || ReactNoopUpdateQueue;
      }
      var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
      pureComponentPrototype.constructor = PureComponent, assign(pureComponentPrototype, Component2.prototype), pureComponentPrototype.isPureReactComponent = !0;
      function createRef() {
        var refObject = {
          current: null
        };
        return Object.seal(refObject), refObject;
      }
      var isArrayImpl = Array.isArray;
      function isArray(a) {
        return isArrayImpl(a);
      }
      function typeName(value) {
        {
          var hasToStringTag = typeof Symbol == "function" && Symbol.toStringTag, type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
          return type;
        }
      }
      function willCoercionThrow(value) {
        try {
          return testStringCoercion(value), !1;
        } catch {
          return !0;
        }
      }
      function testStringCoercion(value) {
        return "" + value;
      }
      function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value))
          return error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value)), testStringCoercion(value);
      }
      function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName)
          return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
      }
      function getContextName(type) {
        return type.displayName || "Context";
      }
      function getComponentNameFromType(type) {
        if (type == null)
          return null;
        if (typeof type.tag == "number" && error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof type == "function")
          return type.displayName || type.name || null;
        if (typeof type == "string")
          return type;
        switch (type) {
          case REACT_FRAGMENT_TYPE:
            return "Fragment";
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_PROFILER_TYPE:
            return "Profiler";
          case REACT_STRICT_MODE_TYPE:
            return "StrictMode";
          case REACT_SUSPENSE_TYPE:
            return "Suspense";
          case REACT_SUSPENSE_LIST_TYPE:
            return "SuspenseList";
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
              var context = type;
              return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
              var provider = type;
              return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
              return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
              var outerName = type.displayName || null;
              return outerName !== null ? outerName : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return getComponentNameFromType(init(payload));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var hasOwnProperty = Object.prototype.hasOwnProperty, RESERVED_PROPS = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
      didWarnAboutStringRefs = {};
      function hasValidRef(config) {
        if (hasOwnProperty.call(config, "ref")) {
          var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
          if (getter && getter.isReactWarning)
            return !1;
        }
        return config.ref !== void 0;
      }
      function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
          var getter = Object.getOwnPropertyDescriptor(config, "key").get;
          if (getter && getter.isReactWarning)
            return !1;
        }
        return config.key !== void 0;
      }
      function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
          specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName));
        };
        warnAboutAccessingKey.isReactWarning = !0, Object.defineProperty(props, "key", {
          get: warnAboutAccessingKey,
          configurable: !0
        });
      }
      function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
          specialPropRefWarningShown || (specialPropRefWarningShown = !0, error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName));
        };
        warnAboutAccessingRef.isReactWarning = !0, Object.defineProperty(props, "ref", {
          get: warnAboutAccessingRef,
          configurable: !0
        });
      }
      function warnIfStringRefCannotBeAutoConverted(config) {
        if (typeof config.ref == "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
          didWarnAboutStringRefs[componentName] || (error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref), didWarnAboutStringRefs[componentName] = !0);
        }
      }
      var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: REACT_ELEMENT_TYPE,
          // Built-in properties that belong on the element
          type,
          key,
          ref,
          props,
          // Record the component responsible for creating this element.
          _owner: owner
        };
        return element._store = {}, Object.defineProperty(element._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(element, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: self
        }), Object.defineProperty(element, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: source
        }), Object.freeze && (Object.freeze(element.props), Object.freeze(element)), element;
      };
      function createElement7(type, config, children) {
        var propName, props = {}, key = null, ref = null, self = null, source = null;
        if (config != null) {
          hasValidRef(config) && (ref = config.ref, warnIfStringRefCannotBeAutoConverted(config)), hasValidKey(config) && (checkKeyStringCoercion(config.key), key = "" + config.key), self = config.__self === void 0 ? null : config.__self, source = config.__source === void 0 ? null : config.__source;
          for (propName in config)
            hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName) && (props[propName] = config[propName]);
        }
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1)
          props.children = children;
        else if (childrenLength > 1) {
          for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)
            childArray[i] = arguments[i + 2];
          Object.freeze && Object.freeze(childArray), props.children = childArray;
        }
        if (type && type.defaultProps) {
          var defaultProps = type.defaultProps;
          for (propName in defaultProps)
            props[propName] === void 0 && (props[propName] = defaultProps[propName]);
        }
        if (key || ref) {
          var displayName = typeof type == "function" ? type.displayName || type.name || "Unknown" : type;
          key && defineKeyPropWarningGetter(props, displayName), ref && defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
      }
      function cloneAndReplaceKey(oldElement, newKey) {
        var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
        return newElement;
      }
      function cloneElement(element, config, children) {
        if (element == null)
          throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
        var propName, props = assign({}, element.props), key = element.key, ref = element.ref, self = element._self, source = element._source, owner = element._owner;
        if (config != null) {
          hasValidRef(config) && (ref = config.ref, owner = ReactCurrentOwner.current), hasValidKey(config) && (checkKeyStringCoercion(config.key), key = "" + config.key);
          var defaultProps;
          element.type && element.type.defaultProps && (defaultProps = element.type.defaultProps);
          for (propName in config)
            hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName) && (config[propName] === void 0 && defaultProps !== void 0 ? props[propName] = defaultProps[propName] : props[propName] = config[propName]);
        }
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1)
          props.children = children;
        else if (childrenLength > 1) {
          for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)
            childArray[i] = arguments[i + 2];
          props.children = childArray;
        }
        return ReactElement(element.type, key, ref, self, source, owner, props);
      }
      function isValidElement2(object) {
        return typeof object == "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      }
      var SEPARATOR = ".", SUBSEPARATOR = ":";
      function escape3(key) {
        var escapeRegex = /[=:]/g, escaperLookup = {
          "=": "=0",
          ":": "=2"
        }, escapedString = key.replace(escapeRegex, function(match) {
          return escaperLookup[match];
        });
        return "$" + escapedString;
      }
      var didWarnAboutMaps = !1, userProvidedKeyEscapeRegex = /\/+/g;
      function escapeUserProvidedKey(text) {
        return text.replace(userProvidedKeyEscapeRegex, "$&/");
      }
      function getElementKey(element, index) {
        return typeof element == "object" && element !== null && element.key != null ? (checkKeyStringCoercion(element.key), escape3("" + element.key)) : index.toString(36);
      }
      function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        (type === "undefined" || type === "boolean") && (children = null);
        var invokeCallback = !1;
        if (children === null)
          invokeCallback = !0;
        else
          switch (type) {
            case "string":
            case "number":
              invokeCallback = !0;
              break;
            case "object":
              switch (children.$$typeof) {
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                  invokeCallback = !0;
              }
          }
        if (invokeCallback) {
          var _child = children, mappedChild = callback(_child), childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
          if (isArray(mappedChild)) {
            var escapedChildKey = "";
            childKey != null && (escapedChildKey = escapeUserProvidedKey(childKey) + "/"), mapIntoArray(mappedChild, array, escapedChildKey, "", function(c) {
              return c;
            });
          } else
            mappedChild != null && (isValidElement2(mappedChild) && (mappedChild.key && (!_child || _child.key !== mappedChild.key) && checkKeyStringCoercion(mappedChild.key), mappedChild = cloneAndReplaceKey(
              mappedChild,
              // Keep both the (mapped) and old keys if they differ, just as
              // traverseAllChildren used to do for objects as children
              escapedPrefix + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
              (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? (
                // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
                // eslint-disable-next-line react-internal/safe-string-coercion
                escapeUserProvidedKey("" + mappedChild.key) + "/"
              ) : "") + childKey
            )), array.push(mappedChild));
          return 1;
        }
        var child, nextName, subtreeCount = 0, nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
        if (isArray(children))
          for (var i = 0; i < children.length; i++)
            child = children[i], nextName = nextNamePrefix + getElementKey(child, i), subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
        else {
          var iteratorFn = getIteratorFn(children);
          if (typeof iteratorFn == "function") {
            var iterableChildren = children;
            iteratorFn === iterableChildren.entries && (didWarnAboutMaps || warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0);
            for (var iterator = iteratorFn.call(iterableChildren), step, ii = 0; !(step = iterator.next()).done; )
              child = step.value, nextName = nextNamePrefix + getElementKey(child, ii++), subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
          } else if (type === "object") {
            var childrenString = String(children);
            throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
          }
        }
        return subtreeCount;
      }
      function mapChildren(children, func, context) {
        if (children == null)
          return children;
        var result = [], count = 0;
        return mapIntoArray(children, result, "", "", function(child) {
          return func.call(context, child, count++);
        }), result;
      }
      function countChildren(children) {
        var n = 0;
        return mapChildren(children, function() {
          n++;
        }), n;
      }
      function forEachChildren(children, forEachFunc, forEachContext) {
        mapChildren(children, function() {
          forEachFunc.apply(this, arguments);
        }, forEachContext);
      }
      function toArray(children) {
        return mapChildren(children, function(child) {
          return child;
        }) || [];
      }
      function onlyChild(children) {
        if (!isValidElement2(children))
          throw new Error("React.Children.only expected to receive a single React element child.");
        return children;
      }
      function createContext3(defaultValue) {
        var context = {
          $$typeof: REACT_CONTEXT_TYPE,
          // As a workaround to support multiple concurrent renderers, we categorize
          // some renderers as primary and others as secondary. We only expect
          // there to be two concurrent renderers at most: React Native (primary) and
          // Fabric (secondary); React DOM (primary) and React ART (secondary).
          // Secondary renderers store their context values on separate fields.
          _currentValue: defaultValue,
          _currentValue2: defaultValue,
          // Used to track how many concurrent renderers this context currently
          // supports within in a single renderer. Such as parallel server rendering.
          _threadCount: 0,
          // These are circular
          Provider: null,
          Consumer: null,
          // Add these to use same hidden class in VM as ServerContext
          _defaultValue: null,
          _globalName: null
        };
        context.Provider = {
          $$typeof: REACT_PROVIDER_TYPE,
          _context: context
        };
        var hasWarnedAboutUsingNestedContextConsumers = !1, hasWarnedAboutUsingConsumerProvider = !1, hasWarnedAboutDisplayNameOnConsumer = !1;
        {
          var Consumer = {
            $$typeof: REACT_CONTEXT_TYPE,
            _context: context
          };
          Object.defineProperties(Consumer, {
            Provider: {
              get: function() {
                return hasWarnedAboutUsingConsumerProvider || (hasWarnedAboutUsingConsumerProvider = !0, error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")), context.Provider;
              },
              set: function(_Provider) {
                context.Provider = _Provider;
              }
            },
            _currentValue: {
              get: function() {
                return context._currentValue;
              },
              set: function(_currentValue) {
                context._currentValue = _currentValue;
              }
            },
            _currentValue2: {
              get: function() {
                return context._currentValue2;
              },
              set: function(_currentValue2) {
                context._currentValue2 = _currentValue2;
              }
            },
            _threadCount: {
              get: function() {
                return context._threadCount;
              },
              set: function(_threadCount) {
                context._threadCount = _threadCount;
              }
            },
            Consumer: {
              get: function() {
                return hasWarnedAboutUsingNestedContextConsumers || (hasWarnedAboutUsingNestedContextConsumers = !0, error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")), context.Consumer;
              }
            },
            displayName: {
              get: function() {
                return context.displayName;
              },
              set: function(displayName) {
                hasWarnedAboutDisplayNameOnConsumer || (warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName), hasWarnedAboutDisplayNameOnConsumer = !0);
              }
            }
          }), context.Consumer = Consumer;
        }
        return context._currentRenderer = null, context._currentRenderer2 = null, context;
      }
      var Uninitialized = -1, Pending = 0, Resolved = 1, Rejected = 2;
      function lazyInitializer(payload) {
        if (payload._status === Uninitialized) {
          var ctor = payload._result, thenable = ctor();
          if (thenable.then(function(moduleObject2) {
            if (payload._status === Pending || payload._status === Uninitialized) {
              var resolved = payload;
              resolved._status = Resolved, resolved._result = moduleObject2;
            }
          }, function(error2) {
            if (payload._status === Pending || payload._status === Uninitialized) {
              var rejected = payload;
              rejected._status = Rejected, rejected._result = error2;
            }
          }), payload._status === Uninitialized) {
            var pending = payload;
            pending._status = Pending, pending._result = thenable;
          }
        }
        if (payload._status === Resolved) {
          var moduleObject = payload._result;
          return moduleObject === void 0 && error(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`, moduleObject), "default" in moduleObject || error(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`, moduleObject), moduleObject.default;
        } else
          throw payload._result;
      }
      function lazy(ctor) {
        var payload = {
          // We use these fields to store the result.
          _status: Uninitialized,
          _result: ctor
        }, lazyType = {
          $$typeof: REACT_LAZY_TYPE,
          _payload: payload,
          _init: lazyInitializer
        };
        {
          var defaultProps, propTypes;
          Object.defineProperties(lazyType, {
            defaultProps: {
              configurable: !0,
              get: function() {
                return defaultProps;
              },
              set: function(newDefaultProps) {
                error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), defaultProps = newDefaultProps, Object.defineProperty(lazyType, "defaultProps", {
                  enumerable: !0
                });
              }
            },
            propTypes: {
              configurable: !0,
              get: function() {
                return propTypes;
              },
              set: function(newPropTypes) {
                error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), propTypes = newPropTypes, Object.defineProperty(lazyType, "propTypes", {
                  enumerable: !0
                });
              }
            }
          });
        }
        return lazyType;
      }
      function forwardRef3(render) {
        render != null && render.$$typeof === REACT_MEMO_TYPE ? error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : typeof render != "function" ? error("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render) : render.length !== 0 && render.length !== 2 && error("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined."), render != null && (render.defaultProps != null || render.propTypes != null) && error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        var elementType = {
          $$typeof: REACT_FORWARD_REF_TYPE,
          render
        };
        {
          var ownName;
          Object.defineProperty(elementType, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return ownName;
            },
            set: function(name) {
              ownName = name, !render.name && !render.displayName && (render.displayName = name);
            }
          });
        }
        return elementType;
      }
      var REACT_MODULE_REFERENCE;
      REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
      function isValidElementType(type) {
        return !!(typeof type == "string" || typeof type == "function" || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing || typeof type == "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
        // types supported by any Flight configuration anywhere since
        // we don't know which Flight build this will end up being used
        // with.
        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0));
      }
      function memo(type, compare) {
        isValidElementType(type) || error("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
        var elementType = {
          $$typeof: REACT_MEMO_TYPE,
          type,
          compare: compare === void 0 ? null : compare
        };
        {
          var ownName;
          Object.defineProperty(elementType, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return ownName;
            },
            set: function(name) {
              ownName = name, !type.name && !type.displayName && (type.displayName = name);
            }
          });
        }
        return elementType;
      }
      function resolveDispatcher() {
        var dispatcher = ReactCurrentDispatcher.current;
        return dispatcher === null && error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`), dispatcher;
      }
      function useContext5(Context) {
        var dispatcher = resolveDispatcher();
        if (Context._context !== void 0) {
          var realContext = Context._context;
          realContext.Consumer === Context ? error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?") : realContext.Provider === Context && error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return dispatcher.useContext(Context);
      }
      function useState4(initialState) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useState(initialState);
      }
      function useReducer(reducer, initialArg, init) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useReducer(reducer, initialArg, init);
      }
      function useRef3(initialValue) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useRef(initialValue);
      }
      function useEffect4(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useEffect(create, deps);
      }
      function useInsertionEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useInsertionEffect(create, deps);
      }
      function useLayoutEffect3(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useLayoutEffect(create, deps);
      }
      function useCallback3(callback, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useCallback(callback, deps);
      }
      function useMemo5(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useMemo(create, deps);
      }
      function useImperativeHandle(ref, create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useImperativeHandle(ref, create, deps);
      }
      function useDebugValue(value, formatterFn) {
        {
          var dispatcher = resolveDispatcher();
          return dispatcher.useDebugValue(value, formatterFn);
        }
      }
      function useTransition2() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useTransition();
      }
      function useDeferredValue(value) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDeferredValue(value);
      }
      function useId() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useId();
      }
      function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
      }
      var disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
      function disabledLog() {
      }
      disabledLog.__reactDisabledLog = !0;
      function disableLogs() {
        {
          if (disabledDepth === 0) {
            prevLog = console.log, prevInfo = console.info, prevWarn = console.warn, prevError = console.error, prevGroup = console.group, prevGroupCollapsed = console.groupCollapsed, prevGroupEnd = console.groupEnd;
            var props = {
              configurable: !0,
              enumerable: !0,
              value: disabledLog,
              writable: !0
            };
            Object.defineProperties(console, {
              info: props,
              log: props,
              warn: props,
              error: props,
              group: props,
              groupCollapsed: props,
              groupEnd: props
            });
          }
          disabledDepth++;
        }
      }
      function reenableLogs() {
        {
          if (disabledDepth--, disabledDepth === 0) {
            var props = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: assign({}, props, {
                value: prevLog
              }),
              info: assign({}, props, {
                value: prevInfo
              }),
              warn: assign({}, props, {
                value: prevWarn
              }),
              error: assign({}, props, {
                value: prevError
              }),
              group: assign({}, props, {
                value: prevGroup
              }),
              groupCollapsed: assign({}, props, {
                value: prevGroupCollapsed
              }),
              groupEnd: assign({}, props, {
                value: prevGroupEnd
              })
            });
          }
          disabledDepth < 0 && error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, prefix;
      function describeBuiltInComponentFrame(name, source, ownerFn) {
        {
          if (prefix === void 0)
            try {
              throw Error();
            } catch (x) {
              var match = x.stack.trim().match(/\n( *(at )?)/);
              prefix = match && match[1] || "";
            }
          return `
` + prefix + name;
        }
      }
      var reentry = !1, componentFrameCache;
      {
        var PossiblyWeakMap = typeof WeakMap == "function" ? WeakMap : Map;
        componentFrameCache = new PossiblyWeakMap();
      }
      function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry)
          return "";
        {
          var frame = componentFrameCache.get(fn);
          if (frame !== void 0)
            return frame;
        }
        var control;
        reentry = !0;
        var previousPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher$1.current, ReactCurrentDispatcher$1.current = null, disableLogs();
        try {
          if (construct) {
            var Fake = function() {
              throw Error();
            };
            if (Object.defineProperty(Fake.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Fake, []);
              } catch (x) {
                control = x;
              }
              Reflect.construct(fn, [], Fake);
            } else {
              try {
                Fake.call();
              } catch (x) {
                control = x;
              }
              fn.call(Fake.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (x) {
              control = x;
            }
            fn();
          }
        } catch (sample) {
          if (sample && control && typeof sample.stack == "string") {
            for (var sampleLines = sample.stack.split(`
`), controlLines = control.stack.split(`
`), s = sampleLines.length - 1, c = controlLines.length - 1; s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]; )
              c--;
            for (; s >= 1 && c >= 0; s--, c--)
              if (sampleLines[s] !== controlLines[c]) {
                if (s !== 1 || c !== 1)
                  do
                    if (s--, c--, c < 0 || sampleLines[s] !== controlLines[c]) {
                      var _frame = `
` + sampleLines[s].replace(" at new ", " at ");
                      return fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName)), typeof fn == "function" && componentFrameCache.set(fn, _frame), _frame;
                    }
                  while (s >= 1 && c >= 0);
                break;
              }
          }
        } finally {
          reentry = !1, ReactCurrentDispatcher$1.current = previousDispatcher, reenableLogs(), Error.prepareStackTrace = previousPrepareStackTrace;
        }
        var name = fn ? fn.displayName || fn.name : "", syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        return typeof fn == "function" && componentFrameCache.set(fn, syntheticFrame), syntheticFrame;
      }
      function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, !1);
      }
      function shouldConstruct(Component3) {
        var prototype = Component3.prototype;
        return !!(prototype && prototype.isReactComponent);
      }
      function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null)
          return "";
        if (typeof type == "function")
          return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type == "string")
          return describeBuiltInComponentFrame(type);
        switch (type) {
          case REACT_SUSPENSE_TYPE:
            return describeBuiltInComponentFrame("Suspense");
          case REACT_SUSPENSE_LIST_TYPE:
            return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
              return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch {
              }
            }
          }
        return "";
      }
      var loggedTypeFailures = {}, ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
      }
      function checkPropTypes(typeSpecs, values, location, componentName, element) {
        {
          var has = Function.call.bind(hasOwnProperty);
          for (var typeSpecName in typeSpecs)
            if (has(typeSpecs, typeSpecName)) {
              var error$1 = void 0;
              try {
                if (typeof typeSpecs[typeSpecName] != "function") {
                  var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw err.name = "Invariant Violation", err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (ex) {
                error$1 = ex;
              }
              error$1 && !(error$1 instanceof Error) && (setCurrentlyValidatingElement(element), error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1), setCurrentlyValidatingElement(null)), error$1 instanceof Error && !(error$1.message in loggedTypeFailures) && (loggedTypeFailures[error$1.message] = !0, setCurrentlyValidatingElement(element), error("Failed %s type: %s", location, error$1.message), setCurrentlyValidatingElement(null));
            }
        }
      }
      function setCurrentlyValidatingElement$1(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          setExtraStackFrame(stack);
        } else
          setExtraStackFrame(null);
      }
      var propTypesMisspellWarningShown;
      propTypesMisspellWarningShown = !1;
      function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner.current) {
          var name = getComponentNameFromType(ReactCurrentOwner.current.type);
          if (name)
            return `

Check the render method of \`` + name + "`.";
        }
        return "";
      }
      function getSourceInfoErrorAddendum(source) {
        if (source !== void 0) {
          var fileName = source.fileName.replace(/^.*[\\\/]/, ""), lineNumber = source.lineNumber;
          return `

Check your code at ` + fileName + ":" + lineNumber + ".";
        }
        return "";
      }
      function getSourceInfoErrorAddendumForProps(elementProps) {
        return elementProps != null ? getSourceInfoErrorAddendum(elementProps.__source) : "";
      }
      var ownerHasKeyUseWarning = {};
      function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
          var parentName = typeof parentType == "string" ? parentType : parentType.displayName || parentType.name;
          parentName && (info = `

Check the top-level render call using <` + parentName + ">.");
        }
        return info;
      }
      function validateExplicitKey(element, parentType) {
        if (!(!element._store || element._store.validated || element.key != null)) {
          element._store.validated = !0;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (!ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            ownerHasKeyUseWarning[currentComponentErrorInfo] = !0;
            var childOwner = "";
            element && element._owner && element._owner !== ReactCurrentOwner.current && (childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + "."), setCurrentlyValidatingElement$1(element), error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner), setCurrentlyValidatingElement$1(null);
          }
        }
      }
      function validateChildKeys(node, parentType) {
        if (typeof node == "object") {
          if (isArray(node))
            for (var i = 0; i < node.length; i++) {
              var child = node[i];
              isValidElement2(child) && validateExplicitKey(child, parentType);
            }
          else if (isValidElement2(node))
            node._store && (node._store.validated = !0);
          else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn == "function" && iteratorFn !== node.entries)
              for (var iterator = iteratorFn.call(node), step; !(step = iterator.next()).done; )
                isValidElement2(step.value) && validateExplicitKey(step.value, parentType);
          }
        }
      }
      function validatePropTypes(element) {
        {
          var type = element.type;
          if (type == null || typeof type == "string")
            return;
          var propTypes;
          if (typeof type == "function")
            propTypes = type.propTypes;
          else if (typeof type == "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          type.$$typeof === REACT_MEMO_TYPE))
            propTypes = type.propTypes;
          else
            return;
          if (propTypes) {
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, "prop", name, element);
          } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = !0;
            var _name = getComponentNameFromType(type);
            error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
          }
          typeof type.getDefaultProps == "function" && !type.getDefaultProps.isReactClassApproved && error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function validateFragmentProps(fragment) {
        {
          for (var keys = Object.keys(fragment.props), i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (key !== "children" && key !== "key") {
              setCurrentlyValidatingElement$1(fragment), error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key), setCurrentlyValidatingElement$1(null);
              break;
            }
          }
          fragment.ref !== null && (setCurrentlyValidatingElement$1(fragment), error("Invalid attribute `ref` supplied to `React.Fragment`."), setCurrentlyValidatingElement$1(null));
        }
      }
      function createElementWithValidation(type, props, children) {
        var validType = isValidElementType(type);
        if (!validType) {
          var info = "";
          (type === void 0 || typeof type == "object" && type !== null && Object.keys(type).length === 0) && (info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var sourceInfo = getSourceInfoErrorAddendumForProps(props);
          sourceInfo ? info += sourceInfo : info += getDeclarationErrorAddendum();
          var typeString;
          type === null ? typeString = "null" : isArray(type) ? typeString = "array" : type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE ? (typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", info = " Did you accidentally export a JSX literal instead of a component?") : typeString = typeof type, error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = createElement7.apply(this, arguments);
        if (element == null)
          return element;
        if (validType)
          for (var i = 2; i < arguments.length; i++)
            validateChildKeys(arguments[i], type);
        return type === REACT_FRAGMENT_TYPE ? validateFragmentProps(element) : validatePropTypes(element), element;
      }
      var didWarnAboutDeprecatedCreateFactory = !1;
      function createFactoryWithValidation(type) {
        var validatedFactory = createElementWithValidation.bind(null, type);
        return validatedFactory.type = type, didWarnAboutDeprecatedCreateFactory || (didWarnAboutDeprecatedCreateFactory = !0, warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")), Object.defineProperty(validatedFactory, "type", {
          enumerable: !1,
          get: function() {
            return warn("Factory.type is deprecated. Access the class directly before passing it to createFactory."), Object.defineProperty(this, "type", {
              value: type
            }), type;
          }
        }), validatedFactory;
      }
      function cloneElementWithValidation(element, props, children) {
        for (var newElement = cloneElement.apply(this, arguments), i = 2; i < arguments.length; i++)
          validateChildKeys(arguments[i], newElement.type);
        return validatePropTypes(newElement), newElement;
      }
      function startTransition(scope, options2) {
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = {};
        var currentTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition._updatedFibers = /* @__PURE__ */ new Set();
        try {
          scope();
        } finally {
          if (ReactCurrentBatchConfig.transition = prevTransition, prevTransition === null && currentTransition._updatedFibers) {
            var updatedFibersCount = currentTransition._updatedFibers.size;
            updatedFibersCount > 10 && warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), currentTransition._updatedFibers.clear();
          }
        }
      }
      var didWarnAboutMessageChannel = !1, enqueueTaskImpl = null;
      function enqueueTask(task) {
        if (enqueueTaskImpl === null)
          try {
            var requireString = ("require" + Math.random()).slice(0, 7), nodeRequire = module && module[requireString];
            enqueueTaskImpl = nodeRequire.call(module, "timers").setImmediate;
          } catch {
            enqueueTaskImpl = function(callback) {
              didWarnAboutMessageChannel === !1 && (didWarnAboutMessageChannel = !0, typeof MessageChannel > "u" && error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
              var channel = new MessageChannel();
              channel.port1.onmessage = callback, channel.port2.postMessage(void 0);
            };
          }
        return enqueueTaskImpl(task);
      }
      var actScopeDepth = 0, didWarnNoAwaitAct = !1;
      function act(callback) {
        {
          var prevActScopeDepth = actScopeDepth;
          actScopeDepth++, ReactCurrentActQueue.current === null && (ReactCurrentActQueue.current = []);
          var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy, result;
          try {
            if (ReactCurrentActQueue.isBatchingLegacy = !0, result = callback(), !prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
              var queue = ReactCurrentActQueue.current;
              queue !== null && (ReactCurrentActQueue.didScheduleLegacyUpdate = !1, flushActQueue(queue));
            }
          } catch (error2) {
            throw popActScope(prevActScopeDepth), error2;
          } finally {
            ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
          }
          if (result !== null && typeof result == "object" && typeof result.then == "function") {
            var thenableResult = result, wasAwaited = !1, thenable = {
              then: function(resolve, reject) {
                wasAwaited = !0, thenableResult.then(function(returnValue2) {
                  popActScope(prevActScopeDepth), actScopeDepth === 0 ? recursivelyFlushAsyncActWork(returnValue2, resolve, reject) : resolve(returnValue2);
                }, function(error2) {
                  popActScope(prevActScopeDepth), reject(error2);
                });
              }
            };
            return !didWarnNoAwaitAct && typeof Promise < "u" && Promise.resolve().then(function() {
            }).then(function() {
              wasAwaited || (didWarnNoAwaitAct = !0, error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            }), thenable;
          } else {
            var returnValue = result;
            if (popActScope(prevActScopeDepth), actScopeDepth === 0) {
              var _queue = ReactCurrentActQueue.current;
              _queue !== null && (flushActQueue(_queue), ReactCurrentActQueue.current = null);
              var _thenable = {
                then: function(resolve, reject) {
                  ReactCurrentActQueue.current === null ? (ReactCurrentActQueue.current = [], recursivelyFlushAsyncActWork(returnValue, resolve, reject)) : resolve(returnValue);
                }
              };
              return _thenable;
            } else {
              var _thenable2 = {
                then: function(resolve, reject) {
                  resolve(returnValue);
                }
              };
              return _thenable2;
            }
          }
        }
      }
      function popActScope(prevActScopeDepth) {
        prevActScopeDepth !== actScopeDepth - 1 && error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "), actScopeDepth = prevActScopeDepth;
      }
      function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
        {
          var queue = ReactCurrentActQueue.current;
          if (queue !== null)
            try {
              flushActQueue(queue), enqueueTask(function() {
                queue.length === 0 ? (ReactCurrentActQueue.current = null, resolve(returnValue)) : recursivelyFlushAsyncActWork(returnValue, resolve, reject);
              });
            } catch (error2) {
              reject(error2);
            }
          else
            resolve(returnValue);
        }
      }
      var isFlushing = !1;
      function flushActQueue(queue) {
        if (!isFlushing) {
          isFlushing = !0;
          var i = 0;
          try {
            for (; i < queue.length; i++) {
              var callback = queue[i];
              do
                callback = callback(!0);
              while (callback !== null);
            }
            queue.length = 0;
          } catch (error2) {
            throw queue = queue.slice(i + 1), error2;
          } finally {
            isFlushing = !1;
          }
        }
      }
      var createElement$1 = createElementWithValidation, cloneElement$1 = cloneElementWithValidation, createFactory = createFactoryWithValidation, Children2 = {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray,
        only: onlyChild
      };
      exports2.Children = Children2, exports2.Component = Component2, exports2.Fragment = REACT_FRAGMENT_TYPE, exports2.Profiler = REACT_PROFILER_TYPE, exports2.PureComponent = PureComponent, exports2.StrictMode = REACT_STRICT_MODE_TYPE, exports2.Suspense = REACT_SUSPENSE_TYPE, exports2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals, exports2.cloneElement = cloneElement$1, exports2.createContext = createContext3, exports2.createElement = createElement$1, exports2.createFactory = createFactory, exports2.createRef = createRef, exports2.forwardRef = forwardRef3, exports2.isValidElement = isValidElement2, exports2.lazy = lazy, exports2.memo = memo, exports2.startTransition = startTransition, exports2.unstable_act = act, exports2.useCallback = useCallback3, exports2.useContext = useContext5, exports2.useDebugValue = useDebugValue, exports2.useDeferredValue = useDeferredValue, exports2.useEffect = useEffect4, exports2.useId = useId, exports2.useImperativeHandle = useImperativeHandle, exports2.useInsertionEffect = useInsertionEffect, exports2.useLayoutEffect = useLayoutEffect3, exports2.useMemo = useMemo5, exports2.useReducer = useReducer, exports2.useRef = useRef3, exports2.useState = useState4, exports2.useSyncExternalStore = useSyncExternalStore, exports2.useTransition = useTransition2, exports2.version = ReactVersion, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    })();
  }
});

// node_modules/react/index.js
var require_react = __commonJS({
  "node_modules/react/index.js"(exports2, module) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    module.exports = require_react_development();
  }
});

// node_modules/react-router/dist/index.js
var dist_exports = {};
__export(dist_exports, {
  AbortedDeferredError: () => AbortedDeferredError,
  Await: () => Await,
  MemoryRouter: () => MemoryRouter,
  Navigate: () => Navigate,
  NavigationType: () => Action,
  Outlet: () => Outlet,
  Route: () => Route,
  Router: () => Router,
  RouterProvider: () => RouterProvider,
  Routes: () => Routes,
  UNSAFE_DataRouterContext: () => DataRouterContext,
  UNSAFE_DataRouterStateContext: () => DataRouterStateContext,
  UNSAFE_LocationContext: () => LocationContext,
  UNSAFE_NavigationContext: () => NavigationContext,
  UNSAFE_RouteContext: () => RouteContext,
  UNSAFE_mapRouteProperties: () => mapRouteProperties,
  UNSAFE_useRouteId: () => useRouteId,
  UNSAFE_useRoutesImpl: () => useRoutesImpl,
  createMemoryRouter: () => createMemoryRouter,
  createPath: () => createPath,
  createRoutesFromChildren: () => createRoutesFromChildren,
  createRoutesFromElements: () => createRoutesFromChildren,
  defer: () => defer,
  generatePath: () => generatePath,
  isRouteErrorResponse: () => isRouteErrorResponse,
  json: () => json,
  matchPath: () => matchPath,
  matchRoutes: () => matchRoutes,
  parsePath: () => parsePath,
  redirect: () => redirect,
  renderMatches: () => renderMatches,
  resolvePath: () => resolvePath,
  unstable_useBlocker: () => useBlocker,
  useActionData: () => useActionData,
  useAsyncError: () => useAsyncError,
  useAsyncValue: () => useAsyncValue,
  useHref: () => useHref,
  useInRouterContext: () => useInRouterContext,
  useLoaderData: () => useLoaderData,
  useLocation: () => useLocation,
  useMatch: () => useMatch,
  useMatches: () => useMatches,
  useNavigate: () => useNavigate,
  useNavigation: () => useNavigation,
  useNavigationType: () => useNavigationType,
  useOutlet: () => useOutlet,
  useOutletContext: () => useOutletContext,
  useParams: () => useParams,
  useResolvedPath: () => useResolvedPath,
  useRevalidator: () => useRevalidator,
  useRouteError: () => useRouteError,
  useRouteLoaderData: () => useRouteLoaderData,
  useRoutes: () => useRoutes
});
function _extends2() {
  return _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends2.apply(this, arguments);
}
function useHref(to, _temp) {
  let {
    relative
  } = _temp === void 0 ? {} : _temp;
  useInRouterContext() || invariant(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useHref() may be used only in the context of a <Router> component."
  );
  let {
    basename,
    navigator: navigator2
  } = React.useContext(NavigationContext), {
    hash,
    pathname,
    search
  } = useResolvedPath(to, {
    relative
  }), joinedPathname = pathname;
  return basename !== "/" && (joinedPathname = pathname === "/" ? basename : joinPaths([basename, pathname])), navigator2.createHref({
    pathname: joinedPathname,
    search,
    hash
  });
}
function useInRouterContext() {
  return React.useContext(LocationContext) != null;
}
function useLocation() {
  return useInRouterContext() || invariant(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useLocation() may be used only in the context of a <Router> component."
  ), React.useContext(LocationContext).location;
}
function useNavigationType() {
  return React.useContext(LocationContext).navigationType;
}
function useMatch(pattern) {
  useInRouterContext() || invariant(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useMatch() may be used only in the context of a <Router> component."
  );
  let {
    pathname
  } = useLocation();
  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);
}
function useIsomorphicLayoutEffect(cb) {
  React.useContext(NavigationContext).static || React.useLayoutEffect(cb);
}
function useNavigate() {
  let {
    isDataRoute
  } = React.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  useInRouterContext() || invariant(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useNavigate() may be used only in the context of a <Router> component."
  );
  let dataRouterContext = React.useContext(DataRouterContext), {
    basename,
    navigator: navigator2
  } = React.useContext(NavigationContext), {
    matches
  } = React.useContext(RouteContext), {
    pathname: locationPathname
  } = useLocation(), routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map((match) => match.pathnameBase)), activeRef = React.useRef(!1);
  return useIsomorphicLayoutEffect(() => {
    activeRef.current = !0;
  }), React.useCallback(function(to, options2) {
    if (options2 === void 0 && (options2 = {}), warning(activeRef.current, navigateEffectWarning), !activeRef.current)
      return;
    if (typeof to == "number") {
      navigator2.go(to);
      return;
    }
    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options2.relative === "path");
    dataRouterContext == null && basename !== "/" && (path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname])), (options2.replace ? navigator2.replace : navigator2.push)(path, options2.state, options2);
  }, [basename, navigator2, routePathnamesJson, locationPathname, dataRouterContext]);
}
function useOutletContext() {
  return React.useContext(OutletContext);
}
function useOutlet(context) {
  let outlet = React.useContext(RouteContext).outlet;
  return outlet && /* @__PURE__ */ React.createElement(OutletContext.Provider, {
    value: context
  }, outlet);
}
function useParams() {
  let {
    matches
  } = React.useContext(RouteContext), routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
function useResolvedPath(to, _temp2) {
  let {
    relative
  } = _temp2 === void 0 ? {} : _temp2, {
    matches
  } = React.useContext(RouteContext), {
    pathname: locationPathname
  } = useLocation(), routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map((match) => match.pathnameBase));
  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [to, routePathnamesJson, locationPathname, relative]);
}
function useRoutes(routes2, locationArg) {
  return useRoutesImpl(routes2, locationArg);
}
function useRoutesImpl(routes2, locationArg, dataRouterState) {
  useInRouterContext() || invariant(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useRoutes() may be used only in the context of a <Router> component."
  );
  let {
    navigator: navigator2
  } = React.useContext(NavigationContext), {
    matches: parentMatches
  } = React.useContext(RouteContext), routeMatch = parentMatches[parentMatches.length - 1], parentParams = routeMatch ? routeMatch.params : {}, parentPathname = routeMatch ? routeMatch.pathname : "/", parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/", parentRoute = routeMatch && routeMatch.route;
  {
    let parentPath = parentRoute && parentRoute.path || "";
    warningOnce(parentPathname, !parentRoute || parentPath.endsWith("*"), "You rendered descendant <Routes> (or called `useRoutes()`) at " + ('"' + parentPathname + '" (under <Route path="' + parentPath + '">) but the ') + `parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

` + ('Please change the parent <Route path="' + parentPath + '"> to <Route ') + ('path="' + (parentPath === "/" ? "*" : parentPath + "/*") + '">.'));
  }
  let locationFromContext = useLocation(), location;
  if (locationArg) {
    var _parsedLocationArg$pa;
    let parsedLocationArg = typeof locationArg == "string" ? parsePath(locationArg) : locationArg;
    parentPathnameBase === "/" || (_parsedLocationArg$pa = parsedLocationArg.pathname) != null && _parsedLocationArg$pa.startsWith(parentPathnameBase) || invariant(!1, "When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, the location pathname must begin with the portion of the URL pathname that was " + ('matched by all parent routes. The current pathname base is "' + parentPathnameBase + '" ') + ('but pathname "' + parsedLocationArg.pathname + '" was given in the `location` prop.')), location = parsedLocationArg;
  } else
    location = locationFromContext;
  let pathname = location.pathname || "/", remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/", matches = matchRoutes(routes2, {
    pathname: remainingPathname
  });
  warning(parentRoute || matches != null, 'No routes matched location "' + location.pathname + location.search + location.hash + '" '), warning(matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0, 'Matched leaf route at location "' + location.pathname + location.search + location.hash + '" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.');
  let renderedMatches = _renderMatches(matches && matches.map((match) => Object.assign({}, match, {
    params: Object.assign({}, parentParams, match.params),
    pathname: joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname
    ]),
    pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase
    ])
  })), parentMatches, dataRouterState);
  return locationArg && renderedMatches ? /* @__PURE__ */ React.createElement(LocationContext.Provider, {
    value: {
      location: _extends2({
        pathname: "/",
        search: "",
        hash: "",
        state: null,
        key: "default"
      }, location),
      navigationType: Action.Pop
    }
  }, renderedMatches) : renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError(), message = isRouteErrorResponse(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error), stack = error instanceof Error ? error.stack : null, lightgrey = "rgba(200,200,200, 0.5)", preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  }, codeStyles = {
    padding: "2px 4px",
    backgroundColor: lightgrey
  }, devInfo = null;
  return console.error("Error handled by React Router default ErrorBoundary:", error), devInfo = /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("p", null, "\u{1F4BF} Hey developer \u{1F44B}"), /* @__PURE__ */ React.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", /* @__PURE__ */ React.createElement("code", {
    style: codeStyles
  }, "ErrorBoundary"), " or", " ", /* @__PURE__ */ React.createElement("code", {
    style: codeStyles
  }, "errorElement"), " prop on your route.")), /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ React.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message), stack ? /* @__PURE__ */ React.createElement("pre", {
    style: preStyles
  }, stack) : null, devInfo);
}
function RenderedRoute(_ref) {
  let {
    routeContext,
    match,
    children
  } = _ref, dataRouterContext = React.useContext(DataRouterContext);
  return dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary) && (dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id), /* @__PURE__ */ React.createElement(RouteContext.Provider, {
    value: routeContext
  }, children);
}
function _renderMatches(matches, parentMatches, dataRouterState) {
  var _dataRouterState2;
  if (parentMatches === void 0 && (parentMatches = []), dataRouterState === void 0 && (dataRouterState = null), matches == null) {
    var _dataRouterState;
    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors)
      matches = dataRouterState.matches;
    else
      return null;
  }
  let renderedMatches = matches, errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex((m) => m.route.id && (errors == null ? void 0 : errors[m.route.id]));
    errorIndex >= 0 || invariant(!1, "Could not find a matching route for errors on route IDs: " + Object.keys(errors).join(",")), renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }
  return renderedMatches.reduceRight((outlet, match, index) => {
    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null, errorElement = null;
    dataRouterState && (errorElement = match.route.errorElement || defaultErrorElement);
    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1)), getChildren = () => {
      let children;
      return error ? children = errorElement : match.route.Component ? children = /* @__PURE__ */ React.createElement(match.route.Component, null) : match.route.element ? children = match.route.element : children = outlet, /* @__PURE__ */ React.createElement(RenderedRoute, {
        match,
        routeContext: {
          outlet,
          matches: matches2,
          isDataRoute: dataRouterState != null
        },
        children
      });
    };
    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      revalidation: dataRouterState.revalidation,
      component: errorElement,
      error,
      children: getChildren(),
      routeContext: {
        outlet: null,
        matches: matches2,
        isDataRoute: !0
      }
    }) : getChildren();
  }, null);
}
function getDataRouterConsoleError(hookName) {
  return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function useDataRouterContext(hookName) {
  let ctx = React.useContext(DataRouterContext);
  return ctx || invariant(!1, getDataRouterConsoleError(hookName)), ctx;
}
function useDataRouterState(hookName) {
  let state = React.useContext(DataRouterStateContext);
  return state || invariant(!1, getDataRouterConsoleError(hookName)), state;
}
function useRouteContext(hookName) {
  let route = React.useContext(RouteContext);
  return route || invariant(!1, getDataRouterConsoleError(hookName)), route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext(hookName), thisRoute = route.matches[route.matches.length - 1];
  return thisRoute.route.id || invariant(!1, hookName + ' can only be used on routes that contain a unique "id"'), thisRoute.route.id;
}
function useRouteId() {
  return useCurrentRouteId(DataRouterStateHook.UseRouteId);
}
function useNavigation() {
  return useDataRouterState(DataRouterStateHook.UseNavigation).navigation;
}
function useRevalidator() {
  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator), state = useDataRouterState(DataRouterStateHook.UseRevalidator);
  return {
    revalidate: dataRouterContext.router.revalidate,
    state: state.revalidation
  };
}
function useMatches() {
  let {
    matches,
    loaderData
  } = useDataRouterState(DataRouterStateHook.UseMatches);
  return React.useMemo(() => matches.map((match) => {
    let {
      pathname,
      params
    } = match;
    return {
      id: match.route.id,
      pathname,
      params,
      data: loaderData[match.route.id],
      handle: match.route.handle
    };
  }), [matches, loaderData]);
}
function useLoaderData() {
  let state = useDataRouterState(DataRouterStateHook.UseLoaderData), routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);
  if (state.errors && state.errors[routeId] != null) {
    console.error("You cannot `useLoaderData` in an errorElement (routeId: " + routeId + ")");
    return;
  }
  return state.loaderData[routeId];
}
function useRouteLoaderData(routeId) {
  return useDataRouterState(DataRouterStateHook.UseRouteLoaderData).loaderData[routeId];
}
function useActionData() {
  let state = useDataRouterState(DataRouterStateHook.UseActionData);
  return React.useContext(RouteContext) || invariant(!1, "useActionData must be used inside a RouteContext"), Object.values((state == null ? void 0 : state.actionData) || {})[0];
}
function useRouteError() {
  var _state$errors;
  let error = React.useContext(RouteErrorContext), state = useDataRouterState(DataRouterStateHook.UseRouteError), routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);
  return error || ((_state$errors = state.errors) == null ? void 0 : _state$errors[routeId]);
}
function useAsyncValue() {
  let value = React.useContext(AwaitContext);
  return value == null ? void 0 : value._data;
}
function useAsyncError() {
  let value = React.useContext(AwaitContext);
  return value == null ? void 0 : value._error;
}
function useBlocker(shouldBlock) {
  let {
    router
  } = useDataRouterContext(DataRouterHook.UseBlocker), state = useDataRouterState(DataRouterStateHook.UseBlocker), [blockerKey] = React.useState(() => String(++blockerId)), blockerFunction = React.useCallback((args) => typeof shouldBlock == "function" ? !!shouldBlock(args) : !!shouldBlock, [shouldBlock]), blocker = router.getBlocker(blockerKey, blockerFunction);
  return React.useEffect(() => () => router.deleteBlocker(blockerKey), [router, blockerKey]), state.blockers.get(blockerKey) || blocker;
}
function useNavigateStable() {
  let {
    router
  } = useDataRouterContext(DataRouterHook.UseNavigateStable), id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable), activeRef = React.useRef(!1);
  return useIsomorphicLayoutEffect(() => {
    activeRef.current = !0;
  }), React.useCallback(function(to, options2) {
    options2 === void 0 && (options2 = {}), warning(activeRef.current, navigateEffectWarning), activeRef.current && (typeof to == "number" ? router.navigate(to) : router.navigate(to, _extends2({
      fromRouteId: id
    }, options2)));
  }, [router, id]);
}
function warningOnce(key, cond, message) {
  !cond && !alreadyWarned2[key] && (alreadyWarned2[key] = !0, warning(!1, message));
}
function RouterProvider(_ref) {
  let {
    fallbackElement,
    router
  } = _ref, [state, setState] = React.useState(router.state);
  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);
  let navigator2 = React.useMemo(() => ({
    createHref: router.createHref,
    encodeLocation: router.encodeLocation,
    go: (n) => router.navigate(n),
    push: (to, state2, opts) => router.navigate(to, {
      state: state2,
      preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
    }),
    replace: (to, state2, opts) => router.navigate(to, {
      replace: !0,
      state: state2,
      preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
    })
  }), [router]), basename = router.basename || "/", dataRouterContext = React.useMemo(() => ({
    router,
    navigator: navigator2,
    static: !1,
    basename
  }), [router, navigator2, basename]);
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(DataRouterContext.Provider, {
    value: dataRouterContext
  }, /* @__PURE__ */ React.createElement(DataRouterStateContext.Provider, {
    value: state
  }, /* @__PURE__ */ React.createElement(Router, {
    basename: router.basename,
    location: router.state.location,
    navigationType: router.state.historyAction,
    navigator: navigator2
  }, router.state.initialized ? /* @__PURE__ */ React.createElement(DataRoutes, {
    routes: router.routes,
    state
  }) : fallbackElement))), null);
}
function DataRoutes(_ref2) {
  let {
    routes: routes2,
    state
  } = _ref2;
  return useRoutesImpl(routes2, void 0, state);
}
function MemoryRouter(_ref3) {
  let {
    basename,
    children,
    initialEntries,
    initialIndex
  } = _ref3, historyRef = React.useRef();
  historyRef.current == null && (historyRef.current = createMemoryHistory({
    initialEntries,
    initialIndex,
    v5Compat: !0
  }));
  let history = historyRef.current, [state, setState] = React.useState({
    action: history.action,
    location: history.location
  });
  return React.useLayoutEffect(() => history.listen(setState), [history]), /* @__PURE__ */ React.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
function Navigate(_ref4) {
  let {
    to,
    replace,
    state,
    relative
  } = _ref4;
  useInRouterContext() || invariant(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of
    // the router loaded. We can help them understand how to avoid that.
    "<Navigate> may be used only in the context of a <Router> component."
  ), warning(!React.useContext(NavigationContext).static, "<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.");
  let {
    matches
  } = React.useContext(RouteContext), {
    pathname: locationPathname
  } = useLocation(), navigate = useNavigate(), path = resolveTo(to, getPathContributingMatches(matches).map((match) => match.pathnameBase), locationPathname, relative === "path"), jsonPath = JSON.stringify(path);
  return React.useEffect(() => navigate(JSON.parse(jsonPath), {
    replace,
    state,
    relative
  }), [navigate, jsonPath, relative, replace, state]), null;
}
function Outlet(props) {
  return useOutlet(props.context);
}
function Route(_props) {
  invariant(!1, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.");
}
function Router(_ref5) {
  let {
    basename: basenameProp = "/",
    children = null,
    location: locationProp,
    navigationType = Action.Pop,
    navigator: navigator2,
    static: staticProp = !1
  } = _ref5;
  useInRouterContext() && invariant(!1, "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.");
  let basename = basenameProp.replace(/^\/*/, "/"), navigationContext = React.useMemo(() => ({
    basename,
    navigator: navigator2,
    static: staticProp
  }), [basename, navigator2, staticProp]);
  typeof locationProp == "string" && (locationProp = parsePath(locationProp));
  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp, locationContext = React.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    return trailingPathname == null ? null : {
      location: {
        pathname: trailingPathname,
        search,
        hash,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search, hash, state, key, navigationType]);
  return warning(locationContext != null, '<Router basename="' + basename + '"> is not able to match the URL ' + ('"' + pathname + search + hash + '" because it does not start with the ') + "basename, so the <Router> won't render anything."), locationContext == null ? null : /* @__PURE__ */ React.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /* @__PURE__ */ React.createElement(LocationContext.Provider, {
    children,
    value: locationContext
  }));
}
function Routes(_ref6) {
  let {
    children,
    location
  } = _ref6;
  return useRoutes(createRoutesFromChildren(children), location);
}
function Await(_ref7) {
  let {
    children,
    errorElement,
    resolve
  } = _ref7;
  return /* @__PURE__ */ React.createElement(AwaitErrorBoundary, {
    resolve,
    errorElement
  }, /* @__PURE__ */ React.createElement(ResolveAwait, null, children));
}
function ResolveAwait(_ref8) {
  let {
    children
  } = _ref8, data = useAsyncValue(), toRender = typeof children == "function" ? children(data) : children;
  return /* @__PURE__ */ React.createElement(React.Fragment, null, toRender);
}
function createRoutesFromChildren(children, parentPath) {
  parentPath === void 0 && (parentPath = []);
  let routes2 = [];
  return React.Children.forEach(children, (element, index) => {
    if (!/* @__PURE__ */ React.isValidElement(element))
      return;
    let treePath = [...parentPath, index];
    if (element.type === React.Fragment) {
      routes2.push.apply(routes2, createRoutesFromChildren(element.props.children, treePath));
      return;
    }
    element.type !== Route && invariant(!1, "[" + (typeof element.type == "string" ? element.type : element.type.name) + "] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>"), !element.props.index || !element.props.children || invariant(!1, "An index route cannot have child routes.");
    let route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      Component: element.props.Component,
      index: element.props.index,
      path: element.props.path,
      loader: element.props.loader,
      action: element.props.action,
      errorElement: element.props.errorElement,
      ErrorBoundary: element.props.ErrorBoundary,
      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle,
      lazy: element.props.lazy
    };
    element.props.children && (route.children = createRoutesFromChildren(element.props.children, treePath)), routes2.push(route);
  }), routes2;
}
function renderMatches(matches) {
  return _renderMatches(matches);
}
function mapRouteProperties(route) {
  let updates = {
    // Note: this check also occurs in createRoutesFromChildren so update
    // there if you change this -- please and thank you!
    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null
  };
  return route.Component && (route.element && warning(!1, "You should not include both `Component` and `element` on your route - `Component` will be used."), Object.assign(updates, {
    element: /* @__PURE__ */ React.createElement(route.Component),
    Component: void 0
  })), route.ErrorBoundary && (route.errorElement && warning(!1, "You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used."), Object.assign(updates, {
    errorElement: /* @__PURE__ */ React.createElement(route.ErrorBoundary),
    ErrorBoundary: void 0
  })), updates;
}
function createMemoryRouter(routes2, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    future: _extends2({}, opts == null ? void 0 : opts.future, {
      v7_prependBasename: !0
    }),
    history: createMemoryHistory({
      initialEntries: opts == null ? void 0 : opts.initialEntries,
      initialIndex: opts == null ? void 0 : opts.initialIndex
    }),
    hydrationData: opts == null ? void 0 : opts.hydrationData,
    routes: routes2,
    mapRouteProperties
  }).initialize();
}
var React, DataRouterContext, DataRouterStateContext, AwaitContext, NavigationContext, LocationContext, RouteContext, RouteErrorContext, navigateEffectWarning, OutletContext, defaultErrorElement, RenderErrorBoundary, DataRouterHook, DataRouterStateHook, blockerId, alreadyWarned2, AwaitRenderStatus, neverSettledPromise, AwaitErrorBoundary, init_dist = __esm({
  "node_modules/react-router/dist/index.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    React = __toESM(require_react());
    init_router();
    init_router();
    DataRouterContext = /* @__PURE__ */ React.createContext(null);
    DataRouterContext.displayName = "DataRouter";
    DataRouterStateContext = /* @__PURE__ */ React.createContext(null);
    DataRouterStateContext.displayName = "DataRouterState";
    AwaitContext = /* @__PURE__ */ React.createContext(null);
    AwaitContext.displayName = "Await";
    NavigationContext = /* @__PURE__ */ React.createContext(null);
    NavigationContext.displayName = "Navigation";
    LocationContext = /* @__PURE__ */ React.createContext(null);
    LocationContext.displayName = "Location";
    RouteContext = /* @__PURE__ */ React.createContext({
      outlet: null,
      matches: [],
      isDataRoute: !1
    });
    RouteContext.displayName = "Route";
    RouteErrorContext = /* @__PURE__ */ React.createContext(null);
    RouteErrorContext.displayName = "RouteError";
    navigateEffectWarning = "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
    OutletContext = /* @__PURE__ */ React.createContext(null);
    defaultErrorElement = /* @__PURE__ */ React.createElement(DefaultErrorComponent, null), RenderErrorBoundary = class extends React.Component {
      constructor(props) {
        super(props), this.state = {
          location: props.location,
          revalidation: props.revalidation,
          error: props.error
        };
      }
      static getDerivedStateFromError(error) {
        return {
          error
        };
      }
      static getDerivedStateFromProps(props, state) {
        return state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle" ? {
          error: props.error,
          location: props.location,
          revalidation: props.revalidation
        } : {
          error: props.error || state.error,
          location: state.location,
          revalidation: props.revalidation || state.revalidation
        };
      }
      componentDidCatch(error, errorInfo) {
        console.error("React Router caught the following error during render", error, errorInfo);
      }
      render() {
        return this.state.error ? /* @__PURE__ */ React.createElement(RouteContext.Provider, {
          value: this.props.routeContext
        }, /* @__PURE__ */ React.createElement(RouteErrorContext.Provider, {
          value: this.state.error,
          children: this.props.component
        })) : this.props.children;
      }
    };
    (function(DataRouterHook3) {
      DataRouterHook3.UseBlocker = "useBlocker", DataRouterHook3.UseRevalidator = "useRevalidator", DataRouterHook3.UseNavigateStable = "useNavigate";
    })(DataRouterHook || (DataRouterHook = {}));
    (function(DataRouterStateHook3) {
      DataRouterStateHook3.UseBlocker = "useBlocker", DataRouterStateHook3.UseLoaderData = "useLoaderData", DataRouterStateHook3.UseActionData = "useActionData", DataRouterStateHook3.UseRouteError = "useRouteError", DataRouterStateHook3.UseNavigation = "useNavigation", DataRouterStateHook3.UseRouteLoaderData = "useRouteLoaderData", DataRouterStateHook3.UseMatches = "useMatches", DataRouterStateHook3.UseRevalidator = "useRevalidator", DataRouterStateHook3.UseNavigateStable = "useNavigate", DataRouterStateHook3.UseRouteId = "useRouteId";
    })(DataRouterStateHook || (DataRouterStateHook = {}));
    blockerId = 0;
    alreadyWarned2 = {};
    (function(AwaitRenderStatus2) {
      AwaitRenderStatus2[AwaitRenderStatus2.pending = 0] = "pending", AwaitRenderStatus2[AwaitRenderStatus2.success = 1] = "success", AwaitRenderStatus2[AwaitRenderStatus2.error = 2] = "error";
    })(AwaitRenderStatus || (AwaitRenderStatus = {}));
    neverSettledPromise = new Promise(() => {
    }), AwaitErrorBoundary = class extends React.Component {
      constructor(props) {
        super(props), this.state = {
          error: null
        };
      }
      static getDerivedStateFromError(error) {
        return {
          error
        };
      }
      componentDidCatch(error, errorInfo) {
        console.error("<Await> caught the following error during render", error, errorInfo);
      }
      render() {
        let {
          children,
          errorElement,
          resolve
        } = this.props, promise = null, status = AwaitRenderStatus.pending;
        if (!(resolve instanceof Promise))
          status = AwaitRenderStatus.success, promise = Promise.resolve(), Object.defineProperty(promise, "_tracked", {
            get: () => !0
          }), Object.defineProperty(promise, "_data", {
            get: () => resolve
          });
        else if (this.state.error) {
          status = AwaitRenderStatus.error;
          let renderError = this.state.error;
          promise = Promise.reject().catch(() => {
          }), Object.defineProperty(promise, "_tracked", {
            get: () => !0
          }), Object.defineProperty(promise, "_error", {
            get: () => renderError
          });
        } else
          resolve._tracked ? (promise = resolve, status = promise._error !== void 0 ? AwaitRenderStatus.error : promise._data !== void 0 ? AwaitRenderStatus.success : AwaitRenderStatus.pending) : (status = AwaitRenderStatus.pending, Object.defineProperty(resolve, "_tracked", {
            get: () => !0
          }), promise = resolve.then((data) => Object.defineProperty(resolve, "_data", {
            get: () => data
          }), (error) => Object.defineProperty(resolve, "_error", {
            get: () => error
          })));
        if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError)
          throw neverSettledPromise;
        if (status === AwaitRenderStatus.error && !errorElement)
          throw promise._error;
        if (status === AwaitRenderStatus.error)
          return /* @__PURE__ */ React.createElement(AwaitContext.Provider, {
            value: promise,
            children: errorElement
          });
        if (status === AwaitRenderStatus.success)
          return /* @__PURE__ */ React.createElement(AwaitContext.Provider, {
            value: promise,
            children
          });
        throw promise;
      }
    };
  }
});

// node_modules/react-router-dom/dist/index.js
var dist_exports2 = {};
__export(dist_exports2, {
  AbortedDeferredError: () => AbortedDeferredError,
  Await: () => Await,
  BrowserRouter: () => BrowserRouter,
  Form: () => Form,
  HashRouter: () => HashRouter,
  Link: () => Link,
  MemoryRouter: () => MemoryRouter,
  NavLink: () => NavLink,
  Navigate: () => Navigate,
  NavigationType: () => Action,
  Outlet: () => Outlet,
  Route: () => Route,
  Router: () => Router,
  RouterProvider: () => RouterProvider,
  Routes: () => Routes,
  ScrollRestoration: () => ScrollRestoration,
  UNSAFE_DataRouterContext: () => DataRouterContext,
  UNSAFE_DataRouterStateContext: () => DataRouterStateContext,
  UNSAFE_LocationContext: () => LocationContext,
  UNSAFE_NavigationContext: () => NavigationContext,
  UNSAFE_RouteContext: () => RouteContext,
  UNSAFE_useRouteId: () => useRouteId,
  UNSAFE_useScrollRestoration: () => useScrollRestoration,
  createBrowserRouter: () => createBrowserRouter,
  createHashRouter: () => createHashRouter,
  createMemoryRouter: () => createMemoryRouter,
  createPath: () => createPath,
  createRoutesFromChildren: () => createRoutesFromChildren,
  createRoutesFromElements: () => createRoutesFromChildren,
  createSearchParams: () => createSearchParams,
  defer: () => defer,
  generatePath: () => generatePath,
  isRouteErrorResponse: () => isRouteErrorResponse,
  json: () => json,
  matchPath: () => matchPath,
  matchRoutes: () => matchRoutes,
  parsePath: () => parsePath,
  redirect: () => redirect,
  renderMatches: () => renderMatches,
  resolvePath: () => resolvePath,
  unstable_HistoryRouter: () => HistoryRouter,
  unstable_useBlocker: () => useBlocker,
  unstable_usePrompt: () => usePrompt,
  useActionData: () => useActionData,
  useAsyncError: () => useAsyncError,
  useAsyncValue: () => useAsyncValue,
  useBeforeUnload: () => useBeforeUnload,
  useFetcher: () => useFetcher,
  useFetchers: () => useFetchers,
  useFormAction: () => useFormAction,
  useHref: () => useHref,
  useInRouterContext: () => useInRouterContext,
  useLinkClickHandler: () => useLinkClickHandler,
  useLoaderData: () => useLoaderData,
  useLocation: () => useLocation,
  useMatch: () => useMatch,
  useMatches: () => useMatches,
  useNavigate: () => useNavigate,
  useNavigation: () => useNavigation,
  useNavigationType: () => useNavigationType,
  useOutlet: () => useOutlet,
  useOutletContext: () => useOutletContext,
  useParams: () => useParams,
  useResolvedPath: () => useResolvedPath,
  useRevalidator: () => useRevalidator,
  useRouteError: () => useRouteError,
  useRouteLoaderData: () => useRouteLoaderData,
  useRoutes: () => useRoutes,
  useSearchParams: () => useSearchParams,
  useSubmit: () => useSubmit
});
function _extends3() {
  return _extends3 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends3.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {}, sourceKeys = Object.keys(source), key, i;
  for (i = 0; i < sourceKeys.length; i++)
    key = sourceKeys[i], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
function isHtmlElement(object) {
  return object != null && typeof object.tagName == "string";
}
function isButtonElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function isFormElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function isInputElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return event.button === 0 && // Ignore everything but left clicks
  (!target || target === "_self") && // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event);
}
function createSearchParams(init) {
  return init === void 0 && (init = ""), new URLSearchParams(typeof init == "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {
    let value = init[key];
    return memo.concat(Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]);
  }, []));
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
  let searchParams = createSearchParams(locationSearch);
  if (defaultSearchParams)
    for (let key of defaultSearchParams.keys())
      searchParams.has(key) || defaultSearchParams.getAll(key).forEach((value) => {
        searchParams.append(key, value);
      });
  return searchParams;
}
function getFormSubmissionInfo(target, options2, basename) {
  let method, action = null, encType, formData;
  if (isFormElement(target)) {
    let submissionTrigger = options2.submissionTrigger;
    if (options2.action)
      action = options2.action;
    else {
      let attr = target.getAttribute("action");
      action = attr ? stripBasename(attr, basename) : null;
    }
    method = options2.method || target.getAttribute("method") || defaultMethod, encType = options2.encType || target.getAttribute("enctype") || defaultEncType, formData = new FormData(target), submissionTrigger && submissionTrigger.name && formData.append(submissionTrigger.name, submissionTrigger.value);
  } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
    let form = target.form;
    if (form == null)
      throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
    if (options2.action)
      action = options2.action;
    else {
      let attr = target.getAttribute("formaction") || form.getAttribute("action");
      action = attr ? stripBasename(attr, basename) : null;
    }
    method = options2.method || target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod, encType = options2.encType || target.getAttribute("formenctype") || form.getAttribute("enctype") || defaultEncType, formData = new FormData(form), target.name && formData.append(target.name, target.value);
  } else {
    if (isHtmlElement(target))
      throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
    if (method = options2.method || defaultMethod, action = options2.action || null, encType = options2.encType || defaultEncType, target instanceof FormData)
      formData = target;
    else if (formData = new FormData(), target instanceof URLSearchParams)
      for (let [name, value] of target)
        formData.append(name, value);
    else if (target != null)
      for (let name of Object.keys(target))
        formData.append(name, target[name]);
  }
  return {
    action,
    method: method.toLowerCase(),
    encType,
    formData
  };
}
function createBrowserRouter(routes2, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    future: _extends3({}, opts == null ? void 0 : opts.future, {
      v7_prependBasename: !0
    }),
    history: createBrowserHistory({
      window: opts == null ? void 0 : opts.window
    }),
    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
    routes: routes2,
    mapRouteProperties
  }).initialize();
}
function createHashRouter(routes2, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    future: _extends3({}, opts == null ? void 0 : opts.future, {
      v7_prependBasename: !0
    }),
    history: createHashHistory({
      window: opts == null ? void 0 : opts.window
    }),
    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
    routes: routes2,
    mapRouteProperties
  }).initialize();
}
function parseHydrationData() {
  var _window;
  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;
  return state && state.errors && (state = _extends3({}, state, {
    errors: deserializeErrors(state.errors)
  })), state;
}
function deserializeErrors(errors) {
  if (!errors)
    return null;
  let entries = Object.entries(errors), serialized = {};
  for (let [key, val] of entries)
    if (val && val.__type === "RouteErrorResponse")
      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === !0);
    else if (val && val.__type === "Error") {
      let error = new Error(val.message);
      error.stack = "", serialized[key] = error;
    } else
      serialized[key] = val;
  return serialized;
}
function BrowserRouter(_ref) {
  let {
    basename,
    children,
    window: window2
  } = _ref, historyRef = React2.useRef();
  historyRef.current == null && (historyRef.current = createBrowserHistory({
    window: window2,
    v5Compat: !0
  }));
  let history = historyRef.current, [state, setState] = React2.useState({
    action: history.action,
    location: history.location
  });
  return React2.useLayoutEffect(() => history.listen(setState), [history]), /* @__PURE__ */ React2.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
function HashRouter(_ref2) {
  let {
    basename,
    children,
    window: window2
  } = _ref2, historyRef = React2.useRef();
  historyRef.current == null && (historyRef.current = createHashHistory({
    window: window2,
    v5Compat: !0
  }));
  let history = historyRef.current, [state, setState] = React2.useState({
    action: history.action,
    location: history.location
  });
  return React2.useLayoutEffect(() => history.listen(setState), [history]), /* @__PURE__ */ React2.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
function HistoryRouter(_ref3) {
  let {
    basename,
    children,
    history
  } = _ref3, [state, setState] = React2.useState({
    action: history.action,
    location: history.location
  });
  return React2.useLayoutEffect(() => history.listen(setState), [history]), /* @__PURE__ */ React2.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
function ScrollRestoration(_ref7) {
  let {
    getKey,
    storageKey
  } = _ref7;
  return useScrollRestoration({
    getKey,
    storageKey
  }), null;
}
function getDataRouterConsoleError2(hookName) {
  return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function useDataRouterContext2(hookName) {
  let ctx = React2.useContext(DataRouterContext);
  return ctx || invariant(!1, getDataRouterConsoleError2(hookName)), ctx;
}
function useDataRouterState2(hookName) {
  let state = React2.useContext(DataRouterStateContext);
  return state || invariant(!1, getDataRouterConsoleError2(hookName)), state;
}
function useLinkClickHandler(to, _temp) {
  let {
    target,
    replace: replaceProp,
    state,
    preventScrollReset,
    relative
  } = _temp === void 0 ? {} : _temp, navigate = useNavigate(), location = useLocation(), path = useResolvedPath(to, {
    relative
  });
  return React2.useCallback((event) => {
    if (shouldProcessLinkClick(event, target)) {
      event.preventDefault();
      let replace = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);
      navigate(to, {
        replace,
        state,
        preventScrollReset,
        relative
      });
    }
  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);
}
function useSearchParams(defaultInit) {
  warning(typeof URLSearchParams < "u", "You cannot use the `useSearchParams` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params\n\nIf you're unsure how to load polyfills, we recommend you check out https://polyfill.io/v3/ which provides some recommendations about how to load polyfills only for users that need them, instead of for every user.");
  let defaultSearchParamsRef = React2.useRef(createSearchParams(defaultInit)), hasSetSearchParamsRef = React2.useRef(!1), location = useLocation(), searchParams = React2.useMemo(() => (
    // Only merge in the defaults if we haven't yet called setSearchParams.
    // Once we call that we want those to take precedence, otherwise you can't
    // remove a param with setSearchParams({}) if it has an initial value
    getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)
  ), [location.search]), navigate = useNavigate(), setSearchParams = React2.useCallback((nextInit, navigateOptions) => {
    let newSearchParams = createSearchParams(typeof nextInit == "function" ? nextInit(searchParams) : nextInit);
    hasSetSearchParamsRef.current = !0, navigate("?" + newSearchParams, navigateOptions);
  }, [navigate, searchParams]);
  return [searchParams, setSearchParams];
}
function useSubmit() {
  return useSubmitImpl();
}
function useSubmitImpl(fetcherKey, fetcherRouteId) {
  let {
    router
  } = useDataRouterContext2(DataRouterHook2.UseSubmitImpl), {
    basename
  } = React2.useContext(NavigationContext), currentRouteId = useRouteId();
  return React2.useCallback(function(target, options2) {
    if (options2 === void 0 && (options2 = {}), typeof document > "u")
      throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
    let {
      action,
      method,
      encType,
      formData
    } = getFormSubmissionInfo(target, options2, basename), opts = {
      preventScrollReset: options2.preventScrollReset,
      formData,
      formMethod: method,
      formEncType: encType
    };
    fetcherKey ? (fetcherRouteId == null && invariant(!1, "No routeId available for useFetcher()"), router.fetch(fetcherKey, fetcherRouteId, action, opts)) : router.navigate(action, _extends3({}, opts, {
      replace: options2.replace,
      fromRouteId: currentRouteId
    }));
  }, [router, basename, fetcherKey, fetcherRouteId, currentRouteId]);
}
function useFormAction(action, _temp2) {
  let {
    relative
  } = _temp2 === void 0 ? {} : _temp2, {
    basename
  } = React2.useContext(NavigationContext), routeContext = React2.useContext(RouteContext);
  routeContext || invariant(!1, "useFormAction must be used inside a RouteContext");
  let [match] = routeContext.matches.slice(-1), path = _extends3({}, useResolvedPath(action || ".", {
    relative
  })), location = useLocation();
  if (action == null && (path.search = location.search, path.hash = location.hash, match.route.index)) {
    let params = new URLSearchParams(path.search);
    params.delete("index"), path.search = params.toString() ? "?" + params.toString() : "";
  }
  return (!action || action === ".") && match.route.index && (path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index"), basename !== "/" && (path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname])), createPath(path);
}
function createFetcherForm(fetcherKey, routeId) {
  let FetcherForm = /* @__PURE__ */ React2.forwardRef((props, ref) => /* @__PURE__ */ React2.createElement(FormImpl, _extends3({}, props, {
    ref,
    fetcherKey,
    routeId
  })));
  return FetcherForm.displayName = "fetcher.Form", FetcherForm;
}
function useFetcher() {
  var _route$matches;
  let {
    router
  } = useDataRouterContext2(DataRouterHook2.UseFetcher), route = React2.useContext(RouteContext);
  route || invariant(!1, "useFetcher must be used inside a RouteContext");
  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;
  routeId == null && invariant(!1, 'useFetcher can only be used on routes that contain a unique "id"');
  let [fetcherKey] = React2.useState(() => String(++fetcherId)), [Form2] = React2.useState(() => (routeId || invariant(!1, "No routeId available for fetcher.Form()"), createFetcherForm(fetcherKey, routeId))), [load] = React2.useState(() => (href) => {
    router || invariant(!1, "No router available for fetcher.load()"), routeId || invariant(!1, "No routeId available for fetcher.load()"), router.fetch(fetcherKey, routeId, href);
  }), submit = useSubmitImpl(fetcherKey, routeId), fetcher = router.getFetcher(fetcherKey), fetcherWithComponents = React2.useMemo(() => _extends3({
    Form: Form2,
    submit,
    load
  }, fetcher), [fetcher, Form2, submit, load]);
  return React2.useEffect(() => () => {
    if (!router) {
      console.warn("No router available to clean up from useFetcher()");
      return;
    }
    router.deleteFetcher(fetcherKey);
  }, [router, fetcherKey]), fetcherWithComponents;
}
function useFetchers() {
  return [...useDataRouterState2(DataRouterStateHook2.UseFetchers).fetchers.values()];
}
function useScrollRestoration(_temp3) {
  let {
    getKey,
    storageKey
  } = _temp3 === void 0 ? {} : _temp3, {
    router
  } = useDataRouterContext2(DataRouterHook2.UseScrollRestoration), {
    restoreScrollPosition,
    preventScrollReset
  } = useDataRouterState2(DataRouterStateHook2.UseScrollRestoration), location = useLocation(), matches = useMatches(), navigation = useNavigation();
  React2.useEffect(() => (window.history.scrollRestoration = "manual", () => {
    window.history.scrollRestoration = "auto";
  }), []), usePageHide(React2.useCallback(() => {
    if (navigation.state === "idle") {
      let key = (getKey ? getKey(location, matches) : null) || location.key;
      savedScrollPositions[key] = window.scrollY;
    }
    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions)), window.history.scrollRestoration = "auto";
  }, [storageKey, getKey, navigation.state, location, matches])), typeof document < "u" && (React2.useLayoutEffect(() => {
    try {
      let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);
      sessionPositions && (savedScrollPositions = JSON.parse(sessionPositions));
    } catch {
    }
  }, [storageKey]), React2.useLayoutEffect(() => {
    let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);
    return () => disableScrollRestoration && disableScrollRestoration();
  }, [router, getKey]), React2.useLayoutEffect(() => {
    if (restoreScrollPosition !== !1) {
      if (typeof restoreScrollPosition == "number") {
        window.scrollTo(0, restoreScrollPosition);
        return;
      }
      if (location.hash) {
        let el = document.getElementById(location.hash.slice(1));
        if (el) {
          el.scrollIntoView();
          return;
        }
      }
      preventScrollReset !== !0 && window.scrollTo(0, 0);
    }
  }, [location, restoreScrollPosition, preventScrollReset]));
}
function useBeforeUnload(callback, options2) {
  let {
    capture
  } = options2 || {};
  React2.useEffect(() => {
    let opts = capture != null ? {
      capture
    } : void 0;
    return window.addEventListener("beforeunload", callback, opts), () => {
      window.removeEventListener("beforeunload", callback, opts);
    };
  }, [callback, capture]);
}
function usePageHide(callback, options2) {
  let {
    capture
  } = options2 || {};
  React2.useEffect(() => {
    let opts = capture != null ? {
      capture
    } : void 0;
    return window.addEventListener("pagehide", callback, opts), () => {
      window.removeEventListener("pagehide", callback, opts);
    };
  }, [callback, capture]);
}
function usePrompt(_ref8) {
  let {
    when,
    message
  } = _ref8, blocker = useBlocker(when);
  React2.useEffect(() => {
    blocker.state === "blocked" && !when && blocker.reset();
  }, [blocker, when]), React2.useEffect(() => {
    blocker.state === "blocked" && (window.confirm(message) ? setTimeout(blocker.proceed, 0) : blocker.reset());
  }, [blocker, message]);
}
var React2, defaultMethod, defaultEncType, _excluded, _excluded2, _excluded3, isBrowser2, ABSOLUTE_URL_REGEX2, Link, NavLink, Form, FormImpl, DataRouterHook2, DataRouterStateHook2, fetcherId, SCROLL_RESTORATION_STORAGE_KEY, savedScrollPositions, init_dist2 = __esm({
  "node_modules/react-router-dom/dist/index.js"() {
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    React2 = __toESM(require_react());
    init_dist();
    init_dist();
    init_router();
    defaultMethod = "get", defaultEncType = "application/x-www-form-urlencoded";
    _excluded = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset"], _excluded2 = ["aria-current", "caseSensitive", "className", "end", "style", "to", "children"], _excluded3 = ["reloadDocument", "replace", "method", "action", "onSubmit", "fetcherKey", "routeId", "relative", "preventScrollReset"];
    HistoryRouter.displayName = "unstable_HistoryRouter";
    isBrowser2 = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, Link = /* @__PURE__ */ React2.forwardRef(function(_ref4, ref) {
      let {
        onClick,
        relative,
        reloadDocument,
        replace,
        state,
        target,
        to,
        preventScrollReset
      } = _ref4, rest = _objectWithoutPropertiesLoose(_ref4, _excluded), {
        basename
      } = React2.useContext(NavigationContext), absoluteHref, isExternal = !1;
      if (typeof to == "string" && ABSOLUTE_URL_REGEX2.test(to) && (absoluteHref = to, isBrowser2))
        try {
          let currentUrl = new URL(window.location.href), targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to), path = stripBasename(targetUrl.pathname, basename);
          targetUrl.origin === currentUrl.origin && path != null ? to = path + targetUrl.search + targetUrl.hash : isExternal = !0;
        } catch {
          warning(!1, '<Link to="' + to + '"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.');
        }
      let href = useHref(to, {
        relative
      }), internalOnClick = useLinkClickHandler(to, {
        replace,
        state,
        target,
        preventScrollReset,
        relative
      });
      function handleClick(event) {
        onClick && onClick(event), event.defaultPrevented || internalOnClick(event);
      }
      return (
        // eslint-disable-next-line jsx-a11y/anchor-has-content
        /* @__PURE__ */ React2.createElement("a", _extends3({}, rest, {
          href: absoluteHref || href,
          onClick: isExternal || reloadDocument ? onClick : handleClick,
          ref,
          target
        }))
      );
    });
    Link.displayName = "Link";
    NavLink = /* @__PURE__ */ React2.forwardRef(function(_ref5, ref) {
      let {
        "aria-current": ariaCurrentProp = "page",
        caseSensitive = !1,
        className: classNameProp = "",
        end = !1,
        style: styleProp,
        to,
        children
      } = _ref5, rest = _objectWithoutPropertiesLoose(_ref5, _excluded2), path = useResolvedPath(to, {
        relative: rest.relative
      }), location = useLocation(), routerState = React2.useContext(DataRouterStateContext), {
        navigator: navigator2
      } = React2.useContext(NavigationContext), toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname, locationPathname = location.pathname, nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;
      caseSensitive || (locationPathname = locationPathname.toLowerCase(), nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null, toPathname = toPathname.toLowerCase());
      let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/", isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/"), ariaCurrent = isActive ? ariaCurrentProp : void 0, className;
      typeof classNameProp == "function" ? className = classNameProp({
        isActive,
        isPending
      }) : className = [classNameProp, isActive ? "active" : null, isPending ? "pending" : null].filter(Boolean).join(" ");
      let style = typeof styleProp == "function" ? styleProp({
        isActive,
        isPending
      }) : styleProp;
      return /* @__PURE__ */ React2.createElement(Link, _extends3({}, rest, {
        "aria-current": ariaCurrent,
        className,
        ref,
        style,
        to
      }), typeof children == "function" ? children({
        isActive,
        isPending
      }) : children);
    });
    NavLink.displayName = "NavLink";
    Form = /* @__PURE__ */ React2.forwardRef((props, ref) => /* @__PURE__ */ React2.createElement(FormImpl, _extends3({}, props, {
      ref
    })));
    Form.displayName = "Form";
    FormImpl = /* @__PURE__ */ React2.forwardRef((_ref6, forwardedRef) => {
      let {
        reloadDocument,
        replace,
        method = defaultMethod,
        action,
        onSubmit,
        fetcherKey,
        routeId,
        relative,
        preventScrollReset
      } = _ref6, props = _objectWithoutPropertiesLoose(_ref6, _excluded3), submit = useSubmitImpl(fetcherKey, routeId), formMethod = method.toLowerCase() === "get" ? "get" : "post", formAction = useFormAction(action, {
        relative
      });
      return /* @__PURE__ */ React2.createElement("form", _extends3({
        ref: forwardedRef,
        method: formMethod,
        action: formAction,
        onSubmit: reloadDocument ? onSubmit : (event) => {
          if (onSubmit && onSubmit(event), event.defaultPrevented)
            return;
          event.preventDefault();
          let submitter = event.nativeEvent.submitter, submitMethod = (submitter == null ? void 0 : submitter.getAttribute("formmethod")) || method;
          submit(submitter || event.currentTarget, {
            method: submitMethod,
            replace,
            relative,
            preventScrollReset
          });
        }
      }, props));
    });
    FormImpl.displayName = "FormImpl";
    ScrollRestoration.displayName = "ScrollRestoration";
    (function(DataRouterHook3) {
      DataRouterHook3.UseScrollRestoration = "useScrollRestoration", DataRouterHook3.UseSubmitImpl = "useSubmitImpl", DataRouterHook3.UseFetcher = "useFetcher";
    })(DataRouterHook2 || (DataRouterHook2 = {}));
    (function(DataRouterStateHook3) {
      DataRouterStateHook3.UseFetchers = "useFetchers", DataRouterStateHook3.UseScrollRestoration = "useScrollRestoration";
    })(DataRouterStateHook2 || (DataRouterStateHook2 = {}));
    fetcherId = 0;
    SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions", savedScrollPositions = {};
  }
});

// node_modules/react-router-dom/server.js
var require_server = __commonJS({
  "node_modules/react-router-dom/server.js"(exports2) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var React7 = require_react(), router = (init_router(), __toCommonJS(router_exports)), reactRouter = (init_dist(), __toCommonJS(dist_exports)), reactRouterDom = (init_dist2(), __toCommonJS(dist_exports2));
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      return e && Object.keys(e).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e[k];
            }
          });
        }
      }), n.default = e, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React7);
    function StaticRouter({
      basename,
      children,
      location: locationProp = "/"
    }) {
      typeof locationProp == "string" && (locationProp = reactRouterDom.parsePath(locationProp));
      let action = router.Action.Pop, location = {
        pathname: locationProp.pathname || "/",
        search: locationProp.search || "",
        hash: locationProp.hash || "",
        state: locationProp.state || null,
        key: locationProp.key || "default"
      }, staticNavigator = getStatelessNavigator();
      return /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Router, {
        basename,
        children,
        location,
        navigationType: action,
        navigator: staticNavigator,
        static: !0
      });
    }
    function StaticRouterProvider2({
      context,
      router: router$1,
      hydrate = !0,
      nonce
    }) {
      router$1 && context || router.UNSAFE_invariant(!1, "You must provide `router` and `context` to <StaticRouterProvider>");
      let dataRouterContext = {
        router: router$1,
        navigator: getStatelessNavigator(),
        static: !0,
        staticContext: context,
        basename: context.basename || "/"
      }, hydrateScript = "";
      if (hydrate !== !1) {
        let data = {
          loaderData: context.loaderData,
          actionData: context.actionData,
          errors: serializeErrors2(context.errors)
        };
        hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${htmlEscape(JSON.stringify(JSON.stringify(data)))});`;
      }
      let {
        state
      } = dataRouterContext.router;
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterContext.Provider, {
        value: dataRouterContext
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterStateContext.Provider, {
        value: state
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Router, {
        basename: dataRouterContext.basename,
        location: state.location,
        navigationType: state.historyAction,
        navigator: dataRouterContext.navigator,
        static: dataRouterContext.static
      }, /* @__PURE__ */ React__namespace.createElement(DataRoutes2, {
        routes: router$1.routes,
        state
      })))), hydrateScript ? /* @__PURE__ */ React__namespace.createElement("script", {
        suppressHydrationWarning: !0,
        nonce,
        dangerouslySetInnerHTML: {
          __html: hydrateScript
        }
      }) : null);
    }
    function DataRoutes2({
      routes: routes2,
      state
    }) {
      return reactRouter.UNSAFE_useRoutesImpl(routes2, void 0, state);
    }
    function serializeErrors2(errors) {
      if (!errors)
        return null;
      let entries = Object.entries(errors), serialized = {};
      for (let [key, val] of entries)
        router.isRouteErrorResponse(val) ? serialized[key] = {
          ...val,
          __type: "RouteErrorResponse"
        } : val instanceof Error ? serialized[key] = {
          message: val.message,
          __type: "Error"
        } : serialized[key] = val;
      return serialized;
    }
    function getStatelessNavigator() {
      return {
        createHref,
        encodeLocation,
        push(to) {
          throw new Error(`You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)})\` somewhere in your app.`);
        },
        replace(to) {
          throw new Error(`You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)}, { replace: true })\` somewhere in your app.`);
        },
        go(delta) {
          throw new Error(`You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${delta})\` somewhere in your app.`);
        },
        back() {
          throw new Error("You cannot use navigator.back() on the server because it is a stateless environment.");
        },
        forward() {
          throw new Error("You cannot use navigator.forward() on the server because it is a stateless environment.");
        }
      };
    }
    function createStaticHandler2(routes2, opts) {
      return router.createStaticHandler(routes2, {
        ...opts,
        mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties
      });
    }
    function createStaticRouter2(routes2, context) {
      let manifest = {}, dataRoutes = router.UNSAFE_convertRoutesToDataRoutes(routes2, reactRouter.UNSAFE_mapRouteProperties, void 0, manifest), matches = context.matches.map((match) => {
        let route = manifest[match.route.id] || match.route;
        return {
          ...match,
          route
        };
      }), msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;
      return {
        get basename() {
          return context.basename;
        },
        get state() {
          return {
            historyAction: router.Action.Pop,
            location: context.location,
            matches,
            loaderData: context.loaderData,
            actionData: context.actionData,
            errors: context.errors,
            initialized: !0,
            navigation: router.IDLE_NAVIGATION,
            restoreScrollPosition: null,
            preventScrollReset: !1,
            revalidation: "idle",
            fetchers: /* @__PURE__ */ new Map(),
            blockers: /* @__PURE__ */ new Map()
          };
        },
        get routes() {
          return dataRoutes;
        },
        initialize() {
          throw msg("initialize");
        },
        subscribe() {
          throw msg("subscribe");
        },
        enableScrollRestoration() {
          throw msg("enableScrollRestoration");
        },
        navigate() {
          throw msg("navigate");
        },
        fetch() {
          throw msg("fetch");
        },
        revalidate() {
          throw msg("revalidate");
        },
        createHref,
        encodeLocation,
        getFetcher() {
          return router.IDLE_FETCHER;
        },
        deleteFetcher() {
          throw msg("deleteFetcher");
        },
        dispose() {
          throw msg("dispose");
        },
        getBlocker() {
          return router.IDLE_BLOCKER;
        },
        deleteBlocker() {
          throw msg("deleteBlocker");
        },
        _internalFetchControllers: /* @__PURE__ */ new Map(),
        _internalActiveDeferreds: /* @__PURE__ */ new Map(),
        _internalSetRoutes() {
          throw msg("_internalSetRoutes");
        }
      };
    }
    function createHref(to) {
      return typeof to == "string" ? to : reactRouterDom.createPath(to);
    }
    function encodeLocation(to) {
      let path = typeof to == "string" ? reactRouterDom.parsePath(to) : to;
      return {
        pathname: path.pathname || "",
        search: path.search || "",
        hash: path.hash || ""
      };
    }
    var ESCAPE_LOOKUP3 = {
      "&": "\\u0026",
      ">": "\\u003e",
      "<": "\\u003c",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    }, ESCAPE_REGEX3 = /[&><\u2028\u2029]/g;
    function htmlEscape(str) {
      return str.replace(ESCAPE_REGEX3, (match) => ESCAPE_LOOKUP3[match]);
    }
    exports2.StaticRouter = StaticRouter;
    exports2.StaticRouterProvider = StaticRouterProvider2;
    exports2.createStaticHandler = createStaticHandler2;
    exports2.createStaticRouter = createStaticRouter2;
  }
});

// node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js
var require_react_dom_server_legacy_browser_development = __commonJS({
  "node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js"(exports2) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    (function() {
      "use strict";
      var React7 = require_react(), ReactVersion = "18.2.0", ReactSharedInternals = React7.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function warn(format) {
        {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)
            args[_key - 1] = arguments[_key];
          printWarning("warn", format, args);
        }
      }
      function error(format) {
        {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
            args[_key2 - 1] = arguments[_key2];
          printWarning("error", format, args);
        }
      }
      function printWarning(level, format, args) {
        {
          var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame, stack = ReactDebugCurrentFrame2.getStackAddendum();
          stack !== "" && (format += "%s", args = args.concat([stack]));
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format), Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      function scheduleWork(callback) {
        callback();
      }
      function beginWriting(destination) {
      }
      function writeChunk(destination, chunk) {
        writeChunkAndReturn(destination, chunk);
      }
      function writeChunkAndReturn(destination, chunk) {
        return destination.push(chunk);
      }
      function completeWriting(destination) {
      }
      function close(destination) {
        destination.push(null);
      }
      function stringToChunk(content) {
        return content;
      }
      function stringToPrecomputedChunk(content) {
        return content;
      }
      function closeWithError(destination, error2) {
        destination.destroy(error2);
      }
      function typeName(value) {
        {
          var hasToStringTag = typeof Symbol == "function" && Symbol.toStringTag, type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
          return type;
        }
      }
      function willCoercionThrow(value) {
        try {
          return testStringCoercion(value), !1;
        } catch {
          return !0;
        }
      }
      function testStringCoercion(value) {
        return "" + value;
      }
      function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value))
          return error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value)), testStringCoercion(value);
      }
      function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value))
          return error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value)), testStringCoercion(value);
      }
      function checkHtmlStringCoercion(value) {
        if (willCoercionThrow(value))
          return error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value)), testStringCoercion(value);
      }
      var hasOwnProperty = Object.prototype.hasOwnProperty, RESERVED = 0, STRING = 1, BOOLEANISH_STRING = 2, BOOLEAN = 3, OVERLOADED_BOOLEAN = 4, NUMERIC = 5, POSITIVE_NUMERIC = 6, ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$"), illegalAttributeNameCache = {}, validatedAttributeNameCache = {};
      function isAttributeNameSafe(attributeName) {
        return hasOwnProperty.call(validatedAttributeNameCache, attributeName) ? !0 : hasOwnProperty.call(illegalAttributeNameCache, attributeName) ? !1 : VALID_ATTRIBUTE_NAME_REGEX.test(attributeName) ? (validatedAttributeNameCache[attributeName] = !0, !0) : (illegalAttributeNameCache[attributeName] = !0, error("Invalid attribute name: `%s`", attributeName), !1);
      }
      function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED)
          return !1;
        switch (typeof value) {
          case "function":
          case "symbol":
            return !0;
          case "boolean": {
            if (isCustomComponentTag)
              return !1;
            if (propertyInfo !== null)
              return !propertyInfo.acceptsBooleans;
            var prefix2 = name.toLowerCase().slice(0, 5);
            return prefix2 !== "data-" && prefix2 !== "aria-";
          }
          default:
            return !1;
        }
      }
      function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
      }
      function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN, this.attributeName = attributeName, this.attributeNamespace = attributeNamespace, this.mustUseProperty = mustUseProperty, this.propertyName = name, this.type = type, this.sanitizeURL = sanitizeURL2, this.removeEmptyString = removeEmptyString;
      }
      var properties = {}, reservedProps = [
        "children",
        "dangerouslySetInnerHTML",
        // TODO: This prevents the assignment of defaultValue to regular
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        "defaultValue",
        "defaultChecked",
        "innerHTML",
        "suppressContentEditableWarning",
        "suppressHydrationWarning",
        "style"
      ];
      reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          RESERVED,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEANISH_STRING,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEANISH_STRING,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "allowFullScreen",
        "async",
        // Note: there is a special case that prevents it from being written to the DOM
        // on the client side because the browsers are inconsistent. Instead we call focus().
        "autoFocus",
        "autoPlay",
        "controls",
        "default",
        "defer",
        "disabled",
        "disablePictureInPicture",
        "disableRemotePlayback",
        "formNoValidate",
        "hidden",
        "loop",
        "noModule",
        "noValidate",
        "open",
        "playsInline",
        "readOnly",
        "required",
        "reversed",
        "scoped",
        "seamless",
        // Microdata
        "itemScope"
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEAN,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "checked",
        // Note: `option.selected` is not updated if `select.multiple` is
        // disabled with `removeAttribute`. We have special logic for handling this.
        "multiple",
        "muted",
        "selected"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEAN,
          !0,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "capture",
        "download"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          OVERLOADED_BOOLEAN,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "cols",
        "rows",
        "size",
        "span"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          POSITIVE_NUMERIC,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["rowSpan", "start"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          NUMERIC,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      });
      var CAMELIZE = /[\-\:]([a-z])/g, capitalize = function(token) {
        return token[1].toUpperCase();
      };
      [
        "accent-height",
        "alignment-baseline",
        "arabic-form",
        "baseline-shift",
        "cap-height",
        "clip-path",
        "clip-rule",
        "color-interpolation",
        "color-interpolation-filters",
        "color-profile",
        "color-rendering",
        "dominant-baseline",
        "enable-background",
        "fill-opacity",
        "fill-rule",
        "flood-color",
        "flood-opacity",
        "font-family",
        "font-size",
        "font-size-adjust",
        "font-stretch",
        "font-style",
        "font-variant",
        "font-weight",
        "glyph-name",
        "glyph-orientation-horizontal",
        "glyph-orientation-vertical",
        "horiz-adv-x",
        "horiz-origin-x",
        "image-rendering",
        "letter-spacing",
        "lighting-color",
        "marker-end",
        "marker-mid",
        "marker-start",
        "overline-position",
        "overline-thickness",
        "paint-order",
        "panose-1",
        "pointer-events",
        "rendering-intent",
        "shape-rendering",
        "stop-color",
        "stop-opacity",
        "strikethrough-position",
        "strikethrough-thickness",
        "stroke-dasharray",
        "stroke-dashoffset",
        "stroke-linecap",
        "stroke-linejoin",
        "stroke-miterlimit",
        "stroke-opacity",
        "stroke-width",
        "text-anchor",
        "text-decoration",
        "text-rendering",
        "underline-position",
        "underline-thickness",
        "unicode-bidi",
        "unicode-range",
        "units-per-em",
        "v-alphabetic",
        "v-hanging",
        "v-ideographic",
        "v-mathematical",
        "vector-effect",
        "vert-adv-y",
        "vert-origin-x",
        "vert-origin-y",
        "word-spacing",
        "writing-mode",
        "xmlns:xlink",
        "x-height"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "xlink:actuate",
        "xlink:arcrole",
        "xlink:role",
        "xlink:show",
        "xlink:title",
        "xlink:type"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          "http://www.w3.org/1999/xlink",
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "xml:base",
        "xml:lang",
        "xml:space"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          "http://www.w3.org/XML/1998/namespace",
          !1,
          // sanitizeURL
          !1
        );
      }), ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(
          attributeName,
          STRING,
          !1,
          // mustUseProperty
          attributeName.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      });
      var xlinkHref = "xlinkHref";
      properties[xlinkHref] = new PropertyInfoRecord(
        "xlinkHref",
        STRING,
        !1,
        // mustUseProperty
        "xlink:href",
        "http://www.w3.org/1999/xlink",
        !0,
        // sanitizeURL
        !1
      ), ["src", "href", "action", "formAction"].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(
          attributeName,
          STRING,
          !1,
          // mustUseProperty
          attributeName.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !0,
          // sanitizeURL
          !0
        );
      });
      var isUnitlessNumber = {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        // SVG-related properties
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0
      };
      function prefixKey(prefix2, key) {
        return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
      }
      var prefixes = ["Webkit", "ms", "Moz", "O"];
      Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes.forEach(function(prefix2) {
          isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
        });
      });
      var hasReadOnlyValue = {
        button: !0,
        checkbox: !0,
        image: !0,
        hidden: !0,
        radio: !0,
        reset: !0,
        submit: !0
      };
      function checkControlledValueProps(tagName, props) {
        hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null || error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), props.onChange || props.readOnly || props.disabled || props.checked == null || error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
      }
      function isCustomComponent(tagName, props) {
        if (tagName.indexOf("-") === -1)
          return typeof props.is == "string";
        switch (tagName) {
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            return !1;
          default:
            return !0;
        }
      }
      var ariaProperties = {
        "aria-current": 0,
        // state
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        // state
        "aria-hidden": 0,
        // state
        "aria-invalid": 0,
        // state
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        // Widget Attributes
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        // Live Region Attributes
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        // Drag-and-Drop Attributes
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        // Relationship Attributes
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0
      }, warnedProperties = {}, rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"), rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
      function validateProperty(tagName, name) {
        {
          if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name])
            return !0;
          if (rARIACamel.test(name)) {
            var ariaName = "aria-" + name.slice(4).toLowerCase(), correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
            if (correctName == null)
              return error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name), warnedProperties[name] = !0, !0;
            if (name !== correctName)
              return error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName), warnedProperties[name] = !0, !0;
          }
          if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase(), standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
            if (standardName == null)
              return warnedProperties[name] = !0, !1;
            if (name !== standardName)
              return error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName), warnedProperties[name] = !0, !0;
          }
        }
        return !0;
      }
      function warnInvalidARIAProps(type, props) {
        {
          var invalidProps = [];
          for (var key in props) {
            var isValid = validateProperty(type, key);
            isValid || invalidProps.push(key);
          }
          var unknownPropString = invalidProps.map(function(prop) {
            return "`" + prop + "`";
          }).join(", ");
          invalidProps.length === 1 ? error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type) : invalidProps.length > 1 && error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        }
      }
      function validateProperties(type, props) {
        isCustomComponent(type, props) || warnInvalidARIAProps(type, props);
      }
      var didWarnValueNull = !1;
      function validateProperties$1(type, props) {
        {
          if (type !== "input" && type !== "textarea" && type !== "select")
            return;
          props != null && props.value === null && !didWarnValueNull && (didWarnValueNull = !0, type === "select" && props.multiple ? error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type) : error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type));
        }
      }
      var possibleStandardNames = {
        // HTML
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        // SVG
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
      }, validateProperty$1 = function() {
      };
      {
        var warnedProperties$1 = {}, EVENT_NAME_REGEX = /^on./, INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/, rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"), rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        validateProperty$1 = function(tagName, name, value, eventRegistry) {
          if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name])
            return !0;
          var lowerCasedName = name.toLowerCase();
          if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout")
            return error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), warnedProperties$1[name] = !0, !0;
          if (eventRegistry != null) {
            var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies.hasOwnProperty(name))
              return !0;
            var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
            if (registrationName != null)
              return error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName), warnedProperties$1[name] = !0, !0;
            if (EVENT_NAME_REGEX.test(name))
              return error("Unknown event handler property `%s`. It will be ignored.", name), warnedProperties$1[name] = !0, !0;
          } else if (EVENT_NAME_REGEX.test(name))
            return INVALID_EVENT_NAME_REGEX.test(name) && error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name), warnedProperties$1[name] = !0, !0;
          if (rARIA$1.test(name) || rARIACamel$1.test(name))
            return !0;
          if (lowerCasedName === "innerhtml")
            return error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), warnedProperties$1[name] = !0, !0;
          if (lowerCasedName === "aria")
            return error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), warnedProperties$1[name] = !0, !0;
          if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value != "string")
            return error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value), warnedProperties$1[name] = !0, !0;
          if (typeof value == "number" && isNaN(value))
            return error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name), warnedProperties$1[name] = !0, !0;
          var propertyInfo = getPropertyInfo(name), isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
          if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name)
              return error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName), warnedProperties$1[name] = !0, !0;
          } else if (!isReserved && name !== lowerCasedName)
            return error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName), warnedProperties$1[name] = !0, !0;
          return typeof value == "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, !1) ? (value ? error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name) : error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name), warnedProperties$1[name] = !0, !0) : isReserved ? !0 : shouldRemoveAttributeWithWarning(name, value, propertyInfo, !1) ? (warnedProperties$1[name] = !0, !1) : ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN && (error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value), warnedProperties$1[name] = !0), !0);
        };
      }
      var warnUnknownProperties = function(type, props, eventRegistry) {
        {
          var unknownProps = [];
          for (var key in props) {
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            isValid || unknownProps.push(key);
          }
          var unknownPropString = unknownProps.map(function(prop) {
            return "`" + prop + "`";
          }).join(", ");
          unknownProps.length === 1 ? error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type) : unknownProps.length > 1 && error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        }
      };
      function validateProperties$2(type, props, eventRegistry) {
        isCustomComponent(type, props) || warnUnknownProperties(type, props, eventRegistry);
      }
      var warnValidStyle = function() {
      };
      {
        var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/, msPattern = /^-ms-/, hyphenPattern = /-(.)/g, badStyleValueWithSemicolonPattern = /;\s*$/, warnedStyleNames = {}, warnedStyleValues = {}, warnedForNaNValue = !1, warnedForInfinityValue = !1, camelize = function(string) {
          return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
          });
        }, warnHyphenatedStyleName = function(name) {
          warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name] || (warnedStyleNames[name] = !0, error(
            "Unsupported style property %s. Did you mean %s?",
            name,
            // As Andi Smith suggests
            // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
            // is converted to lowercase `ms`.
            camelize(name.replace(msPattern, "ms-"))
          ));
        }, warnBadVendoredStyleName = function(name) {
          warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name] || (warnedStyleNames[name] = !0, error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1)));
        }, warnStyleValueWithSemicolon = function(name, value) {
          warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value] || (warnedStyleValues[value] = !0, error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, "")));
        }, warnStyleValueIsNaN = function(name, value) {
          warnedForNaNValue || (warnedForNaNValue = !0, error("`NaN` is an invalid value for the `%s` css style property.", name));
        }, warnStyleValueIsInfinity = function(name, value) {
          warnedForInfinityValue || (warnedForInfinityValue = !0, error("`Infinity` is an invalid value for the `%s` css style property.", name));
        };
        warnValidStyle = function(name, value) {
          name.indexOf("-") > -1 ? warnHyphenatedStyleName(name) : badVendoredStyleNamePattern.test(name) ? warnBadVendoredStyleName(name) : badStyleValueWithSemicolonPattern.test(value) && warnStyleValueWithSemicolon(name, value), typeof value == "number" && (isNaN(value) ? warnStyleValueIsNaN(name, value) : isFinite(value) || warnStyleValueIsInfinity(name, value));
        };
      }
      var warnValidStyle$1 = warnValidStyle, matchHtmlRegExp = /["'&<>]/;
      function escapeHtml3(string) {
        checkHtmlStringCoercion(string);
        var str = "" + string, match = matchHtmlRegExp.exec(str);
        if (!match)
          return str;
        var escape3, html = "", index, lastIndex = 0;
        for (index = match.index; index < str.length; index++) {
          switch (str.charCodeAt(index)) {
            case 34:
              escape3 = "&quot;";
              break;
            case 38:
              escape3 = "&amp;";
              break;
            case 39:
              escape3 = "&#x27;";
              break;
            case 60:
              escape3 = "&lt;";
              break;
            case 62:
              escape3 = "&gt;";
              break;
            default:
              continue;
          }
          lastIndex !== index && (html += str.substring(lastIndex, index)), lastIndex = index + 1, html += escape3;
        }
        return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
      }
      function escapeTextForBrowser(text) {
        return typeof text == "boolean" || typeof text == "number" ? "" + text : escapeHtml3(text);
      }
      var uppercasePattern = /([A-Z])/g, msPattern$1 = /^ms-/;
      function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-");
      }
      var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, didWarn = !1;
      function sanitizeURL(url) {
        !didWarn && isJavaScriptProtocol.test(url) && (didWarn = !0, error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url)));
      }
      var isArrayImpl = Array.isArray;
      function isArray(a) {
        return isArrayImpl(a);
      }
      var startInlineScript = "<script>", endInlineScript = "</script>", startScriptSrc = '<script src="', startModuleSrc = '<script type="module" src="', endAsyncScript = '" async=""></script>';
      function escapeBootstrapScriptContent(scriptText) {
        return checkHtmlStringCoercion(scriptText), ("" + scriptText).replace(scriptRegex, scriptReplacer);
      }
      var scriptRegex = /(<\/|<)(s)(cript)/gi, scriptReplacer = function(match, prefix2, s, suffix) {
        return "" + prefix2 + (s === "s" ? "\\u0073" : "\\u0053") + suffix;
      };
      function createResponseState(identifierPrefix, nonce, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
        var idPrefix = identifierPrefix === void 0 ? "" : identifierPrefix, inlineScriptWithNonce = nonce === void 0 ? startInlineScript : '<script nonce="' + escapeTextForBrowser(nonce) + '">', bootstrapChunks = [];
        if (bootstrapScriptContent !== void 0 && bootstrapChunks.push(inlineScriptWithNonce, escapeBootstrapScriptContent(bootstrapScriptContent), endInlineScript), bootstrapScripts !== void 0)
          for (var i = 0; i < bootstrapScripts.length; i++)
            bootstrapChunks.push(startScriptSrc, escapeTextForBrowser(bootstrapScripts[i]), endAsyncScript);
        if (bootstrapModules !== void 0)
          for (var _i = 0; _i < bootstrapModules.length; _i++)
            bootstrapChunks.push(startModuleSrc, escapeTextForBrowser(bootstrapModules[_i]), endAsyncScript);
        return {
          bootstrapChunks,
          startInlineScript: inlineScriptWithNonce,
          placeholderPrefix: idPrefix + "P:",
          segmentPrefix: idPrefix + "S:",
          boundaryPrefix: idPrefix + "B:",
          idPrefix,
          nextSuspenseID: 0,
          sentCompleteSegmentFunction: !1,
          sentCompleteBoundaryFunction: !1,
          sentClientRenderFunction: !1
        };
      }
      var ROOT_HTML_MODE = 0, HTML_MODE = 1, SVG_MODE = 2, MATHML_MODE = 3, HTML_TABLE_MODE = 4, HTML_TABLE_BODY_MODE = 5, HTML_TABLE_ROW_MODE = 6, HTML_COLGROUP_MODE = 7;
      function createFormatContext(insertionMode, selectedValue) {
        return {
          insertionMode,
          selectedValue
        };
      }
      function getChildFormatContext(parentContext, type, props) {
        switch (type) {
          case "select":
            return createFormatContext(HTML_MODE, props.value != null ? props.value : props.defaultValue);
          case "svg":
            return createFormatContext(SVG_MODE, null);
          case "math":
            return createFormatContext(MATHML_MODE, null);
          case "foreignObject":
            return createFormatContext(HTML_MODE, null);
          case "table":
            return createFormatContext(HTML_TABLE_MODE, null);
          case "thead":
          case "tbody":
          case "tfoot":
            return createFormatContext(HTML_TABLE_BODY_MODE, null);
          case "colgroup":
            return createFormatContext(HTML_COLGROUP_MODE, null);
          case "tr":
            return createFormatContext(HTML_TABLE_ROW_MODE, null);
        }
        return parentContext.insertionMode >= HTML_TABLE_MODE || parentContext.insertionMode === ROOT_HTML_MODE ? createFormatContext(HTML_MODE, null) : parentContext;
      }
      var UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;
      function assignSuspenseBoundaryID(responseState) {
        var generatedID = responseState.nextSuspenseID++;
        return responseState.boundaryPrefix + generatedID.toString(16);
      }
      function makeId(responseState, treeId, localId) {
        var idPrefix = responseState.idPrefix, id = ":" + idPrefix + "R" + treeId;
        return localId > 0 && (id += "H" + localId.toString(32)), id + ":";
      }
      function encodeHTMLTextNode(text) {
        return escapeTextForBrowser(text);
      }
      var textSeparator = "<!-- -->";
      function pushTextInstance(target, text, responseState, textEmbedded) {
        return text === "" ? textEmbedded : (textEmbedded && target.push(textSeparator), target.push(encodeHTMLTextNode(text)), !0);
      }
      function pushSegmentFinale(target, responseState, lastPushedText, textEmbedded) {
        lastPushedText && textEmbedded && target.push(textSeparator);
      }
      var styleNameCache = /* @__PURE__ */ new Map();
      function processStyleName(styleName) {
        var chunk = styleNameCache.get(styleName);
        if (chunk !== void 0)
          return chunk;
        var result = escapeTextForBrowser(hyphenateStyleName(styleName));
        return styleNameCache.set(styleName, result), result;
      }
      var styleAttributeStart = ' style="', styleAssign = ":", styleSeparator = ";";
      function pushStyle(target, responseState, style) {
        if (typeof style != "object")
          throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        var isFirst = !0;
        for (var styleName in style)
          if (hasOwnProperty.call(style, styleName)) {
            var styleValue = style[styleName];
            if (!(styleValue == null || typeof styleValue == "boolean" || styleValue === "")) {
              var nameChunk = void 0, valueChunk = void 0, isCustomProperty = styleName.indexOf("--") === 0;
              isCustomProperty ? (nameChunk = escapeTextForBrowser(styleName), checkCSSPropertyStringCoercion(styleValue, styleName), valueChunk = escapeTextForBrowser(("" + styleValue).trim())) : (warnValidStyle$1(styleName, styleValue), nameChunk = processStyleName(styleName), typeof styleValue == "number" ? styleValue !== 0 && !hasOwnProperty.call(isUnitlessNumber, styleName) ? valueChunk = styleValue + "px" : valueChunk = "" + styleValue : (checkCSSPropertyStringCoercion(styleValue, styleName), valueChunk = escapeTextForBrowser(("" + styleValue).trim()))), isFirst ? (isFirst = !1, target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk)) : target.push(styleSeparator, nameChunk, styleAssign, valueChunk);
            }
          }
        isFirst || target.push(attributeEnd);
      }
      var attributeSeparator = " ", attributeAssign = '="', attributeEnd = '"', attributeEmptyString = '=""';
      function pushAttribute(target, responseState, name, value) {
        switch (name) {
          case "style": {
            pushStyle(target, responseState, value);
            return;
          }
          case "defaultValue":
          case "defaultChecked":
          case "innerHTML":
          case "suppressContentEditableWarning":
          case "suppressHydrationWarning":
            return;
        }
        if (
          // shouldIgnoreAttribute
          // We have already filtered out null/undefined and reserved words.
          !(name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N"))
        ) {
          var propertyInfo = getPropertyInfo(name);
          if (propertyInfo !== null) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean":
                if (!propertyInfo.acceptsBooleans)
                  return;
            }
            var attributeName = propertyInfo.attributeName, attributeNameChunk = attributeName;
            switch (propertyInfo.type) {
              case BOOLEAN:
                value && target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                return;
              case OVERLOADED_BOOLEAN:
                value === !0 ? target.push(attributeSeparator, attributeNameChunk, attributeEmptyString) : value === !1 || target.push(attributeSeparator, attributeNameChunk, attributeAssign, escapeTextForBrowser(value), attributeEnd);
                return;
              case NUMERIC:
                isNaN(value) || target.push(attributeSeparator, attributeNameChunk, attributeAssign, escapeTextForBrowser(value), attributeEnd);
                break;
              case POSITIVE_NUMERIC:
                !isNaN(value) && value >= 1 && target.push(attributeSeparator, attributeNameChunk, attributeAssign, escapeTextForBrowser(value), attributeEnd);
                break;
              default:
                propertyInfo.sanitizeURL && (checkAttributeStringCoercion(value, attributeName), value = "" + value, sanitizeURL(value)), target.push(attributeSeparator, attributeNameChunk, attributeAssign, escapeTextForBrowser(value), attributeEnd);
            }
          } else if (isAttributeNameSafe(name)) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                var prefix2 = name.toLowerCase().slice(0, 5);
                if (prefix2 !== "data-" && prefix2 !== "aria-")
                  return;
              }
            }
            target.push(attributeSeparator, name, attributeAssign, escapeTextForBrowser(value), attributeEnd);
          }
        }
      }
      var endOfStartTag = ">", endOfStartTagSelfClosing = "/>";
      function pushInnerHTML(target, innerHTML, children) {
        if (innerHTML != null) {
          if (children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof innerHTML != "object" || !("__html" in innerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
          var html = innerHTML.__html;
          html != null && (checkHtmlStringCoercion(html), target.push("" + html));
        }
      }
      var didWarnDefaultInputValue = !1, didWarnDefaultChecked = !1, didWarnDefaultSelectValue = !1, didWarnDefaultTextareaValue = !1, didWarnInvalidOptionChildren = !1, didWarnInvalidOptionInnerHTML = !1, didWarnSelectedSetOnOption = !1;
      function checkSelectProp(props, propName) {
        {
          var value = props[propName];
          if (value != null) {
            var array = isArray(value);
            props.multiple && !array ? error("The `%s` prop supplied to <select> must be an array if `multiple` is true.", propName) : !props.multiple && array && error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.", propName);
          }
        }
      }
      function pushStartSelect(target, props, responseState) {
        checkControlledValueProps("select", props), checkSelectProp(props, "value"), checkSelectProp(props, "defaultValue"), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultSelectValue && (error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), didWarnDefaultSelectValue = !0), target.push(startChunkForTag("select"));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              case "defaultValue":
              case "value":
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), children;
      }
      function flattenOptionChildren(children) {
        var content = "";
        return React7.Children.forEach(children, function(child) {
          child != null && (content += child, !didWarnInvalidOptionChildren && typeof child != "string" && typeof child != "number" && (didWarnInvalidOptionChildren = !0, error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
        }), content;
      }
      var selectedMarkerAttribute = ' selected=""';
      function pushStartOption(target, props, responseState, formatContext) {
        var selectedValue = formatContext.selectedValue;
        target.push(startChunkForTag("option"));
        var children = null, value = null, selected = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "selected":
                selected = propValue, didWarnSelectedSetOnOption || (error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), didWarnSelectedSetOnOption = !0);
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              case "value":
                value = propValue;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        if (selectedValue != null) {
          var stringValue;
          if (value !== null ? (checkAttributeStringCoercion(value, "value"), stringValue = "" + value) : (innerHTML !== null && (didWarnInvalidOptionInnerHTML || (didWarnInvalidOptionInnerHTML = !0, error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected."))), stringValue = flattenOptionChildren(children)), isArray(selectedValue))
            for (var i = 0; i < selectedValue.length; i++) {
              checkAttributeStringCoercion(selectedValue[i], "value");
              var v = "" + selectedValue[i];
              if (v === stringValue) {
                target.push(selectedMarkerAttribute);
                break;
              }
            }
          else
            checkAttributeStringCoercion(selectedValue, "select.value"), "" + selectedValue === stringValue && target.push(selectedMarkerAttribute);
        } else
          selected && target.push(selectedMarkerAttribute);
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), children;
      }
      function pushInput(target, props, responseState) {
        checkControlledValueProps("input", props), props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnDefaultChecked && (error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type), didWarnDefaultChecked = !0), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultInputValue && (error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type), didWarnDefaultInputValue = !0), target.push(startChunkForTag("input"));
        var value = null, defaultValue = null, checked = null, defaultChecked = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw new Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
              case "defaultChecked":
                defaultChecked = propValue;
                break;
              case "defaultValue":
                defaultValue = propValue;
                break;
              case "checked":
                checked = propValue;
                break;
              case "value":
                value = propValue;
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return checked !== null ? pushAttribute(target, responseState, "checked", checked) : defaultChecked !== null && pushAttribute(target, responseState, "checked", defaultChecked), value !== null ? pushAttribute(target, responseState, "value", value) : defaultValue !== null && pushAttribute(target, responseState, "value", defaultValue), target.push(endOfStartTagSelfClosing), null;
      }
      function pushStartTextArea(target, props, responseState) {
        checkControlledValueProps("textarea", props), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultTextareaValue && (error("Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components"), didWarnDefaultTextareaValue = !0), target.push(startChunkForTag("textarea"));
        var value = null, defaultValue = null, children = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "value":
                value = propValue;
                break;
              case "defaultValue":
                defaultValue = propValue;
                break;
              case "dangerouslySetInnerHTML":
                throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        if (value === null && defaultValue !== null && (value = defaultValue), target.push(endOfStartTag), children != null) {
          if (error("Use the `defaultValue` or `value` props instead of setting children on <textarea>."), value != null)
            throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
          if (isArray(children)) {
            if (children.length > 1)
              throw new Error("<textarea> can only have at most one child.");
            checkHtmlStringCoercion(children[0]), value = "" + children[0];
          }
          checkHtmlStringCoercion(children), value = "" + children;
        }
        return typeof value == "string" && value[0] === `
` && target.push(leadingNewline), value !== null && (checkAttributeStringCoercion(value, "value"), target.push(encodeHTMLTextNode("" + value))), null;
      }
      function pushSelfClosing(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw new Error(tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTagSelfClosing), null;
      }
      function pushStartMenuItem(target, props, responseState) {
        target.push(startChunkForTag("menuitem"));
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw new Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTag), null;
      }
      function pushStartTitle(target, props, responseState) {
        target.push(startChunkForTag("title"));
        var children = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                throw new Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        target.push(endOfStartTag);
        {
          var child = Array.isArray(children) && children.length < 2 ? children[0] || null : children;
          Array.isArray(children) && children.length > 1 ? error("A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering") : child != null && child.$$typeof != null ? error("A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering") : child != null && typeof child != "string" && typeof child != "number" && error("A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
        }
        return children;
      }
      function pushStartGenericElement(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), typeof children == "string" ? (target.push(encodeHTMLTextNode(children)), null) : children;
      }
      function pushStartCustomElement(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              case "style":
                pushStyle(target, responseState, propValue);
                break;
              case "suppressContentEditableWarning":
              case "suppressHydrationWarning":
                break;
              default:
                isAttributeNameSafe(propKey) && typeof propValue != "function" && typeof propValue != "symbol" && target.push(attributeSeparator, propKey, attributeAssign, escapeTextForBrowser(propValue), attributeEnd);
                break;
            }
          }
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), children;
      }
      var leadingNewline = `
`;
      function pushStartPreformattedElement(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        if (target.push(endOfStartTag), innerHTML != null) {
          if (children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof innerHTML != "object" || !("__html" in innerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
          var html = innerHTML.__html;
          html != null && (typeof html == "string" && html.length > 0 && html[0] === `
` ? target.push(leadingNewline, html) : (checkHtmlStringCoercion(html), target.push("" + html)));
        }
        return typeof children == "string" && children[0] === `
` && target.push(leadingNewline), children;
      }
      var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, validatedTagCache = /* @__PURE__ */ new Map();
      function startChunkForTag(tag) {
        var tagStartChunk = validatedTagCache.get(tag);
        if (tagStartChunk === void 0) {
          if (!VALID_TAG_REGEX.test(tag))
            throw new Error("Invalid tag: " + tag);
          tagStartChunk = "<" + tag, validatedTagCache.set(tag, tagStartChunk);
        }
        return tagStartChunk;
      }
      var DOCTYPE = "<!DOCTYPE html>";
      function pushStartInstance(target, type, props, responseState, formatContext) {
        switch (validateProperties(type, props), validateProperties$1(type, props), validateProperties$2(type, props, null), !props.suppressContentEditableWarning && props.contentEditable && props.children != null && error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), formatContext.insertionMode !== SVG_MODE && formatContext.insertionMode !== MATHML_MODE && type.indexOf("-") === -1 && typeof props.is != "string" && type.toLowerCase() !== type && error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type), type) {
          case "select":
            return pushStartSelect(target, props, responseState);
          case "option":
            return pushStartOption(target, props, responseState, formatContext);
          case "textarea":
            return pushStartTextArea(target, props, responseState);
          case "input":
            return pushInput(target, props, responseState);
          case "menuitem":
            return pushStartMenuItem(target, props, responseState);
          case "title":
            return pushStartTitle(target, props, responseState);
          case "listing":
          case "pre":
            return pushStartPreformattedElement(target, props, type, responseState);
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            return pushSelfClosing(target, props, type, responseState);
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            return pushStartGenericElement(target, props, type, responseState);
          case "html":
            return formatContext.insertionMode === ROOT_HTML_MODE && target.push(DOCTYPE), pushStartGenericElement(target, props, type, responseState);
          default:
            return type.indexOf("-") === -1 && typeof props.is != "string" ? pushStartGenericElement(target, props, type, responseState) : pushStartCustomElement(target, props, type, responseState);
        }
      }
      var endTag1 = "</", endTag2 = ">";
      function pushEndInstance(target, type, props) {
        switch (type) {
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "input":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            break;
          default:
            target.push(endTag1, type, endTag2);
        }
      }
      function writeCompletedRoot(destination, responseState) {
        for (var bootstrapChunks = responseState.bootstrapChunks, i = 0; i < bootstrapChunks.length - 1; i++)
          writeChunk(destination, bootstrapChunks[i]);
        return i < bootstrapChunks.length ? writeChunkAndReturn(destination, bootstrapChunks[i]) : !0;
      }
      var placeholder1 = '<template id="', placeholder2 = '"></template>';
      function writePlaceholder(destination, responseState, id) {
        writeChunk(destination, placeholder1), writeChunk(destination, responseState.placeholderPrefix);
        var formattedID = id.toString(16);
        return writeChunk(destination, formattedID), writeChunkAndReturn(destination, placeholder2);
      }
      var startCompletedSuspenseBoundary = "<!--$-->", startPendingSuspenseBoundary1 = '<!--$?--><template id="', startPendingSuspenseBoundary2 = '"></template>', startClientRenderedSuspenseBoundary = "<!--$!-->", endSuspenseBoundary = "<!--/$-->", clientRenderedSuspenseBoundaryError1 = "<template", clientRenderedSuspenseBoundaryErrorAttrInterstitial = '"', clientRenderedSuspenseBoundaryError1A = ' data-dgst="', clientRenderedSuspenseBoundaryError1B = ' data-msg="', clientRenderedSuspenseBoundaryError1C = ' data-stck="', clientRenderedSuspenseBoundaryError2 = "></template>";
      function writeStartCompletedSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
      }
      function writeStartPendingSuspenseBoundary(destination, responseState, id) {
        if (writeChunk(destination, startPendingSuspenseBoundary1), id === null)
          throw new Error("An ID must have been assigned before we can complete the boundary.");
        return writeChunk(destination, id), writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
      }
      function writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMesssage, errorComponentStack) {
        var result;
        return result = writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary), writeChunk(destination, clientRenderedSuspenseBoundaryError1), errorDigest && (writeChunk(destination, clientRenderedSuspenseBoundaryError1A), writeChunk(destination, escapeTextForBrowser(errorDigest)), writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial)), errorMesssage && (writeChunk(destination, clientRenderedSuspenseBoundaryError1B), writeChunk(destination, escapeTextForBrowser(errorMesssage)), writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial)), errorComponentStack && (writeChunk(destination, clientRenderedSuspenseBoundaryError1C), writeChunk(destination, escapeTextForBrowser(errorComponentStack)), writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial)), result = writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2), result;
      }
      function writeEndCompletedSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      function writeEndPendingSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      function writeEndClientRenderedSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      var startSegmentHTML = '<div hidden id="', startSegmentHTML2 = '">', endSegmentHTML = "</div>", startSegmentSVG = '<svg aria-hidden="true" style="display:none" id="', startSegmentSVG2 = '">', endSegmentSVG = "</svg>", startSegmentMathML = '<math aria-hidden="true" style="display:none" id="', startSegmentMathML2 = '">', endSegmentMathML = "</math>", startSegmentTable = '<table hidden id="', startSegmentTable2 = '">', endSegmentTable = "</table>", startSegmentTableBody = '<table hidden><tbody id="', startSegmentTableBody2 = '">', endSegmentTableBody = "</tbody></table>", startSegmentTableRow = '<table hidden><tr id="', startSegmentTableRow2 = '">', endSegmentTableRow = "</tr></table>", startSegmentColGroup = '<table hidden><colgroup id="', startSegmentColGroup2 = '">', endSegmentColGroup = "</colgroup></table>";
      function writeStartSegment(destination, responseState, formatContext, id) {
        switch (formatContext.insertionMode) {
          case ROOT_HTML_MODE:
          case HTML_MODE:
            return writeChunk(destination, startSegmentHTML), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentHTML2);
          case SVG_MODE:
            return writeChunk(destination, startSegmentSVG), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentSVG2);
          case MATHML_MODE:
            return writeChunk(destination, startSegmentMathML), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentMathML2);
          case HTML_TABLE_MODE:
            return writeChunk(destination, startSegmentTable), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentTable2);
          case HTML_TABLE_BODY_MODE:
            return writeChunk(destination, startSegmentTableBody), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentTableBody2);
          case HTML_TABLE_ROW_MODE:
            return writeChunk(destination, startSegmentTableRow), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentTableRow2);
          case HTML_COLGROUP_MODE:
            return writeChunk(destination, startSegmentColGroup), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentColGroup2);
          default:
            throw new Error("Unknown insertion mode. This is a bug in React.");
        }
      }
      function writeEndSegment(destination, formatContext) {
        switch (formatContext.insertionMode) {
          case ROOT_HTML_MODE:
          case HTML_MODE:
            return writeChunkAndReturn(destination, endSegmentHTML);
          case SVG_MODE:
            return writeChunkAndReturn(destination, endSegmentSVG);
          case MATHML_MODE:
            return writeChunkAndReturn(destination, endSegmentMathML);
          case HTML_TABLE_MODE:
            return writeChunkAndReturn(destination, endSegmentTable);
          case HTML_TABLE_BODY_MODE:
            return writeChunkAndReturn(destination, endSegmentTableBody);
          case HTML_TABLE_ROW_MODE:
            return writeChunkAndReturn(destination, endSegmentTableRow);
          case HTML_COLGROUP_MODE:
            return writeChunkAndReturn(destination, endSegmentColGroup);
          default:
            throw new Error("Unknown insertion mode. This is a bug in React.");
        }
      }
      var completeSegmentFunction = "function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}", completeBoundaryFunction = 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}', clientRenderFunction = 'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}', completeSegmentScript1Full = completeSegmentFunction + ';$RS("', completeSegmentScript1Partial = '$RS("', completeSegmentScript2 = '","', completeSegmentScript3 = '")</script>';
      function writeCompletedSegmentInstruction(destination, responseState, contentSegmentID) {
        writeChunk(destination, responseState.startInlineScript), responseState.sentCompleteSegmentFunction ? writeChunk(destination, completeSegmentScript1Partial) : (responseState.sentCompleteSegmentFunction = !0, writeChunk(destination, completeSegmentScript1Full)), writeChunk(destination, responseState.segmentPrefix);
        var formattedID = contentSegmentID.toString(16);
        return writeChunk(destination, formattedID), writeChunk(destination, completeSegmentScript2), writeChunk(destination, responseState.placeholderPrefix), writeChunk(destination, formattedID), writeChunkAndReturn(destination, completeSegmentScript3);
      }
      var completeBoundaryScript1Full = completeBoundaryFunction + ';$RC("', completeBoundaryScript1Partial = '$RC("', completeBoundaryScript2 = '","', completeBoundaryScript3 = '")</script>';
      function writeCompletedBoundaryInstruction(destination, responseState, boundaryID, contentSegmentID) {
        if (writeChunk(destination, responseState.startInlineScript), responseState.sentCompleteBoundaryFunction ? writeChunk(destination, completeBoundaryScript1Partial) : (responseState.sentCompleteBoundaryFunction = !0, writeChunk(destination, completeBoundaryScript1Full)), boundaryID === null)
          throw new Error("An ID must have been assigned before we can complete the boundary.");
        var formattedContentID = contentSegmentID.toString(16);
        return writeChunk(destination, boundaryID), writeChunk(destination, completeBoundaryScript2), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, formattedContentID), writeChunkAndReturn(destination, completeBoundaryScript3);
      }
      var clientRenderScript1Full = clientRenderFunction + ';$RX("', clientRenderScript1Partial = '$RX("', clientRenderScript1A = '"', clientRenderScript2 = ")</script>", clientRenderErrorScriptArgInterstitial = ",";
      function writeClientRenderBoundaryInstruction(destination, responseState, boundaryID, errorDigest, errorMessage, errorComponentStack) {
        if (writeChunk(destination, responseState.startInlineScript), responseState.sentClientRenderFunction ? writeChunk(destination, clientRenderScript1Partial) : (responseState.sentClientRenderFunction = !0, writeChunk(destination, clientRenderScript1Full)), boundaryID === null)
          throw new Error("An ID must have been assigned before we can complete the boundary.");
        return writeChunk(destination, boundaryID), writeChunk(destination, clientRenderScript1A), (errorDigest || errorMessage || errorComponentStack) && (writeChunk(destination, clientRenderErrorScriptArgInterstitial), writeChunk(destination, escapeJSStringsForInstructionScripts(errorDigest || ""))), (errorMessage || errorComponentStack) && (writeChunk(destination, clientRenderErrorScriptArgInterstitial), writeChunk(destination, escapeJSStringsForInstructionScripts(errorMessage || ""))), errorComponentStack && (writeChunk(destination, clientRenderErrorScriptArgInterstitial), writeChunk(destination, escapeJSStringsForInstructionScripts(errorComponentStack))), writeChunkAndReturn(destination, clientRenderScript2);
      }
      var regexForJSStringsInScripts = /[<\u2028\u2029]/g;
      function escapeJSStringsForInstructionScripts(input) {
        var escaped = JSON.stringify(input);
        return escaped.replace(regexForJSStringsInScripts, function(match) {
          switch (match) {
            case "<":
              return "\\u003c";
            case "\u2028":
              return "\\u2028";
            case "\u2029":
              return "\\u2029";
            default:
              throw new Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
          }
        });
      }
      function createResponseState$1(generateStaticMarkup, identifierPrefix) {
        var responseState = createResponseState(identifierPrefix, void 0);
        return {
          // Keep this in sync with ReactDOMServerFormatConfig
          bootstrapChunks: responseState.bootstrapChunks,
          startInlineScript: responseState.startInlineScript,
          placeholderPrefix: responseState.placeholderPrefix,
          segmentPrefix: responseState.segmentPrefix,
          boundaryPrefix: responseState.boundaryPrefix,
          idPrefix: responseState.idPrefix,
          nextSuspenseID: responseState.nextSuspenseID,
          sentCompleteSegmentFunction: responseState.sentCompleteSegmentFunction,
          sentCompleteBoundaryFunction: responseState.sentCompleteBoundaryFunction,
          sentClientRenderFunction: responseState.sentClientRenderFunction,
          // This is an extra field for the legacy renderer
          generateStaticMarkup
        };
      }
      function createRootFormatContext() {
        return {
          insertionMode: HTML_MODE,
          // We skip the root mode because we don't want to emit the DOCTYPE in legacy mode.
          selectedValue: null
        };
      }
      function pushTextInstance$1(target, text, responseState, textEmbedded) {
        return responseState.generateStaticMarkup ? (target.push(escapeTextForBrowser(text)), !1) : pushTextInstance(target, text, responseState, textEmbedded);
      }
      function pushSegmentFinale$1(target, responseState, lastPushedText, textEmbedded) {
        if (!responseState.generateStaticMarkup)
          return pushSegmentFinale(target, responseState, lastPushedText, textEmbedded);
      }
      function writeStartCompletedSuspenseBoundary$1(destination, responseState) {
        return responseState.generateStaticMarkup ? !0 : writeStartCompletedSuspenseBoundary(destination);
      }
      function writeStartClientRenderedSuspenseBoundary$1(destination, responseState, errorDigest, errorMessage, errorComponentStack) {
        return responseState.generateStaticMarkup ? !0 : writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMessage, errorComponentStack);
      }
      function writeEndCompletedSuspenseBoundary$1(destination, responseState) {
        return responseState.generateStaticMarkup ? !0 : writeEndCompletedSuspenseBoundary(destination);
      }
      function writeEndClientRenderedSuspenseBoundary$1(destination, responseState) {
        return responseState.generateStaticMarkup ? !0 : writeEndClientRenderedSuspenseBoundary(destination);
      }
      var assign = Object.assign, REACT_ELEMENT_TYPE = Symbol.for("react.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_SCOPE_TYPE = Symbol.for("react.scope"), REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode"), REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"), REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for("react.default_value"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable != "object")
          return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        return typeof maybeIterator == "function" ? maybeIterator : null;
      }
      function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName)
          return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
      }
      function getContextName(type) {
        return type.displayName || "Context";
      }
      function getComponentNameFromType(type) {
        if (type == null)
          return null;
        if (typeof type.tag == "number" && error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof type == "function")
          return type.displayName || type.name || null;
        if (typeof type == "string")
          return type;
        switch (type) {
          case REACT_FRAGMENT_TYPE:
            return "Fragment";
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_PROFILER_TYPE:
            return "Profiler";
          case REACT_STRICT_MODE_TYPE:
            return "StrictMode";
          case REACT_SUSPENSE_TYPE:
            return "Suspense";
          case REACT_SUSPENSE_LIST_TYPE:
            return "SuspenseList";
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
              var context = type;
              return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
              var provider = type;
              return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
              return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
              var outerName = type.displayName || null;
              return outerName !== null ? outerName : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return getComponentNameFromType(init(payload));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
      function disabledLog() {
      }
      disabledLog.__reactDisabledLog = !0;
      function disableLogs() {
        {
          if (disabledDepth === 0) {
            prevLog = console.log, prevInfo = console.info, prevWarn = console.warn, prevError = console.error, prevGroup = console.group, prevGroupCollapsed = console.groupCollapsed, prevGroupEnd = console.groupEnd;
            var props = {
              configurable: !0,
              enumerable: !0,
              value: disabledLog,
              writable: !0
            };
            Object.defineProperties(console, {
              info: props,
              log: props,
              warn: props,
              error: props,
              group: props,
              groupCollapsed: props,
              groupEnd: props
            });
          }
          disabledDepth++;
        }
      }
      function reenableLogs() {
        {
          if (disabledDepth--, disabledDepth === 0) {
            var props = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: assign({}, props, {
                value: prevLog
              }),
              info: assign({}, props, {
                value: prevInfo
              }),
              warn: assign({}, props, {
                value: prevWarn
              }),
              error: assign({}, props, {
                value: prevError
              }),
              group: assign({}, props, {
                value: prevGroup
              }),
              groupCollapsed: assign({}, props, {
                value: prevGroupCollapsed
              }),
              groupEnd: assign({}, props, {
                value: prevGroupEnd
              })
            });
          }
          disabledDepth < 0 && error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher, prefix;
      function describeBuiltInComponentFrame(name, source, ownerFn) {
        {
          if (prefix === void 0)
            try {
              throw Error();
            } catch (x) {
              var match = x.stack.trim().match(/\n( *(at )?)/);
              prefix = match && match[1] || "";
            }
          return `
` + prefix + name;
        }
      }
      var reentry = !1, componentFrameCache;
      {
        var PossiblyWeakMap = typeof WeakMap == "function" ? WeakMap : Map;
        componentFrameCache = new PossiblyWeakMap();
      }
      function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry)
          return "";
        {
          var frame = componentFrameCache.get(fn);
          if (frame !== void 0)
            return frame;
        }
        var control;
        reentry = !0;
        var previousPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current, ReactCurrentDispatcher.current = null, disableLogs();
        try {
          if (construct) {
            var Fake = function() {
              throw Error();
            };
            if (Object.defineProperty(Fake.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Fake, []);
              } catch (x) {
                control = x;
              }
              Reflect.construct(fn, [], Fake);
            } else {
              try {
                Fake.call();
              } catch (x) {
                control = x;
              }
              fn.call(Fake.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (x) {
              control = x;
            }
            fn();
          }
        } catch (sample) {
          if (sample && control && typeof sample.stack == "string") {
            for (var sampleLines = sample.stack.split(`
`), controlLines = control.stack.split(`
`), s = sampleLines.length - 1, c = controlLines.length - 1; s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]; )
              c--;
            for (; s >= 1 && c >= 0; s--, c--)
              if (sampleLines[s] !== controlLines[c]) {
                if (s !== 1 || c !== 1)
                  do
                    if (s--, c--, c < 0 || sampleLines[s] !== controlLines[c]) {
                      var _frame = `
` + sampleLines[s].replace(" at new ", " at ");
                      return fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName)), typeof fn == "function" && componentFrameCache.set(fn, _frame), _frame;
                    }
                  while (s >= 1 && c >= 0);
                break;
              }
          }
        } finally {
          reentry = !1, ReactCurrentDispatcher.current = previousDispatcher, reenableLogs(), Error.prepareStackTrace = previousPrepareStackTrace;
        }
        var name = fn ? fn.displayName || fn.name : "", syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        return typeof fn == "function" && componentFrameCache.set(fn, syntheticFrame), syntheticFrame;
      }
      function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, !0);
      }
      function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, !1);
      }
      function shouldConstruct(Component2) {
        var prototype = Component2.prototype;
        return !!(prototype && prototype.isReactComponent);
      }
      function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null)
          return "";
        if (typeof type == "function")
          return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type == "string")
          return describeBuiltInComponentFrame(type);
        switch (type) {
          case REACT_SUSPENSE_TYPE:
            return describeBuiltInComponentFrame("Suspense");
          case REACT_SUSPENSE_LIST_TYPE:
            return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
              return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch {
              }
            }
          }
        return "";
      }
      var loggedTypeFailures = {}, ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame.setExtraStackFrame(null);
      }
      function checkPropTypes(typeSpecs, values, location, componentName, element) {
        {
          var has = Function.call.bind(hasOwnProperty);
          for (var typeSpecName in typeSpecs)
            if (has(typeSpecs, typeSpecName)) {
              var error$1 = void 0;
              try {
                if (typeof typeSpecs[typeSpecName] != "function") {
                  var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw err.name = "Invariant Violation", err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (ex) {
                error$1 = ex;
              }
              error$1 && !(error$1 instanceof Error) && (setCurrentlyValidatingElement(element), error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1), setCurrentlyValidatingElement(null)), error$1 instanceof Error && !(error$1.message in loggedTypeFailures) && (loggedTypeFailures[error$1.message] = !0, setCurrentlyValidatingElement(element), error("Failed %s type: %s", location, error$1.message), setCurrentlyValidatingElement(null));
            }
        }
      }
      var warnedAboutMissingGetChildContext;
      warnedAboutMissingGetChildContext = {};
      var emptyContextObject = {};
      Object.freeze(emptyContextObject);
      function getMaskedContext(type, unmaskedContext) {
        {
          var contextTypes = type.contextTypes;
          if (!contextTypes)
            return emptyContextObject;
          var context = {};
          for (var key in contextTypes)
            context[key] = unmaskedContext[key];
          {
            var name = getComponentNameFromType(type) || "Unknown";
            checkPropTypes(contextTypes, context, "context", name);
          }
          return context;
        }
      }
      function processChildContext(instance, type, parentContext, childContextTypes) {
        {
          if (typeof instance.getChildContext != "function") {
            {
              var componentName = getComponentNameFromType(type) || "Unknown";
              warnedAboutMissingGetChildContext[componentName] || (warnedAboutMissingGetChildContext[componentName] = !0, error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName));
            }
            return parentContext;
          }
          var childContext = instance.getChildContext();
          for (var contextKey in childContext)
            if (!(contextKey in childContextTypes))
              throw new Error((getComponentNameFromType(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
          {
            var name = getComponentNameFromType(type) || "Unknown";
            checkPropTypes(childContextTypes, childContext, "child context", name);
          }
          return assign({}, parentContext, childContext);
        }
      }
      var rendererSigil;
      rendererSigil = {};
      var rootContextSnapshot = null, currentActiveSnapshot = null;
      function popNode(prev) {
        prev.context._currentValue2 = prev.parentValue;
      }
      function pushNode(next) {
        next.context._currentValue2 = next.value;
      }
      function popToNearestCommonAncestor(prev, next) {
        if (prev !== next) {
          popNode(prev);
          var parentPrev = prev.parent, parentNext = next.parent;
          if (parentPrev === null) {
            if (parentNext !== null)
              throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
          } else {
            if (parentNext === null)
              throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
            popToNearestCommonAncestor(parentPrev, parentNext);
          }
          pushNode(next);
        }
      }
      function popAllPrevious(prev) {
        popNode(prev);
        var parentPrev = prev.parent;
        parentPrev !== null && popAllPrevious(parentPrev);
      }
      function pushAllNext(next) {
        var parentNext = next.parent;
        parentNext !== null && pushAllNext(parentNext), pushNode(next);
      }
      function popPreviousToCommonLevel(prev, next) {
        popNode(prev);
        var parentPrev = prev.parent;
        if (parentPrev === null)
          throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
        parentPrev.depth === next.depth ? popToNearestCommonAncestor(parentPrev, next) : popPreviousToCommonLevel(parentPrev, next);
      }
      function popNextToCommonLevel(prev, next) {
        var parentNext = next.parent;
        if (parentNext === null)
          throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
        prev.depth === parentNext.depth ? popToNearestCommonAncestor(prev, parentNext) : popNextToCommonLevel(prev, parentNext), pushNode(next);
      }
      function switchContext(newSnapshot) {
        var prev = currentActiveSnapshot, next = newSnapshot;
        prev !== next && (prev === null ? pushAllNext(next) : next === null ? popAllPrevious(prev) : prev.depth === next.depth ? popToNearestCommonAncestor(prev, next) : prev.depth > next.depth ? popPreviousToCommonLevel(prev, next) : popNextToCommonLevel(prev, next), currentActiveSnapshot = next);
      }
      function pushProvider(context, nextValue) {
        var prevValue;
        prevValue = context._currentValue2, context._currentValue2 = nextValue, context._currentRenderer2 !== void 0 && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil && error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), context._currentRenderer2 = rendererSigil;
        var prevNode = currentActiveSnapshot, newNode = {
          parent: prevNode,
          depth: prevNode === null ? 0 : prevNode.depth + 1,
          context,
          parentValue: prevValue,
          value: nextValue
        };
        return currentActiveSnapshot = newNode, newNode;
      }
      function popProvider(context) {
        var prevSnapshot = currentActiveSnapshot;
        if (prevSnapshot === null)
          throw new Error("Tried to pop a Context at the root of the app. This is a bug in React.");
        prevSnapshot.context !== context && error("The parent context is not the expected context. This is probably a bug in React.");
        {
          var _value = prevSnapshot.parentValue;
          _value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED ? prevSnapshot.context._currentValue2 = prevSnapshot.context._defaultValue : prevSnapshot.context._currentValue2 = _value, context._currentRenderer2 !== void 0 && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil && error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), context._currentRenderer2 = rendererSigil;
        }
        return currentActiveSnapshot = prevSnapshot.parent;
      }
      function getActiveContext() {
        return currentActiveSnapshot;
      }
      function readContext(context) {
        var value = context._currentValue2;
        return value;
      }
      function get(key) {
        return key._reactInternals;
      }
      function set(key, value) {
        key._reactInternals = value;
      }
      var didWarnAboutNoopUpdateForComponent = {}, didWarnAboutDeprecatedWillMount = {}, didWarnAboutUninitializedState, didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate, didWarnAboutLegacyLifecyclesAndDerivedState, didWarnAboutUndefinedDerivedState, warnOnUndefinedDerivedState, warnOnInvalidCallback, didWarnAboutDirectlyAssigningPropsToState, didWarnAboutContextTypeAndContextTypes, didWarnAboutInvalidateContextType;
      {
        didWarnAboutUninitializedState = /* @__PURE__ */ new Set(), didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set(), didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set(), didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set(), didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set(), didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set(), didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
        var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
        warnOnInvalidCallback = function(callback, callerName) {
          if (!(callback === null || typeof callback == "function")) {
            var key = callerName + "_" + callback;
            didWarnOnInvalidCallback.has(key) || (didWarnOnInvalidCallback.add(key), error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback));
          }
        }, warnOnUndefinedDerivedState = function(type, partialState) {
          if (partialState === void 0) {
            var componentName = getComponentNameFromType(type) || "Component";
            didWarnAboutUndefinedDerivedState.has(componentName) || (didWarnAboutUndefinedDerivedState.add(componentName), error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName));
          }
        };
      }
      function warnNoop(publicInstance, callerName) {
        {
          var _constructor = publicInstance.constructor, componentName = _constructor && getComponentNameFromType(_constructor) || "ReactClass", warningKey = componentName + "." + callerName;
          if (didWarnAboutNoopUpdateForComponent[warningKey])
            return;
          error(`%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.

Please check the code for the %s component.`, callerName, callerName, componentName), didWarnAboutNoopUpdateForComponent[warningKey] = !0;
        }
      }
      var classComponentUpdater = {
        isMounted: function(inst) {
          return !1;
        },
        enqueueSetState: function(inst, payload, callback) {
          var internals = get(inst);
          internals.queue === null ? warnNoop(inst, "setState") : (internals.queue.push(payload), callback != null && warnOnInvalidCallback(callback, "setState"));
        },
        enqueueReplaceState: function(inst, payload, callback) {
          var internals = get(inst);
          internals.replace = !0, internals.queue = [payload], callback != null && warnOnInvalidCallback(callback, "setState");
        },
        enqueueForceUpdate: function(inst, callback) {
          var internals = get(inst);
          internals.queue === null ? warnNoop(inst, "forceUpdate") : callback != null && warnOnInvalidCallback(callback, "setState");
        }
      };
      function applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, prevState, nextProps) {
        var partialState = getDerivedStateFromProps(nextProps, prevState);
        warnOnUndefinedDerivedState(ctor, partialState);
        var newState = partialState == null ? prevState : assign({}, prevState, partialState);
        return newState;
      }
      function constructClassInstance(ctor, props, maskedLegacyContext) {
        var context = emptyContextObject, contextType = ctor.contextType;
        if ("contextType" in ctor) {
          var isValid = (
            // Allow null for conditional declaration
            contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0
          );
          if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
            didWarnAboutInvalidateContextType.add(ctor);
            var addendum = "";
            contextType === void 0 ? addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof contextType != "object" ? addendum = " However, it is set to a " + typeof contextType + "." : contextType.$$typeof === REACT_PROVIDER_TYPE ? addendum = " Did you accidentally pass the Context.Provider instead?" : contextType._context !== void 0 ? addendum = " Did you accidentally pass the Context.Consumer instead?" : addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.", error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
          }
        }
        typeof contextType == "object" && contextType !== null ? context = readContext(contextType) : context = maskedLegacyContext;
        var instance = new ctor(props, context);
        {
          if (typeof ctor.getDerivedStateFromProps == "function" && (instance.state === null || instance.state === void 0)) {
            var componentName = getComponentNameFromType(ctor) || "Component";
            didWarnAboutUninitializedState.has(componentName) || (didWarnAboutUninitializedState.add(componentName), error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName));
          }
          if (typeof ctor.getDerivedStateFromProps == "function" || typeof instance.getSnapshotBeforeUpdate == "function") {
            var foundWillMountName = null, foundWillReceivePropsName = null, foundWillUpdateName = null;
            if (typeof instance.componentWillMount == "function" && instance.componentWillMount.__suppressDeprecationWarning !== !0 ? foundWillMountName = "componentWillMount" : typeof instance.UNSAFE_componentWillMount == "function" && (foundWillMountName = "UNSAFE_componentWillMount"), typeof instance.componentWillReceiveProps == "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? foundWillReceivePropsName = "componentWillReceiveProps" : typeof instance.UNSAFE_componentWillReceiveProps == "function" && (foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps"), typeof instance.componentWillUpdate == "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== !0 ? foundWillUpdateName = "componentWillUpdate" : typeof instance.UNSAFE_componentWillUpdate == "function" && (foundWillUpdateName = "UNSAFE_componentWillUpdate"), foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
              var _componentName = getComponentNameFromType(ctor) || "Component", newApiName = typeof ctor.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
              didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName) || (didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName), error(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, _componentName, newApiName, foundWillMountName !== null ? `
  ` + foundWillMountName : "", foundWillReceivePropsName !== null ? `
  ` + foundWillReceivePropsName : "", foundWillUpdateName !== null ? `
  ` + foundWillUpdateName : ""));
            }
          }
        }
        return instance;
      }
      function checkClassInstance(instance, ctor, newProps) {
        {
          var name = getComponentNameFromType(ctor) || "Component", renderPresent = instance.render;
          renderPresent || (ctor.prototype && typeof ctor.prototype.render == "function" ? error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name) : error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name)), instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state && error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name), instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved && error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name), instance.propTypes && error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name), instance.contextType && error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name), instance.contextTypes && error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name), ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor) && (didWarnAboutContextTypeAndContextTypes.add(ctor), error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name)), typeof instance.componentShouldUpdate == "function" && error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name), ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate < "u" && error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component"), typeof instance.componentDidUnmount == "function" && error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name), typeof instance.componentDidReceiveProps == "function" && error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name), typeof instance.componentWillRecieveProps == "function" && error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name), typeof instance.UNSAFE_componentWillRecieveProps == "function" && error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
          var hasMutatedProps = instance.props !== newProps;
          instance.props !== void 0 && hasMutatedProps && error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name), instance.defaultProps && error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name), typeof instance.getSnapshotBeforeUpdate == "function" && typeof instance.componentDidUpdate != "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor) && (didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor), error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor))), typeof instance.getDerivedStateFromProps == "function" && error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name), typeof instance.getDerivedStateFromError == "function" && error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name), typeof ctor.getSnapshotBeforeUpdate == "function" && error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
          var _state = instance.state;
          _state && (typeof _state != "object" || isArray(_state)) && error("%s.state: must be set to an object or null", name), typeof instance.getChildContext == "function" && typeof ctor.childContextTypes != "object" && error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
        }
      }
      function callComponentWillMount(type, instance) {
        var oldState = instance.state;
        if (typeof instance.componentWillMount == "function") {
          if (instance.componentWillMount.__suppressDeprecationWarning !== !0) {
            var componentName = getComponentNameFromType(type) || "Unknown";
            didWarnAboutDeprecatedWillMount[componentName] || (warn(
              // keep this warning in sync with ReactStrictModeWarning.js
              `componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.

Please update the following components: %s`,
              componentName
            ), didWarnAboutDeprecatedWillMount[componentName] = !0);
          }
          instance.componentWillMount();
        }
        typeof instance.UNSAFE_componentWillMount == "function" && instance.UNSAFE_componentWillMount(), oldState !== instance.state && (error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromType(type) || "Component"), classComponentUpdater.enqueueReplaceState(instance, instance.state, null));
      }
      function processUpdateQueue(internalInstance, inst, props, maskedLegacyContext) {
        if (internalInstance.queue !== null && internalInstance.queue.length > 0) {
          var oldQueue = internalInstance.queue, oldReplace = internalInstance.replace;
          if (internalInstance.queue = null, internalInstance.replace = !1, oldReplace && oldQueue.length === 1)
            inst.state = oldQueue[0];
          else {
            for (var nextState = oldReplace ? oldQueue[0] : inst.state, dontMutate = !0, i = oldReplace ? 1 : 0; i < oldQueue.length; i++) {
              var partial = oldQueue[i], partialState = typeof partial == "function" ? partial.call(inst, nextState, props, maskedLegacyContext) : partial;
              partialState != null && (dontMutate ? (dontMutate = !1, nextState = assign({}, nextState, partialState)) : assign(nextState, partialState));
            }
            inst.state = nextState;
          }
        } else
          internalInstance.queue = null;
      }
      function mountClassInstance(instance, ctor, newProps, maskedLegacyContext) {
        checkClassInstance(instance, ctor, newProps);
        var initialState = instance.state !== void 0 ? instance.state : null;
        instance.updater = classComponentUpdater, instance.props = newProps, instance.state = initialState;
        var internalInstance = {
          queue: [],
          replace: !1
        };
        set(instance, internalInstance);
        var contextType = ctor.contextType;
        if (typeof contextType == "object" && contextType !== null ? instance.context = readContext(contextType) : instance.context = maskedLegacyContext, instance.state === newProps) {
          var componentName = getComponentNameFromType(ctor) || "Component";
          didWarnAboutDirectlyAssigningPropsToState.has(componentName) || (didWarnAboutDirectlyAssigningPropsToState.add(componentName), error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName));
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        typeof getDerivedStateFromProps == "function" && (instance.state = applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, initialState, newProps)), typeof ctor.getDerivedStateFromProps != "function" && typeof instance.getSnapshotBeforeUpdate != "function" && (typeof instance.UNSAFE_componentWillMount == "function" || typeof instance.componentWillMount == "function") && (callComponentWillMount(ctor, instance), processUpdateQueue(internalInstance, instance, newProps, maskedLegacyContext));
      }
      var emptyTreeContext = {
        id: 1,
        overflow: ""
      };
      function getTreeId(context) {
        var overflow = context.overflow, idWithLeadingBit = context.id, id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
        return id.toString(32) + overflow;
      }
      function pushTreeContext(baseContext, totalChildren, index) {
        var baseIdWithLeadingBit = baseContext.id, baseOverflow = baseContext.overflow, baseLength = getBitLength(baseIdWithLeadingBit) - 1, baseId = baseIdWithLeadingBit & ~(1 << baseLength), slot = index + 1, length = getBitLength(totalChildren) + baseLength;
        if (length > 30) {
          var numberOfOverflowBits = baseLength - baseLength % 5, newOverflowBits = (1 << numberOfOverflowBits) - 1, newOverflow = (baseId & newOverflowBits).toString(32), restOfBaseId = baseId >> numberOfOverflowBits, restOfBaseLength = baseLength - numberOfOverflowBits, restOfLength = getBitLength(totalChildren) + restOfBaseLength, restOfNewBits = slot << restOfBaseLength, id = restOfNewBits | restOfBaseId, overflow = newOverflow + baseOverflow;
          return {
            id: 1 << restOfLength | id,
            overflow
          };
        } else {
          var newBits = slot << baseLength, _id = newBits | baseId, _overflow = baseOverflow;
          return {
            id: 1 << length | _id,
            overflow: _overflow
          };
        }
      }
      function getBitLength(number) {
        return 32 - clz32(number);
      }
      function getLeadingBit(id) {
        return 1 << getBitLength(id) - 1;
      }
      var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback, log = Math.log, LN2 = Math.LN2;
      function clz32Fallback(x) {
        var asUint = x >>> 0;
        return asUint === 0 ? 32 : 31 - (log(asUint) / LN2 | 0) | 0;
      }
      function is(x, y) {
        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
      }
      var objectIs = typeof Object.is == "function" ? Object.is : is, currentlyRenderingComponent = null, currentlyRenderingTask = null, firstWorkInProgressHook = null, workInProgressHook = null, isReRender = !1, didScheduleRenderPhaseUpdate = !1, localIdCounter = 0, renderPhaseUpdates = null, numberOfReRenders = 0, RE_RENDER_LIMIT = 25, isInHookUserCodeInDev = !1, currentHookNameInDev;
      function resolveCurrentlyRenderingComponent() {
        if (currentlyRenderingComponent === null)
          throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
        return isInHookUserCodeInDev && error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks"), currentlyRenderingComponent;
      }
      function areHookInputsEqual(nextDeps, prevDeps) {
        if (prevDeps === null)
          return error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev), !1;
        nextDeps.length !== prevDeps.length && error(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, currentHookNameInDev, "[" + nextDeps.join(", ") + "]", "[" + prevDeps.join(", ") + "]");
        for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)
          if (!objectIs(nextDeps[i], prevDeps[i]))
            return !1;
        return !0;
      }
      function createHook() {
        if (numberOfReRenders > 0)
          throw new Error("Rendered more hooks than during the previous render");
        return {
          memoizedState: null,
          queue: null,
          next: null
        };
      }
      function createWorkInProgressHook() {
        return workInProgressHook === null ? firstWorkInProgressHook === null ? (isReRender = !1, firstWorkInProgressHook = workInProgressHook = createHook()) : (isReRender = !0, workInProgressHook = firstWorkInProgressHook) : workInProgressHook.next === null ? (isReRender = !1, workInProgressHook = workInProgressHook.next = createHook()) : (isReRender = !0, workInProgressHook = workInProgressHook.next), workInProgressHook;
      }
      function prepareToUseHooks(task, componentIdentity) {
        currentlyRenderingComponent = componentIdentity, currentlyRenderingTask = task, isInHookUserCodeInDev = !1, localIdCounter = 0;
      }
      function finishHooks(Component2, props, children, refOrContext) {
        for (; didScheduleRenderPhaseUpdate; )
          didScheduleRenderPhaseUpdate = !1, localIdCounter = 0, numberOfReRenders += 1, workInProgressHook = null, children = Component2(props, refOrContext);
        return resetHooksState(), children;
      }
      function checkDidRenderIdHook() {
        var didRenderIdHook = localIdCounter !== 0;
        return didRenderIdHook;
      }
      function resetHooksState() {
        isInHookUserCodeInDev = !1, currentlyRenderingComponent = null, currentlyRenderingTask = null, didScheduleRenderPhaseUpdate = !1, firstWorkInProgressHook = null, numberOfReRenders = 0, renderPhaseUpdates = null, workInProgressHook = null;
      }
      function readContext$1(context) {
        return isInHookUserCodeInDev && error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."), readContext(context);
      }
      function useContext5(context) {
        return currentHookNameInDev = "useContext", resolveCurrentlyRenderingComponent(), readContext(context);
      }
      function basicStateReducer(state, action) {
        return typeof action == "function" ? action(state) : action;
      }
      function useState4(initialState) {
        return currentHookNameInDev = "useState", useReducer(
          basicStateReducer,
          // useReducer has a special case to support lazy useState initializers
          initialState
        );
      }
      function useReducer(reducer, initialArg, init) {
        if (reducer !== basicStateReducer && (currentHookNameInDev = "useReducer"), currentlyRenderingComponent = resolveCurrentlyRenderingComponent(), workInProgressHook = createWorkInProgressHook(), isReRender) {
          var queue = workInProgressHook.queue, dispatch = queue.dispatch;
          if (renderPhaseUpdates !== null) {
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate !== void 0) {
              renderPhaseUpdates.delete(queue);
              var newState = workInProgressHook.memoizedState, update = firstRenderPhaseUpdate;
              do {
                var action = update.action;
                isInHookUserCodeInDev = !0, newState = reducer(newState, action), isInHookUserCodeInDev = !1, update = update.next;
              } while (update !== null);
              return workInProgressHook.memoizedState = newState, [newState, dispatch];
            }
          }
          return [workInProgressHook.memoizedState, dispatch];
        } else {
          isInHookUserCodeInDev = !0;
          var initialState;
          reducer === basicStateReducer ? initialState = typeof initialArg == "function" ? initialArg() : initialArg : initialState = init !== void 0 ? init(initialArg) : initialArg, isInHookUserCodeInDev = !1, workInProgressHook.memoizedState = initialState;
          var _queue = workInProgressHook.queue = {
            last: null,
            dispatch: null
          }, _dispatch = _queue.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue);
          return [workInProgressHook.memoizedState, _dispatch];
        }
      }
      function useMemo5(nextCreate, deps) {
        currentlyRenderingComponent = resolveCurrentlyRenderingComponent(), workInProgressHook = createWorkInProgressHook();
        var nextDeps = deps === void 0 ? null : deps;
        if (workInProgressHook !== null) {
          var prevState = workInProgressHook.memoizedState;
          if (prevState !== null && nextDeps !== null) {
            var prevDeps = prevState[1];
            if (areHookInputsEqual(nextDeps, prevDeps))
              return prevState[0];
          }
        }
        isInHookUserCodeInDev = !0;
        var nextValue = nextCreate();
        return isInHookUserCodeInDev = !1, workInProgressHook.memoizedState = [nextValue, nextDeps], nextValue;
      }
      function useRef3(initialValue) {
        currentlyRenderingComponent = resolveCurrentlyRenderingComponent(), workInProgressHook = createWorkInProgressHook();
        var previousRef = workInProgressHook.memoizedState;
        if (previousRef === null) {
          var ref = {
            current: initialValue
          };
          return Object.seal(ref), workInProgressHook.memoizedState = ref, ref;
        } else
          return previousRef;
      }
      function useLayoutEffect3(create, inputs) {
        currentHookNameInDev = "useLayoutEffect", error("useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.");
      }
      function dispatchAction(componentIdentity, queue, action) {
        if (numberOfReRenders >= RE_RENDER_LIMIT)
          throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
        if (componentIdentity === currentlyRenderingComponent) {
          didScheduleRenderPhaseUpdate = !0;
          var update = {
            action,
            next: null
          };
          renderPhaseUpdates === null && (renderPhaseUpdates = /* @__PURE__ */ new Map());
          var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
          if (firstRenderPhaseUpdate === void 0)
            renderPhaseUpdates.set(queue, update);
          else {
            for (var lastRenderPhaseUpdate = firstRenderPhaseUpdate; lastRenderPhaseUpdate.next !== null; )
              lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            lastRenderPhaseUpdate.next = update;
          }
        }
      }
      function useCallback3(callback, deps) {
        return useMemo5(function() {
          return callback;
        }, deps);
      }
      function useMutableSource(source, getSnapshot, subscribe) {
        return resolveCurrentlyRenderingComponent(), getSnapshot(source._source);
      }
      function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        if (getServerSnapshot === void 0)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        return getServerSnapshot();
      }
      function useDeferredValue(value) {
        return resolveCurrentlyRenderingComponent(), value;
      }
      function unsupportedStartTransition() {
        throw new Error("startTransition cannot be called during server rendering.");
      }
      function useTransition2() {
        return resolveCurrentlyRenderingComponent(), [!1, unsupportedStartTransition];
      }
      function useId() {
        var task = currentlyRenderingTask, treeId = getTreeId(task.treeContext), responseState = currentResponseState;
        if (responseState === null)
          throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
        var localId = localIdCounter++;
        return makeId(responseState, treeId, localId);
      }
      function noop() {
      }
      var Dispatcher = {
        readContext: readContext$1,
        useContext: useContext5,
        useMemo: useMemo5,
        useReducer,
        useRef: useRef3,
        useState: useState4,
        useInsertionEffect: noop,
        useLayoutEffect: useLayoutEffect3,
        useCallback: useCallback3,
        // useImperativeHandle is not run in the server environment
        useImperativeHandle: noop,
        // Effects are not run in the server environment.
        useEffect: noop,
        // Debugging effect
        useDebugValue: noop,
        useDeferredValue,
        useTransition: useTransition2,
        useId,
        // Subscriptions are not setup in a server environment.
        useMutableSource,
        useSyncExternalStore
      }, currentResponseState = null;
      function setCurrentResponseState(responseState) {
        currentResponseState = responseState;
      }
      function getStackByComponentStackNode(componentStack) {
        try {
          var info = "", node = componentStack;
          do {
            switch (node.tag) {
              case 0:
                info += describeBuiltInComponentFrame(node.type, null, null);
                break;
              case 1:
                info += describeFunctionComponentFrame(node.type, null, null);
                break;
              case 2:
                info += describeClassComponentFrame(node.type, null, null);
                break;
            }
            node = node.parent;
          } while (node);
          return info;
        } catch (x) {
          return `
Error generating stack: ` + x.message + `
` + x.stack;
        }
      }
      var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame, PENDING = 0, COMPLETED = 1, FLUSHED = 2, ABORTED = 3, ERRORED = 4, OPEN = 0, CLOSING = 1, CLOSED = 2, DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;
      function defaultErrorHandler(error2) {
        return console.error(error2), null;
      }
      function noop$1() {
      }
      function createRequest(children, responseState, rootFormatContext, progressiveChunkSize, onError3, onAllReady, onShellReady, onShellError, onFatalError) {
        var pingedTasks = [], abortSet = /* @__PURE__ */ new Set(), request = {
          destination: null,
          responseState,
          progressiveChunkSize: progressiveChunkSize === void 0 ? DEFAULT_PROGRESSIVE_CHUNK_SIZE : progressiveChunkSize,
          status: OPEN,
          fatalError: null,
          nextSegmentId: 0,
          allPendingTasks: 0,
          pendingRootTasks: 0,
          completedRootSegment: null,
          abortableTasks: abortSet,
          pingedTasks,
          clientRenderedBoundaries: [],
          completedBoundaries: [],
          partialBoundaries: [],
          onError: onError3 === void 0 ? defaultErrorHandler : onError3,
          onAllReady: onAllReady === void 0 ? noop$1 : onAllReady,
          onShellReady: onShellReady === void 0 ? noop$1 : onShellReady,
          onShellError: onShellError === void 0 ? noop$1 : onShellError,
          onFatalError: onFatalError === void 0 ? noop$1 : onFatalError
        }, rootSegment = createPendingSegment(
          request,
          0,
          null,
          rootFormatContext,
          // Root segments are never embedded in Text on either edge
          !1,
          !1
        );
        rootSegment.parentFlushed = !0;
        var rootTask = createTask(request, children, null, rootSegment, abortSet, emptyContextObject, rootContextSnapshot, emptyTreeContext);
        return pingedTasks.push(rootTask), request;
      }
      function pingTask(request, task) {
        var pingedTasks = request.pingedTasks;
        pingedTasks.push(task), pingedTasks.length === 1 && scheduleWork(function() {
          return performWork(request);
        });
      }
      function createSuspenseBoundary(request, fallbackAbortableTasks) {
        return {
          id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,
          rootSegmentID: -1,
          parentFlushed: !1,
          pendingTasks: 0,
          forceClientRender: !1,
          completedSegments: [],
          byteSize: 0,
          fallbackAbortableTasks,
          errorDigest: null
        };
      }
      function createTask(request, node, blockedBoundary, blockedSegment, abortSet, legacyContext, context, treeContext) {
        request.allPendingTasks++, blockedBoundary === null ? request.pendingRootTasks++ : blockedBoundary.pendingTasks++;
        var task = {
          node,
          ping: function() {
            return pingTask(request, task);
          },
          blockedBoundary,
          blockedSegment,
          abortSet,
          legacyContext,
          context,
          treeContext
        };
        return task.componentStack = null, abortSet.add(task), task;
      }
      function createPendingSegment(request, index, boundary, formatContext, lastPushedText, textEmbedded) {
        return {
          status: PENDING,
          id: -1,
          // lazily assigned later
          index,
          parentFlushed: !1,
          chunks: [],
          children: [],
          formatContext,
          boundary,
          lastPushedText,
          textEmbedded
        };
      }
      var currentTaskInDEV = null;
      function getCurrentStackInDEV() {
        return currentTaskInDEV === null || currentTaskInDEV.componentStack === null ? "" : getStackByComponentStackNode(currentTaskInDEV.componentStack);
      }
      function pushBuiltInComponentStackInDEV(task, type) {
        task.componentStack = {
          tag: 0,
          parent: task.componentStack,
          type
        };
      }
      function pushFunctionComponentStackInDEV(task, type) {
        task.componentStack = {
          tag: 1,
          parent: task.componentStack,
          type
        };
      }
      function pushClassComponentStackInDEV(task, type) {
        task.componentStack = {
          tag: 2,
          parent: task.componentStack,
          type
        };
      }
      function popComponentStackInDEV(task) {
        task.componentStack === null ? error("Unexpectedly popped too many stack frames. This is a bug in React.") : task.componentStack = task.componentStack.parent;
      }
      var lastBoundaryErrorComponentStackDev = null;
      function captureBoundaryErrorDetailsDev(boundary, error2) {
        {
          var errorMessage;
          typeof error2 == "string" ? errorMessage = error2 : error2 && typeof error2.message == "string" ? errorMessage = error2.message : errorMessage = String(error2);
          var errorComponentStack = lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();
          lastBoundaryErrorComponentStackDev = null, boundary.errorMessage = errorMessage, boundary.errorComponentStack = errorComponentStack;
        }
      }
      function logRecoverableError(request, error2) {
        var errorDigest = request.onError(error2);
        if (errorDigest != null && typeof errorDigest != "string")
          throw new Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof errorDigest + '" instead');
        return errorDigest;
      }
      function fatalError(request, error2) {
        var onShellError = request.onShellError;
        onShellError(error2);
        var onFatalError = request.onFatalError;
        onFatalError(error2), request.destination !== null ? (request.status = CLOSED, closeWithError(request.destination, error2)) : (request.status = CLOSING, request.fatalError = error2);
      }
      function renderSuspenseBoundary(request, task, props) {
        pushBuiltInComponentStackInDEV(task, "Suspense");
        var parentBoundary = task.blockedBoundary, parentSegment = task.blockedSegment, fallback = props.fallback, content = props.children, fallbackAbortSet = /* @__PURE__ */ new Set(), newBoundary = createSuspenseBoundary(request, fallbackAbortSet), insertionIndex = parentSegment.chunks.length, boundarySegment = createPendingSegment(
          request,
          insertionIndex,
          newBoundary,
          parentSegment.formatContext,
          // boundaries never require text embedding at their edges because comment nodes bound them
          !1,
          !1
        );
        parentSegment.children.push(boundarySegment), parentSegment.lastPushedText = !1;
        var contentRootSegment = createPendingSegment(
          request,
          0,
          null,
          parentSegment.formatContext,
          // boundaries never require text embedding at their edges because comment nodes bound them
          !1,
          !1
        );
        contentRootSegment.parentFlushed = !0, task.blockedBoundary = newBoundary, task.blockedSegment = contentRootSegment;
        try {
          if (renderNode(request, task, content), pushSegmentFinale$1(contentRootSegment.chunks, request.responseState, contentRootSegment.lastPushedText, contentRootSegment.textEmbedded), contentRootSegment.status = COMPLETED, queueCompletedSegment(newBoundary, contentRootSegment), newBoundary.pendingTasks === 0) {
            popComponentStackInDEV(task);
            return;
          }
        } catch (error2) {
          contentRootSegment.status = ERRORED, newBoundary.forceClientRender = !0, newBoundary.errorDigest = logRecoverableError(request, error2), captureBoundaryErrorDetailsDev(newBoundary, error2);
        } finally {
          task.blockedBoundary = parentBoundary, task.blockedSegment = parentSegment;
        }
        var suspendedFallbackTask = createTask(request, fallback, parentBoundary, boundarySegment, fallbackAbortSet, task.legacyContext, task.context, task.treeContext);
        suspendedFallbackTask.componentStack = task.componentStack, request.pingedTasks.push(suspendedFallbackTask), popComponentStackInDEV(task);
      }
      function renderHostElement(request, task, type, props) {
        pushBuiltInComponentStackInDEV(task, type);
        var segment = task.blockedSegment, children = pushStartInstance(segment.chunks, type, props, request.responseState, segment.formatContext);
        segment.lastPushedText = !1;
        var prevContext = segment.formatContext;
        segment.formatContext = getChildFormatContext(prevContext, type, props), renderNode(request, task, children), segment.formatContext = prevContext, pushEndInstance(segment.chunks, type), segment.lastPushedText = !1, popComponentStackInDEV(task);
      }
      function shouldConstruct$1(Component2) {
        return Component2.prototype && Component2.prototype.isReactComponent;
      }
      function renderWithHooks(request, task, Component2, props, secondArg) {
        var componentIdentity = {};
        prepareToUseHooks(task, componentIdentity);
        var result = Component2(props, secondArg);
        return finishHooks(Component2, props, result, secondArg);
      }
      function finishClassComponent(request, task, instance, Component2, props) {
        var nextChildren = instance.render();
        instance.props !== props && (didWarnAboutReassigningProps || error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromType(Component2) || "a component"), didWarnAboutReassigningProps = !0);
        {
          var childContextTypes = Component2.childContextTypes;
          if (childContextTypes != null) {
            var previousContext = task.legacyContext, mergedContext = processChildContext(instance, Component2, previousContext, childContextTypes);
            task.legacyContext = mergedContext, renderNodeDestructive(request, task, nextChildren), task.legacyContext = previousContext;
            return;
          }
        }
        renderNodeDestructive(request, task, nextChildren);
      }
      function renderClassComponent(request, task, Component2, props) {
        pushClassComponentStackInDEV(task, Component2);
        var maskedContext = getMaskedContext(Component2, task.legacyContext), instance = constructClassInstance(Component2, props, maskedContext);
        mountClassInstance(instance, Component2, props, maskedContext), finishClassComponent(request, task, instance, Component2, props), popComponentStackInDEV(task);
      }
      var didWarnAboutBadClass = {}, didWarnAboutModulePatternComponent = {}, didWarnAboutContextTypeOnFunctionComponent = {}, didWarnAboutGetDerivedStateOnFunctionComponent = {}, didWarnAboutReassigningProps = !1, didWarnAboutGenerators = !1, didWarnAboutMaps = !1, hasWarnedAboutUsingContextAsConsumer = !1;
      function renderIndeterminateComponent(request, task, Component2, props) {
        var legacyContext;
        if (legacyContext = getMaskedContext(Component2, task.legacyContext), pushFunctionComponentStackInDEV(task, Component2), Component2.prototype && typeof Component2.prototype.render == "function") {
          var componentName = getComponentNameFromType(Component2) || "Unknown";
          didWarnAboutBadClass[componentName] || (error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName), didWarnAboutBadClass[componentName] = !0);
        }
        var value = renderWithHooks(request, task, Component2, props, legacyContext), hasId = checkDidRenderIdHook();
        if (typeof value == "object" && value !== null && typeof value.render == "function" && value.$$typeof === void 0) {
          var _componentName = getComponentNameFromType(Component2) || "Unknown";
          didWarnAboutModulePatternComponent[_componentName] || (error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName), didWarnAboutModulePatternComponent[_componentName] = !0);
        }
        if (
          // Run these checks in production only if the flag is off.
          // Eventually we'll delete this branch altogether.
          typeof value == "object" && value !== null && typeof value.render == "function" && value.$$typeof === void 0
        ) {
          {
            var _componentName2 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutModulePatternComponent[_componentName2] || (error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2), didWarnAboutModulePatternComponent[_componentName2] = !0);
          }
          mountClassInstance(value, Component2, props, legacyContext), finishClassComponent(request, task, value, Component2, props);
        } else if (validateFunctionComponentInDev(Component2), hasId) {
          var prevTreeContext = task.treeContext, totalChildren = 1, index = 0;
          task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
          try {
            renderNodeDestructive(request, task, value);
          } finally {
            task.treeContext = prevTreeContext;
          }
        } else
          renderNodeDestructive(request, task, value);
        popComponentStackInDEV(task);
      }
      function validateFunctionComponentInDev(Component2) {
        {
          if (Component2 && Component2.childContextTypes && error("%s(...): childContextTypes cannot be defined on a function component.", Component2.displayName || Component2.name || "Component"), typeof Component2.getDerivedStateFromProps == "function") {
            var _componentName3 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] || (error("%s: Function components do not support getDerivedStateFromProps.", _componentName3), didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = !0);
          }
          if (typeof Component2.contextType == "object" && Component2.contextType !== null) {
            var _componentName4 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutContextTypeOnFunctionComponent[_componentName4] || (error("%s: Function components do not support contextType.", _componentName4), didWarnAboutContextTypeOnFunctionComponent[_componentName4] = !0);
          }
        }
      }
      function resolveDefaultProps(Component2, baseProps) {
        if (Component2 && Component2.defaultProps) {
          var props = assign({}, baseProps), defaultProps = Component2.defaultProps;
          for (var propName in defaultProps)
            props[propName] === void 0 && (props[propName] = defaultProps[propName]);
          return props;
        }
        return baseProps;
      }
      function renderForwardRef(request, task, type, props, ref) {
        pushFunctionComponentStackInDEV(task, type.render);
        var children = renderWithHooks(request, task, type.render, props, ref), hasId = checkDidRenderIdHook();
        if (hasId) {
          var prevTreeContext = task.treeContext, totalChildren = 1, index = 0;
          task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
          try {
            renderNodeDestructive(request, task, children);
          } finally {
            task.treeContext = prevTreeContext;
          }
        } else
          renderNodeDestructive(request, task, children);
        popComponentStackInDEV(task);
      }
      function renderMemo(request, task, type, props, ref) {
        var innerType = type.type, resolvedProps = resolveDefaultProps(innerType, props);
        renderElement(request, task, innerType, resolvedProps, ref);
      }
      function renderContextConsumer(request, task, context, props) {
        context._context === void 0 ? context !== context.Consumer && (hasWarnedAboutUsingContextAsConsumer || (hasWarnedAboutUsingContextAsConsumer = !0, error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : context = context._context;
        var render = props.children;
        typeof render != "function" && error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
        var newValue = readContext(context), newChildren = render(newValue);
        renderNodeDestructive(request, task, newChildren);
      }
      function renderContextProvider(request, task, type, props) {
        var context = type._context, value = props.value, children = props.children, prevSnapshot;
        prevSnapshot = task.context, task.context = pushProvider(context, value), renderNodeDestructive(request, task, children), task.context = popProvider(context), prevSnapshot !== task.context && error("Popping the context provider did not return back to the original snapshot. This is a bug in React.");
      }
      function renderLazyComponent(request, task, lazyComponent, props, ref) {
        pushBuiltInComponentStackInDEV(task, "Lazy");
        var payload = lazyComponent._payload, init = lazyComponent._init, Component2 = init(payload), resolvedProps = resolveDefaultProps(Component2, props);
        renderElement(request, task, Component2, resolvedProps, ref), popComponentStackInDEV(task);
      }
      function renderElement(request, task, type, props, ref) {
        if (typeof type == "function")
          if (shouldConstruct$1(type)) {
            renderClassComponent(request, task, type, props);
            return;
          } else {
            renderIndeterminateComponent(request, task, type, props);
            return;
          }
        if (typeof type == "string") {
          renderHostElement(request, task, type, props);
          return;
        }
        switch (type) {
          case REACT_LEGACY_HIDDEN_TYPE:
          case REACT_DEBUG_TRACING_MODE_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_FRAGMENT_TYPE: {
            renderNodeDestructive(request, task, props.children);
            return;
          }
          case REACT_SUSPENSE_LIST_TYPE: {
            pushBuiltInComponentStackInDEV(task, "SuspenseList"), renderNodeDestructive(request, task, props.children), popComponentStackInDEV(task);
            return;
          }
          case REACT_SCOPE_TYPE:
            throw new Error("ReactDOMServer does not yet support scope components.");
          case REACT_SUSPENSE_TYPE: {
            renderSuspenseBoundary(request, task, props);
            return;
          }
        }
        if (typeof type == "object" && type !== null)
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE: {
              renderForwardRef(request, task, type, props, ref);
              return;
            }
            case REACT_MEMO_TYPE: {
              renderMemo(request, task, type, props, ref);
              return;
            }
            case REACT_PROVIDER_TYPE: {
              renderContextProvider(request, task, type, props);
              return;
            }
            case REACT_CONTEXT_TYPE: {
              renderContextConsumer(request, task, type, props);
              return;
            }
            case REACT_LAZY_TYPE: {
              renderLazyComponent(request, task, type, props);
              return;
            }
          }
        var info = "";
        throw (type === void 0 || typeof type == "object" && type !== null && Object.keys(type).length === 0) && (info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports."), new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
      }
      function validateIterable(iterable, iteratorFn) {
        typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
        iterable[Symbol.toStringTag] === "Generator" && (didWarnAboutGenerators || error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), didWarnAboutGenerators = !0), iterable.entries === iteratorFn && (didWarnAboutMaps || error("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0);
      }
      function renderNodeDestructive(request, task, node) {
        try {
          return renderNodeDestructiveImpl(request, task, node);
        } catch (x) {
          throw typeof x == "object" && x !== null && typeof x.then == "function" || (lastBoundaryErrorComponentStackDev = lastBoundaryErrorComponentStackDev !== null ? lastBoundaryErrorComponentStackDev : getCurrentStackInDEV()), x;
        }
      }
      function renderNodeDestructiveImpl(request, task, node) {
        if (task.node = node, typeof node == "object" && node !== null) {
          switch (node.$$typeof) {
            case REACT_ELEMENT_TYPE: {
              var element = node, type = element.type, props = element.props, ref = element.ref;
              renderElement(request, task, type, props, ref);
              return;
            }
            case REACT_PORTAL_TYPE:
              throw new Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
            case REACT_LAZY_TYPE: {
              var lazyNode = node, payload = lazyNode._payload, init = lazyNode._init, resolvedNode;
              try {
                resolvedNode = init(payload);
              } catch (x) {
                throw typeof x == "object" && x !== null && typeof x.then == "function" && pushBuiltInComponentStackInDEV(task, "Lazy"), x;
              }
              renderNodeDestructive(request, task, resolvedNode);
              return;
            }
          }
          if (isArray(node)) {
            renderChildrenArray(request, task, node);
            return;
          }
          var iteratorFn = getIteratorFn(node);
          if (iteratorFn) {
            validateIterable(node, iteratorFn);
            var iterator = iteratorFn.call(node);
            if (iterator) {
              var step = iterator.next();
              if (!step.done) {
                var children = [];
                do
                  children.push(step.value), step = iterator.next();
                while (!step.done);
                renderChildrenArray(request, task, children);
                return;
              }
              return;
            }
          }
          var childString = Object.prototype.toString.call(node);
          throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(node).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
        }
        if (typeof node == "string") {
          var segment = task.blockedSegment;
          segment.lastPushedText = pushTextInstance$1(task.blockedSegment.chunks, node, request.responseState, segment.lastPushedText);
          return;
        }
        if (typeof node == "number") {
          var _segment = task.blockedSegment;
          _segment.lastPushedText = pushTextInstance$1(task.blockedSegment.chunks, "" + node, request.responseState, _segment.lastPushedText);
          return;
        }
        typeof node == "function" && error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
      function renderChildrenArray(request, task, children) {
        for (var totalChildren = children.length, i = 0; i < totalChildren; i++) {
          var prevTreeContext = task.treeContext;
          task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i);
          try {
            renderNode(request, task, children[i]);
          } finally {
            task.treeContext = prevTreeContext;
          }
        }
      }
      function spawnNewSuspendedTask(request, task, x) {
        var segment = task.blockedSegment, insertionIndex = segment.chunks.length, newSegment = createPendingSegment(
          request,
          insertionIndex,
          null,
          segment.formatContext,
          // Adopt the parent segment's leading text embed
          segment.lastPushedText,
          // Assume we are text embedded at the trailing edge
          !0
        );
        segment.children.push(newSegment), segment.lastPushedText = !1;
        var newTask = createTask(request, task.node, task.blockedBoundary, newSegment, task.abortSet, task.legacyContext, task.context, task.treeContext);
        task.componentStack !== null && (newTask.componentStack = task.componentStack.parent);
        var ping = newTask.ping;
        x.then(ping, ping);
      }
      function renderNode(request, task, node) {
        var previousFormatContext = task.blockedSegment.formatContext, previousLegacyContext = task.legacyContext, previousContext = task.context, previousComponentStack = null;
        previousComponentStack = task.componentStack;
        try {
          return renderNodeDestructive(request, task, node);
        } catch (x) {
          if (resetHooksState(), typeof x == "object" && x !== null && typeof x.then == "function") {
            spawnNewSuspendedTask(request, task, x), task.blockedSegment.formatContext = previousFormatContext, task.legacyContext = previousLegacyContext, task.context = previousContext, switchContext(previousContext), task.componentStack = previousComponentStack;
            return;
          } else
            throw task.blockedSegment.formatContext = previousFormatContext, task.legacyContext = previousLegacyContext, task.context = previousContext, switchContext(previousContext), task.componentStack = previousComponentStack, x;
        }
      }
      function erroredTask(request, boundary, segment, error2) {
        var errorDigest = logRecoverableError(request, error2);
        if (boundary === null ? fatalError(request, error2) : (boundary.pendingTasks--, boundary.forceClientRender || (boundary.forceClientRender = !0, boundary.errorDigest = errorDigest, captureBoundaryErrorDetailsDev(boundary, error2), boundary.parentFlushed && request.clientRenderedBoundaries.push(boundary))), request.allPendingTasks--, request.allPendingTasks === 0) {
          var onAllReady = request.onAllReady;
          onAllReady();
        }
      }
      function abortTaskSoft(task) {
        var request = this, boundary = task.blockedBoundary, segment = task.blockedSegment;
        segment.status = ABORTED, finishedTask(request, boundary, segment);
      }
      function abortTask(task, request, reason) {
        var boundary = task.blockedBoundary, segment = task.blockedSegment;
        if (segment.status = ABORTED, boundary === null)
          request.allPendingTasks--, request.status !== CLOSED && (request.status = CLOSED, request.destination !== null && close(request.destination));
        else {
          if (boundary.pendingTasks--, !boundary.forceClientRender) {
            boundary.forceClientRender = !0;
            var _error = reason === void 0 ? new Error("The render was aborted by the server without a reason.") : reason;
            boundary.errorDigest = request.onError(_error);
            {
              var errorPrefix = "The server did not finish this Suspense boundary: ";
              _error && typeof _error.message == "string" ? _error = errorPrefix + _error.message : _error = errorPrefix + String(_error);
              var previousTaskInDev = currentTaskInDEV;
              currentTaskInDEV = task;
              try {
                captureBoundaryErrorDetailsDev(boundary, _error);
              } finally {
                currentTaskInDEV = previousTaskInDev;
              }
            }
            boundary.parentFlushed && request.clientRenderedBoundaries.push(boundary);
          }
          if (boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
            return abortTask(fallbackTask, request, reason);
          }), boundary.fallbackAbortableTasks.clear(), request.allPendingTasks--, request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
      }
      function queueCompletedSegment(boundary, segment) {
        if (segment.chunks.length === 0 && segment.children.length === 1 && segment.children[0].boundary === null) {
          var childSegment = segment.children[0];
          childSegment.id = segment.id, childSegment.parentFlushed = !0, childSegment.status === COMPLETED && queueCompletedSegment(boundary, childSegment);
        } else {
          var completedSegments = boundary.completedSegments;
          completedSegments.push(segment);
        }
      }
      function finishedTask(request, boundary, segment) {
        if (boundary === null) {
          if (segment.parentFlushed) {
            if (request.completedRootSegment !== null)
              throw new Error("There can only be one root segment. This is a bug in React.");
            request.completedRootSegment = segment;
          }
          if (request.pendingRootTasks--, request.pendingRootTasks === 0) {
            request.onShellError = noop$1;
            var onShellReady = request.onShellReady;
            onShellReady();
          }
        } else if (boundary.pendingTasks--, !boundary.forceClientRender) {
          if (boundary.pendingTasks === 0)
            segment.parentFlushed && segment.status === COMPLETED && queueCompletedSegment(boundary, segment), boundary.parentFlushed && request.completedBoundaries.push(boundary), boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request), boundary.fallbackAbortableTasks.clear();
          else if (segment.parentFlushed && segment.status === COMPLETED) {
            queueCompletedSegment(boundary, segment);
            var completedSegments = boundary.completedSegments;
            completedSegments.length === 1 && boundary.parentFlushed && request.partialBoundaries.push(boundary);
          }
        }
        if (request.allPendingTasks--, request.allPendingTasks === 0) {
          var onAllReady = request.onAllReady;
          onAllReady();
        }
      }
      function retryTask(request, task) {
        var segment = task.blockedSegment;
        if (segment.status === PENDING) {
          switchContext(task.context);
          var prevTaskInDEV = null;
          prevTaskInDEV = currentTaskInDEV, currentTaskInDEV = task;
          try {
            renderNodeDestructive(request, task, task.node), pushSegmentFinale$1(segment.chunks, request.responseState, segment.lastPushedText, segment.textEmbedded), task.abortSet.delete(task), segment.status = COMPLETED, finishedTask(request, task.blockedBoundary, segment);
          } catch (x) {
            if (resetHooksState(), typeof x == "object" && x !== null && typeof x.then == "function") {
              var ping = task.ping;
              x.then(ping, ping);
            } else
              task.abortSet.delete(task), segment.status = ERRORED, erroredTask(request, task.blockedBoundary, segment, x);
          } finally {
            currentTaskInDEV = prevTaskInDEV;
          }
        }
      }
      function performWork(request) {
        if (request.status !== CLOSED) {
          var prevContext = getActiveContext(), prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = Dispatcher;
          var prevGetCurrentStackImpl;
          prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack, ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;
          var prevResponseState = currentResponseState;
          setCurrentResponseState(request.responseState);
          try {
            var pingedTasks = request.pingedTasks, i;
            for (i = 0; i < pingedTasks.length; i++) {
              var task = pingedTasks[i];
              retryTask(request, task);
            }
            pingedTasks.splice(0, i), request.destination !== null && flushCompletedQueues(request, request.destination);
          } catch (error2) {
            logRecoverableError(request, error2), fatalError(request, error2);
          } finally {
            setCurrentResponseState(prevResponseState), ReactCurrentDispatcher$1.current = prevDispatcher, ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl, prevDispatcher === Dispatcher && switchContext(prevContext);
          }
        }
      }
      function flushSubtree(request, destination, segment) {
        switch (segment.parentFlushed = !0, segment.status) {
          case PENDING: {
            var segmentID = segment.id = request.nextSegmentId++;
            return segment.lastPushedText = !1, segment.textEmbedded = !1, writePlaceholder(destination, request.responseState, segmentID);
          }
          case COMPLETED: {
            segment.status = FLUSHED;
            for (var r = !0, chunks = segment.chunks, chunkIdx = 0, children = segment.children, childIdx = 0; childIdx < children.length; childIdx++) {
              for (var nextChild = children[childIdx]; chunkIdx < nextChild.index; chunkIdx++)
                writeChunk(destination, chunks[chunkIdx]);
              r = flushSegment(request, destination, nextChild);
            }
            for (; chunkIdx < chunks.length - 1; chunkIdx++)
              writeChunk(destination, chunks[chunkIdx]);
            return chunkIdx < chunks.length && (r = writeChunkAndReturn(destination, chunks[chunkIdx])), r;
          }
          default:
            throw new Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
        }
      }
      function flushSegment(request, destination, segment) {
        var boundary = segment.boundary;
        if (boundary === null)
          return flushSubtree(request, destination, segment);
        if (boundary.parentFlushed = !0, boundary.forceClientRender)
          return writeStartClientRenderedSuspenseBoundary$1(destination, request.responseState, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack), flushSubtree(request, destination, segment), writeEndClientRenderedSuspenseBoundary$1(destination, request.responseState);
        if (boundary.pendingTasks > 0) {
          boundary.rootSegmentID = request.nextSegmentId++, boundary.completedSegments.length > 0 && request.partialBoundaries.push(boundary);
          var id = boundary.id = assignSuspenseBoundaryID(request.responseState);
          return writeStartPendingSuspenseBoundary(destination, request.responseState, id), flushSubtree(request, destination, segment), writeEndPendingSuspenseBoundary(destination, request.responseState);
        } else {
          if (boundary.byteSize > request.progressiveChunkSize)
            return boundary.rootSegmentID = request.nextSegmentId++, request.completedBoundaries.push(boundary), writeStartPendingSuspenseBoundary(destination, request.responseState, boundary.id), flushSubtree(request, destination, segment), writeEndPendingSuspenseBoundary(destination, request.responseState);
          writeStartCompletedSuspenseBoundary$1(destination, request.responseState);
          var completedSegments = boundary.completedSegments;
          if (completedSegments.length !== 1)
            throw new Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
          var contentSegment = completedSegments[0];
          return flushSegment(request, destination, contentSegment), writeEndCompletedSuspenseBoundary$1(destination, request.responseState);
        }
      }
      function flushClientRenderedBoundary(request, destination, boundary) {
        return writeClientRenderBoundaryInstruction(destination, request.responseState, boundary.id, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
      }
      function flushSegmentContainer(request, destination, segment) {
        return writeStartSegment(destination, request.responseState, segment.formatContext, segment.id), flushSegment(request, destination, segment), writeEndSegment(destination, segment.formatContext);
      }
      function flushCompletedBoundary(request, destination, boundary) {
        for (var completedSegments = boundary.completedSegments, i = 0; i < completedSegments.length; i++) {
          var segment = completedSegments[i];
          flushPartiallyCompletedSegment(request, destination, boundary, segment);
        }
        return completedSegments.length = 0, writeCompletedBoundaryInstruction(destination, request.responseState, boundary.id, boundary.rootSegmentID);
      }
      function flushPartialBoundary(request, destination, boundary) {
        for (var completedSegments = boundary.completedSegments, i = 0; i < completedSegments.length; i++) {
          var segment = completedSegments[i];
          if (!flushPartiallyCompletedSegment(request, destination, boundary, segment))
            return i++, completedSegments.splice(0, i), !1;
        }
        return completedSegments.splice(0, i), !0;
      }
      function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
        if (segment.status === FLUSHED)
          return !0;
        var segmentID = segment.id;
        if (segmentID === -1) {
          var rootSegmentID = segment.id = boundary.rootSegmentID;
          if (rootSegmentID === -1)
            throw new Error("A root segment ID must have been assigned by now. This is a bug in React.");
          return flushSegmentContainer(request, destination, segment);
        } else
          return flushSegmentContainer(request, destination, segment), writeCompletedSegmentInstruction(destination, request.responseState, segmentID);
      }
      function flushCompletedQueues(request, destination) {
        try {
          var completedRootSegment = request.completedRootSegment;
          completedRootSegment !== null && request.pendingRootTasks === 0 && (flushSegment(request, destination, completedRootSegment), request.completedRootSegment = null, writeCompletedRoot(destination, request.responseState));
          var clientRenderedBoundaries = request.clientRenderedBoundaries, i;
          for (i = 0; i < clientRenderedBoundaries.length; i++) {
            var boundary = clientRenderedBoundaries[i];
            if (!flushClientRenderedBoundary(request, destination, boundary)) {
              request.destination = null, i++, clientRenderedBoundaries.splice(0, i);
              return;
            }
          }
          clientRenderedBoundaries.splice(0, i);
          var completedBoundaries = request.completedBoundaries;
          for (i = 0; i < completedBoundaries.length; i++) {
            var _boundary = completedBoundaries[i];
            if (!flushCompletedBoundary(request, destination, _boundary)) {
              request.destination = null, i++, completedBoundaries.splice(0, i);
              return;
            }
          }
          completedBoundaries.splice(0, i);
          var partialBoundaries = request.partialBoundaries;
          for (i = 0; i < partialBoundaries.length; i++) {
            var _boundary2 = partialBoundaries[i];
            if (!flushPartialBoundary(request, destination, _boundary2)) {
              request.destination = null, i++, partialBoundaries.splice(0, i);
              return;
            }
          }
          partialBoundaries.splice(0, i);
          var largeBoundaries = request.completedBoundaries;
          for (i = 0; i < largeBoundaries.length; i++) {
            var _boundary3 = largeBoundaries[i];
            if (!flushCompletedBoundary(request, destination, _boundary3)) {
              request.destination = null, i++, largeBoundaries.splice(0, i);
              return;
            }
          }
          largeBoundaries.splice(0, i);
        } finally {
          request.allPendingTasks === 0 && request.pingedTasks.length === 0 && request.clientRenderedBoundaries.length === 0 && request.completedBoundaries.length === 0 && (request.abortableTasks.size !== 0 && error("There was still abortable task at the root when we closed. This is a bug in React."), close(destination));
        }
      }
      function startWork(request) {
        scheduleWork(function() {
          return performWork(request);
        });
      }
      function startFlowing(request, destination) {
        if (request.status === CLOSING) {
          request.status = CLOSED, closeWithError(destination, request.fatalError);
          return;
        }
        if (request.status !== CLOSED && request.destination === null) {
          request.destination = destination;
          try {
            flushCompletedQueues(request, destination);
          } catch (error2) {
            logRecoverableError(request, error2), fatalError(request, error2);
          }
        }
      }
      function abort(request, reason) {
        try {
          var abortableTasks = request.abortableTasks;
          abortableTasks.forEach(function(task) {
            return abortTask(task, request, reason);
          }), abortableTasks.clear(), request.destination !== null && flushCompletedQueues(request, request.destination);
        } catch (error2) {
          logRecoverableError(request, error2), fatalError(request, error2);
        }
      }
      function onError2() {
      }
      function renderToStringImpl(children, options2, generateStaticMarkup, abortReason) {
        var didFatal = !1, fatalError2 = null, result = "", destination = {
          push: function(chunk) {
            return chunk !== null && (result += chunk), !0;
          },
          destroy: function(error2) {
            didFatal = !0, fatalError2 = error2;
          }
        }, readyToStream = !1;
        function onShellReady() {
          readyToStream = !0;
        }
        var request = createRequest(children, createResponseState$1(generateStaticMarkup, options2 ? options2.identifierPrefix : void 0), createRootFormatContext(), 1 / 0, onError2, void 0, onShellReady, void 0, void 0);
        if (startWork(request), abort(request, abortReason), startFlowing(request, destination), didFatal)
          throw fatalError2;
        if (!readyToStream)
          throw new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
        return result;
      }
      function renderToString(children, options2) {
        return renderToStringImpl(children, options2, !1, 'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
      }
      function renderToStaticMarkup(children, options2) {
        return renderToStringImpl(children, options2, !0, 'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
      }
      function renderToNodeStream() {
        throw new Error("ReactDOMServer.renderToNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToString() instead.");
      }
      function renderToStaticNodeStream() {
        throw new Error("ReactDOMServer.renderToStaticNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToStaticMarkup() instead.");
      }
      exports2.renderToNodeStream = renderToNodeStream, exports2.renderToStaticMarkup = renderToStaticMarkup, exports2.renderToStaticNodeStream = renderToStaticNodeStream, exports2.renderToString = renderToString, exports2.version = ReactVersion;
    })();
  }
});

// node_modules/react-dom/cjs/react-dom-server.browser.development.js
var require_react_dom_server_browser_development = __commonJS({
  "node_modules/react-dom/cjs/react-dom-server.browser.development.js"(exports2) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    (function() {
      "use strict";
      var React7 = require_react(), ReactVersion = "18.2.0", ReactSharedInternals = React7.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function warn(format) {
        {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)
            args[_key - 1] = arguments[_key];
          printWarning("warn", format, args);
        }
      }
      function error(format) {
        {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
            args[_key2 - 1] = arguments[_key2];
          printWarning("error", format, args);
        }
      }
      function printWarning(level, format, args) {
        {
          var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame, stack = ReactDebugCurrentFrame2.getStackAddendum();
          stack !== "" && (format += "%s", args = args.concat([stack]));
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format), Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      function scheduleWork(callback) {
        callback();
      }
      var VIEW_SIZE = 512, currentView = null, writtenBytes = 0;
      function beginWriting(destination) {
        currentView = new Uint8Array(VIEW_SIZE), writtenBytes = 0;
      }
      function writeChunk(destination, chunk) {
        if (chunk.length !== 0) {
          if (chunk.length > VIEW_SIZE) {
            writtenBytes > 0 && (destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes)), currentView = new Uint8Array(VIEW_SIZE), writtenBytes = 0), destination.enqueue(chunk);
            return;
          }
          var bytesToWrite = chunk, allowableBytes = currentView.length - writtenBytes;
          allowableBytes < bytesToWrite.length && (allowableBytes === 0 ? destination.enqueue(currentView) : (currentView.set(bytesToWrite.subarray(0, allowableBytes), writtenBytes), destination.enqueue(currentView), bytesToWrite = bytesToWrite.subarray(allowableBytes)), currentView = new Uint8Array(VIEW_SIZE), writtenBytes = 0), currentView.set(bytesToWrite, writtenBytes), writtenBytes += bytesToWrite.length;
        }
      }
      function writeChunkAndReturn(destination, chunk) {
        return writeChunk(destination, chunk), !0;
      }
      function completeWriting(destination) {
        currentView && writtenBytes > 0 && (destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes)), currentView = null, writtenBytes = 0);
      }
      function close(destination) {
        destination.close();
      }
      var textEncoder = new TextEncoder();
      function stringToChunk(content) {
        return textEncoder.encode(content);
      }
      function stringToPrecomputedChunk(content) {
        return textEncoder.encode(content);
      }
      function closeWithError(destination, error2) {
        typeof destination.error == "function" ? destination.error(error2) : destination.close();
      }
      function typeName(value) {
        {
          var hasToStringTag = typeof Symbol == "function" && Symbol.toStringTag, type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
          return type;
        }
      }
      function willCoercionThrow(value) {
        try {
          return testStringCoercion(value), !1;
        } catch {
          return !0;
        }
      }
      function testStringCoercion(value) {
        return "" + value;
      }
      function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value))
          return error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value)), testStringCoercion(value);
      }
      function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value))
          return error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value)), testStringCoercion(value);
      }
      function checkHtmlStringCoercion(value) {
        if (willCoercionThrow(value))
          return error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value)), testStringCoercion(value);
      }
      var hasOwnProperty = Object.prototype.hasOwnProperty, RESERVED = 0, STRING = 1, BOOLEANISH_STRING = 2, BOOLEAN = 3, OVERLOADED_BOOLEAN = 4, NUMERIC = 5, POSITIVE_NUMERIC = 6, ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$"), illegalAttributeNameCache = {}, validatedAttributeNameCache = {};
      function isAttributeNameSafe(attributeName) {
        return hasOwnProperty.call(validatedAttributeNameCache, attributeName) ? !0 : hasOwnProperty.call(illegalAttributeNameCache, attributeName) ? !1 : VALID_ATTRIBUTE_NAME_REGEX.test(attributeName) ? (validatedAttributeNameCache[attributeName] = !0, !0) : (illegalAttributeNameCache[attributeName] = !0, error("Invalid attribute name: `%s`", attributeName), !1);
      }
      function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED)
          return !1;
        switch (typeof value) {
          case "function":
          case "symbol":
            return !0;
          case "boolean": {
            if (isCustomComponentTag)
              return !1;
            if (propertyInfo !== null)
              return !propertyInfo.acceptsBooleans;
            var prefix2 = name.toLowerCase().slice(0, 5);
            return prefix2 !== "data-" && prefix2 !== "aria-";
          }
          default:
            return !1;
        }
      }
      function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
      }
      function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN, this.attributeName = attributeName, this.attributeNamespace = attributeNamespace, this.mustUseProperty = mustUseProperty, this.propertyName = name, this.type = type, this.sanitizeURL = sanitizeURL2, this.removeEmptyString = removeEmptyString;
      }
      var properties = {}, reservedProps = [
        "children",
        "dangerouslySetInnerHTML",
        // TODO: This prevents the assignment of defaultValue to regular
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        "defaultValue",
        "defaultChecked",
        "innerHTML",
        "suppressContentEditableWarning",
        "suppressHydrationWarning",
        "style"
      ];
      reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          RESERVED,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEANISH_STRING,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEANISH_STRING,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "allowFullScreen",
        "async",
        // Note: there is a special case that prevents it from being written to the DOM
        // on the client side because the browsers are inconsistent. Instead we call focus().
        "autoFocus",
        "autoPlay",
        "controls",
        "default",
        "defer",
        "disabled",
        "disablePictureInPicture",
        "disableRemotePlayback",
        "formNoValidate",
        "hidden",
        "loop",
        "noModule",
        "noValidate",
        "open",
        "playsInline",
        "readOnly",
        "required",
        "reversed",
        "scoped",
        "seamless",
        // Microdata
        "itemScope"
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEAN,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "checked",
        // Note: `option.selected` is not updated if `select.multiple` is
        // disabled with `removeAttribute`. We have special logic for handling this.
        "multiple",
        "muted",
        "selected"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEAN,
          !0,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "capture",
        "download"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          OVERLOADED_BOOLEAN,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "cols",
        "rows",
        "size",
        "span"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          POSITIVE_NUMERIC,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["rowSpan", "start"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          NUMERIC,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      });
      var CAMELIZE = /[\-\:]([a-z])/g, capitalize = function(token) {
        return token[1].toUpperCase();
      };
      [
        "accent-height",
        "alignment-baseline",
        "arabic-form",
        "baseline-shift",
        "cap-height",
        "clip-path",
        "clip-rule",
        "color-interpolation",
        "color-interpolation-filters",
        "color-profile",
        "color-rendering",
        "dominant-baseline",
        "enable-background",
        "fill-opacity",
        "fill-rule",
        "flood-color",
        "flood-opacity",
        "font-family",
        "font-size",
        "font-size-adjust",
        "font-stretch",
        "font-style",
        "font-variant",
        "font-weight",
        "glyph-name",
        "glyph-orientation-horizontal",
        "glyph-orientation-vertical",
        "horiz-adv-x",
        "horiz-origin-x",
        "image-rendering",
        "letter-spacing",
        "lighting-color",
        "marker-end",
        "marker-mid",
        "marker-start",
        "overline-position",
        "overline-thickness",
        "paint-order",
        "panose-1",
        "pointer-events",
        "rendering-intent",
        "shape-rendering",
        "stop-color",
        "stop-opacity",
        "strikethrough-position",
        "strikethrough-thickness",
        "stroke-dasharray",
        "stroke-dashoffset",
        "stroke-linecap",
        "stroke-linejoin",
        "stroke-miterlimit",
        "stroke-opacity",
        "stroke-width",
        "text-anchor",
        "text-decoration",
        "text-rendering",
        "underline-position",
        "underline-thickness",
        "unicode-bidi",
        "unicode-range",
        "units-per-em",
        "v-alphabetic",
        "v-hanging",
        "v-ideographic",
        "v-mathematical",
        "vector-effect",
        "vert-adv-y",
        "vert-origin-x",
        "vert-origin-y",
        "word-spacing",
        "writing-mode",
        "xmlns:xlink",
        "x-height"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "xlink:actuate",
        "xlink:arcrole",
        "xlink:role",
        "xlink:show",
        "xlink:title",
        "xlink:type"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          "http://www.w3.org/1999/xlink",
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "xml:base",
        "xml:lang",
        "xml:space"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          "http://www.w3.org/XML/1998/namespace",
          !1,
          // sanitizeURL
          !1
        );
      }), ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(
          attributeName,
          STRING,
          !1,
          // mustUseProperty
          attributeName.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      });
      var xlinkHref = "xlinkHref";
      properties[xlinkHref] = new PropertyInfoRecord(
        "xlinkHref",
        STRING,
        !1,
        // mustUseProperty
        "xlink:href",
        "http://www.w3.org/1999/xlink",
        !0,
        // sanitizeURL
        !1
      ), ["src", "href", "action", "formAction"].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(
          attributeName,
          STRING,
          !1,
          // mustUseProperty
          attributeName.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !0,
          // sanitizeURL
          !0
        );
      });
      var isUnitlessNumber = {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        // SVG-related properties
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0
      };
      function prefixKey(prefix2, key) {
        return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
      }
      var prefixes = ["Webkit", "ms", "Moz", "O"];
      Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes.forEach(function(prefix2) {
          isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
        });
      });
      var hasReadOnlyValue = {
        button: !0,
        checkbox: !0,
        image: !0,
        hidden: !0,
        radio: !0,
        reset: !0,
        submit: !0
      };
      function checkControlledValueProps(tagName, props) {
        hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null || error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), props.onChange || props.readOnly || props.disabled || props.checked == null || error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
      }
      function isCustomComponent(tagName, props) {
        if (tagName.indexOf("-") === -1)
          return typeof props.is == "string";
        switch (tagName) {
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            return !1;
          default:
            return !0;
        }
      }
      var ariaProperties = {
        "aria-current": 0,
        // state
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        // state
        "aria-hidden": 0,
        // state
        "aria-invalid": 0,
        // state
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        // Widget Attributes
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        // Live Region Attributes
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        // Drag-and-Drop Attributes
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        // Relationship Attributes
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0
      }, warnedProperties = {}, rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"), rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
      function validateProperty(tagName, name) {
        {
          if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name])
            return !0;
          if (rARIACamel.test(name)) {
            var ariaName = "aria-" + name.slice(4).toLowerCase(), correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
            if (correctName == null)
              return error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name), warnedProperties[name] = !0, !0;
            if (name !== correctName)
              return error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName), warnedProperties[name] = !0, !0;
          }
          if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase(), standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
            if (standardName == null)
              return warnedProperties[name] = !0, !1;
            if (name !== standardName)
              return error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName), warnedProperties[name] = !0, !0;
          }
        }
        return !0;
      }
      function warnInvalidARIAProps(type, props) {
        {
          var invalidProps = [];
          for (var key in props) {
            var isValid = validateProperty(type, key);
            isValid || invalidProps.push(key);
          }
          var unknownPropString = invalidProps.map(function(prop) {
            return "`" + prop + "`";
          }).join(", ");
          invalidProps.length === 1 ? error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type) : invalidProps.length > 1 && error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        }
      }
      function validateProperties(type, props) {
        isCustomComponent(type, props) || warnInvalidARIAProps(type, props);
      }
      var didWarnValueNull = !1;
      function validateProperties$1(type, props) {
        {
          if (type !== "input" && type !== "textarea" && type !== "select")
            return;
          props != null && props.value === null && !didWarnValueNull && (didWarnValueNull = !0, type === "select" && props.multiple ? error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type) : error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type));
        }
      }
      var possibleStandardNames = {
        // HTML
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        // SVG
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
      }, validateProperty$1 = function() {
      };
      {
        var warnedProperties$1 = {}, EVENT_NAME_REGEX = /^on./, INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/, rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"), rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        validateProperty$1 = function(tagName, name, value, eventRegistry) {
          if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name])
            return !0;
          var lowerCasedName = name.toLowerCase();
          if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout")
            return error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), warnedProperties$1[name] = !0, !0;
          if (eventRegistry != null) {
            var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies.hasOwnProperty(name))
              return !0;
            var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
            if (registrationName != null)
              return error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName), warnedProperties$1[name] = !0, !0;
            if (EVENT_NAME_REGEX.test(name))
              return error("Unknown event handler property `%s`. It will be ignored.", name), warnedProperties$1[name] = !0, !0;
          } else if (EVENT_NAME_REGEX.test(name))
            return INVALID_EVENT_NAME_REGEX.test(name) && error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name), warnedProperties$1[name] = !0, !0;
          if (rARIA$1.test(name) || rARIACamel$1.test(name))
            return !0;
          if (lowerCasedName === "innerhtml")
            return error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), warnedProperties$1[name] = !0, !0;
          if (lowerCasedName === "aria")
            return error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), warnedProperties$1[name] = !0, !0;
          if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value != "string")
            return error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value), warnedProperties$1[name] = !0, !0;
          if (typeof value == "number" && isNaN(value))
            return error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name), warnedProperties$1[name] = !0, !0;
          var propertyInfo = getPropertyInfo(name), isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
          if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name)
              return error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName), warnedProperties$1[name] = !0, !0;
          } else if (!isReserved && name !== lowerCasedName)
            return error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName), warnedProperties$1[name] = !0, !0;
          return typeof value == "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, !1) ? (value ? error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name) : error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name), warnedProperties$1[name] = !0, !0) : isReserved ? !0 : shouldRemoveAttributeWithWarning(name, value, propertyInfo, !1) ? (warnedProperties$1[name] = !0, !1) : ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN && (error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value), warnedProperties$1[name] = !0), !0);
        };
      }
      var warnUnknownProperties = function(type, props, eventRegistry) {
        {
          var unknownProps = [];
          for (var key in props) {
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            isValid || unknownProps.push(key);
          }
          var unknownPropString = unknownProps.map(function(prop) {
            return "`" + prop + "`";
          }).join(", ");
          unknownProps.length === 1 ? error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type) : unknownProps.length > 1 && error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        }
      };
      function validateProperties$2(type, props, eventRegistry) {
        isCustomComponent(type, props) || warnUnknownProperties(type, props, eventRegistry);
      }
      var warnValidStyle = function() {
      };
      {
        var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/, msPattern = /^-ms-/, hyphenPattern = /-(.)/g, badStyleValueWithSemicolonPattern = /;\s*$/, warnedStyleNames = {}, warnedStyleValues = {}, warnedForNaNValue = !1, warnedForInfinityValue = !1, camelize = function(string) {
          return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
          });
        }, warnHyphenatedStyleName = function(name) {
          warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name] || (warnedStyleNames[name] = !0, error(
            "Unsupported style property %s. Did you mean %s?",
            name,
            // As Andi Smith suggests
            // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
            // is converted to lowercase `ms`.
            camelize(name.replace(msPattern, "ms-"))
          ));
        }, warnBadVendoredStyleName = function(name) {
          warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name] || (warnedStyleNames[name] = !0, error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1)));
        }, warnStyleValueWithSemicolon = function(name, value) {
          warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value] || (warnedStyleValues[value] = !0, error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, "")));
        }, warnStyleValueIsNaN = function(name, value) {
          warnedForNaNValue || (warnedForNaNValue = !0, error("`NaN` is an invalid value for the `%s` css style property.", name));
        }, warnStyleValueIsInfinity = function(name, value) {
          warnedForInfinityValue || (warnedForInfinityValue = !0, error("`Infinity` is an invalid value for the `%s` css style property.", name));
        };
        warnValidStyle = function(name, value) {
          name.indexOf("-") > -1 ? warnHyphenatedStyleName(name) : badVendoredStyleNamePattern.test(name) ? warnBadVendoredStyleName(name) : badStyleValueWithSemicolonPattern.test(value) && warnStyleValueWithSemicolon(name, value), typeof value == "number" && (isNaN(value) ? warnStyleValueIsNaN(name, value) : isFinite(value) || warnStyleValueIsInfinity(name, value));
        };
      }
      var warnValidStyle$1 = warnValidStyle, matchHtmlRegExp = /["'&<>]/;
      function escapeHtml3(string) {
        checkHtmlStringCoercion(string);
        var str = "" + string, match = matchHtmlRegExp.exec(str);
        if (!match)
          return str;
        var escape3, html = "", index, lastIndex = 0;
        for (index = match.index; index < str.length; index++) {
          switch (str.charCodeAt(index)) {
            case 34:
              escape3 = "&quot;";
              break;
            case 38:
              escape3 = "&amp;";
              break;
            case 39:
              escape3 = "&#x27;";
              break;
            case 60:
              escape3 = "&lt;";
              break;
            case 62:
              escape3 = "&gt;";
              break;
            default:
              continue;
          }
          lastIndex !== index && (html += str.substring(lastIndex, index)), lastIndex = index + 1, html += escape3;
        }
        return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
      }
      function escapeTextForBrowser(text) {
        return typeof text == "boolean" || typeof text == "number" ? "" + text : escapeHtml3(text);
      }
      var uppercasePattern = /([A-Z])/g, msPattern$1 = /^ms-/;
      function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-");
      }
      var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, didWarn = !1;
      function sanitizeURL(url) {
        !didWarn && isJavaScriptProtocol.test(url) && (didWarn = !0, error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url)));
      }
      var isArrayImpl = Array.isArray;
      function isArray(a) {
        return isArrayImpl(a);
      }
      var startInlineScript = stringToPrecomputedChunk("<script>"), endInlineScript = stringToPrecomputedChunk("</script>"), startScriptSrc = stringToPrecomputedChunk('<script src="'), startModuleSrc = stringToPrecomputedChunk('<script type="module" src="'), endAsyncScript = stringToPrecomputedChunk('" async=""></script>');
      function escapeBootstrapScriptContent(scriptText) {
        return checkHtmlStringCoercion(scriptText), ("" + scriptText).replace(scriptRegex, scriptReplacer);
      }
      var scriptRegex = /(<\/|<)(s)(cript)/gi, scriptReplacer = function(match, prefix2, s, suffix) {
        return "" + prefix2 + (s === "s" ? "\\u0073" : "\\u0053") + suffix;
      };
      function createResponseState(identifierPrefix, nonce, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
        var idPrefix = identifierPrefix === void 0 ? "" : identifierPrefix, inlineScriptWithNonce = nonce === void 0 ? startInlineScript : stringToPrecomputedChunk('<script nonce="' + escapeTextForBrowser(nonce) + '">'), bootstrapChunks = [];
        if (bootstrapScriptContent !== void 0 && bootstrapChunks.push(inlineScriptWithNonce, stringToChunk(escapeBootstrapScriptContent(bootstrapScriptContent)), endInlineScript), bootstrapScripts !== void 0)
          for (var i = 0; i < bootstrapScripts.length; i++)
            bootstrapChunks.push(startScriptSrc, stringToChunk(escapeTextForBrowser(bootstrapScripts[i])), endAsyncScript);
        if (bootstrapModules !== void 0)
          for (var _i = 0; _i < bootstrapModules.length; _i++)
            bootstrapChunks.push(startModuleSrc, stringToChunk(escapeTextForBrowser(bootstrapModules[_i])), endAsyncScript);
        return {
          bootstrapChunks,
          startInlineScript: inlineScriptWithNonce,
          placeholderPrefix: stringToPrecomputedChunk(idPrefix + "P:"),
          segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
          boundaryPrefix: idPrefix + "B:",
          idPrefix,
          nextSuspenseID: 0,
          sentCompleteSegmentFunction: !1,
          sentCompleteBoundaryFunction: !1,
          sentClientRenderFunction: !1
        };
      }
      var ROOT_HTML_MODE = 0, HTML_MODE = 1, SVG_MODE = 2, MATHML_MODE = 3, HTML_TABLE_MODE = 4, HTML_TABLE_BODY_MODE = 5, HTML_TABLE_ROW_MODE = 6, HTML_COLGROUP_MODE = 7;
      function createFormatContext(insertionMode, selectedValue) {
        return {
          insertionMode,
          selectedValue
        };
      }
      function createRootFormatContext(namespaceURI) {
        var insertionMode = namespaceURI === "http://www.w3.org/2000/svg" ? SVG_MODE : namespaceURI === "http://www.w3.org/1998/Math/MathML" ? MATHML_MODE : ROOT_HTML_MODE;
        return createFormatContext(insertionMode, null);
      }
      function getChildFormatContext(parentContext, type, props) {
        switch (type) {
          case "select":
            return createFormatContext(HTML_MODE, props.value != null ? props.value : props.defaultValue);
          case "svg":
            return createFormatContext(SVG_MODE, null);
          case "math":
            return createFormatContext(MATHML_MODE, null);
          case "foreignObject":
            return createFormatContext(HTML_MODE, null);
          case "table":
            return createFormatContext(HTML_TABLE_MODE, null);
          case "thead":
          case "tbody":
          case "tfoot":
            return createFormatContext(HTML_TABLE_BODY_MODE, null);
          case "colgroup":
            return createFormatContext(HTML_COLGROUP_MODE, null);
          case "tr":
            return createFormatContext(HTML_TABLE_ROW_MODE, null);
        }
        return parentContext.insertionMode >= HTML_TABLE_MODE || parentContext.insertionMode === ROOT_HTML_MODE ? createFormatContext(HTML_MODE, null) : parentContext;
      }
      var UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;
      function assignSuspenseBoundaryID(responseState) {
        var generatedID = responseState.nextSuspenseID++;
        return stringToPrecomputedChunk(responseState.boundaryPrefix + generatedID.toString(16));
      }
      function makeId(responseState, treeId, localId) {
        var idPrefix = responseState.idPrefix, id = ":" + idPrefix + "R" + treeId;
        return localId > 0 && (id += "H" + localId.toString(32)), id + ":";
      }
      function encodeHTMLTextNode(text) {
        return escapeTextForBrowser(text);
      }
      var textSeparator = stringToPrecomputedChunk("<!-- -->");
      function pushTextInstance(target, text, responseState, textEmbedded) {
        return text === "" ? textEmbedded : (textEmbedded && target.push(textSeparator), target.push(stringToChunk(encodeHTMLTextNode(text))), !0);
      }
      function pushSegmentFinale(target, responseState, lastPushedText, textEmbedded) {
        lastPushedText && textEmbedded && target.push(textSeparator);
      }
      var styleNameCache = /* @__PURE__ */ new Map();
      function processStyleName(styleName) {
        var chunk = styleNameCache.get(styleName);
        if (chunk !== void 0)
          return chunk;
        var result = stringToPrecomputedChunk(escapeTextForBrowser(hyphenateStyleName(styleName)));
        return styleNameCache.set(styleName, result), result;
      }
      var styleAttributeStart = stringToPrecomputedChunk(' style="'), styleAssign = stringToPrecomputedChunk(":"), styleSeparator = stringToPrecomputedChunk(";");
      function pushStyle(target, responseState, style) {
        if (typeof style != "object")
          throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        var isFirst = !0;
        for (var styleName in style)
          if (hasOwnProperty.call(style, styleName)) {
            var styleValue = style[styleName];
            if (!(styleValue == null || typeof styleValue == "boolean" || styleValue === "")) {
              var nameChunk = void 0, valueChunk = void 0, isCustomProperty = styleName.indexOf("--") === 0;
              isCustomProperty ? (nameChunk = stringToChunk(escapeTextForBrowser(styleName)), checkCSSPropertyStringCoercion(styleValue, styleName), valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()))) : (warnValidStyle$1(styleName, styleValue), nameChunk = processStyleName(styleName), typeof styleValue == "number" ? styleValue !== 0 && !hasOwnProperty.call(isUnitlessNumber, styleName) ? valueChunk = stringToChunk(styleValue + "px") : valueChunk = stringToChunk("" + styleValue) : (checkCSSPropertyStringCoercion(styleValue, styleName), valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim())))), isFirst ? (isFirst = !1, target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk)) : target.push(styleSeparator, nameChunk, styleAssign, valueChunk);
            }
          }
        isFirst || target.push(attributeEnd);
      }
      var attributeSeparator = stringToPrecomputedChunk(" "), attributeAssign = stringToPrecomputedChunk('="'), attributeEnd = stringToPrecomputedChunk('"'), attributeEmptyString = stringToPrecomputedChunk('=""');
      function pushAttribute(target, responseState, name, value) {
        switch (name) {
          case "style": {
            pushStyle(target, responseState, value);
            return;
          }
          case "defaultValue":
          case "defaultChecked":
          case "innerHTML":
          case "suppressContentEditableWarning":
          case "suppressHydrationWarning":
            return;
        }
        if (
          // shouldIgnoreAttribute
          // We have already filtered out null/undefined and reserved words.
          !(name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N"))
        ) {
          var propertyInfo = getPropertyInfo(name);
          if (propertyInfo !== null) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean":
                if (!propertyInfo.acceptsBooleans)
                  return;
            }
            var attributeName = propertyInfo.attributeName, attributeNameChunk = stringToChunk(attributeName);
            switch (propertyInfo.type) {
              case BOOLEAN:
                value && target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                return;
              case OVERLOADED_BOOLEAN:
                value === !0 ? target.push(attributeSeparator, attributeNameChunk, attributeEmptyString) : value === !1 || target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                return;
              case NUMERIC:
                isNaN(value) || target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                break;
              case POSITIVE_NUMERIC:
                !isNaN(value) && value >= 1 && target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                break;
              default:
                propertyInfo.sanitizeURL && (checkAttributeStringCoercion(value, attributeName), value = "" + value, sanitizeURL(value)), target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
            }
          } else if (isAttributeNameSafe(name)) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                var prefix2 = name.toLowerCase().slice(0, 5);
                if (prefix2 !== "data-" && prefix2 !== "aria-")
                  return;
              }
            }
            target.push(attributeSeparator, stringToChunk(name), attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
          }
        }
      }
      var endOfStartTag = stringToPrecomputedChunk(">"), endOfStartTagSelfClosing = stringToPrecomputedChunk("/>");
      function pushInnerHTML(target, innerHTML, children) {
        if (innerHTML != null) {
          if (children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof innerHTML != "object" || !("__html" in innerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
          var html = innerHTML.__html;
          html != null && (checkHtmlStringCoercion(html), target.push(stringToChunk("" + html)));
        }
      }
      var didWarnDefaultInputValue = !1, didWarnDefaultChecked = !1, didWarnDefaultSelectValue = !1, didWarnDefaultTextareaValue = !1, didWarnInvalidOptionChildren = !1, didWarnInvalidOptionInnerHTML = !1, didWarnSelectedSetOnOption = !1;
      function checkSelectProp(props, propName) {
        {
          var value = props[propName];
          if (value != null) {
            var array = isArray(value);
            props.multiple && !array ? error("The `%s` prop supplied to <select> must be an array if `multiple` is true.", propName) : !props.multiple && array && error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.", propName);
          }
        }
      }
      function pushStartSelect(target, props, responseState) {
        checkControlledValueProps("select", props), checkSelectProp(props, "value"), checkSelectProp(props, "defaultValue"), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultSelectValue && (error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), didWarnDefaultSelectValue = !0), target.push(startChunkForTag("select"));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              case "defaultValue":
              case "value":
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), children;
      }
      function flattenOptionChildren(children) {
        var content = "";
        return React7.Children.forEach(children, function(child) {
          child != null && (content += child, !didWarnInvalidOptionChildren && typeof child != "string" && typeof child != "number" && (didWarnInvalidOptionChildren = !0, error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
        }), content;
      }
      var selectedMarkerAttribute = stringToPrecomputedChunk(' selected=""');
      function pushStartOption(target, props, responseState, formatContext) {
        var selectedValue = formatContext.selectedValue;
        target.push(startChunkForTag("option"));
        var children = null, value = null, selected = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "selected":
                selected = propValue, didWarnSelectedSetOnOption || (error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), didWarnSelectedSetOnOption = !0);
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              case "value":
                value = propValue;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        if (selectedValue != null) {
          var stringValue;
          if (value !== null ? (checkAttributeStringCoercion(value, "value"), stringValue = "" + value) : (innerHTML !== null && (didWarnInvalidOptionInnerHTML || (didWarnInvalidOptionInnerHTML = !0, error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected."))), stringValue = flattenOptionChildren(children)), isArray(selectedValue))
            for (var i = 0; i < selectedValue.length; i++) {
              checkAttributeStringCoercion(selectedValue[i], "value");
              var v = "" + selectedValue[i];
              if (v === stringValue) {
                target.push(selectedMarkerAttribute);
                break;
              }
            }
          else
            checkAttributeStringCoercion(selectedValue, "select.value"), "" + selectedValue === stringValue && target.push(selectedMarkerAttribute);
        } else
          selected && target.push(selectedMarkerAttribute);
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), children;
      }
      function pushInput(target, props, responseState) {
        checkControlledValueProps("input", props), props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnDefaultChecked && (error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type), didWarnDefaultChecked = !0), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultInputValue && (error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type), didWarnDefaultInputValue = !0), target.push(startChunkForTag("input"));
        var value = null, defaultValue = null, checked = null, defaultChecked = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw new Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
              case "defaultChecked":
                defaultChecked = propValue;
                break;
              case "defaultValue":
                defaultValue = propValue;
                break;
              case "checked":
                checked = propValue;
                break;
              case "value":
                value = propValue;
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return checked !== null ? pushAttribute(target, responseState, "checked", checked) : defaultChecked !== null && pushAttribute(target, responseState, "checked", defaultChecked), value !== null ? pushAttribute(target, responseState, "value", value) : defaultValue !== null && pushAttribute(target, responseState, "value", defaultValue), target.push(endOfStartTagSelfClosing), null;
      }
      function pushStartTextArea(target, props, responseState) {
        checkControlledValueProps("textarea", props), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultTextareaValue && (error("Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components"), didWarnDefaultTextareaValue = !0), target.push(startChunkForTag("textarea"));
        var value = null, defaultValue = null, children = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "value":
                value = propValue;
                break;
              case "defaultValue":
                defaultValue = propValue;
                break;
              case "dangerouslySetInnerHTML":
                throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        if (value === null && defaultValue !== null && (value = defaultValue), target.push(endOfStartTag), children != null) {
          if (error("Use the `defaultValue` or `value` props instead of setting children on <textarea>."), value != null)
            throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
          if (isArray(children)) {
            if (children.length > 1)
              throw new Error("<textarea> can only have at most one child.");
            checkHtmlStringCoercion(children[0]), value = "" + children[0];
          }
          checkHtmlStringCoercion(children), value = "" + children;
        }
        return typeof value == "string" && value[0] === `
` && target.push(leadingNewline), value !== null && (checkAttributeStringCoercion(value, "value"), target.push(stringToChunk(encodeHTMLTextNode("" + value)))), null;
      }
      function pushSelfClosing(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw new Error(tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTagSelfClosing), null;
      }
      function pushStartMenuItem(target, props, responseState) {
        target.push(startChunkForTag("menuitem"));
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw new Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTag), null;
      }
      function pushStartTitle(target, props, responseState) {
        target.push(startChunkForTag("title"));
        var children = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                throw new Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        target.push(endOfStartTag);
        {
          var child = Array.isArray(children) && children.length < 2 ? children[0] || null : children;
          Array.isArray(children) && children.length > 1 ? error("A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering") : child != null && child.$$typeof != null ? error("A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering") : child != null && typeof child != "string" && typeof child != "number" && error("A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
        }
        return children;
      }
      function pushStartGenericElement(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), typeof children == "string" ? (target.push(stringToChunk(encodeHTMLTextNode(children))), null) : children;
      }
      function pushStartCustomElement(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              case "style":
                pushStyle(target, responseState, propValue);
                break;
              case "suppressContentEditableWarning":
              case "suppressHydrationWarning":
                break;
              default:
                isAttributeNameSafe(propKey) && typeof propValue != "function" && typeof propValue != "symbol" && target.push(attributeSeparator, stringToChunk(propKey), attributeAssign, stringToChunk(escapeTextForBrowser(propValue)), attributeEnd);
                break;
            }
          }
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), children;
      }
      var leadingNewline = stringToPrecomputedChunk(`
`);
      function pushStartPreformattedElement(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        if (target.push(endOfStartTag), innerHTML != null) {
          if (children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof innerHTML != "object" || !("__html" in innerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
          var html = innerHTML.__html;
          html != null && (typeof html == "string" && html.length > 0 && html[0] === `
` ? target.push(leadingNewline, stringToChunk(html)) : (checkHtmlStringCoercion(html), target.push(stringToChunk("" + html))));
        }
        return typeof children == "string" && children[0] === `
` && target.push(leadingNewline), children;
      }
      var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, validatedTagCache = /* @__PURE__ */ new Map();
      function startChunkForTag(tag) {
        var tagStartChunk = validatedTagCache.get(tag);
        if (tagStartChunk === void 0) {
          if (!VALID_TAG_REGEX.test(tag))
            throw new Error("Invalid tag: " + tag);
          tagStartChunk = stringToPrecomputedChunk("<" + tag), validatedTagCache.set(tag, tagStartChunk);
        }
        return tagStartChunk;
      }
      var DOCTYPE = stringToPrecomputedChunk("<!DOCTYPE html>");
      function pushStartInstance(target, type, props, responseState, formatContext) {
        switch (validateProperties(type, props), validateProperties$1(type, props), validateProperties$2(type, props, null), !props.suppressContentEditableWarning && props.contentEditable && props.children != null && error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), formatContext.insertionMode !== SVG_MODE && formatContext.insertionMode !== MATHML_MODE && type.indexOf("-") === -1 && typeof props.is != "string" && type.toLowerCase() !== type && error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type), type) {
          case "select":
            return pushStartSelect(target, props, responseState);
          case "option":
            return pushStartOption(target, props, responseState, formatContext);
          case "textarea":
            return pushStartTextArea(target, props, responseState);
          case "input":
            return pushInput(target, props, responseState);
          case "menuitem":
            return pushStartMenuItem(target, props, responseState);
          case "title":
            return pushStartTitle(target, props, responseState);
          case "listing":
          case "pre":
            return pushStartPreformattedElement(target, props, type, responseState);
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            return pushSelfClosing(target, props, type, responseState);
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            return pushStartGenericElement(target, props, type, responseState);
          case "html":
            return formatContext.insertionMode === ROOT_HTML_MODE && target.push(DOCTYPE), pushStartGenericElement(target, props, type, responseState);
          default:
            return type.indexOf("-") === -1 && typeof props.is != "string" ? pushStartGenericElement(target, props, type, responseState) : pushStartCustomElement(target, props, type, responseState);
        }
      }
      var endTag1 = stringToPrecomputedChunk("</"), endTag2 = stringToPrecomputedChunk(">");
      function pushEndInstance(target, type, props) {
        switch (type) {
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "input":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            break;
          default:
            target.push(endTag1, stringToChunk(type), endTag2);
        }
      }
      function writeCompletedRoot(destination, responseState) {
        for (var bootstrapChunks = responseState.bootstrapChunks, i = 0; i < bootstrapChunks.length - 1; i++)
          writeChunk(destination, bootstrapChunks[i]);
        return i < bootstrapChunks.length ? writeChunkAndReturn(destination, bootstrapChunks[i]) : !0;
      }
      var placeholder1 = stringToPrecomputedChunk('<template id="'), placeholder2 = stringToPrecomputedChunk('"></template>');
      function writePlaceholder(destination, responseState, id) {
        writeChunk(destination, placeholder1), writeChunk(destination, responseState.placeholderPrefix);
        var formattedID = stringToChunk(id.toString(16));
        return writeChunk(destination, formattedID), writeChunkAndReturn(destination, placeholder2);
      }
      var startCompletedSuspenseBoundary = stringToPrecomputedChunk("<!--$-->"), startPendingSuspenseBoundary1 = stringToPrecomputedChunk('<!--$?--><template id="'), startPendingSuspenseBoundary2 = stringToPrecomputedChunk('"></template>'), startClientRenderedSuspenseBoundary = stringToPrecomputedChunk("<!--$!-->"), endSuspenseBoundary = stringToPrecomputedChunk("<!--/$-->"), clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk("<template"), clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk('"'), clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(' data-dgst="'), clientRenderedSuspenseBoundaryError1B = stringToPrecomputedChunk(' data-msg="'), clientRenderedSuspenseBoundaryError1C = stringToPrecomputedChunk(' data-stck="'), clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk("></template>");
      function writeStartCompletedSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
      }
      function writeStartPendingSuspenseBoundary(destination, responseState, id) {
        if (writeChunk(destination, startPendingSuspenseBoundary1), id === null)
          throw new Error("An ID must have been assigned before we can complete the boundary.");
        return writeChunk(destination, id), writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
      }
      function writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMesssage, errorComponentStack) {
        var result;
        return result = writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary), writeChunk(destination, clientRenderedSuspenseBoundaryError1), errorDigest && (writeChunk(destination, clientRenderedSuspenseBoundaryError1A), writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest))), writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial)), errorMesssage && (writeChunk(destination, clientRenderedSuspenseBoundaryError1B), writeChunk(destination, stringToChunk(escapeTextForBrowser(errorMesssage))), writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial)), errorComponentStack && (writeChunk(destination, clientRenderedSuspenseBoundaryError1C), writeChunk(destination, stringToChunk(escapeTextForBrowser(errorComponentStack))), writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial)), result = writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2), result;
      }
      function writeEndCompletedSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      function writeEndPendingSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      function writeEndClientRenderedSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="'), startSegmentHTML2 = stringToPrecomputedChunk('">'), endSegmentHTML = stringToPrecomputedChunk("</div>"), startSegmentSVG = stringToPrecomputedChunk('<svg aria-hidden="true" style="display:none" id="'), startSegmentSVG2 = stringToPrecomputedChunk('">'), endSegmentSVG = stringToPrecomputedChunk("</svg>"), startSegmentMathML = stringToPrecomputedChunk('<math aria-hidden="true" style="display:none" id="'), startSegmentMathML2 = stringToPrecomputedChunk('">'), endSegmentMathML = stringToPrecomputedChunk("</math>"), startSegmentTable = stringToPrecomputedChunk('<table hidden id="'), startSegmentTable2 = stringToPrecomputedChunk('">'), endSegmentTable = stringToPrecomputedChunk("</table>"), startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id="'), startSegmentTableBody2 = stringToPrecomputedChunk('">'), endSegmentTableBody = stringToPrecomputedChunk("</tbody></table>"), startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id="'), startSegmentTableRow2 = stringToPrecomputedChunk('">'), endSegmentTableRow = stringToPrecomputedChunk("</tr></table>"), startSegmentColGroup = stringToPrecomputedChunk('<table hidden><colgroup id="'), startSegmentColGroup2 = stringToPrecomputedChunk('">'), endSegmentColGroup = stringToPrecomputedChunk("</colgroup></table>");
      function writeStartSegment(destination, responseState, formatContext, id) {
        switch (formatContext.insertionMode) {
          case ROOT_HTML_MODE:
          case HTML_MODE:
            return writeChunk(destination, startSegmentHTML), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentHTML2);
          case SVG_MODE:
            return writeChunk(destination, startSegmentSVG), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentSVG2);
          case MATHML_MODE:
            return writeChunk(destination, startSegmentMathML), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentMathML2);
          case HTML_TABLE_MODE:
            return writeChunk(destination, startSegmentTable), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentTable2);
          case HTML_TABLE_BODY_MODE:
            return writeChunk(destination, startSegmentTableBody), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentTableBody2);
          case HTML_TABLE_ROW_MODE:
            return writeChunk(destination, startSegmentTableRow), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentTableRow2);
          case HTML_COLGROUP_MODE:
            return writeChunk(destination, startSegmentColGroup), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentColGroup2);
          default:
            throw new Error("Unknown insertion mode. This is a bug in React.");
        }
      }
      function writeEndSegment(destination, formatContext) {
        switch (formatContext.insertionMode) {
          case ROOT_HTML_MODE:
          case HTML_MODE:
            return writeChunkAndReturn(destination, endSegmentHTML);
          case SVG_MODE:
            return writeChunkAndReturn(destination, endSegmentSVG);
          case MATHML_MODE:
            return writeChunkAndReturn(destination, endSegmentMathML);
          case HTML_TABLE_MODE:
            return writeChunkAndReturn(destination, endSegmentTable);
          case HTML_TABLE_BODY_MODE:
            return writeChunkAndReturn(destination, endSegmentTableBody);
          case HTML_TABLE_ROW_MODE:
            return writeChunkAndReturn(destination, endSegmentTableRow);
          case HTML_COLGROUP_MODE:
            return writeChunkAndReturn(destination, endSegmentColGroup);
          default:
            throw new Error("Unknown insertion mode. This is a bug in React.");
        }
      }
      var completeSegmentFunction = "function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}", completeBoundaryFunction = 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}', clientRenderFunction = 'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}', completeSegmentScript1Full = stringToPrecomputedChunk(completeSegmentFunction + ';$RS("'), completeSegmentScript1Partial = stringToPrecomputedChunk('$RS("'), completeSegmentScript2 = stringToPrecomputedChunk('","'), completeSegmentScript3 = stringToPrecomputedChunk('")</script>');
      function writeCompletedSegmentInstruction(destination, responseState, contentSegmentID) {
        writeChunk(destination, responseState.startInlineScript), responseState.sentCompleteSegmentFunction ? writeChunk(destination, completeSegmentScript1Partial) : (responseState.sentCompleteSegmentFunction = !0, writeChunk(destination, completeSegmentScript1Full)), writeChunk(destination, responseState.segmentPrefix);
        var formattedID = stringToChunk(contentSegmentID.toString(16));
        return writeChunk(destination, formattedID), writeChunk(destination, completeSegmentScript2), writeChunk(destination, responseState.placeholderPrefix), writeChunk(destination, formattedID), writeChunkAndReturn(destination, completeSegmentScript3);
      }
      var completeBoundaryScript1Full = stringToPrecomputedChunk(completeBoundaryFunction + ';$RC("'), completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC("'), completeBoundaryScript2 = stringToPrecomputedChunk('","'), completeBoundaryScript3 = stringToPrecomputedChunk('")</script>');
      function writeCompletedBoundaryInstruction(destination, responseState, boundaryID, contentSegmentID) {
        if (writeChunk(destination, responseState.startInlineScript), responseState.sentCompleteBoundaryFunction ? writeChunk(destination, completeBoundaryScript1Partial) : (responseState.sentCompleteBoundaryFunction = !0, writeChunk(destination, completeBoundaryScript1Full)), boundaryID === null)
          throw new Error("An ID must have been assigned before we can complete the boundary.");
        var formattedContentID = stringToChunk(contentSegmentID.toString(16));
        return writeChunk(destination, boundaryID), writeChunk(destination, completeBoundaryScript2), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, formattedContentID), writeChunkAndReturn(destination, completeBoundaryScript3);
      }
      var clientRenderScript1Full = stringToPrecomputedChunk(clientRenderFunction + ';$RX("'), clientRenderScript1Partial = stringToPrecomputedChunk('$RX("'), clientRenderScript1A = stringToPrecomputedChunk('"'), clientRenderScript2 = stringToPrecomputedChunk(")</script>"), clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(",");
      function writeClientRenderBoundaryInstruction(destination, responseState, boundaryID, errorDigest, errorMessage, errorComponentStack) {
        if (writeChunk(destination, responseState.startInlineScript), responseState.sentClientRenderFunction ? writeChunk(destination, clientRenderScript1Partial) : (responseState.sentClientRenderFunction = !0, writeChunk(destination, clientRenderScript1Full)), boundaryID === null)
          throw new Error("An ID must have been assigned before we can complete the boundary.");
        return writeChunk(destination, boundaryID), writeChunk(destination, clientRenderScript1A), (errorDigest || errorMessage || errorComponentStack) && (writeChunk(destination, clientRenderErrorScriptArgInterstitial), writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorDigest || "")))), (errorMessage || errorComponentStack) && (writeChunk(destination, clientRenderErrorScriptArgInterstitial), writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorMessage || "")))), errorComponentStack && (writeChunk(destination, clientRenderErrorScriptArgInterstitial), writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorComponentStack)))), writeChunkAndReturn(destination, clientRenderScript2);
      }
      var regexForJSStringsInScripts = /[<\u2028\u2029]/g;
      function escapeJSStringsForInstructionScripts(input) {
        var escaped = JSON.stringify(input);
        return escaped.replace(regexForJSStringsInScripts, function(match) {
          switch (match) {
            case "<":
              return "\\u003c";
            case "\u2028":
              return "\\u2028";
            case "\u2029":
              return "\\u2029";
            default:
              throw new Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
          }
        });
      }
      var assign = Object.assign, REACT_ELEMENT_TYPE = Symbol.for("react.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_SCOPE_TYPE = Symbol.for("react.scope"), REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode"), REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"), REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for("react.default_value"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable != "object")
          return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        return typeof maybeIterator == "function" ? maybeIterator : null;
      }
      function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName)
          return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
      }
      function getContextName(type) {
        return type.displayName || "Context";
      }
      function getComponentNameFromType(type) {
        if (type == null)
          return null;
        if (typeof type.tag == "number" && error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof type == "function")
          return type.displayName || type.name || null;
        if (typeof type == "string")
          return type;
        switch (type) {
          case REACT_FRAGMENT_TYPE:
            return "Fragment";
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_PROFILER_TYPE:
            return "Profiler";
          case REACT_STRICT_MODE_TYPE:
            return "StrictMode";
          case REACT_SUSPENSE_TYPE:
            return "Suspense";
          case REACT_SUSPENSE_LIST_TYPE:
            return "SuspenseList";
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
              var context = type;
              return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
              var provider = type;
              return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
              return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
              var outerName = type.displayName || null;
              return outerName !== null ? outerName : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return getComponentNameFromType(init(payload));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
      function disabledLog() {
      }
      disabledLog.__reactDisabledLog = !0;
      function disableLogs() {
        {
          if (disabledDepth === 0) {
            prevLog = console.log, prevInfo = console.info, prevWarn = console.warn, prevError = console.error, prevGroup = console.group, prevGroupCollapsed = console.groupCollapsed, prevGroupEnd = console.groupEnd;
            var props = {
              configurable: !0,
              enumerable: !0,
              value: disabledLog,
              writable: !0
            };
            Object.defineProperties(console, {
              info: props,
              log: props,
              warn: props,
              error: props,
              group: props,
              groupCollapsed: props,
              groupEnd: props
            });
          }
          disabledDepth++;
        }
      }
      function reenableLogs() {
        {
          if (disabledDepth--, disabledDepth === 0) {
            var props = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: assign({}, props, {
                value: prevLog
              }),
              info: assign({}, props, {
                value: prevInfo
              }),
              warn: assign({}, props, {
                value: prevWarn
              }),
              error: assign({}, props, {
                value: prevError
              }),
              group: assign({}, props, {
                value: prevGroup
              }),
              groupCollapsed: assign({}, props, {
                value: prevGroupCollapsed
              }),
              groupEnd: assign({}, props, {
                value: prevGroupEnd
              })
            });
          }
          disabledDepth < 0 && error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher, prefix;
      function describeBuiltInComponentFrame(name, source, ownerFn) {
        {
          if (prefix === void 0)
            try {
              throw Error();
            } catch (x) {
              var match = x.stack.trim().match(/\n( *(at )?)/);
              prefix = match && match[1] || "";
            }
          return `
` + prefix + name;
        }
      }
      var reentry = !1, componentFrameCache;
      {
        var PossiblyWeakMap = typeof WeakMap == "function" ? WeakMap : Map;
        componentFrameCache = new PossiblyWeakMap();
      }
      function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry)
          return "";
        {
          var frame = componentFrameCache.get(fn);
          if (frame !== void 0)
            return frame;
        }
        var control;
        reentry = !0;
        var previousPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current, ReactCurrentDispatcher.current = null, disableLogs();
        try {
          if (construct) {
            var Fake = function() {
              throw Error();
            };
            if (Object.defineProperty(Fake.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Fake, []);
              } catch (x) {
                control = x;
              }
              Reflect.construct(fn, [], Fake);
            } else {
              try {
                Fake.call();
              } catch (x) {
                control = x;
              }
              fn.call(Fake.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (x) {
              control = x;
            }
            fn();
          }
        } catch (sample) {
          if (sample && control && typeof sample.stack == "string") {
            for (var sampleLines = sample.stack.split(`
`), controlLines = control.stack.split(`
`), s = sampleLines.length - 1, c = controlLines.length - 1; s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]; )
              c--;
            for (; s >= 1 && c >= 0; s--, c--)
              if (sampleLines[s] !== controlLines[c]) {
                if (s !== 1 || c !== 1)
                  do
                    if (s--, c--, c < 0 || sampleLines[s] !== controlLines[c]) {
                      var _frame = `
` + sampleLines[s].replace(" at new ", " at ");
                      return fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName)), typeof fn == "function" && componentFrameCache.set(fn, _frame), _frame;
                    }
                  while (s >= 1 && c >= 0);
                break;
              }
          }
        } finally {
          reentry = !1, ReactCurrentDispatcher.current = previousDispatcher, reenableLogs(), Error.prepareStackTrace = previousPrepareStackTrace;
        }
        var name = fn ? fn.displayName || fn.name : "", syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        return typeof fn == "function" && componentFrameCache.set(fn, syntheticFrame), syntheticFrame;
      }
      function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, !0);
      }
      function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, !1);
      }
      function shouldConstruct(Component2) {
        var prototype = Component2.prototype;
        return !!(prototype && prototype.isReactComponent);
      }
      function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null)
          return "";
        if (typeof type == "function")
          return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type == "string")
          return describeBuiltInComponentFrame(type);
        switch (type) {
          case REACT_SUSPENSE_TYPE:
            return describeBuiltInComponentFrame("Suspense");
          case REACT_SUSPENSE_LIST_TYPE:
            return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
              return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch {
              }
            }
          }
        return "";
      }
      var loggedTypeFailures = {}, ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame.setExtraStackFrame(null);
      }
      function checkPropTypes(typeSpecs, values, location, componentName, element) {
        {
          var has = Function.call.bind(hasOwnProperty);
          for (var typeSpecName in typeSpecs)
            if (has(typeSpecs, typeSpecName)) {
              var error$1 = void 0;
              try {
                if (typeof typeSpecs[typeSpecName] != "function") {
                  var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw err.name = "Invariant Violation", err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (ex) {
                error$1 = ex;
              }
              error$1 && !(error$1 instanceof Error) && (setCurrentlyValidatingElement(element), error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1), setCurrentlyValidatingElement(null)), error$1 instanceof Error && !(error$1.message in loggedTypeFailures) && (loggedTypeFailures[error$1.message] = !0, setCurrentlyValidatingElement(element), error("Failed %s type: %s", location, error$1.message), setCurrentlyValidatingElement(null));
            }
        }
      }
      var warnedAboutMissingGetChildContext;
      warnedAboutMissingGetChildContext = {};
      var emptyContextObject = {};
      Object.freeze(emptyContextObject);
      function getMaskedContext(type, unmaskedContext) {
        {
          var contextTypes = type.contextTypes;
          if (!contextTypes)
            return emptyContextObject;
          var context = {};
          for (var key in contextTypes)
            context[key] = unmaskedContext[key];
          {
            var name = getComponentNameFromType(type) || "Unknown";
            checkPropTypes(contextTypes, context, "context", name);
          }
          return context;
        }
      }
      function processChildContext(instance, type, parentContext, childContextTypes) {
        {
          if (typeof instance.getChildContext != "function") {
            {
              var componentName = getComponentNameFromType(type) || "Unknown";
              warnedAboutMissingGetChildContext[componentName] || (warnedAboutMissingGetChildContext[componentName] = !0, error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName));
            }
            return parentContext;
          }
          var childContext = instance.getChildContext();
          for (var contextKey in childContext)
            if (!(contextKey in childContextTypes))
              throw new Error((getComponentNameFromType(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
          {
            var name = getComponentNameFromType(type) || "Unknown";
            checkPropTypes(childContextTypes, childContext, "child context", name);
          }
          return assign({}, parentContext, childContext);
        }
      }
      var rendererSigil;
      rendererSigil = {};
      var rootContextSnapshot = null, currentActiveSnapshot = null;
      function popNode(prev) {
        prev.context._currentValue = prev.parentValue;
      }
      function pushNode(next) {
        next.context._currentValue = next.value;
      }
      function popToNearestCommonAncestor(prev, next) {
        if (prev !== next) {
          popNode(prev);
          var parentPrev = prev.parent, parentNext = next.parent;
          if (parentPrev === null) {
            if (parentNext !== null)
              throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
          } else {
            if (parentNext === null)
              throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
            popToNearestCommonAncestor(parentPrev, parentNext);
          }
          pushNode(next);
        }
      }
      function popAllPrevious(prev) {
        popNode(prev);
        var parentPrev = prev.parent;
        parentPrev !== null && popAllPrevious(parentPrev);
      }
      function pushAllNext(next) {
        var parentNext = next.parent;
        parentNext !== null && pushAllNext(parentNext), pushNode(next);
      }
      function popPreviousToCommonLevel(prev, next) {
        popNode(prev);
        var parentPrev = prev.parent;
        if (parentPrev === null)
          throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
        parentPrev.depth === next.depth ? popToNearestCommonAncestor(parentPrev, next) : popPreviousToCommonLevel(parentPrev, next);
      }
      function popNextToCommonLevel(prev, next) {
        var parentNext = next.parent;
        if (parentNext === null)
          throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
        prev.depth === parentNext.depth ? popToNearestCommonAncestor(prev, parentNext) : popNextToCommonLevel(prev, parentNext), pushNode(next);
      }
      function switchContext(newSnapshot) {
        var prev = currentActiveSnapshot, next = newSnapshot;
        prev !== next && (prev === null ? pushAllNext(next) : next === null ? popAllPrevious(prev) : prev.depth === next.depth ? popToNearestCommonAncestor(prev, next) : prev.depth > next.depth ? popPreviousToCommonLevel(prev, next) : popNextToCommonLevel(prev, next), currentActiveSnapshot = next);
      }
      function pushProvider(context, nextValue) {
        var prevValue;
        prevValue = context._currentValue, context._currentValue = nextValue, context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil && error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), context._currentRenderer = rendererSigil;
        var prevNode = currentActiveSnapshot, newNode = {
          parent: prevNode,
          depth: prevNode === null ? 0 : prevNode.depth + 1,
          context,
          parentValue: prevValue,
          value: nextValue
        };
        return currentActiveSnapshot = newNode, newNode;
      }
      function popProvider(context) {
        var prevSnapshot = currentActiveSnapshot;
        if (prevSnapshot === null)
          throw new Error("Tried to pop a Context at the root of the app. This is a bug in React.");
        prevSnapshot.context !== context && error("The parent context is not the expected context. This is probably a bug in React.");
        {
          var value = prevSnapshot.parentValue;
          value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED ? prevSnapshot.context._currentValue = prevSnapshot.context._defaultValue : prevSnapshot.context._currentValue = value, context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil && error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), context._currentRenderer = rendererSigil;
        }
        return currentActiveSnapshot = prevSnapshot.parent;
      }
      function getActiveContext() {
        return currentActiveSnapshot;
      }
      function readContext(context) {
        var value = context._currentValue;
        return value;
      }
      function get(key) {
        return key._reactInternals;
      }
      function set(key, value) {
        key._reactInternals = value;
      }
      var didWarnAboutNoopUpdateForComponent = {}, didWarnAboutDeprecatedWillMount = {}, didWarnAboutUninitializedState, didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate, didWarnAboutLegacyLifecyclesAndDerivedState, didWarnAboutUndefinedDerivedState, warnOnUndefinedDerivedState, warnOnInvalidCallback, didWarnAboutDirectlyAssigningPropsToState, didWarnAboutContextTypeAndContextTypes, didWarnAboutInvalidateContextType;
      {
        didWarnAboutUninitializedState = /* @__PURE__ */ new Set(), didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set(), didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set(), didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set(), didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set(), didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set(), didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
        var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
        warnOnInvalidCallback = function(callback, callerName) {
          if (!(callback === null || typeof callback == "function")) {
            var key = callerName + "_" + callback;
            didWarnOnInvalidCallback.has(key) || (didWarnOnInvalidCallback.add(key), error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback));
          }
        }, warnOnUndefinedDerivedState = function(type, partialState) {
          if (partialState === void 0) {
            var componentName = getComponentNameFromType(type) || "Component";
            didWarnAboutUndefinedDerivedState.has(componentName) || (didWarnAboutUndefinedDerivedState.add(componentName), error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName));
          }
        };
      }
      function warnNoop(publicInstance, callerName) {
        {
          var _constructor = publicInstance.constructor, componentName = _constructor && getComponentNameFromType(_constructor) || "ReactClass", warningKey = componentName + "." + callerName;
          if (didWarnAboutNoopUpdateForComponent[warningKey])
            return;
          error(`%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.

Please check the code for the %s component.`, callerName, callerName, componentName), didWarnAboutNoopUpdateForComponent[warningKey] = !0;
        }
      }
      var classComponentUpdater = {
        isMounted: function(inst) {
          return !1;
        },
        enqueueSetState: function(inst, payload, callback) {
          var internals = get(inst);
          internals.queue === null ? warnNoop(inst, "setState") : (internals.queue.push(payload), callback != null && warnOnInvalidCallback(callback, "setState"));
        },
        enqueueReplaceState: function(inst, payload, callback) {
          var internals = get(inst);
          internals.replace = !0, internals.queue = [payload], callback != null && warnOnInvalidCallback(callback, "setState");
        },
        enqueueForceUpdate: function(inst, callback) {
          var internals = get(inst);
          internals.queue === null ? warnNoop(inst, "forceUpdate") : callback != null && warnOnInvalidCallback(callback, "setState");
        }
      };
      function applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, prevState, nextProps) {
        var partialState = getDerivedStateFromProps(nextProps, prevState);
        warnOnUndefinedDerivedState(ctor, partialState);
        var newState = partialState == null ? prevState : assign({}, prevState, partialState);
        return newState;
      }
      function constructClassInstance(ctor, props, maskedLegacyContext) {
        var context = emptyContextObject, contextType = ctor.contextType;
        if ("contextType" in ctor) {
          var isValid = (
            // Allow null for conditional declaration
            contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0
          );
          if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
            didWarnAboutInvalidateContextType.add(ctor);
            var addendum = "";
            contextType === void 0 ? addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof contextType != "object" ? addendum = " However, it is set to a " + typeof contextType + "." : contextType.$$typeof === REACT_PROVIDER_TYPE ? addendum = " Did you accidentally pass the Context.Provider instead?" : contextType._context !== void 0 ? addendum = " Did you accidentally pass the Context.Consumer instead?" : addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.", error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
          }
        }
        typeof contextType == "object" && contextType !== null ? context = readContext(contextType) : context = maskedLegacyContext;
        var instance = new ctor(props, context);
        {
          if (typeof ctor.getDerivedStateFromProps == "function" && (instance.state === null || instance.state === void 0)) {
            var componentName = getComponentNameFromType(ctor) || "Component";
            didWarnAboutUninitializedState.has(componentName) || (didWarnAboutUninitializedState.add(componentName), error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName));
          }
          if (typeof ctor.getDerivedStateFromProps == "function" || typeof instance.getSnapshotBeforeUpdate == "function") {
            var foundWillMountName = null, foundWillReceivePropsName = null, foundWillUpdateName = null;
            if (typeof instance.componentWillMount == "function" && instance.componentWillMount.__suppressDeprecationWarning !== !0 ? foundWillMountName = "componentWillMount" : typeof instance.UNSAFE_componentWillMount == "function" && (foundWillMountName = "UNSAFE_componentWillMount"), typeof instance.componentWillReceiveProps == "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? foundWillReceivePropsName = "componentWillReceiveProps" : typeof instance.UNSAFE_componentWillReceiveProps == "function" && (foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps"), typeof instance.componentWillUpdate == "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== !0 ? foundWillUpdateName = "componentWillUpdate" : typeof instance.UNSAFE_componentWillUpdate == "function" && (foundWillUpdateName = "UNSAFE_componentWillUpdate"), foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
              var _componentName = getComponentNameFromType(ctor) || "Component", newApiName = typeof ctor.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
              didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName) || (didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName), error(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, _componentName, newApiName, foundWillMountName !== null ? `
  ` + foundWillMountName : "", foundWillReceivePropsName !== null ? `
  ` + foundWillReceivePropsName : "", foundWillUpdateName !== null ? `
  ` + foundWillUpdateName : ""));
            }
          }
        }
        return instance;
      }
      function checkClassInstance(instance, ctor, newProps) {
        {
          var name = getComponentNameFromType(ctor) || "Component", renderPresent = instance.render;
          renderPresent || (ctor.prototype && typeof ctor.prototype.render == "function" ? error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name) : error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name)), instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state && error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name), instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved && error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name), instance.propTypes && error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name), instance.contextType && error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name), instance.contextTypes && error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name), ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor) && (didWarnAboutContextTypeAndContextTypes.add(ctor), error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name)), typeof instance.componentShouldUpdate == "function" && error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name), ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate < "u" && error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component"), typeof instance.componentDidUnmount == "function" && error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name), typeof instance.componentDidReceiveProps == "function" && error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name), typeof instance.componentWillRecieveProps == "function" && error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name), typeof instance.UNSAFE_componentWillRecieveProps == "function" && error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
          var hasMutatedProps = instance.props !== newProps;
          instance.props !== void 0 && hasMutatedProps && error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name), instance.defaultProps && error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name), typeof instance.getSnapshotBeforeUpdate == "function" && typeof instance.componentDidUpdate != "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor) && (didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor), error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor))), typeof instance.getDerivedStateFromProps == "function" && error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name), typeof instance.getDerivedStateFromError == "function" && error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name), typeof ctor.getSnapshotBeforeUpdate == "function" && error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
          var _state = instance.state;
          _state && (typeof _state != "object" || isArray(_state)) && error("%s.state: must be set to an object or null", name), typeof instance.getChildContext == "function" && typeof ctor.childContextTypes != "object" && error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
        }
      }
      function callComponentWillMount(type, instance) {
        var oldState = instance.state;
        if (typeof instance.componentWillMount == "function") {
          if (instance.componentWillMount.__suppressDeprecationWarning !== !0) {
            var componentName = getComponentNameFromType(type) || "Unknown";
            didWarnAboutDeprecatedWillMount[componentName] || (warn(
              // keep this warning in sync with ReactStrictModeWarning.js
              `componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.

Please update the following components: %s`,
              componentName
            ), didWarnAboutDeprecatedWillMount[componentName] = !0);
          }
          instance.componentWillMount();
        }
        typeof instance.UNSAFE_componentWillMount == "function" && instance.UNSAFE_componentWillMount(), oldState !== instance.state && (error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromType(type) || "Component"), classComponentUpdater.enqueueReplaceState(instance, instance.state, null));
      }
      function processUpdateQueue(internalInstance, inst, props, maskedLegacyContext) {
        if (internalInstance.queue !== null && internalInstance.queue.length > 0) {
          var oldQueue = internalInstance.queue, oldReplace = internalInstance.replace;
          if (internalInstance.queue = null, internalInstance.replace = !1, oldReplace && oldQueue.length === 1)
            inst.state = oldQueue[0];
          else {
            for (var nextState = oldReplace ? oldQueue[0] : inst.state, dontMutate = !0, i = oldReplace ? 1 : 0; i < oldQueue.length; i++) {
              var partial = oldQueue[i], partialState = typeof partial == "function" ? partial.call(inst, nextState, props, maskedLegacyContext) : partial;
              partialState != null && (dontMutate ? (dontMutate = !1, nextState = assign({}, nextState, partialState)) : assign(nextState, partialState));
            }
            inst.state = nextState;
          }
        } else
          internalInstance.queue = null;
      }
      function mountClassInstance(instance, ctor, newProps, maskedLegacyContext) {
        checkClassInstance(instance, ctor, newProps);
        var initialState = instance.state !== void 0 ? instance.state : null;
        instance.updater = classComponentUpdater, instance.props = newProps, instance.state = initialState;
        var internalInstance = {
          queue: [],
          replace: !1
        };
        set(instance, internalInstance);
        var contextType = ctor.contextType;
        if (typeof contextType == "object" && contextType !== null ? instance.context = readContext(contextType) : instance.context = maskedLegacyContext, instance.state === newProps) {
          var componentName = getComponentNameFromType(ctor) || "Component";
          didWarnAboutDirectlyAssigningPropsToState.has(componentName) || (didWarnAboutDirectlyAssigningPropsToState.add(componentName), error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName));
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        typeof getDerivedStateFromProps == "function" && (instance.state = applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, initialState, newProps)), typeof ctor.getDerivedStateFromProps != "function" && typeof instance.getSnapshotBeforeUpdate != "function" && (typeof instance.UNSAFE_componentWillMount == "function" || typeof instance.componentWillMount == "function") && (callComponentWillMount(ctor, instance), processUpdateQueue(internalInstance, instance, newProps, maskedLegacyContext));
      }
      var emptyTreeContext = {
        id: 1,
        overflow: ""
      };
      function getTreeId(context) {
        var overflow = context.overflow, idWithLeadingBit = context.id, id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
        return id.toString(32) + overflow;
      }
      function pushTreeContext(baseContext, totalChildren, index) {
        var baseIdWithLeadingBit = baseContext.id, baseOverflow = baseContext.overflow, baseLength = getBitLength(baseIdWithLeadingBit) - 1, baseId = baseIdWithLeadingBit & ~(1 << baseLength), slot = index + 1, length = getBitLength(totalChildren) + baseLength;
        if (length > 30) {
          var numberOfOverflowBits = baseLength - baseLength % 5, newOverflowBits = (1 << numberOfOverflowBits) - 1, newOverflow = (baseId & newOverflowBits).toString(32), restOfBaseId = baseId >> numberOfOverflowBits, restOfBaseLength = baseLength - numberOfOverflowBits, restOfLength = getBitLength(totalChildren) + restOfBaseLength, restOfNewBits = slot << restOfBaseLength, id = restOfNewBits | restOfBaseId, overflow = newOverflow + baseOverflow;
          return {
            id: 1 << restOfLength | id,
            overflow
          };
        } else {
          var newBits = slot << baseLength, _id = newBits | baseId, _overflow = baseOverflow;
          return {
            id: 1 << length | _id,
            overflow: _overflow
          };
        }
      }
      function getBitLength(number) {
        return 32 - clz32(number);
      }
      function getLeadingBit(id) {
        return 1 << getBitLength(id) - 1;
      }
      var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback, log = Math.log, LN2 = Math.LN2;
      function clz32Fallback(x) {
        var asUint = x >>> 0;
        return asUint === 0 ? 32 : 31 - (log(asUint) / LN2 | 0) | 0;
      }
      function is(x, y) {
        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
      }
      var objectIs = typeof Object.is == "function" ? Object.is : is, currentlyRenderingComponent = null, currentlyRenderingTask = null, firstWorkInProgressHook = null, workInProgressHook = null, isReRender = !1, didScheduleRenderPhaseUpdate = !1, localIdCounter = 0, renderPhaseUpdates = null, numberOfReRenders = 0, RE_RENDER_LIMIT = 25, isInHookUserCodeInDev = !1, currentHookNameInDev;
      function resolveCurrentlyRenderingComponent() {
        if (currentlyRenderingComponent === null)
          throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
        return isInHookUserCodeInDev && error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks"), currentlyRenderingComponent;
      }
      function areHookInputsEqual(nextDeps, prevDeps) {
        if (prevDeps === null)
          return error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev), !1;
        nextDeps.length !== prevDeps.length && error(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, currentHookNameInDev, "[" + nextDeps.join(", ") + "]", "[" + prevDeps.join(", ") + "]");
        for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)
          if (!objectIs(nextDeps[i], prevDeps[i]))
            return !1;
        return !0;
      }
      function createHook() {
        if (numberOfReRenders > 0)
          throw new Error("Rendered more hooks than during the previous render");
        return {
          memoizedState: null,
          queue: null,
          next: null
        };
      }
      function createWorkInProgressHook() {
        return workInProgressHook === null ? firstWorkInProgressHook === null ? (isReRender = !1, firstWorkInProgressHook = workInProgressHook = createHook()) : (isReRender = !0, workInProgressHook = firstWorkInProgressHook) : workInProgressHook.next === null ? (isReRender = !1, workInProgressHook = workInProgressHook.next = createHook()) : (isReRender = !0, workInProgressHook = workInProgressHook.next), workInProgressHook;
      }
      function prepareToUseHooks(task, componentIdentity) {
        currentlyRenderingComponent = componentIdentity, currentlyRenderingTask = task, isInHookUserCodeInDev = !1, localIdCounter = 0;
      }
      function finishHooks(Component2, props, children, refOrContext) {
        for (; didScheduleRenderPhaseUpdate; )
          didScheduleRenderPhaseUpdate = !1, localIdCounter = 0, numberOfReRenders += 1, workInProgressHook = null, children = Component2(props, refOrContext);
        return resetHooksState(), children;
      }
      function checkDidRenderIdHook() {
        var didRenderIdHook = localIdCounter !== 0;
        return didRenderIdHook;
      }
      function resetHooksState() {
        isInHookUserCodeInDev = !1, currentlyRenderingComponent = null, currentlyRenderingTask = null, didScheduleRenderPhaseUpdate = !1, firstWorkInProgressHook = null, numberOfReRenders = 0, renderPhaseUpdates = null, workInProgressHook = null;
      }
      function readContext$1(context) {
        return isInHookUserCodeInDev && error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."), readContext(context);
      }
      function useContext5(context) {
        return currentHookNameInDev = "useContext", resolveCurrentlyRenderingComponent(), readContext(context);
      }
      function basicStateReducer(state, action) {
        return typeof action == "function" ? action(state) : action;
      }
      function useState4(initialState) {
        return currentHookNameInDev = "useState", useReducer(
          basicStateReducer,
          // useReducer has a special case to support lazy useState initializers
          initialState
        );
      }
      function useReducer(reducer, initialArg, init) {
        if (reducer !== basicStateReducer && (currentHookNameInDev = "useReducer"), currentlyRenderingComponent = resolveCurrentlyRenderingComponent(), workInProgressHook = createWorkInProgressHook(), isReRender) {
          var queue = workInProgressHook.queue, dispatch = queue.dispatch;
          if (renderPhaseUpdates !== null) {
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate !== void 0) {
              renderPhaseUpdates.delete(queue);
              var newState = workInProgressHook.memoizedState, update = firstRenderPhaseUpdate;
              do {
                var action = update.action;
                isInHookUserCodeInDev = !0, newState = reducer(newState, action), isInHookUserCodeInDev = !1, update = update.next;
              } while (update !== null);
              return workInProgressHook.memoizedState = newState, [newState, dispatch];
            }
          }
          return [workInProgressHook.memoizedState, dispatch];
        } else {
          isInHookUserCodeInDev = !0;
          var initialState;
          reducer === basicStateReducer ? initialState = typeof initialArg == "function" ? initialArg() : initialArg : initialState = init !== void 0 ? init(initialArg) : initialArg, isInHookUserCodeInDev = !1, workInProgressHook.memoizedState = initialState;
          var _queue = workInProgressHook.queue = {
            last: null,
            dispatch: null
          }, _dispatch = _queue.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue);
          return [workInProgressHook.memoizedState, _dispatch];
        }
      }
      function useMemo5(nextCreate, deps) {
        currentlyRenderingComponent = resolveCurrentlyRenderingComponent(), workInProgressHook = createWorkInProgressHook();
        var nextDeps = deps === void 0 ? null : deps;
        if (workInProgressHook !== null) {
          var prevState = workInProgressHook.memoizedState;
          if (prevState !== null && nextDeps !== null) {
            var prevDeps = prevState[1];
            if (areHookInputsEqual(nextDeps, prevDeps))
              return prevState[0];
          }
        }
        isInHookUserCodeInDev = !0;
        var nextValue = nextCreate();
        return isInHookUserCodeInDev = !1, workInProgressHook.memoizedState = [nextValue, nextDeps], nextValue;
      }
      function useRef3(initialValue) {
        currentlyRenderingComponent = resolveCurrentlyRenderingComponent(), workInProgressHook = createWorkInProgressHook();
        var previousRef = workInProgressHook.memoizedState;
        if (previousRef === null) {
          var ref = {
            current: initialValue
          };
          return Object.seal(ref), workInProgressHook.memoizedState = ref, ref;
        } else
          return previousRef;
      }
      function useLayoutEffect3(create, inputs) {
        currentHookNameInDev = "useLayoutEffect", error("useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.");
      }
      function dispatchAction(componentIdentity, queue, action) {
        if (numberOfReRenders >= RE_RENDER_LIMIT)
          throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
        if (componentIdentity === currentlyRenderingComponent) {
          didScheduleRenderPhaseUpdate = !0;
          var update = {
            action,
            next: null
          };
          renderPhaseUpdates === null && (renderPhaseUpdates = /* @__PURE__ */ new Map());
          var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
          if (firstRenderPhaseUpdate === void 0)
            renderPhaseUpdates.set(queue, update);
          else {
            for (var lastRenderPhaseUpdate = firstRenderPhaseUpdate; lastRenderPhaseUpdate.next !== null; )
              lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            lastRenderPhaseUpdate.next = update;
          }
        }
      }
      function useCallback3(callback, deps) {
        return useMemo5(function() {
          return callback;
        }, deps);
      }
      function useMutableSource(source, getSnapshot, subscribe) {
        return resolveCurrentlyRenderingComponent(), getSnapshot(source._source);
      }
      function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        if (getServerSnapshot === void 0)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        return getServerSnapshot();
      }
      function useDeferredValue(value) {
        return resolveCurrentlyRenderingComponent(), value;
      }
      function unsupportedStartTransition() {
        throw new Error("startTransition cannot be called during server rendering.");
      }
      function useTransition2() {
        return resolveCurrentlyRenderingComponent(), [!1, unsupportedStartTransition];
      }
      function useId() {
        var task = currentlyRenderingTask, treeId = getTreeId(task.treeContext), responseState = currentResponseState;
        if (responseState === null)
          throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
        var localId = localIdCounter++;
        return makeId(responseState, treeId, localId);
      }
      function noop() {
      }
      var Dispatcher = {
        readContext: readContext$1,
        useContext: useContext5,
        useMemo: useMemo5,
        useReducer,
        useRef: useRef3,
        useState: useState4,
        useInsertionEffect: noop,
        useLayoutEffect: useLayoutEffect3,
        useCallback: useCallback3,
        // useImperativeHandle is not run in the server environment
        useImperativeHandle: noop,
        // Effects are not run in the server environment.
        useEffect: noop,
        // Debugging effect
        useDebugValue: noop,
        useDeferredValue,
        useTransition: useTransition2,
        useId,
        // Subscriptions are not setup in a server environment.
        useMutableSource,
        useSyncExternalStore
      }, currentResponseState = null;
      function setCurrentResponseState(responseState) {
        currentResponseState = responseState;
      }
      function getStackByComponentStackNode(componentStack) {
        try {
          var info = "", node = componentStack;
          do {
            switch (node.tag) {
              case 0:
                info += describeBuiltInComponentFrame(node.type, null, null);
                break;
              case 1:
                info += describeFunctionComponentFrame(node.type, null, null);
                break;
              case 2:
                info += describeClassComponentFrame(node.type, null, null);
                break;
            }
            node = node.parent;
          } while (node);
          return info;
        } catch (x) {
          return `
Error generating stack: ` + x.message + `
` + x.stack;
        }
      }
      var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame, PENDING = 0, COMPLETED = 1, FLUSHED = 2, ABORTED = 3, ERRORED = 4, OPEN = 0, CLOSING = 1, CLOSED = 2, DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;
      function defaultErrorHandler(error2) {
        return console.error(error2), null;
      }
      function noop$1() {
      }
      function createRequest(children, responseState, rootFormatContext, progressiveChunkSize, onError2, onAllReady, onShellReady, onShellError, onFatalError) {
        var pingedTasks = [], abortSet = /* @__PURE__ */ new Set(), request = {
          destination: null,
          responseState,
          progressiveChunkSize: progressiveChunkSize === void 0 ? DEFAULT_PROGRESSIVE_CHUNK_SIZE : progressiveChunkSize,
          status: OPEN,
          fatalError: null,
          nextSegmentId: 0,
          allPendingTasks: 0,
          pendingRootTasks: 0,
          completedRootSegment: null,
          abortableTasks: abortSet,
          pingedTasks,
          clientRenderedBoundaries: [],
          completedBoundaries: [],
          partialBoundaries: [],
          onError: onError2 === void 0 ? defaultErrorHandler : onError2,
          onAllReady: onAllReady === void 0 ? noop$1 : onAllReady,
          onShellReady: onShellReady === void 0 ? noop$1 : onShellReady,
          onShellError: onShellError === void 0 ? noop$1 : onShellError,
          onFatalError: onFatalError === void 0 ? noop$1 : onFatalError
        }, rootSegment = createPendingSegment(
          request,
          0,
          null,
          rootFormatContext,
          // Root segments are never embedded in Text on either edge
          !1,
          !1
        );
        rootSegment.parentFlushed = !0;
        var rootTask = createTask(request, children, null, rootSegment, abortSet, emptyContextObject, rootContextSnapshot, emptyTreeContext);
        return pingedTasks.push(rootTask), request;
      }
      function pingTask(request, task) {
        var pingedTasks = request.pingedTasks;
        pingedTasks.push(task), pingedTasks.length === 1 && scheduleWork(function() {
          return performWork(request);
        });
      }
      function createSuspenseBoundary(request, fallbackAbortableTasks) {
        return {
          id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,
          rootSegmentID: -1,
          parentFlushed: !1,
          pendingTasks: 0,
          forceClientRender: !1,
          completedSegments: [],
          byteSize: 0,
          fallbackAbortableTasks,
          errorDigest: null
        };
      }
      function createTask(request, node, blockedBoundary, blockedSegment, abortSet, legacyContext, context, treeContext) {
        request.allPendingTasks++, blockedBoundary === null ? request.pendingRootTasks++ : blockedBoundary.pendingTasks++;
        var task = {
          node,
          ping: function() {
            return pingTask(request, task);
          },
          blockedBoundary,
          blockedSegment,
          abortSet,
          legacyContext,
          context,
          treeContext
        };
        return task.componentStack = null, abortSet.add(task), task;
      }
      function createPendingSegment(request, index, boundary, formatContext, lastPushedText, textEmbedded) {
        return {
          status: PENDING,
          id: -1,
          // lazily assigned later
          index,
          parentFlushed: !1,
          chunks: [],
          children: [],
          formatContext,
          boundary,
          lastPushedText,
          textEmbedded
        };
      }
      var currentTaskInDEV = null;
      function getCurrentStackInDEV() {
        return currentTaskInDEV === null || currentTaskInDEV.componentStack === null ? "" : getStackByComponentStackNode(currentTaskInDEV.componentStack);
      }
      function pushBuiltInComponentStackInDEV(task, type) {
        task.componentStack = {
          tag: 0,
          parent: task.componentStack,
          type
        };
      }
      function pushFunctionComponentStackInDEV(task, type) {
        task.componentStack = {
          tag: 1,
          parent: task.componentStack,
          type
        };
      }
      function pushClassComponentStackInDEV(task, type) {
        task.componentStack = {
          tag: 2,
          parent: task.componentStack,
          type
        };
      }
      function popComponentStackInDEV(task) {
        task.componentStack === null ? error("Unexpectedly popped too many stack frames. This is a bug in React.") : task.componentStack = task.componentStack.parent;
      }
      var lastBoundaryErrorComponentStackDev = null;
      function captureBoundaryErrorDetailsDev(boundary, error2) {
        {
          var errorMessage;
          typeof error2 == "string" ? errorMessage = error2 : error2 && typeof error2.message == "string" ? errorMessage = error2.message : errorMessage = String(error2);
          var errorComponentStack = lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();
          lastBoundaryErrorComponentStackDev = null, boundary.errorMessage = errorMessage, boundary.errorComponentStack = errorComponentStack;
        }
      }
      function logRecoverableError(request, error2) {
        var errorDigest = request.onError(error2);
        if (errorDigest != null && typeof errorDigest != "string")
          throw new Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof errorDigest + '" instead');
        return errorDigest;
      }
      function fatalError(request, error2) {
        var onShellError = request.onShellError;
        onShellError(error2);
        var onFatalError = request.onFatalError;
        onFatalError(error2), request.destination !== null ? (request.status = CLOSED, closeWithError(request.destination, error2)) : (request.status = CLOSING, request.fatalError = error2);
      }
      function renderSuspenseBoundary(request, task, props) {
        pushBuiltInComponentStackInDEV(task, "Suspense");
        var parentBoundary = task.blockedBoundary, parentSegment = task.blockedSegment, fallback = props.fallback, content = props.children, fallbackAbortSet = /* @__PURE__ */ new Set(), newBoundary = createSuspenseBoundary(request, fallbackAbortSet), insertionIndex = parentSegment.chunks.length, boundarySegment = createPendingSegment(
          request,
          insertionIndex,
          newBoundary,
          parentSegment.formatContext,
          // boundaries never require text embedding at their edges because comment nodes bound them
          !1,
          !1
        );
        parentSegment.children.push(boundarySegment), parentSegment.lastPushedText = !1;
        var contentRootSegment = createPendingSegment(
          request,
          0,
          null,
          parentSegment.formatContext,
          // boundaries never require text embedding at their edges because comment nodes bound them
          !1,
          !1
        );
        contentRootSegment.parentFlushed = !0, task.blockedBoundary = newBoundary, task.blockedSegment = contentRootSegment;
        try {
          if (renderNode(request, task, content), pushSegmentFinale(contentRootSegment.chunks, request.responseState, contentRootSegment.lastPushedText, contentRootSegment.textEmbedded), contentRootSegment.status = COMPLETED, queueCompletedSegment(newBoundary, contentRootSegment), newBoundary.pendingTasks === 0) {
            popComponentStackInDEV(task);
            return;
          }
        } catch (error2) {
          contentRootSegment.status = ERRORED, newBoundary.forceClientRender = !0, newBoundary.errorDigest = logRecoverableError(request, error2), captureBoundaryErrorDetailsDev(newBoundary, error2);
        } finally {
          task.blockedBoundary = parentBoundary, task.blockedSegment = parentSegment;
        }
        var suspendedFallbackTask = createTask(request, fallback, parentBoundary, boundarySegment, fallbackAbortSet, task.legacyContext, task.context, task.treeContext);
        suspendedFallbackTask.componentStack = task.componentStack, request.pingedTasks.push(suspendedFallbackTask), popComponentStackInDEV(task);
      }
      function renderHostElement(request, task, type, props) {
        pushBuiltInComponentStackInDEV(task, type);
        var segment = task.blockedSegment, children = pushStartInstance(segment.chunks, type, props, request.responseState, segment.formatContext);
        segment.lastPushedText = !1;
        var prevContext = segment.formatContext;
        segment.formatContext = getChildFormatContext(prevContext, type, props), renderNode(request, task, children), segment.formatContext = prevContext, pushEndInstance(segment.chunks, type), segment.lastPushedText = !1, popComponentStackInDEV(task);
      }
      function shouldConstruct$1(Component2) {
        return Component2.prototype && Component2.prototype.isReactComponent;
      }
      function renderWithHooks(request, task, Component2, props, secondArg) {
        var componentIdentity = {};
        prepareToUseHooks(task, componentIdentity);
        var result = Component2(props, secondArg);
        return finishHooks(Component2, props, result, secondArg);
      }
      function finishClassComponent(request, task, instance, Component2, props) {
        var nextChildren = instance.render();
        instance.props !== props && (didWarnAboutReassigningProps || error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromType(Component2) || "a component"), didWarnAboutReassigningProps = !0);
        {
          var childContextTypes = Component2.childContextTypes;
          if (childContextTypes != null) {
            var previousContext = task.legacyContext, mergedContext = processChildContext(instance, Component2, previousContext, childContextTypes);
            task.legacyContext = mergedContext, renderNodeDestructive(request, task, nextChildren), task.legacyContext = previousContext;
            return;
          }
        }
        renderNodeDestructive(request, task, nextChildren);
      }
      function renderClassComponent(request, task, Component2, props) {
        pushClassComponentStackInDEV(task, Component2);
        var maskedContext = getMaskedContext(Component2, task.legacyContext), instance = constructClassInstance(Component2, props, maskedContext);
        mountClassInstance(instance, Component2, props, maskedContext), finishClassComponent(request, task, instance, Component2, props), popComponentStackInDEV(task);
      }
      var didWarnAboutBadClass = {}, didWarnAboutModulePatternComponent = {}, didWarnAboutContextTypeOnFunctionComponent = {}, didWarnAboutGetDerivedStateOnFunctionComponent = {}, didWarnAboutReassigningProps = !1, didWarnAboutGenerators = !1, didWarnAboutMaps = !1, hasWarnedAboutUsingContextAsConsumer = !1;
      function renderIndeterminateComponent(request, task, Component2, props) {
        var legacyContext;
        if (legacyContext = getMaskedContext(Component2, task.legacyContext), pushFunctionComponentStackInDEV(task, Component2), Component2.prototype && typeof Component2.prototype.render == "function") {
          var componentName = getComponentNameFromType(Component2) || "Unknown";
          didWarnAboutBadClass[componentName] || (error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName), didWarnAboutBadClass[componentName] = !0);
        }
        var value = renderWithHooks(request, task, Component2, props, legacyContext), hasId = checkDidRenderIdHook();
        if (typeof value == "object" && value !== null && typeof value.render == "function" && value.$$typeof === void 0) {
          var _componentName = getComponentNameFromType(Component2) || "Unknown";
          didWarnAboutModulePatternComponent[_componentName] || (error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName), didWarnAboutModulePatternComponent[_componentName] = !0);
        }
        if (
          // Run these checks in production only if the flag is off.
          // Eventually we'll delete this branch altogether.
          typeof value == "object" && value !== null && typeof value.render == "function" && value.$$typeof === void 0
        ) {
          {
            var _componentName2 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutModulePatternComponent[_componentName2] || (error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2), didWarnAboutModulePatternComponent[_componentName2] = !0);
          }
          mountClassInstance(value, Component2, props, legacyContext), finishClassComponent(request, task, value, Component2, props);
        } else if (validateFunctionComponentInDev(Component2), hasId) {
          var prevTreeContext = task.treeContext, totalChildren = 1, index = 0;
          task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
          try {
            renderNodeDestructive(request, task, value);
          } finally {
            task.treeContext = prevTreeContext;
          }
        } else
          renderNodeDestructive(request, task, value);
        popComponentStackInDEV(task);
      }
      function validateFunctionComponentInDev(Component2) {
        {
          if (Component2 && Component2.childContextTypes && error("%s(...): childContextTypes cannot be defined on a function component.", Component2.displayName || Component2.name || "Component"), typeof Component2.getDerivedStateFromProps == "function") {
            var _componentName3 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] || (error("%s: Function components do not support getDerivedStateFromProps.", _componentName3), didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = !0);
          }
          if (typeof Component2.contextType == "object" && Component2.contextType !== null) {
            var _componentName4 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutContextTypeOnFunctionComponent[_componentName4] || (error("%s: Function components do not support contextType.", _componentName4), didWarnAboutContextTypeOnFunctionComponent[_componentName4] = !0);
          }
        }
      }
      function resolveDefaultProps(Component2, baseProps) {
        if (Component2 && Component2.defaultProps) {
          var props = assign({}, baseProps), defaultProps = Component2.defaultProps;
          for (var propName in defaultProps)
            props[propName] === void 0 && (props[propName] = defaultProps[propName]);
          return props;
        }
        return baseProps;
      }
      function renderForwardRef(request, task, type, props, ref) {
        pushFunctionComponentStackInDEV(task, type.render);
        var children = renderWithHooks(request, task, type.render, props, ref), hasId = checkDidRenderIdHook();
        if (hasId) {
          var prevTreeContext = task.treeContext, totalChildren = 1, index = 0;
          task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
          try {
            renderNodeDestructive(request, task, children);
          } finally {
            task.treeContext = prevTreeContext;
          }
        } else
          renderNodeDestructive(request, task, children);
        popComponentStackInDEV(task);
      }
      function renderMemo(request, task, type, props, ref) {
        var innerType = type.type, resolvedProps = resolveDefaultProps(innerType, props);
        renderElement(request, task, innerType, resolvedProps, ref);
      }
      function renderContextConsumer(request, task, context, props) {
        context._context === void 0 ? context !== context.Consumer && (hasWarnedAboutUsingContextAsConsumer || (hasWarnedAboutUsingContextAsConsumer = !0, error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : context = context._context;
        var render = props.children;
        typeof render != "function" && error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
        var newValue = readContext(context), newChildren = render(newValue);
        renderNodeDestructive(request, task, newChildren);
      }
      function renderContextProvider(request, task, type, props) {
        var context = type._context, value = props.value, children = props.children, prevSnapshot;
        prevSnapshot = task.context, task.context = pushProvider(context, value), renderNodeDestructive(request, task, children), task.context = popProvider(context), prevSnapshot !== task.context && error("Popping the context provider did not return back to the original snapshot. This is a bug in React.");
      }
      function renderLazyComponent(request, task, lazyComponent, props, ref) {
        pushBuiltInComponentStackInDEV(task, "Lazy");
        var payload = lazyComponent._payload, init = lazyComponent._init, Component2 = init(payload), resolvedProps = resolveDefaultProps(Component2, props);
        renderElement(request, task, Component2, resolvedProps, ref), popComponentStackInDEV(task);
      }
      function renderElement(request, task, type, props, ref) {
        if (typeof type == "function")
          if (shouldConstruct$1(type)) {
            renderClassComponent(request, task, type, props);
            return;
          } else {
            renderIndeterminateComponent(request, task, type, props);
            return;
          }
        if (typeof type == "string") {
          renderHostElement(request, task, type, props);
          return;
        }
        switch (type) {
          case REACT_LEGACY_HIDDEN_TYPE:
          case REACT_DEBUG_TRACING_MODE_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_FRAGMENT_TYPE: {
            renderNodeDestructive(request, task, props.children);
            return;
          }
          case REACT_SUSPENSE_LIST_TYPE: {
            pushBuiltInComponentStackInDEV(task, "SuspenseList"), renderNodeDestructive(request, task, props.children), popComponentStackInDEV(task);
            return;
          }
          case REACT_SCOPE_TYPE:
            throw new Error("ReactDOMServer does not yet support scope components.");
          case REACT_SUSPENSE_TYPE: {
            renderSuspenseBoundary(request, task, props);
            return;
          }
        }
        if (typeof type == "object" && type !== null)
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE: {
              renderForwardRef(request, task, type, props, ref);
              return;
            }
            case REACT_MEMO_TYPE: {
              renderMemo(request, task, type, props, ref);
              return;
            }
            case REACT_PROVIDER_TYPE: {
              renderContextProvider(request, task, type, props);
              return;
            }
            case REACT_CONTEXT_TYPE: {
              renderContextConsumer(request, task, type, props);
              return;
            }
            case REACT_LAZY_TYPE: {
              renderLazyComponent(request, task, type, props);
              return;
            }
          }
        var info = "";
        throw (type === void 0 || typeof type == "object" && type !== null && Object.keys(type).length === 0) && (info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports."), new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
      }
      function validateIterable(iterable, iteratorFn) {
        typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
        iterable[Symbol.toStringTag] === "Generator" && (didWarnAboutGenerators || error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), didWarnAboutGenerators = !0), iterable.entries === iteratorFn && (didWarnAboutMaps || error("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0);
      }
      function renderNodeDestructive(request, task, node) {
        try {
          return renderNodeDestructiveImpl(request, task, node);
        } catch (x) {
          throw typeof x == "object" && x !== null && typeof x.then == "function" || (lastBoundaryErrorComponentStackDev = lastBoundaryErrorComponentStackDev !== null ? lastBoundaryErrorComponentStackDev : getCurrentStackInDEV()), x;
        }
      }
      function renderNodeDestructiveImpl(request, task, node) {
        if (task.node = node, typeof node == "object" && node !== null) {
          switch (node.$$typeof) {
            case REACT_ELEMENT_TYPE: {
              var element = node, type = element.type, props = element.props, ref = element.ref;
              renderElement(request, task, type, props, ref);
              return;
            }
            case REACT_PORTAL_TYPE:
              throw new Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
            case REACT_LAZY_TYPE: {
              var lazyNode = node, payload = lazyNode._payload, init = lazyNode._init, resolvedNode;
              try {
                resolvedNode = init(payload);
              } catch (x) {
                throw typeof x == "object" && x !== null && typeof x.then == "function" && pushBuiltInComponentStackInDEV(task, "Lazy"), x;
              }
              renderNodeDestructive(request, task, resolvedNode);
              return;
            }
          }
          if (isArray(node)) {
            renderChildrenArray(request, task, node);
            return;
          }
          var iteratorFn = getIteratorFn(node);
          if (iteratorFn) {
            validateIterable(node, iteratorFn);
            var iterator = iteratorFn.call(node);
            if (iterator) {
              var step = iterator.next();
              if (!step.done) {
                var children = [];
                do
                  children.push(step.value), step = iterator.next();
                while (!step.done);
                renderChildrenArray(request, task, children);
                return;
              }
              return;
            }
          }
          var childString = Object.prototype.toString.call(node);
          throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(node).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
        }
        if (typeof node == "string") {
          var segment = task.blockedSegment;
          segment.lastPushedText = pushTextInstance(task.blockedSegment.chunks, node, request.responseState, segment.lastPushedText);
          return;
        }
        if (typeof node == "number") {
          var _segment = task.blockedSegment;
          _segment.lastPushedText = pushTextInstance(task.blockedSegment.chunks, "" + node, request.responseState, _segment.lastPushedText);
          return;
        }
        typeof node == "function" && error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
      function renderChildrenArray(request, task, children) {
        for (var totalChildren = children.length, i = 0; i < totalChildren; i++) {
          var prevTreeContext = task.treeContext;
          task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i);
          try {
            renderNode(request, task, children[i]);
          } finally {
            task.treeContext = prevTreeContext;
          }
        }
      }
      function spawnNewSuspendedTask(request, task, x) {
        var segment = task.blockedSegment, insertionIndex = segment.chunks.length, newSegment = createPendingSegment(
          request,
          insertionIndex,
          null,
          segment.formatContext,
          // Adopt the parent segment's leading text embed
          segment.lastPushedText,
          // Assume we are text embedded at the trailing edge
          !0
        );
        segment.children.push(newSegment), segment.lastPushedText = !1;
        var newTask = createTask(request, task.node, task.blockedBoundary, newSegment, task.abortSet, task.legacyContext, task.context, task.treeContext);
        task.componentStack !== null && (newTask.componentStack = task.componentStack.parent);
        var ping = newTask.ping;
        x.then(ping, ping);
      }
      function renderNode(request, task, node) {
        var previousFormatContext = task.blockedSegment.formatContext, previousLegacyContext = task.legacyContext, previousContext = task.context, previousComponentStack = null;
        previousComponentStack = task.componentStack;
        try {
          return renderNodeDestructive(request, task, node);
        } catch (x) {
          if (resetHooksState(), typeof x == "object" && x !== null && typeof x.then == "function") {
            spawnNewSuspendedTask(request, task, x), task.blockedSegment.formatContext = previousFormatContext, task.legacyContext = previousLegacyContext, task.context = previousContext, switchContext(previousContext), task.componentStack = previousComponentStack;
            return;
          } else
            throw task.blockedSegment.formatContext = previousFormatContext, task.legacyContext = previousLegacyContext, task.context = previousContext, switchContext(previousContext), task.componentStack = previousComponentStack, x;
        }
      }
      function erroredTask(request, boundary, segment, error2) {
        var errorDigest = logRecoverableError(request, error2);
        if (boundary === null ? fatalError(request, error2) : (boundary.pendingTasks--, boundary.forceClientRender || (boundary.forceClientRender = !0, boundary.errorDigest = errorDigest, captureBoundaryErrorDetailsDev(boundary, error2), boundary.parentFlushed && request.clientRenderedBoundaries.push(boundary))), request.allPendingTasks--, request.allPendingTasks === 0) {
          var onAllReady = request.onAllReady;
          onAllReady();
        }
      }
      function abortTaskSoft(task) {
        var request = this, boundary = task.blockedBoundary, segment = task.blockedSegment;
        segment.status = ABORTED, finishedTask(request, boundary, segment);
      }
      function abortTask(task, request, reason) {
        var boundary = task.blockedBoundary, segment = task.blockedSegment;
        if (segment.status = ABORTED, boundary === null)
          request.allPendingTasks--, request.status !== CLOSED && (request.status = CLOSED, request.destination !== null && close(request.destination));
        else {
          if (boundary.pendingTasks--, !boundary.forceClientRender) {
            boundary.forceClientRender = !0;
            var _error = reason === void 0 ? new Error("The render was aborted by the server without a reason.") : reason;
            boundary.errorDigest = request.onError(_error);
            {
              var errorPrefix = "The server did not finish this Suspense boundary: ";
              _error && typeof _error.message == "string" ? _error = errorPrefix + _error.message : _error = errorPrefix + String(_error);
              var previousTaskInDev = currentTaskInDEV;
              currentTaskInDEV = task;
              try {
                captureBoundaryErrorDetailsDev(boundary, _error);
              } finally {
                currentTaskInDEV = previousTaskInDev;
              }
            }
            boundary.parentFlushed && request.clientRenderedBoundaries.push(boundary);
          }
          if (boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
            return abortTask(fallbackTask, request, reason);
          }), boundary.fallbackAbortableTasks.clear(), request.allPendingTasks--, request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
      }
      function queueCompletedSegment(boundary, segment) {
        if (segment.chunks.length === 0 && segment.children.length === 1 && segment.children[0].boundary === null) {
          var childSegment = segment.children[0];
          childSegment.id = segment.id, childSegment.parentFlushed = !0, childSegment.status === COMPLETED && queueCompletedSegment(boundary, childSegment);
        } else {
          var completedSegments = boundary.completedSegments;
          completedSegments.push(segment);
        }
      }
      function finishedTask(request, boundary, segment) {
        if (boundary === null) {
          if (segment.parentFlushed) {
            if (request.completedRootSegment !== null)
              throw new Error("There can only be one root segment. This is a bug in React.");
            request.completedRootSegment = segment;
          }
          if (request.pendingRootTasks--, request.pendingRootTasks === 0) {
            request.onShellError = noop$1;
            var onShellReady = request.onShellReady;
            onShellReady();
          }
        } else if (boundary.pendingTasks--, !boundary.forceClientRender) {
          if (boundary.pendingTasks === 0)
            segment.parentFlushed && segment.status === COMPLETED && queueCompletedSegment(boundary, segment), boundary.parentFlushed && request.completedBoundaries.push(boundary), boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request), boundary.fallbackAbortableTasks.clear();
          else if (segment.parentFlushed && segment.status === COMPLETED) {
            queueCompletedSegment(boundary, segment);
            var completedSegments = boundary.completedSegments;
            completedSegments.length === 1 && boundary.parentFlushed && request.partialBoundaries.push(boundary);
          }
        }
        if (request.allPendingTasks--, request.allPendingTasks === 0) {
          var onAllReady = request.onAllReady;
          onAllReady();
        }
      }
      function retryTask(request, task) {
        var segment = task.blockedSegment;
        if (segment.status === PENDING) {
          switchContext(task.context);
          var prevTaskInDEV = null;
          prevTaskInDEV = currentTaskInDEV, currentTaskInDEV = task;
          try {
            renderNodeDestructive(request, task, task.node), pushSegmentFinale(segment.chunks, request.responseState, segment.lastPushedText, segment.textEmbedded), task.abortSet.delete(task), segment.status = COMPLETED, finishedTask(request, task.blockedBoundary, segment);
          } catch (x) {
            if (resetHooksState(), typeof x == "object" && x !== null && typeof x.then == "function") {
              var ping = task.ping;
              x.then(ping, ping);
            } else
              task.abortSet.delete(task), segment.status = ERRORED, erroredTask(request, task.blockedBoundary, segment, x);
          } finally {
            currentTaskInDEV = prevTaskInDEV;
          }
        }
      }
      function performWork(request) {
        if (request.status !== CLOSED) {
          var prevContext = getActiveContext(), prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = Dispatcher;
          var prevGetCurrentStackImpl;
          prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack, ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;
          var prevResponseState = currentResponseState;
          setCurrentResponseState(request.responseState);
          try {
            var pingedTasks = request.pingedTasks, i;
            for (i = 0; i < pingedTasks.length; i++) {
              var task = pingedTasks[i];
              retryTask(request, task);
            }
            pingedTasks.splice(0, i), request.destination !== null && flushCompletedQueues(request, request.destination);
          } catch (error2) {
            logRecoverableError(request, error2), fatalError(request, error2);
          } finally {
            setCurrentResponseState(prevResponseState), ReactCurrentDispatcher$1.current = prevDispatcher, ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl, prevDispatcher === Dispatcher && switchContext(prevContext);
          }
        }
      }
      function flushSubtree(request, destination, segment) {
        switch (segment.parentFlushed = !0, segment.status) {
          case PENDING: {
            var segmentID = segment.id = request.nextSegmentId++;
            return segment.lastPushedText = !1, segment.textEmbedded = !1, writePlaceholder(destination, request.responseState, segmentID);
          }
          case COMPLETED: {
            segment.status = FLUSHED;
            for (var r = !0, chunks = segment.chunks, chunkIdx = 0, children = segment.children, childIdx = 0; childIdx < children.length; childIdx++) {
              for (var nextChild = children[childIdx]; chunkIdx < nextChild.index; chunkIdx++)
                writeChunk(destination, chunks[chunkIdx]);
              r = flushSegment(request, destination, nextChild);
            }
            for (; chunkIdx < chunks.length - 1; chunkIdx++)
              writeChunk(destination, chunks[chunkIdx]);
            return chunkIdx < chunks.length && (r = writeChunkAndReturn(destination, chunks[chunkIdx])), r;
          }
          default:
            throw new Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
        }
      }
      function flushSegment(request, destination, segment) {
        var boundary = segment.boundary;
        if (boundary === null)
          return flushSubtree(request, destination, segment);
        if (boundary.parentFlushed = !0, boundary.forceClientRender)
          return writeStartClientRenderedSuspenseBoundary(destination, request.responseState, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack), flushSubtree(request, destination, segment), writeEndClientRenderedSuspenseBoundary(destination, request.responseState);
        if (boundary.pendingTasks > 0) {
          boundary.rootSegmentID = request.nextSegmentId++, boundary.completedSegments.length > 0 && request.partialBoundaries.push(boundary);
          var id = boundary.id = assignSuspenseBoundaryID(request.responseState);
          return writeStartPendingSuspenseBoundary(destination, request.responseState, id), flushSubtree(request, destination, segment), writeEndPendingSuspenseBoundary(destination, request.responseState);
        } else {
          if (boundary.byteSize > request.progressiveChunkSize)
            return boundary.rootSegmentID = request.nextSegmentId++, request.completedBoundaries.push(boundary), writeStartPendingSuspenseBoundary(destination, request.responseState, boundary.id), flushSubtree(request, destination, segment), writeEndPendingSuspenseBoundary(destination, request.responseState);
          writeStartCompletedSuspenseBoundary(destination, request.responseState);
          var completedSegments = boundary.completedSegments;
          if (completedSegments.length !== 1)
            throw new Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
          var contentSegment = completedSegments[0];
          return flushSegment(request, destination, contentSegment), writeEndCompletedSuspenseBoundary(destination, request.responseState);
        }
      }
      function flushClientRenderedBoundary(request, destination, boundary) {
        return writeClientRenderBoundaryInstruction(destination, request.responseState, boundary.id, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
      }
      function flushSegmentContainer(request, destination, segment) {
        return writeStartSegment(destination, request.responseState, segment.formatContext, segment.id), flushSegment(request, destination, segment), writeEndSegment(destination, segment.formatContext);
      }
      function flushCompletedBoundary(request, destination, boundary) {
        for (var completedSegments = boundary.completedSegments, i = 0; i < completedSegments.length; i++) {
          var segment = completedSegments[i];
          flushPartiallyCompletedSegment(request, destination, boundary, segment);
        }
        return completedSegments.length = 0, writeCompletedBoundaryInstruction(destination, request.responseState, boundary.id, boundary.rootSegmentID);
      }
      function flushPartialBoundary(request, destination, boundary) {
        for (var completedSegments = boundary.completedSegments, i = 0; i < completedSegments.length; i++) {
          var segment = completedSegments[i];
          if (!flushPartiallyCompletedSegment(request, destination, boundary, segment))
            return i++, completedSegments.splice(0, i), !1;
        }
        return completedSegments.splice(0, i), !0;
      }
      function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
        if (segment.status === FLUSHED)
          return !0;
        var segmentID = segment.id;
        if (segmentID === -1) {
          var rootSegmentID = segment.id = boundary.rootSegmentID;
          if (rootSegmentID === -1)
            throw new Error("A root segment ID must have been assigned by now. This is a bug in React.");
          return flushSegmentContainer(request, destination, segment);
        } else
          return flushSegmentContainer(request, destination, segment), writeCompletedSegmentInstruction(destination, request.responseState, segmentID);
      }
      function flushCompletedQueues(request, destination) {
        beginWriting();
        try {
          var completedRootSegment = request.completedRootSegment;
          completedRootSegment !== null && request.pendingRootTasks === 0 && (flushSegment(request, destination, completedRootSegment), request.completedRootSegment = null, writeCompletedRoot(destination, request.responseState));
          var clientRenderedBoundaries = request.clientRenderedBoundaries, i;
          for (i = 0; i < clientRenderedBoundaries.length; i++) {
            var boundary = clientRenderedBoundaries[i];
            if (!flushClientRenderedBoundary(request, destination, boundary)) {
              request.destination = null, i++, clientRenderedBoundaries.splice(0, i);
              return;
            }
          }
          clientRenderedBoundaries.splice(0, i);
          var completedBoundaries = request.completedBoundaries;
          for (i = 0; i < completedBoundaries.length; i++) {
            var _boundary = completedBoundaries[i];
            if (!flushCompletedBoundary(request, destination, _boundary)) {
              request.destination = null, i++, completedBoundaries.splice(0, i);
              return;
            }
          }
          completedBoundaries.splice(0, i), completeWriting(destination), beginWriting(destination);
          var partialBoundaries = request.partialBoundaries;
          for (i = 0; i < partialBoundaries.length; i++) {
            var _boundary2 = partialBoundaries[i];
            if (!flushPartialBoundary(request, destination, _boundary2)) {
              request.destination = null, i++, partialBoundaries.splice(0, i);
              return;
            }
          }
          partialBoundaries.splice(0, i);
          var largeBoundaries = request.completedBoundaries;
          for (i = 0; i < largeBoundaries.length; i++) {
            var _boundary3 = largeBoundaries[i];
            if (!flushCompletedBoundary(request, destination, _boundary3)) {
              request.destination = null, i++, largeBoundaries.splice(0, i);
              return;
            }
          }
          largeBoundaries.splice(0, i);
        } finally {
          completeWriting(destination), request.allPendingTasks === 0 && request.pingedTasks.length === 0 && request.clientRenderedBoundaries.length === 0 && request.completedBoundaries.length === 0 && (request.abortableTasks.size !== 0 && error("There was still abortable task at the root when we closed. This is a bug in React."), close(destination));
        }
      }
      function startWork(request) {
        scheduleWork(function() {
          return performWork(request);
        });
      }
      function startFlowing(request, destination) {
        if (request.status === CLOSING) {
          request.status = CLOSED, closeWithError(destination, request.fatalError);
          return;
        }
        if (request.status !== CLOSED && request.destination === null) {
          request.destination = destination;
          try {
            flushCompletedQueues(request, destination);
          } catch (error2) {
            logRecoverableError(request, error2), fatalError(request, error2);
          }
        }
      }
      function abort(request, reason) {
        try {
          var abortableTasks = request.abortableTasks;
          abortableTasks.forEach(function(task) {
            return abortTask(task, request, reason);
          }), abortableTasks.clear(), request.destination !== null && flushCompletedQueues(request, request.destination);
        } catch (error2) {
          logRecoverableError(request, error2), fatalError(request, error2);
        }
      }
      function renderToReadableStream2(children, options2) {
        return new Promise(function(resolve, reject) {
          var onFatalError, onAllReady, allReady = new Promise(function(res, rej) {
            onAllReady = res, onFatalError = rej;
          });
          function onShellReady() {
            var stream = new ReadableStream(
              {
                type: "bytes",
                pull: function(controller) {
                  startFlowing(request, controller);
                },
                cancel: function(reason) {
                  abort(request);
                }
              },
              // $FlowFixMe size() methods are not allowed on byte streams.
              {
                highWaterMark: 0
              }
            );
            stream.allReady = allReady, resolve(stream);
          }
          function onShellError(error2) {
            allReady.catch(function() {
            }), reject(error2);
          }
          var request = createRequest(children, createResponseState(options2 ? options2.identifierPrefix : void 0, options2 ? options2.nonce : void 0, options2 ? options2.bootstrapScriptContent : void 0, options2 ? options2.bootstrapScripts : void 0, options2 ? options2.bootstrapModules : void 0), createRootFormatContext(options2 ? options2.namespaceURI : void 0), options2 ? options2.progressiveChunkSize : void 0, options2 ? options2.onError : void 0, onAllReady, onShellReady, onShellError, onFatalError);
          if (options2 && options2.signal) {
            var signal = options2.signal, listener = function() {
              abort(request, signal.reason), signal.removeEventListener("abort", listener);
            };
            signal.addEventListener("abort", listener);
          }
          startWork(request);
        });
      }
      exports2.renderToReadableStream = renderToReadableStream2, exports2.version = ReactVersion;
    })();
  }
});

// node_modules/react-dom/server.browser.js
var require_server_browser = __commonJS({
  "node_modules/react-dom/server.browser.js"(exports2) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    var l, s;
    l = require_react_dom_server_legacy_browser_development(), s = require_react_dom_server_browser_development();
    exports2.version = l.version;
    exports2.renderToString = l.renderToString;
    exports2.renderToStaticMarkup = l.renderToStaticMarkup;
    exports2.renderToNodeStream = l.renderToNodeStream;
    exports2.renderToStaticNodeStream = l.renderToStaticNodeStream;
    exports2.renderToReadableStream = s.renderToReadableStream;
  }
});

// node_modules/react/cjs/react-jsx-dev-runtime.development.js
var require_react_jsx_dev_runtime_development = __commonJS({
  "node_modules/react/cjs/react-jsx-dev-runtime.development.js"(exports2) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    (function() {
      "use strict";
      var React7 = require_react(), REACT_ELEMENT_TYPE = Symbol.for("react.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable != "object")
          return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        return typeof maybeIterator == "function" ? maybeIterator : null;
      }
      var ReactSharedInternals = React7.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function error(format) {
        {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
            args[_key2 - 1] = arguments[_key2];
          printWarning("error", format, args);
        }
      }
      function printWarning(level, format, args) {
        {
          var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame, stack = ReactDebugCurrentFrame2.getStackAddendum();
          stack !== "" && (format += "%s", args = args.concat([stack]));
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format), Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      var enableScopeAPI = !1, enableCacheElement = !1, enableTransitionTracing = !1, enableLegacyHidden = !1, enableDebugTracing = !1, REACT_MODULE_REFERENCE;
      REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
      function isValidElementType(type) {
        return !!(typeof type == "string" || typeof type == "function" || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing || typeof type == "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
        // types supported by any Flight configuration anywhere since
        // we don't know which Flight build this will end up being used
        // with.
        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0));
      }
      function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName)
          return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
      }
      function getContextName(type) {
        return type.displayName || "Context";
      }
      function getComponentNameFromType(type) {
        if (type == null)
          return null;
        if (typeof type.tag == "number" && error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof type == "function")
          return type.displayName || type.name || null;
        if (typeof type == "string")
          return type;
        switch (type) {
          case REACT_FRAGMENT_TYPE:
            return "Fragment";
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_PROFILER_TYPE:
            return "Profiler";
          case REACT_STRICT_MODE_TYPE:
            return "StrictMode";
          case REACT_SUSPENSE_TYPE:
            return "Suspense";
          case REACT_SUSPENSE_LIST_TYPE:
            return "SuspenseList";
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
              var context = type;
              return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
              var provider = type;
              return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
              return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
              var outerName = type.displayName || null;
              return outerName !== null ? outerName : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return getComponentNameFromType(init(payload));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var assign = Object.assign, disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
      function disabledLog() {
      }
      disabledLog.__reactDisabledLog = !0;
      function disableLogs() {
        {
          if (disabledDepth === 0) {
            prevLog = console.log, prevInfo = console.info, prevWarn = console.warn, prevError = console.error, prevGroup = console.group, prevGroupCollapsed = console.groupCollapsed, prevGroupEnd = console.groupEnd;
            var props = {
              configurable: !0,
              enumerable: !0,
              value: disabledLog,
              writable: !0
            };
            Object.defineProperties(console, {
              info: props,
              log: props,
              warn: props,
              error: props,
              group: props,
              groupCollapsed: props,
              groupEnd: props
            });
          }
          disabledDepth++;
        }
      }
      function reenableLogs() {
        {
          if (disabledDepth--, disabledDepth === 0) {
            var props = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: assign({}, props, {
                value: prevLog
              }),
              info: assign({}, props, {
                value: prevInfo
              }),
              warn: assign({}, props, {
                value: prevWarn
              }),
              error: assign({}, props, {
                value: prevError
              }),
              group: assign({}, props, {
                value: prevGroup
              }),
              groupCollapsed: assign({}, props, {
                value: prevGroupCollapsed
              }),
              groupEnd: assign({}, props, {
                value: prevGroupEnd
              })
            });
          }
          disabledDepth < 0 && error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher, prefix;
      function describeBuiltInComponentFrame(name, source, ownerFn) {
        {
          if (prefix === void 0)
            try {
              throw Error();
            } catch (x) {
              var match = x.stack.trim().match(/\n( *(at )?)/);
              prefix = match && match[1] || "";
            }
          return `
` + prefix + name;
        }
      }
      var reentry = !1, componentFrameCache;
      {
        var PossiblyWeakMap = typeof WeakMap == "function" ? WeakMap : Map;
        componentFrameCache = new PossiblyWeakMap();
      }
      function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry)
          return "";
        {
          var frame = componentFrameCache.get(fn);
          if (frame !== void 0)
            return frame;
        }
        var control;
        reentry = !0;
        var previousPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current, ReactCurrentDispatcher.current = null, disableLogs();
        try {
          if (construct) {
            var Fake = function() {
              throw Error();
            };
            if (Object.defineProperty(Fake.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Fake, []);
              } catch (x) {
                control = x;
              }
              Reflect.construct(fn, [], Fake);
            } else {
              try {
                Fake.call();
              } catch (x) {
                control = x;
              }
              fn.call(Fake.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (x) {
              control = x;
            }
            fn();
          }
        } catch (sample) {
          if (sample && control && typeof sample.stack == "string") {
            for (var sampleLines = sample.stack.split(`
`), controlLines = control.stack.split(`
`), s = sampleLines.length - 1, c = controlLines.length - 1; s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]; )
              c--;
            for (; s >= 1 && c >= 0; s--, c--)
              if (sampleLines[s] !== controlLines[c]) {
                if (s !== 1 || c !== 1)
                  do
                    if (s--, c--, c < 0 || sampleLines[s] !== controlLines[c]) {
                      var _frame = `
` + sampleLines[s].replace(" at new ", " at ");
                      return fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName)), typeof fn == "function" && componentFrameCache.set(fn, _frame), _frame;
                    }
                  while (s >= 1 && c >= 0);
                break;
              }
          }
        } finally {
          reentry = !1, ReactCurrentDispatcher.current = previousDispatcher, reenableLogs(), Error.prepareStackTrace = previousPrepareStackTrace;
        }
        var name = fn ? fn.displayName || fn.name : "", syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        return typeof fn == "function" && componentFrameCache.set(fn, syntheticFrame), syntheticFrame;
      }
      function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, !1);
      }
      function shouldConstruct(Component2) {
        var prototype = Component2.prototype;
        return !!(prototype && prototype.isReactComponent);
      }
      function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null)
          return "";
        if (typeof type == "function")
          return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type == "string")
          return describeBuiltInComponentFrame(type);
        switch (type) {
          case REACT_SUSPENSE_TYPE:
            return describeBuiltInComponentFrame("Suspense");
          case REACT_SUSPENSE_LIST_TYPE:
            return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
              return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch {
              }
            }
          }
        return "";
      }
      var hasOwnProperty = Object.prototype.hasOwnProperty, loggedTypeFailures = {}, ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame.setExtraStackFrame(null);
      }
      function checkPropTypes(typeSpecs, values, location, componentName, element) {
        {
          var has = Function.call.bind(hasOwnProperty);
          for (var typeSpecName in typeSpecs)
            if (has(typeSpecs, typeSpecName)) {
              var error$1 = void 0;
              try {
                if (typeof typeSpecs[typeSpecName] != "function") {
                  var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw err.name = "Invariant Violation", err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (ex) {
                error$1 = ex;
              }
              error$1 && !(error$1 instanceof Error) && (setCurrentlyValidatingElement(element), error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1), setCurrentlyValidatingElement(null)), error$1 instanceof Error && !(error$1.message in loggedTypeFailures) && (loggedTypeFailures[error$1.message] = !0, setCurrentlyValidatingElement(element), error("Failed %s type: %s", location, error$1.message), setCurrentlyValidatingElement(null));
            }
        }
      }
      var isArrayImpl = Array.isArray;
      function isArray(a) {
        return isArrayImpl(a);
      }
      function typeName(value) {
        {
          var hasToStringTag = typeof Symbol == "function" && Symbol.toStringTag, type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
          return type;
        }
      }
      function willCoercionThrow(value) {
        try {
          return testStringCoercion(value), !1;
        } catch {
          return !0;
        }
      }
      function testStringCoercion(value) {
        return "" + value;
      }
      function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value))
          return error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value)), testStringCoercion(value);
      }
      var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner, RESERVED_PROPS = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
      didWarnAboutStringRefs = {};
      function hasValidRef(config) {
        if (hasOwnProperty.call(config, "ref")) {
          var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
          if (getter && getter.isReactWarning)
            return !1;
        }
        return config.ref !== void 0;
      }
      function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
          var getter = Object.getOwnPropertyDescriptor(config, "key").get;
          if (getter && getter.isReactWarning)
            return !1;
        }
        return config.key !== void 0;
      }
      function warnIfStringRefCannotBeAutoConverted(config, self) {
        if (typeof config.ref == "string" && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
          didWarnAboutStringRefs[componentName] || (error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref), didWarnAboutStringRefs[componentName] = !0);
        }
      }
      function defineKeyPropWarningGetter(props, displayName) {
        {
          var warnAboutAccessingKey = function() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName));
          };
          warnAboutAccessingKey.isReactWarning = !0, Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
          });
        }
      }
      function defineRefPropWarningGetter(props, displayName) {
        {
          var warnAboutAccessingRef = function() {
            specialPropRefWarningShown || (specialPropRefWarningShown = !0, error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName));
          };
          warnAboutAccessingRef.isReactWarning = !0, Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: !0
          });
        }
      }
      var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: REACT_ELEMENT_TYPE,
          // Built-in properties that belong on the element
          type,
          key,
          ref,
          props,
          // Record the component responsible for creating this element.
          _owner: owner
        };
        return element._store = {}, Object.defineProperty(element._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(element, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: self
        }), Object.defineProperty(element, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: source
        }), Object.freeze && (Object.freeze(element.props), Object.freeze(element)), element;
      };
      function jsxDEV10(type, config, maybeKey, source, self) {
        {
          var propName, props = {}, key = null, ref = null;
          maybeKey !== void 0 && (checkKeyStringCoercion(maybeKey), key = "" + maybeKey), hasValidKey(config) && (checkKeyStringCoercion(config.key), key = "" + config.key), hasValidRef(config) && (ref = config.ref, warnIfStringRefCannotBeAutoConverted(config, self));
          for (propName in config)
            hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName) && (props[propName] = config[propName]);
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps)
              props[propName] === void 0 && (props[propName] = defaultProps[propName]);
          }
          if (key || ref) {
            var displayName = typeof type == "function" ? type.displayName || type.name || "Unknown" : type;
            key && defineKeyPropWarningGetter(props, displayName), ref && defineRefPropWarningGetter(props, displayName);
          }
          return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
        }
      }
      var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner, ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement$1(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
      }
      var propTypesMisspellWarningShown;
      propTypesMisspellWarningShown = !1;
      function isValidElement2(object) {
        return typeof object == "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      }
      function getDeclarationErrorAddendum() {
        {
          if (ReactCurrentOwner$1.current) {
            var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
            if (name)
              return `

Check the render method of \`` + name + "`.";
          }
          return "";
        }
      }
      function getSourceInfoErrorAddendum(source) {
        {
          if (source !== void 0) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, ""), lineNumber = source.lineNumber;
            return `

Check your code at ` + fileName + ":" + lineNumber + ".";
          }
          return "";
        }
      }
      var ownerHasKeyUseWarning = {};
      function getCurrentComponentErrorInfo(parentType) {
        {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType == "string" ? parentType : parentType.displayName || parentType.name;
            parentName && (info = `

Check the top-level render call using <` + parentName + ">.");
          }
          return info;
        }
      }
      function validateExplicitKey(element, parentType) {
        {
          if (!element._store || element._store.validated || element.key != null)
            return;
          element._store.validated = !0;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo])
            return;
          ownerHasKeyUseWarning[currentComponentErrorInfo] = !0;
          var childOwner = "";
          element && element._owner && element._owner !== ReactCurrentOwner$1.current && (childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + "."), setCurrentlyValidatingElement$1(element), error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner), setCurrentlyValidatingElement$1(null);
        }
      }
      function validateChildKeys(node, parentType) {
        {
          if (typeof node != "object")
            return;
          if (isArray(node))
            for (var i = 0; i < node.length; i++) {
              var child = node[i];
              isValidElement2(child) && validateExplicitKey(child, parentType);
            }
          else if (isValidElement2(node))
            node._store && (node._store.validated = !0);
          else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn == "function" && iteratorFn !== node.entries)
              for (var iterator = iteratorFn.call(node), step; !(step = iterator.next()).done; )
                isValidElement2(step.value) && validateExplicitKey(step.value, parentType);
          }
        }
      }
      function validatePropTypes(element) {
        {
          var type = element.type;
          if (type == null || typeof type == "string")
            return;
          var propTypes;
          if (typeof type == "function")
            propTypes = type.propTypes;
          else if (typeof type == "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          type.$$typeof === REACT_MEMO_TYPE))
            propTypes = type.propTypes;
          else
            return;
          if (propTypes) {
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, "prop", name, element);
          } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = !0;
            var _name = getComponentNameFromType(type);
            error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
          }
          typeof type.getDefaultProps == "function" && !type.getDefaultProps.isReactClassApproved && error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function validateFragmentProps(fragment) {
        {
          for (var keys = Object.keys(fragment.props), i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (key !== "children" && key !== "key") {
              setCurrentlyValidatingElement$1(fragment), error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key), setCurrentlyValidatingElement$1(null);
              break;
            }
          }
          fragment.ref !== null && (setCurrentlyValidatingElement$1(fragment), error("Invalid attribute `ref` supplied to `React.Fragment`."), setCurrentlyValidatingElement$1(null));
        }
      }
      function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
        {
          var validType = isValidElementType(type);
          if (!validType) {
            var info = "";
            (type === void 0 || typeof type == "object" && type !== null && Object.keys(type).length === 0) && (info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
            var sourceInfo = getSourceInfoErrorAddendum(source);
            sourceInfo ? info += sourceInfo : info += getDeclarationErrorAddendum();
            var typeString;
            type === null ? typeString = "null" : isArray(type) ? typeString = "array" : type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE ? (typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", info = " Did you accidentally export a JSX literal instead of a component?") : typeString = typeof type, error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
          }
          var element = jsxDEV10(type, props, key, source, self);
          if (element == null)
            return element;
          if (validType) {
            var children = props.children;
            if (children !== void 0)
              if (isStaticChildren)
                if (isArray(children)) {
                  for (var i = 0; i < children.length; i++)
                    validateChildKeys(children[i], type);
                  Object.freeze && Object.freeze(children);
                } else
                  error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
              else
                validateChildKeys(children, type);
          }
          return type === REACT_FRAGMENT_TYPE ? validateFragmentProps(element) : validatePropTypes(element), element;
        }
      }
      var jsxDEV$1 = jsxWithValidation;
      exports2.Fragment = REACT_FRAGMENT_TYPE, exports2.jsxDEV = jsxDEV$1;
    })();
  }
});

// node_modules/react/jsx-dev-runtime.js
var require_jsx_dev_runtime = __commonJS({
  "node_modules/react/jsx-dev-runtime.js"(exports2, module) {
    "use strict";
    init_global();
    init_dirname();
    init_filename();
    init_buffer2();
    init_process2();
    module.exports = require_react_jsx_dev_runtime_development();
  }
});

// server.ts
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();

// node_modules/@remix-run/cloudflare-pages/dist/esm/index.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();

// node_modules/@remix-run/cloudflare-pages/dist/esm/worker.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var import_cloudflare = __toESM(require_dist());
function createRequestHandler2({
  build,
  getLoadContext,
  mode
}) {
  let handleRequest2 = (0, import_cloudflare.createRequestHandler)(build, mode);
  return async (context) => {
    let loadContext = await (getLoadContext == null ? void 0 : getLoadContext(context));
    return handleRequest2(context.request, loadContext);
  };
}
function createPagesFunctionHandler({
  build,
  getLoadContext,
  mode
}) {
  let handleRequest2 = createRequestHandler2({
    build,
    getLoadContext,
    mode
  }), handleFetch = async (context) => {
    let response;
    context.request.headers.delete("if-none-match");
    try {
      response = await context.env.ASSETS.fetch(context.request.url, context.request.clone()), response = response && response.status >= 200 && response.status < 400 ? new Response(response.body, response) : void 0;
    } catch {
    }
    return response || (response = await handleRequest2(context)), response;
  };
  return async (context) => {
    try {
      return await handleFetch(context);
    } catch (error) {
      return error instanceof Error ? (console.error(error), new Response(error.message || error.toString(), {
        status: 500
      })) : new Response("Internal Error", {
        status: 500
      });
    }
  };
}

// server-entry-module:@remix-run/dev/server-build
var server_build_exports = {};
__export(server_build_exports, {
  assets: () => assets_manifest_default,
  assetsBuildDirectory: () => assetsBuildDirectory,
  entry: () => entry,
  future: () => future,
  publicPath: () => publicPath,
  routes: () => routes
});
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();

// app/entry.server.tsx
var entry_server_exports = {};
__export(entry_server_exports, {
  default: () => handleRequest
});
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();

// node_modules/@remix-run/react/dist/esm/index.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();

// node_modules/@remix-run/react/dist/esm/components.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();

// node_modules/@remix-run/react/dist/esm/_virtual/_rollupPluginBabelHelpers.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
function _extends4() {
  return _extends4 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends4.apply(this, arguments);
}

// node_modules/@remix-run/react/dist/esm/components.js
var React3 = __toESM(require_react());
init_dist2();

// node_modules/@remix-run/react/dist/esm/errorBoundaries.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var import_react = __toESM(require_react());
init_dist2();
var RemixErrorBoundary = class extends import_react.default.Component {
  constructor(props) {
    super(props), this.state = {
      error: props.error || null,
      location: props.location
    };
  }
  static getDerivedStateFromError(error) {
    return {
      error
    };
  }
  static getDerivedStateFromProps(props, state) {
    return state.location !== props.location ? {
      error: props.error || null,
      location: props.location
    } : {
      error: props.error || state.error,
      location: state.location
    };
  }
  render() {
    return this.state.error ? /* @__PURE__ */ import_react.default.createElement(this.props.component, {
      error: this.state.error
    }) : this.props.children;
  }
};
function RemixRootDefaultErrorBoundary({
  error
}) {
  return console.error(error), /* @__PURE__ */ import_react.default.createElement("html", {
    lang: "en"
  }, /* @__PURE__ */ import_react.default.createElement("head", null, /* @__PURE__ */ import_react.default.createElement("meta", {
    charSet: "utf-8"
  }), /* @__PURE__ */ import_react.default.createElement("meta", {
    name: "viewport",
    content: "width=device-width, initial-scale=1, viewport-fit=cover"
  }), /* @__PURE__ */ import_react.default.createElement("title", null, "Application Error!")), /* @__PURE__ */ import_react.default.createElement("body", null, /* @__PURE__ */ import_react.default.createElement("main", {
    style: {
      fontFamily: "system-ui, sans-serif",
      padding: "2rem"
    }
  }, /* @__PURE__ */ import_react.default.createElement("h1", {
    style: {
      fontSize: "24px"
    }
  }, "Application Error"), /* @__PURE__ */ import_react.default.createElement("pre", {
    style: {
      padding: "2rem",
      background: "hsla(10, 50%, 50%, 0.1)",
      color: "red",
      overflow: "auto"
    }
  }, error.stack)), /* @__PURE__ */ import_react.default.createElement("script", {
    dangerouslySetInnerHTML: {
      __html: `
              console.log(
                "\u{1F4BF} Hey developer\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information."
              );
            `
    }
  })));
}
function V2_RemixRootDefaultErrorBoundary() {
  let error = useRouteError();
  if (isRouteErrorResponse(error))
    return /* @__PURE__ */ import_react.default.createElement(RemixRootDefaultCatchBoundaryImpl, {
      caught: error
    });
  if (error instanceof Error)
    return /* @__PURE__ */ import_react.default.createElement(RemixRootDefaultErrorBoundary, {
      error
    });
  {
    let errorString = error == null ? "Unknown Error" : typeof error == "object" && "toString" in error ? error.toString() : JSON.stringify(error);
    return /* @__PURE__ */ import_react.default.createElement(RemixRootDefaultErrorBoundary, {
      error: new Error(errorString)
    });
  }
}
var RemixCatchContext = /* @__PURE__ */ import_react.default.createContext(void 0);
function useCatch() {
  return (0, import_react.useContext)(RemixCatchContext);
}
function RemixCatchBoundary({
  catch: catchVal,
  component: Component2,
  children
}) {
  return catchVal ? /* @__PURE__ */ import_react.default.createElement(RemixCatchContext.Provider, {
    value: catchVal
  }, /* @__PURE__ */ import_react.default.createElement(Component2, null)) : /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null, children);
}
function RemixRootDefaultCatchBoundary() {
  let caught = useCatch();
  return /* @__PURE__ */ import_react.default.createElement(RemixRootDefaultCatchBoundaryImpl, {
    caught
  });
}
function RemixRootDefaultCatchBoundaryImpl({
  caught
}) {
  return /* @__PURE__ */ import_react.default.createElement("html", {
    lang: "en"
  }, /* @__PURE__ */ import_react.default.createElement("head", null, /* @__PURE__ */ import_react.default.createElement("meta", {
    charSet: "utf-8"
  }), /* @__PURE__ */ import_react.default.createElement("meta", {
    name: "viewport",
    content: "width=device-width, initial-scale=1, viewport-fit=cover"
  }), /* @__PURE__ */ import_react.default.createElement("title", null, "Unhandled Thrown Response!")), /* @__PURE__ */ import_react.default.createElement("body", null, /* @__PURE__ */ import_react.default.createElement("h1", {
    style: {
      fontFamily: "system-ui, sans-serif",
      padding: "2rem"
    }
  }, caught.status, " ", caught.statusText), /* @__PURE__ */ import_react.default.createElement("script", {
    dangerouslySetInnerHTML: {
      __html: `
              console.log(
                "\u{1F4BF} Hey developer\u{1F44B}. You can provide a way better UX than this when your app throws 404s (and other responses). Check out https://remix.run/guides/not-found for more information."
              );
            `
    }
  })));
}

// node_modules/@remix-run/react/dist/esm/invariant.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
function invariant3(value, message) {
  if (value === !1 || value === null || typeof value > "u")
    throw new Error(message);
}

// node_modules/@remix-run/react/dist/esm/links.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
init_dist2();

// node_modules/@remix-run/react/dist/esm/routeModules.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
async function loadRouteModule(route, routeModulesCache) {
  if (route.id in routeModulesCache)
    return routeModulesCache[route.id];
  try {
    let routeModule = await import(
      /* webpackIgnore: true */
      route.module
    );
    return routeModulesCache[route.id] = routeModule, routeModule;
  } catch {
    return window.location.reload(), new Promise(() => {
    });
  }
}

// node_modules/@remix-run/react/dist/esm/links.js
function getLinksForMatches(matches, routeModules, manifest) {
  let descriptors = matches.map((match) => {
    var _module$links;
    let module = routeModules[match.route.id];
    return ((_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || [];
  }).flat(1), preloads = getCurrentPageModulePreloadHrefs(matches, manifest);
  return dedupe(descriptors, preloads);
}
function isPageLinkDescriptor(object) {
  return object != null && typeof object.page == "string";
}
function isHtmlLinkDescriptor(object) {
  return object == null ? !1 : object.href == null ? object.rel === "preload" && (typeof object.imageSrcSet == "string" || typeof object.imagesrcset == "string") && (typeof object.imageSizes == "string" || typeof object.imagesizes == "string") : typeof object.rel == "string" && typeof object.href == "string";
}
async function getStylesheetPrefetchLinks(matches, manifest, routeModules) {
  return (await Promise.all(matches.map(async (match) => {
    let mod = await loadRouteModule(manifest.routes[match.route.id], routeModules);
    return mod.links ? mod.links() : [];
  }))).flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === "stylesheet" || link.rel === "preload").map((link) => link.rel === "preload" ? {
    ...link,
    rel: "prefetch"
  } : {
    ...link,
    rel: "prefetch",
    as: "style"
  });
}
function getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {
  let path = parsePathPatch(page), isNew = (match, index) => currentMatches[index] ? match.route.id !== currentMatches[index].route.id : !0, matchPathChanged = (match, index) => {
    var _currentMatches$index;
    return (
      // param change, /users/123 -> /users/456
      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path
      // e.g. /files/images/avatar.jpg -> files/finances.xls
      ((_currentMatches$index = currentMatches[index].route.path) === null || _currentMatches$index === void 0 ? void 0 : _currentMatches$index.endsWith("*")) && currentMatches[index].params["*"] !== match.params["*"]
    );
  };
  return mode === "data" && location.search !== path.search ? (
    // this is really similar to stuff in transition.ts, maybe somebody smarter
    // than me (or in less of a hurry) can share some of it. You're the best.
    nextMatches.filter((match, index) => {
      if (!manifest.routes[match.route.id].hasLoader)
        return !1;
      if (isNew(match, index) || matchPathChanged(match, index))
        return !0;
      if (match.route.shouldRevalidate) {
        var _currentMatches$;
        let routeChoice = match.route.shouldRevalidate({
          currentUrl: new URL(location.pathname + location.search + location.hash, window.origin),
          currentParams: ((_currentMatches$ = currentMatches[0]) === null || _currentMatches$ === void 0 ? void 0 : _currentMatches$.params) || {},
          nextUrl: new URL(page, window.origin),
          nextParams: match.params,
          defaultShouldRevalidate: !0
        });
        if (typeof routeChoice == "boolean")
          return routeChoice;
      }
      return !0;
    })
  ) : nextMatches.filter((match, index) => {
    let manifestRoute = manifest.routes[match.route.id];
    return (mode === "assets" || manifestRoute.hasLoader) && (isNew(match, index) || matchPathChanged(match, index));
  });
}
function getDataLinkHrefs(page, matches, manifest) {
  let path = parsePathPatch(page);
  return dedupeHrefs(matches.filter((match) => manifest.routes[match.route.id].hasLoader).map((match) => {
    let {
      pathname,
      search
    } = path, searchParams = new URLSearchParams(search);
    return searchParams.set("_data", match.route.id), `${pathname}?${searchParams}`;
  }));
}
function getModuleLinkHrefs(matches, manifestPatch) {
  return dedupeHrefs(matches.map((match) => {
    let route = manifestPatch.routes[match.route.id], hrefs = [route.module];
    return route.imports && (hrefs = hrefs.concat(route.imports)), hrefs;
  }).flat(1));
}
function getCurrentPageModulePreloadHrefs(matches, manifest) {
  return dedupeHrefs(matches.map((match) => {
    let route = manifest.routes[match.route.id], hrefs = [route.module];
    return route.imports && (hrefs = hrefs.concat(route.imports)), hrefs;
  }).flat(1));
}
function dedupeHrefs(hrefs) {
  return [...new Set(hrefs)];
}
function dedupe(descriptors, preloads) {
  let set = /* @__PURE__ */ new Set(), preloadsSet = new Set(preloads);
  return descriptors.reduce((deduped, descriptor) => {
    if (!isPageLinkDescriptor(descriptor) && descriptor.as === "script" && descriptor.href && preloadsSet.has(descriptor.href))
      return deduped;
    let str = JSON.stringify(descriptor);
    return set.has(str) || (set.add(str), deduped.push(descriptor)), deduped;
  }, []);
}
function parsePathPatch(href) {
  let path = parsePath(href);
  return path.search === void 0 && (path.search = ""), path;
}

// node_modules/@remix-run/react/dist/esm/markup.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var ESCAPE_LOOKUP2 = {
  "&": "\\u0026",
  ">": "\\u003e",
  "<": "\\u003c",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
}, ESCAPE_REGEX2 = /[&><\u2028\u2029]/g;
function escapeHtml2(html) {
  return html.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);
}
function createHtml(html) {
  return {
    __html: html
  };
}

// node_modules/@remix-run/react/dist/esm/warnings.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var alreadyWarned3 = {};
function logDeprecationOnce(message, key = message) {
  alreadyWarned3[key] || (alreadyWarned3[key] = !0, console.warn(message));
}

// node_modules/@remix-run/react/dist/esm/components.js
function useDataRouterContext3() {
  let context = React3.useContext(DataRouterContext);
  return invariant3(context, "You must render this element inside a <DataRouterContext.Provider> element"), context;
}
function useDataRouterStateContext() {
  let context = React3.useContext(DataRouterStateContext);
  return invariant3(context, "You must render this element inside a <DataRouterStateContext.Provider> element"), context;
}
var RemixContext = /* @__PURE__ */ React3.createContext(void 0);
RemixContext.displayName = "Remix";
function useRemixContext() {
  let context = React3.useContext(RemixContext);
  return invariant3(context, "You must render this element inside a <Remix> element"), context;
}
function RemixRoute({
  id
}) {
  let {
    routeModules,
    future: future2
  } = useRemixContext();
  invariant3(routeModules, `Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.
Check this link for more details:
https://remix.run/pages/gotchas#server-code-in-client-bundles`);
  let {
    default: Component2,
    ErrorBoundary,
    CatchBoundary
  } = routeModules[id];
  return !Component2 && (ErrorBoundary || !future2.v2_errorBoundary && CatchBoundary) && (Component2 = Outlet), invariant3(Component2, `Route "${id}" has no component! Please go add a \`default\` export in the route module file.
If you were trying to navigate or submit to a resource route, use \`<a>\` instead of \`<Link>\` or \`<Form reloadDocument>\`.`), /* @__PURE__ */ React3.createElement(Component2, null);
}
function RemixRouteError({
  id
}) {
  let {
    future: future2,
    routeModules
  } = useRemixContext();
  invariant3(routeModules, `Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.
Check this link for more details:
https://remix.run/pages/gotchas#server-code-in-client-bundles`);
  let error = useRouteError(), {
    CatchBoundary,
    ErrorBoundary
  } = routeModules[id];
  if (future2.v2_errorBoundary) {
    if (id === "root" && (ErrorBoundary || (ErrorBoundary = V2_RemixRootDefaultErrorBoundary)), ErrorBoundary)
      return /* @__PURE__ */ React3.createElement(ErrorBoundary, null);
    throw error;
  }
  if (id === "root" && (CatchBoundary || (CatchBoundary = RemixRootDefaultCatchBoundary), ErrorBoundary || (ErrorBoundary = RemixRootDefaultErrorBoundary)), isRouteErrorResponse(error)) {
    let tError = error;
    if ((tError == null ? void 0 : tError.error) instanceof Error && tError.status !== 404 && ErrorBoundary)
      return /* @__PURE__ */ React3.createElement(ErrorBoundary, {
        error: tError.error
      });
    if (CatchBoundary)
      return /* @__PURE__ */ React3.createElement(RemixCatchBoundary, {
        component: CatchBoundary,
        catch: error
      });
  }
  if (error instanceof Error && ErrorBoundary)
    return /* @__PURE__ */ React3.createElement(ErrorBoundary, {
      error
    });
  throw error;
}
function usePrefetchBehavior(prefetch, theirElementProps) {
  let [maybePrefetch, setMaybePrefetch] = React3.useState(!1), [shouldPrefetch, setShouldPrefetch] = React3.useState(!1), {
    onFocus,
    onBlur,
    onMouseEnter,
    onMouseLeave,
    onTouchStart
  } = theirElementProps;
  React3.useEffect(() => {
    prefetch === "render" && setShouldPrefetch(!0);
  }, [prefetch]);
  let setIntent = () => {
    prefetch === "intent" && setMaybePrefetch(!0);
  }, cancelIntent = () => {
    prefetch === "intent" && (setMaybePrefetch(!1), setShouldPrefetch(!1));
  };
  return React3.useEffect(() => {
    if (maybePrefetch) {
      let id = setTimeout(() => {
        setShouldPrefetch(!0);
      }, 100);
      return () => {
        clearTimeout(id);
      };
    }
  }, [maybePrefetch]), [shouldPrefetch, {
    onFocus: composeEventHandlers(onFocus, setIntent),
    onBlur: composeEventHandlers(onBlur, cancelIntent),
    onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),
    onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),
    onTouchStart: composeEventHandlers(onTouchStart, setIntent)
  }];
}
var ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, NavLink2 = /* @__PURE__ */ React3.forwardRef(({
  to,
  prefetch = "none",
  ...props
}, forwardedRef) => {
  let isAbsolute = typeof to == "string" && ABSOLUTE_URL_REGEX3.test(to), href = useHref(to), [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(NavLink, _extends4({
    ref: forwardedRef,
    to
  }, props, prefetchHandlers)), shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React3.createElement(PrefetchPageLinks, {
    page: href
  }) : null);
});
NavLink2.displayName = "NavLink";
var Link2 = /* @__PURE__ */ React3.forwardRef(({
  to,
  prefetch = "none",
  ...props
}, forwardedRef) => {
  let isAbsolute = typeof to == "string" && ABSOLUTE_URL_REGEX3.test(to), href = useHref(to), [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(Link, _extends4({
    ref: forwardedRef,
    to
  }, props, prefetchHandlers)), shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React3.createElement(PrefetchPageLinks, {
    page: href
  }) : null);
});
Link2.displayName = "Link";
function composeEventHandlers(theirHandler, ourHandler) {
  return (event) => {
    theirHandler && theirHandler(event), event.defaultPrevented || ourHandler(event);
  };
}
var linksWarning = "\u26A0\uFE0F REMIX FUTURE CHANGE: The behavior of links `imagesizes` and `imagesrcset` will be changing in v2. Only the React camel case versions will be valid. Please change to `imageSizes` and `imageSrcSet`.For instructions on making this change see https://remix.run/docs/en/v1.15.0/pages/v2#links-imagesizes-and-imagesrcset";
function Links() {
  let {
    manifest,
    routeModules
  } = useRemixContext(), {
    errors,
    matches: routerMatches
  } = useDataRouterStateContext(), matches = errors ? routerMatches.slice(0, routerMatches.findIndex((m) => errors[m.route.id]) + 1) : routerMatches, links7 = React3.useMemo(() => getLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);
  return React3.useEffect(() => {
    links7.some((link) => "imagesizes" in link || "imagesrcset" in link) && logDeprecationOnce(linksWarning);
  }, [links7]), /* @__PURE__ */ React3.createElement(React3.Fragment, null, links7.map((link) => {
    if (isPageLinkDescriptor(link))
      return /* @__PURE__ */ React3.createElement(PrefetchPageLinks, _extends4({
        key: link.page
      }, link));
    let imageSrcSet = null;
    return "useId" in React3 ? (link.imagesrcset && (link.imageSrcSet = imageSrcSet = link.imagesrcset, delete link.imagesrcset), link.imagesizes && (link.imageSizes = link.imagesizes, delete link.imagesizes)) : (link.imageSrcSet && (link.imagesrcset = imageSrcSet = link.imageSrcSet, delete link.imageSrcSet), link.imageSizes && (link.imagesizes = link.imageSizes, delete link.imageSizes)), /* @__PURE__ */ React3.createElement("link", _extends4({
      key: link.rel + (link.href || "") + (imageSrcSet || "")
    }, link));
  }));
}
function PrefetchPageLinks({
  page,
  ...dataLinkProps
}) {
  let {
    router
  } = useDataRouterContext3(), matches = React3.useMemo(() => matchRoutes(router.routes, page), [router.routes, page]);
  return matches ? /* @__PURE__ */ React3.createElement(PrefetchPageLinksImpl, _extends4({
    page,
    matches
  }, dataLinkProps)) : (console.warn(`Tried to prefetch ${page} but no routes matched.`), null);
}
function usePrefetchedStylesheets(matches) {
  let {
    manifest,
    routeModules
  } = useRemixContext(), [styleLinks, setStyleLinks] = React3.useState([]);
  return React3.useEffect(() => {
    let interrupted = !1;
    return getStylesheetPrefetchLinks(matches, manifest, routeModules).then((links7) => {
      interrupted || setStyleLinks(links7);
    }), () => {
      interrupted = !0;
    };
  }, [matches, manifest, routeModules]), styleLinks;
}
function PrefetchPageLinksImpl({
  page,
  matches: nextMatches,
  ...linkProps
}) {
  let location = useLocation(), {
    manifest
  } = useRemixContext(), {
    matches
  } = useDataRouterStateContext(), newMatchesForData = React3.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, "data"), [page, nextMatches, matches, manifest, location]), newMatchesForAssets = React3.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, "assets"), [page, nextMatches, matches, manifest, location]), dataHrefs = React3.useMemo(() => getDataLinkHrefs(page, newMatchesForData, manifest), [newMatchesForData, page, manifest]), moduleHrefs = React3.useMemo(() => getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]), styleLinks = usePrefetchedStylesheets(newMatchesForAssets);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React3.createElement("link", _extends4({
    key: href,
    rel: "prefetch",
    as: "fetch",
    href
  }, linkProps))), moduleHrefs.map((href) => /* @__PURE__ */ React3.createElement("link", _extends4({
    key: href,
    rel: "modulepreload",
    href
  }, linkProps))), styleLinks.map((link) => (
    // these don't spread `linkProps` because they are full link descriptors
    // already with their own props
    /* @__PURE__ */ React3.createElement("link", _extends4({
      key: link.href
    }, link))
  )));
}
function V1Meta() {
  let {
    routeModules
  } = useRemixContext(), {
    errors,
    matches: routerMatches,
    loaderData
  } = useDataRouterStateContext(), location = useLocation(), matches = errors ? routerMatches.slice(0, routerMatches.findIndex((m) => errors[m.route.id]) + 1) : routerMatches, meta5 = {}, parentsData = {};
  for (let match of matches) {
    let routeId = match.route.id, data = loaderData[routeId], params = match.params, routeModule = routeModules[routeId];
    if (routeModule.meta) {
      let routeMeta = typeof routeModule.meta == "function" ? routeModule.meta({
        data,
        parentsData,
        params,
        location
      }) : routeModule.meta;
      if (routeMeta && Array.isArray(routeMeta))
        throw new Error(
          "The route at " + match.route.path + " returns an array. This is only supported with the `v2_meta` future flag in the Remix config. Either set the flag to `true` or update the route's meta function to return an object.\n\nTo reference the v1 meta function API, see https://remix.run/route/meta"
          // TODO: Add link to the docs once they are written
          // + "\n\nTo reference future flags and the v2 meta API, see https://remix.run/file-conventions/remix-config#future-v2-meta."
        );
      Object.assign(meta5, routeMeta);
    }
    parentsData[routeId] = data;
  }
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, Object.entries(meta5).map(([name, value]) => {
    if (!value)
      return null;
    if (["charset", "charSet"].includes(name))
      return /* @__PURE__ */ React3.createElement("meta", {
        key: "charSet",
        charSet: value
      });
    if (name === "title")
      return /* @__PURE__ */ React3.createElement("title", {
        key: "title"
      }, String(value));
    let isOpenGraphTag = /^(og|music|video|article|book|profile|fb):.+$/.test(name);
    return [value].flat().map((content) => isOpenGraphTag ? /* @__PURE__ */ React3.createElement("meta", {
      property: name,
      content,
      key: name + content
    }) : typeof content == "string" ? /* @__PURE__ */ React3.createElement("meta", {
      name,
      content,
      key: name + content
    }) : /* @__PURE__ */ React3.createElement("meta", _extends4({
      key: name + JSON.stringify(content)
    }, content)));
  }));
}
function V2Meta() {
  let {
    routeModules
  } = useRemixContext(), {
    errors,
    matches: routerMatches,
    loaderData
  } = useDataRouterStateContext(), location = useLocation(), _matches = errors ? routerMatches.slice(0, routerMatches.findIndex((m) => errors[m.route.id]) + 1) : routerMatches, meta5 = [], leafMeta = null, matches = [];
  for (let i = 0; i < _matches.length; i++) {
    let _match = _matches[i], routeId = _match.route.id, data = loaderData[routeId], params = _match.params, routeModule = routeModules[routeId], routeMeta = [], match = {
      id: routeId,
      data,
      meta: [],
      params: _match.params,
      pathname: _match.pathname,
      handle: _match.route.handle,
      // TODO: Remove in v2. Only leaving it for now because we used it in
      // examples and there's no reason to crash someone's build for one line.
      // They'll get a TS error from the type updates anyway.
      // @ts-expect-error
      get route() {
        return console.warn("The meta function in " + _match.route.path + " accesses the `route` property on `matches`. This is deprecated and will be removed in Remix version 2. See"), _match.route;
      }
    };
    if (matches[i] = match, routeModule != null && routeModule.meta ? routeMeta = typeof routeModule.meta == "function" ? routeModule.meta({
      data,
      params,
      location,
      matches
    }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta : leafMeta && (routeMeta = [...leafMeta]), routeMeta = routeMeta || [], !Array.isArray(routeMeta))
      throw new Error("The `v2_meta` API is enabled in the Remix config, but the route at " + _match.route.path + ` returns an invalid value. In v2, all route meta functions must return an array of meta objects.

To reference the v1 meta function API, see https://remix.run/route/meta`);
    match.meta = routeMeta, matches[i] = match, meta5 = [...routeMeta], leafMeta = meta5;
  }
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, meta5.flat().map((metaProps) => {
    if (!metaProps)
      return null;
    if ("tagName" in metaProps) {
      let tagName = metaProps.tagName;
      return delete metaProps.tagName, isValidMetaTag(tagName) ? /* @__PURE__ */ React3.createElement(tagName, _extends4({
        key: JSON.stringify(metaProps)
      }, metaProps)) : (console.warn(`A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`), null);
    }
    if ("title" in metaProps)
      return /* @__PURE__ */ React3.createElement("title", {
        key: "title"
      }, String(metaProps.title));
    if ("charset" in metaProps && (metaProps.charSet ?? (metaProps.charSet = metaProps.charset), delete metaProps.charset), "charSet" in metaProps && metaProps.charSet != null)
      return typeof metaProps.charSet == "string" ? /* @__PURE__ */ React3.createElement("meta", {
        key: "charSet",
        charSet: metaProps.charSet
      }) : null;
    if ("script:ld+json" in metaProps) {
      let json11 = null;
      try {
        json11 = JSON.stringify(metaProps["script:ld+json"]);
      } catch {
      }
      return json11 != null && /* @__PURE__ */ React3.createElement("script", {
        key: "script:ld+json",
        type: "application/ld+json",
        dangerouslySetInnerHTML: {
          __html: JSON.stringify(metaProps["script:ld+json"])
        }
      });
    }
    return /* @__PURE__ */ React3.createElement("meta", _extends4({
      key: JSON.stringify(metaProps)
    }, metaProps));
  }));
}
function isValidMetaTag(tagName) {
  return typeof tagName == "string" && /^(meta|link)$/.test(tagName);
}
function Meta() {
  let {
    future: future2
  } = useRemixContext();
  return future2 != null && future2.v2_meta ? /* @__PURE__ */ React3.createElement(V2Meta, null) : /* @__PURE__ */ React3.createElement(V1Meta, null);
}
function Await2(props) {
  return /* @__PURE__ */ React3.createElement(Await, props);
}
var isHydrated = !1;
function Scripts(props) {
  let {
    manifest,
    serverHandoffString,
    abortDelay
  } = useRemixContext(), {
    router,
    static: isStatic,
    staticContext
  } = useDataRouterContext3(), {
    matches
  } = useDataRouterStateContext(), navigation = useNavigation();
  React3.useEffect(() => {
    isHydrated = !0;
  }, []);
  let deferredScripts = [], initialScripts = React3.useMemo(() => {
    var _manifest$hmr;
    let contextScript = staticContext ? `window.__remixContext = ${serverHandoffString};` : " ", activeDeferreds = staticContext == null ? void 0 : staticContext.activeDeferreds;
    contextScript += activeDeferreds ? ["__remixContext.p = function(v,e,p,x) {", "  if (typeof e !== 'undefined') {", `    x=new Error(e.message);
    x.stack=e.stack;`, "    p=Promise.reject(x);", "  } else {", "    p=Promise.resolve(v);", "  }", "  return p;", "};", "__remixContext.n = function(i,k) {", "  __remixContext.t = __remixContext.t || {};", "  __remixContext.t[i] = __remixContext.t[i] || {};", "  let p = new Promise((r, e) => {__remixContext.t[i][k] = {r:(v)=>{r(v);},e:(v)=>{e(v);}};});", typeof abortDelay == "number" ? `setTimeout(() => {if(typeof p._error !== "undefined" || typeof p._data !== "undefined"){return;} __remixContext.t[i][k].e(new Error("Server timeout."))}, ${abortDelay});` : "", "  return p;", "};", "__remixContext.r = function(i,k,v,e,p,x) {", "  p = __remixContext.t[i][k];", "  if (typeof e !== 'undefined') {", `    x=new Error(e.message);
    x.stack=e.stack;`, "    p.e(x);", "  } else {", "    p.r(v);", "  }", "};"].join(`
`) + Object.entries(activeDeferreds).map(([routeId, deferredData]) => {
      let pendingKeys = new Set(deferredData.pendingKeys), promiseKeyValues = deferredData.deferredKeys.map((key) => {
        if (pendingKeys.has(key))
          return deferredScripts.push(/* @__PURE__ */ React3.createElement(DeferredHydrationScript, {
            key: `${routeId} | ${key}`,
            deferredData,
            routeId,
            dataKey: key
          })), `${JSON.stringify(key)}:__remixContext.n(${JSON.stringify(routeId)}, ${JSON.stringify(key)})`;
        {
          let trackedPromise = deferredData.data[key];
          if (typeof trackedPromise._error < "u") {
            let toSerialize = {
              message: trackedPromise._error.message,
              stack: trackedPromise._error.stack
            };
            return `${JSON.stringify(key)}:__remixContext.p(!1, ${escapeHtml2(JSON.stringify(toSerialize))})`;
          } else {
            if (typeof trackedPromise._data > "u")
              throw new Error(`The deferred data for ${key} was not resolved, did you forget to return data from a deferred promise?`);
            return `${JSON.stringify(key)}:__remixContext.p(${escapeHtml2(JSON.stringify(trackedPromise._data))})`;
          }
        }
      }).join(`,
`);
      return `Object.assign(__remixContext.state.loaderData[${JSON.stringify(routeId)}], {${promiseKeyValues}});`;
    }).join(`
`) + (deferredScripts.length > 0 ? `__remixContext.a=${deferredScripts.length};` : "") : "";
    let routeModulesScript = isStatic ? `${(_manifest$hmr = manifest.hmr) !== null && _manifest$hmr !== void 0 && _manifest$hmr.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : ""}import ${JSON.stringify(manifest.url)};
${matches.map((match, index) => `import * as route${index} from ${JSON.stringify(manifest.routes[match.route.id].module)};`).join(`
`)}
window.__remixRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(",")}};

import(${JSON.stringify(manifest.entry.module)});` : " ";
    return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement("script", _extends4({}, props, {
      suppressHydrationWarning: !0,
      dangerouslySetInnerHTML: createHtml(contextScript),
      type: void 0
    })), /* @__PURE__ */ React3.createElement("script", _extends4({}, props, {
      suppressHydrationWarning: !0,
      dangerouslySetInnerHTML: createHtml(routeModulesScript),
      type: "module",
      async: !0
    })));
  }, []);
  if (!isStatic && typeof __remixContext == "object" && __remixContext.a)
    for (let i = 0; i < __remixContext.a; i++)
      deferredScripts.push(/* @__PURE__ */ React3.createElement(DeferredHydrationScript, {
        key: i
      }));
  let nextMatches = React3.useMemo(() => {
    if (navigation.location) {
      let matches2 = matchRoutes(router.routes, navigation.location);
      return invariant3(matches2, `No routes match path "${navigation.location.pathname}"`), matches2;
    }
    return [];
  }, [navigation.location, router.routes]), routePreloads = matches.concat(nextMatches).map((match) => {
    let route = manifest.routes[match.route.id];
    return (route.imports || []).concat([route.module]);
  }).flat(1), preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement("link", {
    rel: "modulepreload",
    href: manifest.url,
    crossOrigin: props.crossOrigin
  }), /* @__PURE__ */ React3.createElement("link", {
    rel: "modulepreload",
    href: manifest.entry.module,
    crossOrigin: props.crossOrigin
  }), dedupe2(preloads).map((path) => /* @__PURE__ */ React3.createElement("link", {
    key: path,
    rel: "modulepreload",
    href: path,
    crossOrigin: props.crossOrigin
  })), !isHydrated && initialScripts, !isHydrated && deferredScripts);
}
function DeferredHydrationScript({
  dataKey,
  deferredData,
  routeId
}) {
  return typeof document > "u" && deferredData && dataKey && routeId && invariant3(deferredData.pendingKeys.includes(dataKey), `Deferred data for route ${routeId} with key ${dataKey} was not pending but tried to render a script for it.`), /* @__PURE__ */ React3.createElement(React3.Suspense, {
    fallback: (
      // This makes absolutely no sense. The server renders null as a fallback,
      // but when hydrating, we need to render a script tag to avoid a hydration issue.
      // To reproduce a hydration mismatch, just render null as a fallback.
      typeof document > "u" && deferredData && dataKey && routeId ? null : /* @__PURE__ */ React3.createElement("script", {
        async: !0,
        suppressHydrationWarning: !0,
        dangerouslySetInnerHTML: {
          __html: " "
        }
      })
    )
  }, typeof document > "u" && deferredData && dataKey && routeId ? /* @__PURE__ */ React3.createElement(Await2, {
    resolve: deferredData.data[dataKey],
    errorElement: /* @__PURE__ */ React3.createElement(ErrorDeferredHydrationScript, {
      dataKey,
      routeId
    }),
    children: (data) => /* @__PURE__ */ React3.createElement("script", {
      async: !0,
      suppressHydrationWarning: !0,
      dangerouslySetInnerHTML: {
        __html: `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(dataKey)}, ${escapeHtml2(JSON.stringify(data))});`
      }
    })
  }) : /* @__PURE__ */ React3.createElement("script", {
    async: !0,
    suppressHydrationWarning: !0,
    dangerouslySetInnerHTML: {
      __html: " "
    }
  }));
}
function ErrorDeferredHydrationScript({
  dataKey,
  routeId
}) {
  let error = useAsyncError(), toSerialize = {
    message: error.message,
    stack: error.stack
  };
  return /* @__PURE__ */ React3.createElement("script", {
    suppressHydrationWarning: !0,
    dangerouslySetInnerHTML: {
      __html: `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(dataKey)}, !1, ${escapeHtml2(JSON.stringify(toSerialize))});`
    }
  });
}
function dedupe2(array) {
  return [...new Set(array)];
}
function useMatches2() {
  let {
    routeModules
  } = useRemixContext(), matches = useMatches();
  return React3.useMemo(() => matches.map((match) => ({
    id: match.id,
    pathname: match.pathname,
    params: match.params,
    data: match.data,
    // Need to grab handle here since we don't have it at client-side route
    // creation time
    handle: routeModules[match.id].handle
  })), [matches, routeModules]);
}
function useLoaderData2() {
  return useLoaderData();
}
var LiveReload = function({
  // TODO: remove REMIX_DEV_SERVER_WS_PORT in v2
  port = Number(8002),
  timeoutMs = 1e3,
  nonce = void 0
}) {
  let js = String.raw;
  return /* @__PURE__ */ React3.createElement("script", {
    nonce,
    suppressHydrationWarning: !0,
    dangerouslySetInnerHTML: {
      __html: js`
                function remixLiveReloadConnect(config) {
                  let protocol = location.protocol === "https:" ? "wss:" : "ws:";
                  let host = location.hostname;
                  let port = (window.__remixContext && window.__remixContext.dev && window.__remixContext.dev.websocketPort) || ${String(port)};
                  let socketPath = protocol + "//" + host + ":" + port + "/socket";
                  let ws = new WebSocket(socketPath);
                  ws.onmessage = async (message) => {
                    let event = JSON.parse(message.data);
                    if (event.type === "LOG") {
                      console.log(event.message);
                    }
                    if (event.type === "RELOAD") {
                      console.log("💿 Reloading window ...");
                      window.location.reload();
                    }
                    if (event.type === "HMR") {
                      if (!window.__hmr__ || !window.__hmr__.contexts) {
                        console.log("💿 [HMR] No HMR context, reloading window ...");
                        window.location.reload();
                        return;
                      }
                      if (!event.updates || !event.updates.length) return;
                      let updateAccepted = false;
                      let needsRevalidation = new Set();
                      for (let update of event.updates) {
                        console.log("[HMR] " + update.reason + " [" + update.id +"]")
                        if (update.revalidate) {
                          needsRevalidation.add(update.routeId);
                          console.log("[HMR] Revalidating [" + update.routeId + "]");
                        }
                        let imported = await import(update.url +  '?t=' + event.assetsManifest.hmr.timestamp);
                        if (window.__hmr__.contexts[update.id]) {
                          let accepted = window.__hmr__.contexts[update.id].emit(
                            imported
                          );
                          if (accepted) {
                            console.log("[HMR] Updated accepted by", update.id);
                            updateAccepted = true;
                          }
                        }
                      }
                      if (event.assetsManifest && window.__hmr__.contexts["remix:manifest"]) {
                        let accepted = window.__hmr__.contexts["remix:manifest"].emit(
                          { needsRevalidation, assetsManifest: event.assetsManifest }
                        );
                        if (accepted) {
                          console.log("[HMR] Updated accepted by", "remix:manifest");
                          updateAccepted = true;
                        }
                      }
                      if (!updateAccepted) {
                        console.log("[HMR] Updated rejected, reloading...");
                        window.location.reload();
                      }
                    }
                  };
                  ws.onopen = () => {
                    if (config && typeof config.onOpen === "function") {
                      config.onOpen();
                    }
                  };
                  ws.onclose = (event) => {
                    if (event.code === 1006) {
                      console.log("Remix dev asset server web socket closed. Reconnecting...");
                      setTimeout(
                        () =>
                          remixLiveReloadConnect({
                            onOpen: () => window.location.reload(),
                          }),
                      ${String(timeoutMs)}
                      );
                    }
                  };
                  ws.onerror = (error) => {
                    console.log("Remix dev asset server web socket error:");
                    console.error(error);
                  };
                }
                remixLiveReloadConnect();
              `
    }
  });
};

// node_modules/@remix-run/react/dist/esm/routes.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var React4 = __toESM(require_react());
function groupRoutesByParentId2(manifest) {
  let routes2 = {};
  return Object.values(manifest).forEach((route) => {
    let parentId = route.parentId || "";
    routes2[parentId] || (routes2[parentId] = []), routes2[parentId].push(route);
  }), routes2;
}
function createServerRoutes(manifest, routeModules, future2, parentId = "", routesByParentId = groupRoutesByParentId2(manifest)) {
  return (routesByParentId[parentId] || []).map((route) => {
    let hasErrorBoundary = future2.v2_errorBoundary === !0 ? route.id === "root" || route.hasErrorBoundary : route.id === "root" || route.hasCatchBoundary || route.hasErrorBoundary, dataRoute = {
      caseSensitive: route.caseSensitive,
      element: /* @__PURE__ */ React4.createElement(RemixRoute, {
        id: route.id
      }),
      errorElement: hasErrorBoundary ? /* @__PURE__ */ React4.createElement(RemixRouteError, {
        id: route.id
      }) : void 0,
      id: route.id,
      index: route.index,
      path: route.path,
      handle: routeModules[route.id].handle
      // Note: we don't need loader/action/shouldRevalidate on these routes
      // since they're for a static render
    }, children = createServerRoutes(manifest, routeModules, future2, route.id, routesByParentId);
    return children.length > 0 && (dataRoute.children = children), dataRoute;
  });
}

// node_modules/@remix-run/react/dist/esm/index.js
init_dist2();

// node_modules/@remix-run/react/dist/esm/scroll-restoration.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var React5 = __toESM(require_react());
init_dist2();
var STORAGE_KEY = "positions";
function ScrollRestoration2({
  getKey,
  ...props
}) {
  let location = useLocation(), matches = useMatches2();
  useScrollRestoration({
    getKey,
    storageKey: STORAGE_KEY
  });
  let key = React5.useMemo(
    () => {
      if (!getKey)
        return null;
      let userKey = getKey(location, matches);
      return userKey !== location.key ? userKey : null;
    },
    // Nah, we only need this the first time for the SSR render
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []
  ), restoreScroll = ((STORAGE_KEY2, restoreKey) => {
    if (!window.history.state || !window.history.state.key) {
      let key2 = Math.random().toString(32).slice(2);
      window.history.replaceState({
        key: key2
      }, "");
    }
    try {
      let storedY = JSON.parse(sessionStorage.getItem(STORAGE_KEY2) || "{}")[restoreKey || window.history.state.key];
      typeof storedY == "number" && window.scrollTo(0, storedY);
    } catch (error) {
      console.error(error), sessionStorage.removeItem(STORAGE_KEY2);
    }
  }).toString();
  return /* @__PURE__ */ React5.createElement("script", _extends4({}, props, {
    suppressHydrationWarning: !0,
    dangerouslySetInnerHTML: {
      __html: `(${restoreScroll})(${JSON.stringify(STORAGE_KEY)}, ${JSON.stringify(key)})`
    }
  }));
}

// node_modules/@remix-run/react/dist/esm/server.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var React6 = __toESM(require_react()), import_server2 = __toESM(require_server());
function RemixServer({
  context,
  url,
  abortDelay
}) {
  typeof url == "string" && (url = new URL(url));
  let {
    manifest,
    routeModules,
    serverHandoffString
  } = context, routes2 = createServerRoutes(manifest.routes, routeModules, context.future), router = (0, import_server2.createStaticRouter)(routes2, context.staticHandlerContext);
  return /* @__PURE__ */ React6.createElement(RemixContext.Provider, {
    value: {
      manifest,
      routeModules,
      serverHandoffString,
      future: context.future,
      abortDelay
    }
  }, /* @__PURE__ */ React6.createElement(RemixErrorBoundary, {
    location: router.state.location,
    component: RemixRootDefaultErrorBoundary
  }, /* @__PURE__ */ React6.createElement(import_server2.StaticRouterProvider, {
    router,
    context: context.staticHandlerContext,
    hydrate: !1
  })));
}

// node_modules/isbot/index.mjs
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
function _classPrivateFieldGet(receiver, privateMap) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get");
  return _classApplyDescriptorGet(receiver, descriptor);
}
function _classPrivateFieldSet(receiver, privateMap, value) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set");
  return _classApplyDescriptorSet(receiver, descriptor, value), value;
}
function _classExtractFieldDescriptor(receiver, privateMap, action) {
  if (!privateMap.has(receiver))
    throw new TypeError("attempted to " + action + " private field on non-instance");
  return privateMap.get(receiver);
}
function _classApplyDescriptorGet(receiver, descriptor) {
  return descriptor.get ? descriptor.get.call(receiver) : descriptor.value;
}
function _classApplyDescriptorSet(receiver, descriptor, value) {
  if (descriptor.set)
    descriptor.set.call(receiver, value);
  else {
    if (!descriptor.writable)
      throw new TypeError("attempted to set read only private field");
    descriptor.value = value;
  }
}
function _classPrivateMethodGet(receiver, privateSet, fn) {
  if (!privateSet.has(receiver))
    throw new TypeError("attempted to get private field on non-instance");
  return fn;
}
function _checkPrivateRedeclaration(obj, privateCollection) {
  if (privateCollection.has(obj))
    throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function _classPrivateFieldInitSpec(obj, privateMap, value) {
  _checkPrivateRedeclaration(obj, privateMap), privateMap.set(obj, value);
}
function _classPrivateMethodInitSpec(obj, privateSet) {
  _checkPrivateRedeclaration(obj, privateSet), privateSet.add(obj);
}
var list = [
  " daum[ /]",
  " deusu/",
  "(?:^| )site",
  "@[a-z]",
  "\\(at\\)[a-z]",
  "\\(github\\.com/",
  "\\[at\\][a-z]",
  "^12345",
  "^<",
  "^[\\w \\.\\-\\(\\)]+(/v?\\d+(\\.\\d+)?(\\.\\d{1,10})?)?$",
  "^[^ ]{50,}$",
  "^active",
  "^ad muncher",
  "^anglesharp/",
  "^anonymous",
  "^avsdevicesdk/",
  "^axios/",
  "^bidtellect/",
  "^biglotron",
  "^btwebclient/",
  "^castro",
  "^clamav[ /]",
  "^client/",
  "^cobweb/",
  "^coccoc",
  "^custom",
  "^ddg[_-]android",
  "^discourse",
  "^dispatch/\\d",
  "^downcast/",
  "^duckduckgo",
  "^facebook",
  "^fdm[ /]\\d",
  "^getright/",
  "^gozilla/",
  "^hatena",
  "^hobbit",
  "^hotzonu",
  "^hwcdn/",
  "^jeode/",
  "^jetty/",
  "^jigsaw",
  "^linkdex",
  "^lwp[-: ]",
  "^metauri",
  "^microsoft bits",
  "^movabletype",
  "^mozilla/\\d\\.\\d \\(compatible;?\\)$",
  "^mozilla/\\d\\.\\d \\w*$",
  "^navermailapp",
  "^netsurf",
  "^offline explorer",
  "^php",
  "^postman",
  "^postrank",
  "^python",
  "^read",
  "^reed",
  "^restsharp/",
  "^snapchat",
  "^space bison",
  "^svn",
  "^swcd ",
  "^taringa",
  "^test certificate info",
  "^thumbor/",
  "^tumblr/",
  "^user-agent:mozilla",
  "^valid",
  "^venus/fedoraplanet",
  "^w3c",
  "^webbandit/",
  "^webcopier",
  "^wget",
  "^whatsapp",
  "^xenu link sleuth",
  "^yahoo",
  "^yandex",
  "^zdm/\\d",
  "^zoom marketplace/",
  "^{{.*}}$",
  "adbeat\\.com",
  "appinsights",
  "archive",
  "ask jeeves/teoma",
  "bit\\.ly/",
  "bluecoat drtr",
  "bot",
  "browsex",
  "burpcollaborator",
  "capture",
  "catch",
  "check",
  "chrome-lighthouse",
  "chromeframe",
  "cloud",
  "crawl",
  "cryptoapi",
  "dareboost",
  "datanyze",
  "dataprovider",
  "dejaclick",
  "dmbrowser",
  "download",
  "evc-batch/",
  "feed",
  "firephp",
  "freesafeip",
  "ghost",
  "gomezagent",
  "google",
  "headlesschrome/",
  "http",
  "httrack",
  "hubspot marketing grader",
  "hydra",
  "ibisbrowser",
  "images",
  "iplabel",
  "ips-agent",
  "java",
  "library",
  "mail\\.ru/",
  "manager",
  "monitor",
  "morningscore/",
  "neustar wpm",
  "news",
  "nutch",
  "offbyone",
  "optimize",
  "pageburst",
  "pagespeed",
  "perl",
  "phantom",
  "pingdom",
  "powermarks",
  "preview",
  "proxy",
  "ptst[ /]\\d",
  "reader",
  "rexx;",
  "rigor",
  "rss",
  "scan",
  "scrape",
  "search",
  "serp ?reputation ?management",
  "server",
  "sogou",
  "sparkler/",
  "speedcurve",
  "spider",
  "statuscake",
  "stumbleupon\\.com",
  "supercleaner",
  "synapse",
  "synthetic",
  "taginspector/",
  "torrent",
  "tracemyfile",
  "transcoder",
  "trendsmapresolver",
  "twingly recon",
  "url",
  "virtuoso",
  "wappalyzer",
  "webglance",
  "webkit2png",
  "websitemetadataretriever",
  "whatcms/",
  "wordpress",
  "zgrab"
];
function amend(list2) {
  try {
    new RegExp("(?<! cu)bot").test("dangerbot");
  } catch {
    return list2;
  }
  return [
    // Addresses: Cubot device
    ["bot", "(?<! cu)bot"],
    // Addresses: Android webview
    ["google", "(?<! (?:channel/|google/))google(?!(app|/google| pixel))"],
    // Addresses: libhttp browser
    ["http", "(?<!(?:lib))http"],
    // Addresses: java based browsers
    ["java", "java(?!;)"],
    // Addresses: Yandex Search App
    ["search", "(?<! ya(?:yandex)?)search"]
  ].forEach((_ref) => {
    let [search, replace] = _ref, index = list2.lastIndexOf(search);
    ~index && list2.splice(index, 1, replace);
  }), list2;
}
amend(list);
var flags = "i", _list = /* @__PURE__ */ new WeakMap(), _pattern = /* @__PURE__ */ new WeakMap(), _update = /* @__PURE__ */ new WeakSet(), _index = /* @__PURE__ */ new WeakSet(), Isbot = class {
  constructor(patterns) {
    return _classPrivateMethodInitSpec(this, _index), _classPrivateMethodInitSpec(this, _update), _classPrivateFieldInitSpec(this, _list, {
      writable: !0,
      value: void 0
    }), _classPrivateFieldInitSpec(this, _pattern, {
      writable: !0,
      value: void 0
    }), _classPrivateFieldSet(this, _list, patterns || list.slice()), _classPrivateMethodGet(this, _update, _update2).call(this), Object.defineProperties((ua) => this.test(ua), Object.entries(Object.getOwnPropertyDescriptors(Isbot.prototype)).reduce((accumulator, _ref) => {
      let [prop, descriptor] = _ref;
      return typeof descriptor.value == "function" && Object.assign(accumulator, {
        [prop]: {
          value: this[prop].bind(this)
        }
      }), typeof descriptor.get == "function" && Object.assign(accumulator, {
        [prop]: {
          get: () => this[prop]
        }
      }), accumulator;
    }, {}));
  }
  /**
   * Get a clone of the pattern
   * @type RegExp
   */
  get pattern() {
    return new RegExp(_classPrivateFieldGet(this, _pattern));
  }
  /**
   * Match given string against out pattern
   * @param  {string} ua User Agent string
   * @returns {boolean}
   */
  test(ua) {
    return Boolean(ua) && _classPrivateFieldGet(this, _pattern).test(ua);
  }
  /**
   * Get the match for strings' known crawler pattern
   * @param  {string} ua User Agent string
   * @returns {string|null}
   */
  find() {
    let match = (arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "").match(_classPrivateFieldGet(this, _pattern));
    return match && match[0];
  }
  /**
   * Get the patterns that match user agent string if any
   * @param  {string} ua User Agent string
   * @returns {string[]}
   */
  matches() {
    let ua = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
    return _classPrivateFieldGet(this, _list).filter((entry2) => new RegExp(entry2, flags).test(ua));
  }
  /**
   * Clear all patterns that match user agent
   * @param  {string} ua User Agent string
   * @returns {void}
   */
  clear() {
    let ua = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
    this.exclude(this.matches(ua));
  }
  /**
   * Extent patterns for known crawlers
   * @param  {string[]} filters
   * @returns {void}
   */
  extend() {
    let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    [].push.apply(_classPrivateFieldGet(this, _list), filters.filter((rule) => _classPrivateMethodGet(this, _index, _index2).call(this, rule) === -1).map((filter) => filter.toLowerCase())), _classPrivateMethodGet(this, _update, _update2).call(this);
  }
  /**
   * Exclude patterns from bot pattern rule
   * @param  {string[]} filters
   * @returns {void}
   */
  exclude() {
    let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], {
      length
    } = filters;
    for (; length--; ) {
      let index = _classPrivateMethodGet(this, _index, _index2).call(this, filters[length]);
      index > -1 && _classPrivateFieldGet(this, _list).splice(index, 1);
    }
    _classPrivateMethodGet(this, _update, _update2).call(this);
  }
  /**
   * Create a new Isbot instance using given list or self's list
   * @param  {string[]} [list]
   * @returns {Isbot}
   */
  spawn(list2) {
    return new Isbot(list2 || _classPrivateFieldGet(this, _list));
  }
};
function _update2() {
  _classPrivateFieldSet(this, _pattern, new RegExp(_classPrivateFieldGet(this, _list).join("|"), flags));
}
function _index2(rule) {
  return _classPrivateFieldGet(this, _list).indexOf(rule.toLowerCase());
}
var isbot = new Isbot();

// app/entry.server.tsx
var import_server4 = __toESM(require_server_browser()), import_jsx_dev_runtime = __toESM(require_jsx_dev_runtime());
async function handleRequest(request, responseStatusCode, responseHeaders, remixContext, loadContext) {
  let body = await (0, import_server4.renderToReadableStream)(
    /* @__PURE__ */ (0, import_jsx_dev_runtime.jsxDEV)(RemixServer, { context: remixContext, url: request.url }, void 0, !1, {
      fileName: "app/entry.server.tsx",
      lineNumber: 20,
      columnNumber: 5
    }, this),
    {
      signal: request.signal,
      onError(error) {
        console.error(error), responseStatusCode = 500;
      }
    }
  );
  return isbot(request.headers.get("user-agent")) && await body.allReady, responseHeaders.set("Content-Type", "text/html"), new Response(body, {
    headers: responseHeaders,
    status: responseStatusCode
  });
}

// app/root.tsx
var root_exports = {};
__export(root_exports, {
  default: () => App,
  links: () => links
});
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();

// node_modules/@remix-run/css-bundle/dist/esm/server.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();

// server-assets-manifest:@remix-run/dev/assets-manifest
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var assets_manifest_default = { entry: { module: "/build/entry.client-FQGTPJ6N.js", imports: ["/build/_shared/chunk-62DTWLCP.js"] }, routes: { root: { id: "root", parentId: void 0, path: "", index: void 0, caseSensitive: void 0, module: "/build/root-P2O5MTMI.js", imports: void 0, hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/Starforged": { id: "routes/Starforged", parentId: "root", path: "Starforged", index: void 0, caseSensitive: void 0, module: "/build/routes/Starforged-QMXFCF5O.js", imports: ["/build/_shared/chunk-HL7HV7FF.js", "/build/_shared/chunk-2UTVSEXM.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/Starforged.$module": { id: "routes/Starforged.$module", parentId: "routes/Starforged", path: ":module", index: void 0, caseSensitive: void 0, module: "/build/routes/Starforged.$module-X3KD7CMI.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/Starforged.$module.$category": { id: "routes/Starforged.$module.$category", parentId: "routes/Starforged.$module", path: ":category", index: void 0, caseSensitive: void 0, module: "/build/routes/Starforged.$module.$category-C5DRUOHA.js", imports: ["/build/_shared/chunk-BNXCZZ3P.js", "/build/_shared/chunk-2UTVSEXM.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/Starforged.$module.$category_.$move": { id: "routes/Starforged.$module.$category_.$move", parentId: "routes/Starforged.$module", path: ":category/:move", index: void 0, caseSensitive: void 0, module: "/build/routes/Starforged.$module.$category_.$move-H4WZZIRR.js", imports: ["/build/_shared/chunk-BNXCZZ3P.js", "/build/_shared/chunk-2UTVSEXM.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/Starforged.$module._index": { id: "routes/Starforged.$module._index", parentId: "routes/Starforged.$module", path: void 0, index: !0, caseSensitive: void 0, module: "/build/routes/Starforged.$module._index-F7IN4VWW.js", imports: ["/build/_shared/chunk-BNXCZZ3P.js", "/build/_shared/chunk-HL7HV7FF.js", "/build/_shared/chunk-2UTVSEXM.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/Starforged._index": { id: "routes/Starforged._index", parentId: "routes/Starforged", path: void 0, index: !0, caseSensitive: void 0, module: "/build/routes/Starforged._index-D37HFQTS.js", imports: ["/build/_shared/chunk-BNXCZZ3P.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/_index": { id: "routes/_index", parentId: "root", path: void 0, index: !0, caseSensitive: void 0, module: "/build/routes/_index-DXQ7CWWC.js", imports: ["/build/_shared/chunk-BNXCZZ3P.js", "/build/_shared/chunk-HL7HV7FF.js", "/build/_shared/chunk-2UTVSEXM.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 } }, cssBundleHref: void 0, version: "1c970bc3", hmr: void 0, url: "/build/manifest-1C970BC3.js" };

// node_modules/@remix-run/css-bundle/dist/esm/server.js
var cssBundleHref = assets_manifest_default.cssBundleHref;

// app/root.tsx
var import_jsx_dev_runtime2 = __toESM(require_jsx_dev_runtime()), links = () => [
  ...cssBundleHref ? [{ rel: "stylesheet", href: cssBundleHref }] : []
];
function App() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)("html", { lang: "en", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)("head", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)("meta", { charSet: "utf-8" }, void 0, !1, {
        fileName: "app/root.tsx",
        lineNumber: 20,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)("meta", { name: "viewport", content: "width=device-width,initial-scale=1" }, void 0, !1, {
        fileName: "app/root.tsx",
        lineNumber: 21,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)(Meta, {}, void 0, !1, {
        fileName: "app/root.tsx",
        lineNumber: 22,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)(Links, {}, void 0, !1, {
        fileName: "app/root.tsx",
        lineNumber: 23,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/root.tsx",
      lineNumber: 19,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)("body", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)(Outlet, {}, void 0, !1, {
        fileName: "app/root.tsx",
        lineNumber: 26,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)(ScrollRestoration2, {}, void 0, !1, {
        fileName: "app/root.tsx",
        lineNumber: 27,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)(Scripts, {}, void 0, !1, {
        fileName: "app/root.tsx",
        lineNumber: 28,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)(LiveReload, {}, void 0, !1, {
        fileName: "app/root.tsx",
        lineNumber: 29,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/root.tsx",
      lineNumber: 25,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/root.tsx",
    lineNumber: 18,
    columnNumber: 5
  }, this);
}

// app/routes/Starforged.$module.$category_.$move.tsx
var Starforged_module_category_move_exports = {};
__export(Starforged_module_category_move_exports, {
  default: () => Move,
  loader: () => loader
});
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var import_cloudflare2 = __toESM(require_dist());

// node_modules/marked/lib/marked.esm.js
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
function getDefaults() {
  return {
    async: !1,
    baseUrl: null,
    breaks: !1,
    extensions: null,
    gfm: !0,
    headerIds: !0,
    headerPrefix: "",
    highlight: null,
    hooks: null,
    langPrefix: "language-",
    mangle: !0,
    pedantic: !1,
    renderer: null,
    sanitize: !1,
    sanitizer: null,
    silent: !1,
    smartypants: !1,
    tokenizer: null,
    walkTokens: null,
    xhtml: !1
  };
}
var defaults = getDefaults();
function changeDefaults(newDefaults) {
  defaults = newDefaults;
}
var escapeTest = /[&<>"']/, escapeReplace = new RegExp(escapeTest.source, "g"), escapeTestNoEncode = /[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/, escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, "g"), escapeReplacements = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
}, getEscapeReplacement = (ch) => escapeReplacements[ch];
function escape2(html, encode) {
  if (encode) {
    if (escapeTest.test(html))
      return html.replace(escapeReplace, getEscapeReplacement);
  } else if (escapeTestNoEncode.test(html))
    return html.replace(escapeReplaceNoEncode, getEscapeReplacement);
  return html;
}
var unescapeTest = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;
function unescape2(html) {
  return html.replace(unescapeTest, (_, n) => (n = n.toLowerCase(), n === "colon" ? ":" : n.charAt(0) === "#" ? n.charAt(1) === "x" ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1)) : ""));
}
var caret = /(^|[^\[])\^/g;
function edit(regex, opt) {
  regex = typeof regex == "string" ? regex : regex.source, opt = opt || "";
  let obj = {
    replace: (name, val) => (val = val.source || val, val = val.replace(caret, "$1"), regex = regex.replace(name, val), obj),
    getRegex: () => new RegExp(regex, opt)
  };
  return obj;
}
var nonWordAndColonTest = /[^\w:]/g, originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;
function cleanUrl(sanitize, base, href) {
  if (sanitize) {
    let prot;
    try {
      prot = decodeURIComponent(unescape2(href)).replace(nonWordAndColonTest, "").toLowerCase();
    } catch {
      return null;
    }
    if (prot.indexOf("javascript:") === 0 || prot.indexOf("vbscript:") === 0 || prot.indexOf("data:") === 0)
      return null;
  }
  base && !originIndependentUrl.test(href) && (href = resolveUrl(base, href));
  try {
    href = encodeURI(href).replace(/%25/g, "%");
  } catch {
    return null;
  }
  return href;
}
var baseUrls = {}, justDomain = /^[^:]+:\/*[^/]*$/, protocol = /^([^:]+:)[\s\S]*$/, domain = /^([^:]+:\/*[^/]*)[\s\S]*$/;
function resolveUrl(base, href) {
  baseUrls[" " + base] || (justDomain.test(base) ? baseUrls[" " + base] = base + "/" : baseUrls[" " + base] = rtrim(base, "/", !0)), base = baseUrls[" " + base];
  let relativeBase = base.indexOf(":") === -1;
  return href.substring(0, 2) === "//" ? relativeBase ? href : base.replace(protocol, "$1") + href : href.charAt(0) === "/" ? relativeBase ? href : base.replace(domain, "$1") + href : base + href;
}
var noopTest = { exec: function() {
} };
function splitCells(tableRow, count) {
  let row = tableRow.replace(/\|/g, (match, offset, str) => {
    let escaped = !1, curr = offset;
    for (; --curr >= 0 && str[curr] === "\\"; )
      escaped = !escaped;
    return escaped ? "|" : " |";
  }), cells = row.split(/ \|/), i = 0;
  if (cells[0].trim() || cells.shift(), cells.length > 0 && !cells[cells.length - 1].trim() && cells.pop(), cells.length > count)
    cells.splice(count);
  else
    for (; cells.length < count; )
      cells.push("");
  for (; i < cells.length; i++)
    cells[i] = cells[i].trim().replace(/\\\|/g, "|");
  return cells;
}
function rtrim(str, c, invert) {
  let l = str.length;
  if (l === 0)
    return "";
  let suffLen = 0;
  for (; suffLen < l; ) {
    let currChar = str.charAt(l - suffLen - 1);
    if (currChar === c && !invert)
      suffLen++;
    else if (currChar !== c && invert)
      suffLen++;
    else
      break;
  }
  return str.slice(0, l - suffLen);
}
function findClosingBracket(str, b) {
  if (str.indexOf(b[1]) === -1)
    return -1;
  let l = str.length, level = 0, i = 0;
  for (; i < l; i++)
    if (str[i] === "\\")
      i++;
    else if (str[i] === b[0])
      level++;
    else if (str[i] === b[1] && (level--, level < 0))
      return i;
  return -1;
}
function checkDeprecations(opt, callback) {
  !opt || opt.silent || (callback && console.warn("marked(): callback is deprecated since version 5.0.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/using_pro#async"), (opt.sanitize || opt.sanitizer) && console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options"), (opt.highlight || opt.langPrefix !== "language-") && console.warn("marked(): highlight and langPrefix parameters are deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-highlight."), opt.mangle && console.warn("marked(): mangle parameter is enabled by default, but is deprecated since version 5.0.0, and will be removed in the future. To clear this warning, install https://www.npmjs.com/package/marked-mangle, or disable by setting `{mangle: false}`."), opt.baseUrl && console.warn("marked(): baseUrl parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-base-url."), opt.smartypants && console.warn("marked(): smartypants parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-smartypants."), opt.xhtml && console.warn("marked(): xhtml parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-xhtml."), (opt.headerIds || opt.headerPrefix) && console.warn("marked(): headerIds and headerPrefix parameters enabled by default, but are deprecated since version 5.0.0, and will be removed in the future. To clear this warning, install  https://www.npmjs.com/package/marked-gfm-heading-id, or disable by setting `{headerIds: false}`."));
}
function outputLink(cap, link, raw, lexer2) {
  let href = link.href, title = link.title ? escape2(link.title) : null, text = cap[1].replace(/\\([\[\]])/g, "$1");
  if (cap[0].charAt(0) !== "!") {
    lexer2.state.inLink = !0;
    let token = {
      type: "link",
      raw,
      href,
      title,
      text,
      tokens: lexer2.inlineTokens(text)
    };
    return lexer2.state.inLink = !1, token;
  }
  return {
    type: "image",
    raw,
    href,
    title,
    text: escape2(text)
  };
}
function indentCodeCompensation(raw, text) {
  let matchIndentToCode = raw.match(/^(\s+)(?:```)/);
  if (matchIndentToCode === null)
    return text;
  let indentToCode = matchIndentToCode[1];
  return text.split(`
`).map((node) => {
    let matchIndentInNode = node.match(/^\s+/);
    if (matchIndentInNode === null)
      return node;
    let [indentInNode] = matchIndentInNode;
    return indentInNode.length >= indentToCode.length ? node.slice(indentToCode.length) : node;
  }).join(`
`);
}
var Tokenizer = class {
  constructor(options2) {
    this.options = options2 || defaults;
  }
  space(src) {
    let cap = this.rules.block.newline.exec(src);
    if (cap && cap[0].length > 0)
      return {
        type: "space",
        raw: cap[0]
      };
  }
  code(src) {
    let cap = this.rules.block.code.exec(src);
    if (cap) {
      let text = cap[0].replace(/^ {1,4}/gm, "");
      return {
        type: "code",
        raw: cap[0],
        codeBlockStyle: "indented",
        text: this.options.pedantic ? text : rtrim(text, `
`)
      };
    }
  }
  fences(src) {
    let cap = this.rules.block.fences.exec(src);
    if (cap) {
      let raw = cap[0], text = indentCodeCompensation(raw, cap[3] || "");
      return {
        type: "code",
        raw,
        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, "$1") : cap[2],
        text
      };
    }
  }
  heading(src) {
    let cap = this.rules.block.heading.exec(src);
    if (cap) {
      let text = cap[2].trim();
      if (/#$/.test(text)) {
        let trimmed = rtrim(text, "#");
        (this.options.pedantic || !trimmed || / $/.test(trimmed)) && (text = trimmed.trim());
      }
      return {
        type: "heading",
        raw: cap[0],
        depth: cap[1].length,
        text,
        tokens: this.lexer.inline(text)
      };
    }
  }
  hr(src) {
    let cap = this.rules.block.hr.exec(src);
    if (cap)
      return {
        type: "hr",
        raw: cap[0]
      };
  }
  blockquote(src) {
    let cap = this.rules.block.blockquote.exec(src);
    if (cap) {
      let text = cap[0].replace(/^ *>[ \t]?/gm, ""), top = this.lexer.state.top;
      this.lexer.state.top = !0;
      let tokens = this.lexer.blockTokens(text);
      return this.lexer.state.top = top, {
        type: "blockquote",
        raw: cap[0],
        tokens,
        text
      };
    }
  }
  list(src) {
    let cap = this.rules.block.list.exec(src);
    if (cap) {
      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly, bull = cap[1].trim(), isordered = bull.length > 1, list2 = {
        type: "list",
        raw: "",
        ordered: isordered,
        start: isordered ? +bull.slice(0, -1) : "",
        loose: !1,
        items: []
      };
      bull = isordered ? `\\d{1,9}\\${bull.slice(-1)}` : `\\${bull}`, this.options.pedantic && (bull = isordered ? bull : "[*+-]");
      let itemRegex = new RegExp(`^( {0,3}${bull})((?:[	 ][^\\n]*)?(?:\\n|$))`);
      for (; src && (endEarly = !1, !(!(cap = itemRegex.exec(src)) || this.rules.block.hr.test(src))); ) {
        if (raw = cap[0], src = src.substring(raw.length), line = cap[2].split(`
`, 1)[0].replace(/^\t+/, (t) => " ".repeat(3 * t.length)), nextLine = src.split(`
`, 1)[0], this.options.pedantic ? (indent = 2, itemContents = line.trimLeft()) : (indent = cap[2].search(/[^ ]/), indent = indent > 4 ? 1 : indent, itemContents = line.slice(indent), indent += cap[1].length), blankLine = !1, !line && /^ *$/.test(nextLine) && (raw += nextLine + `
`, src = src.substring(nextLine.length + 1), endEarly = !0), !endEarly) {
          let nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ 	][^\\n]*)?(?:\\n|$))`), hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`), fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\`\`\`|~~~)`), headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);
          for (; src && (rawLine = src.split(`
`, 1)[0], nextLine = rawLine, this.options.pedantic && (nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, "  ")), !(fencesBeginRegex.test(nextLine) || headingBeginRegex.test(nextLine) || nextBulletRegex.test(nextLine) || hrRegex.test(src))); ) {
            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim())
              itemContents += `
` + nextLine.slice(indent);
            else {
              if (blankLine || line.search(/[^ ]/) >= 4 || fencesBeginRegex.test(line) || headingBeginRegex.test(line) || hrRegex.test(line))
                break;
              itemContents += `
` + nextLine;
            }
            !blankLine && !nextLine.trim() && (blankLine = !0), raw += rawLine + `
`, src = src.substring(rawLine.length + 1), line = nextLine.slice(indent);
          }
        }
        list2.loose || (endsWithBlankLine ? list2.loose = !0 : /\n *\n *$/.test(raw) && (endsWithBlankLine = !0)), this.options.gfm && (istask = /^\[[ xX]\] /.exec(itemContents), istask && (ischecked = istask[0] !== "[ ] ", itemContents = itemContents.replace(/^\[[ xX]\] +/, ""))), list2.items.push({
          type: "list_item",
          raw,
          task: !!istask,
          checked: ischecked,
          loose: !1,
          text: itemContents
        }), list2.raw += raw;
      }
      list2.items[list2.items.length - 1].raw = raw.trimRight(), list2.items[list2.items.length - 1].text = itemContents.trimRight(), list2.raw = list2.raw.trimRight();
      let l = list2.items.length;
      for (i = 0; i < l; i++)
        if (this.lexer.state.top = !1, list2.items[i].tokens = this.lexer.blockTokens(list2.items[i].text, []), !list2.loose) {
          let spacers = list2.items[i].tokens.filter((t) => t.type === "space"), hasMultipleLineBreaks = spacers.length > 0 && spacers.some((t) => /\n.*\n/.test(t.raw));
          list2.loose = hasMultipleLineBreaks;
        }
      if (list2.loose)
        for (i = 0; i < l; i++)
          list2.items[i].loose = !0;
      return list2;
    }
  }
  html(src) {
    let cap = this.rules.block.html.exec(src);
    if (cap) {
      let token = {
        type: "html",
        block: !0,
        raw: cap[0],
        pre: !this.options.sanitizer && (cap[1] === "pre" || cap[1] === "script" || cap[1] === "style"),
        text: cap[0]
      };
      if (this.options.sanitize) {
        let text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape2(cap[0]);
        token.type = "paragraph", token.text = text, token.tokens = this.lexer.inline(text);
      }
      return token;
    }
  }
  def(src) {
    let cap = this.rules.block.def.exec(src);
    if (cap) {
      let tag = cap[1].toLowerCase().replace(/\s+/g, " "), href = cap[2] ? cap[2].replace(/^<(.*)>$/, "$1").replace(this.rules.inline._escapes, "$1") : "", title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, "$1") : cap[3];
      return {
        type: "def",
        tag,
        raw: cap[0],
        href,
        title
      };
    }
  }
  table(src) {
    let cap = this.rules.block.table.exec(src);
    if (cap) {
      let item = {
        type: "table",
        header: splitCells(cap[1]).map((c) => ({ text: c })),
        align: cap[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\n[ \t]*$/, "").split(`
`) : []
      };
      if (item.header.length === item.align.length) {
        item.raw = cap[0];
        let l = item.align.length, i, j, k, row;
        for (i = 0; i < l; i++)
          /^ *-+: *$/.test(item.align[i]) ? item.align[i] = "right" : /^ *:-+: *$/.test(item.align[i]) ? item.align[i] = "center" : /^ *:-+ *$/.test(item.align[i]) ? item.align[i] = "left" : item.align[i] = null;
        for (l = item.rows.length, i = 0; i < l; i++)
          item.rows[i] = splitCells(item.rows[i], item.header.length).map((c) => ({ text: c }));
        for (l = item.header.length, j = 0; j < l; j++)
          item.header[j].tokens = this.lexer.inline(item.header[j].text);
        for (l = item.rows.length, j = 0; j < l; j++)
          for (row = item.rows[j], k = 0; k < row.length; k++)
            row[k].tokens = this.lexer.inline(row[k].text);
        return item;
      }
    }
  }
  lheading(src) {
    let cap = this.rules.block.lheading.exec(src);
    if (cap)
      return {
        type: "heading",
        raw: cap[0],
        depth: cap[2].charAt(0) === "=" ? 1 : 2,
        text: cap[1],
        tokens: this.lexer.inline(cap[1])
      };
  }
  paragraph(src) {
    let cap = this.rules.block.paragraph.exec(src);
    if (cap) {
      let text = cap[1].charAt(cap[1].length - 1) === `
` ? cap[1].slice(0, -1) : cap[1];
      return {
        type: "paragraph",
        raw: cap[0],
        text,
        tokens: this.lexer.inline(text)
      };
    }
  }
  text(src) {
    let cap = this.rules.block.text.exec(src);
    if (cap)
      return {
        type: "text",
        raw: cap[0],
        text: cap[0],
        tokens: this.lexer.inline(cap[0])
      };
  }
  escape(src) {
    let cap = this.rules.inline.escape.exec(src);
    if (cap)
      return {
        type: "escape",
        raw: cap[0],
        text: escape2(cap[1])
      };
  }
  tag(src) {
    let cap = this.rules.inline.tag.exec(src);
    if (cap)
      return !this.lexer.state.inLink && /^<a /i.test(cap[0]) ? this.lexer.state.inLink = !0 : this.lexer.state.inLink && /^<\/a>/i.test(cap[0]) && (this.lexer.state.inLink = !1), !this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(cap[0]) ? this.lexer.state.inRawBlock = !0 : this.lexer.state.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(cap[0]) && (this.lexer.state.inRawBlock = !1), {
        type: this.options.sanitize ? "text" : "html",
        raw: cap[0],
        inLink: this.lexer.state.inLink,
        inRawBlock: this.lexer.state.inRawBlock,
        block: !1,
        text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape2(cap[0]) : cap[0]
      };
  }
  link(src) {
    let cap = this.rules.inline.link.exec(src);
    if (cap) {
      let trimmedUrl = cap[2].trim();
      if (!this.options.pedantic && /^</.test(trimmedUrl)) {
        if (!/>$/.test(trimmedUrl))
          return;
        let rtrimSlash = rtrim(trimmedUrl.slice(0, -1), "\\");
        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0)
          return;
      } else {
        let lastParenIndex = findClosingBracket(cap[2], "()");
        if (lastParenIndex > -1) {
          let linkLen = (cap[0].indexOf("!") === 0 ? 5 : 4) + cap[1].length + lastParenIndex;
          cap[2] = cap[2].substring(0, lastParenIndex), cap[0] = cap[0].substring(0, linkLen).trim(), cap[3] = "";
        }
      }
      let href = cap[2], title = "";
      if (this.options.pedantic) {
        let link = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(href);
        link && (href = link[1], title = link[3]);
      } else
        title = cap[3] ? cap[3].slice(1, -1) : "";
      return href = href.trim(), /^</.test(href) && (this.options.pedantic && !/>$/.test(trimmedUrl) ? href = href.slice(1) : href = href.slice(1, -1)), outputLink(cap, {
        href: href && href.replace(this.rules.inline._escapes, "$1"),
        title: title && title.replace(this.rules.inline._escapes, "$1")
      }, cap[0], this.lexer);
    }
  }
  reflink(src, links7) {
    let cap;
    if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {
      let link = (cap[2] || cap[1]).replace(/\s+/g, " ");
      if (link = links7[link.toLowerCase()], !link) {
        let text = cap[0].charAt(0);
        return {
          type: "text",
          raw: text,
          text
        };
      }
      return outputLink(cap, link, cap[0], this.lexer);
    }
  }
  emStrong(src, maskedSrc, prevChar = "") {
    let match = this.rules.inline.emStrong.lDelim.exec(src);
    if (!match || match[3] && prevChar.match(/[\p{L}\p{N}]/u))
      return;
    let nextChar = match[1] || match[2] || "";
    if (!nextChar || nextChar && (prevChar === "" || this.rules.inline.punctuation.exec(prevChar))) {
      let lLength = match[0].length - 1, rDelim, rLength, delimTotal = lLength, midDelimTotal = 0, endReg = match[0][0] === "*" ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;
      for (endReg.lastIndex = 0, maskedSrc = maskedSrc.slice(-1 * src.length + lLength); (match = endReg.exec(maskedSrc)) != null; ) {
        if (rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6], !rDelim)
          continue;
        if (rLength = rDelim.length, match[3] || match[4]) {
          delimTotal += rLength;
          continue;
        } else if ((match[5] || match[6]) && lLength % 3 && !((lLength + rLength) % 3)) {
          midDelimTotal += rLength;
          continue;
        }
        if (delimTotal -= rLength, delimTotal > 0)
          continue;
        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);
        let raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);
        if (Math.min(lLength, rLength) % 2) {
          let text2 = raw.slice(1, -1);
          return {
            type: "em",
            raw,
            text: text2,
            tokens: this.lexer.inlineTokens(text2)
          };
        }
        let text = raw.slice(2, -2);
        return {
          type: "strong",
          raw,
          text,
          tokens: this.lexer.inlineTokens(text)
        };
      }
    }
  }
  codespan(src) {
    let cap = this.rules.inline.code.exec(src);
    if (cap) {
      let text = cap[2].replace(/\n/g, " "), hasNonSpaceChars = /[^ ]/.test(text), hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);
      return hasNonSpaceChars && hasSpaceCharsOnBothEnds && (text = text.substring(1, text.length - 1)), text = escape2(text, !0), {
        type: "codespan",
        raw: cap[0],
        text
      };
    }
  }
  br(src) {
    let cap = this.rules.inline.br.exec(src);
    if (cap)
      return {
        type: "br",
        raw: cap[0]
      };
  }
  del(src) {
    let cap = this.rules.inline.del.exec(src);
    if (cap)
      return {
        type: "del",
        raw: cap[0],
        text: cap[2],
        tokens: this.lexer.inlineTokens(cap[2])
      };
  }
  autolink(src, mangle2) {
    let cap = this.rules.inline.autolink.exec(src);
    if (cap) {
      let text, href;
      return cap[2] === "@" ? (text = escape2(this.options.mangle ? mangle2(cap[1]) : cap[1]), href = "mailto:" + text) : (text = escape2(cap[1]), href = text), {
        type: "link",
        raw: cap[0],
        text,
        href,
        tokens: [
          {
            type: "text",
            raw: text,
            text
          }
        ]
      };
    }
  }
  url(src, mangle2) {
    let cap;
    if (cap = this.rules.inline.url.exec(src)) {
      let text, href;
      if (cap[2] === "@")
        text = escape2(this.options.mangle ? mangle2(cap[0]) : cap[0]), href = "mailto:" + text;
      else {
        let prevCapZero;
        do
          prevCapZero = cap[0], cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];
        while (prevCapZero !== cap[0]);
        text = escape2(cap[0]), cap[1] === "www." ? href = "http://" + cap[0] : href = cap[0];
      }
      return {
        type: "link",
        raw: cap[0],
        text,
        href,
        tokens: [
          {
            type: "text",
            raw: text,
            text
          }
        ]
      };
    }
  }
  inlineText(src, smartypants2) {
    let cap = this.rules.inline.text.exec(src);
    if (cap) {
      let text;
      return this.lexer.state.inRawBlock ? text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape2(cap[0]) : cap[0] : text = escape2(this.options.smartypants ? smartypants2(cap[0]) : cap[0]), {
        type: "text",
        raw: cap[0],
        text
      };
    }
  }
}, block = {
  newline: /^(?: *(?:\n|$))+/,
  code: /^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,
  fences: /^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,
  hr: /^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,
  heading: /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,
  blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
  list: /^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/,
  html: "^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",
  def: /^ {0,3}\[(label)\]: *(?:\n *)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,
  table: noopTest,
  lheading: /^((?:(?!^bull ).|\n(?!\n|bull ))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
  // regex template, placeholders will be replaced according to different paragraph
  // interruption rules of commonmark and the original markdown spec:
  _paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,
  text: /^[^\n]+/
};
block._label = /(?!\s*\])(?:\\.|[^\[\]\\])+/;
block._title = /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/;
block.def = edit(block.def).replace("label", block._label).replace("title", block._title).getRegex();
block.bullet = /(?:[*+-]|\d{1,9}[.)])/;
block.listItemStart = edit(/^( *)(bull) */).replace("bull", block.bullet).getRegex();
block.list = edit(block.list).replace(/bull/g, block.bullet).replace("hr", "\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def", "\\n+(?=" + block.def.source + ")").getRegex();
block._tag = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul";
block._comment = /<!--(?!-?>)[\s\S]*?(?:-->|$)/;
block.html = edit(block.html, "i").replace("comment", block._comment).replace("tag", block._tag).replace("attribute", / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex();
block.lheading = edit(block.lheading).replace(/bull/g, block.bullet).getRegex();
block.paragraph = edit(block._paragraph).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("|table", "").replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", block._tag).getRegex();
block.blockquote = edit(block.blockquote).replace("paragraph", block.paragraph).getRegex();
block.normal = { ...block };
block.gfm = {
  ...block.normal,
  table: "^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"
  // Cells
};
block.gfm.table = edit(block.gfm.table).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("blockquote", " {0,3}>").replace("code", " {4}[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", block._tag).getRegex();
block.gfm.paragraph = edit(block._paragraph).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("table", block.gfm.table).replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", block._tag).getRegex();
block.pedantic = {
  ...block.normal,
  html: edit(
    `^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`
  ).replace("comment", block._comment).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),
  def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
  heading: /^(#{1,6})(.*)(?:\n+|$)/,
  fences: noopTest,
  // fences not supported
  lheading: /^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
  paragraph: edit(block.normal._paragraph).replace("hr", block.hr).replace("heading", ` *#{1,6} *[^
]`).replace("lheading", block.lheading).replace("blockquote", " {0,3}>").replace("|fences", "").replace("|list", "").replace("|html", "").getRegex()
};
var inline = {
  escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
  autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
  url: noopTest,
  tag: "^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",
  // CDATA section
  link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
  reflink: /^!?\[(label)\]\[(ref)\]/,
  nolink: /^!?\[(ref)\](?:\[\])?/,
  reflinkSearch: "reflink|nolink(?!\\()",
  emStrong: {
    lDelim: /^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,
    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.
    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a
    rDelimAst: /^(?:[^_*\\]|\\.)*?\_\_(?:[^_*\\]|\\.)*?\*(?:[^_*\\]|\\.)*?(?=\_\_)|(?:[^*\\]|\\.)+(?=[^*])|[punct_](\*+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|(?:[^punct*_\s\\]|\\.)(\*+)(?=[^punct*_\s])/,
    rDelimUnd: /^(?:[^_*\\]|\\.)*?\*\*(?:[^_*\\]|\\.)*?\_(?:[^_*\\]|\\.)*?(?=\*\*)|(?:[^_\\]|\\.)+(?=[^_])|[punct*](\_+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/
    // ^- Not allowed for _
  },
  code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
  br: /^( {2,}|\\)\n(?!\s*$)/,
  del: noopTest,
  text: /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,
  punctuation: /^([\spunctuation])/
};
inline._uc_punctuation = "\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65";
inline._punctuation = "!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~" + inline._uc_punctuation;
inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();
inline.blockSkip = /\[[^[\]]*?\]\([^\(\)]*?\)|`[^`]*?`|<[^<>]*?>/g;
inline.escapedEmSt = /(?:^|[^\\])(?:\\\\)*\\[*_]/g;
inline._comment = edit(block._comment).replace("(?:-->|$)", "-->").getRegex();
inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();
inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, "g").replace(/punct/g, inline._punctuation).getRegex();
inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, "g").replace(/punct/g, inline._punctuation).getRegex();
inline._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g;
inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;
inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;
inline.autolink = edit(inline.autolink).replace("scheme", inline._scheme).replace("email", inline._email).getRegex();
inline._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/;
inline.tag = edit(inline.tag).replace("comment", inline._comment).replace("attribute", inline._attribute).getRegex();
inline._label = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/;
inline._href = /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/;
inline._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/;
inline.link = edit(inline.link).replace("label", inline._label).replace("href", inline._href).replace("title", inline._title).getRegex();
inline.reflink = edit(inline.reflink).replace("label", inline._label).replace("ref", block._label).getRegex();
inline.nolink = edit(inline.nolink).replace("ref", block._label).getRegex();
inline.reflinkSearch = edit(inline.reflinkSearch, "g").replace("reflink", inline.reflink).replace("nolink", inline.nolink).getRegex();
inline.normal = { ...inline };
inline.pedantic = {
  ...inline.normal,
  strong: {
    start: /^__|\*\*/,
    middle: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
    endAst: /\*\*(?!\*)/g,
    endUnd: /__(?!_)/g
  },
  em: {
    start: /^_|\*/,
    middle: /^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,
    endAst: /\*(?!\*)/g,
    endUnd: /_(?!_)/g
  },
  link: edit(/^!?\[(label)\]\((.*?)\)/).replace("label", inline._label).getRegex(),
  reflink: edit(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label", inline._label).getRegex()
};
inline.gfm = {
  ...inline.normal,
  escape: edit(inline.escape).replace("])", "~|])").getRegex(),
  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
  url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
  _backpedal: /(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,
  del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
  text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/
};
inline.gfm.url = edit(inline.gfm.url, "i").replace("email", inline.gfm._extended_email).getRegex();
inline.breaks = {
  ...inline.gfm,
  br: edit(inline.br).replace("{2,}", "*").getRegex(),
  text: edit(inline.gfm.text).replace("\\b_", "\\b_| {2,}\\n").replace(/\{2,\}/g, "*").getRegex()
};
function smartypants(text) {
  return text.replace(/---/g, "\u2014").replace(/--/g, "\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g, "$1\u2018").replace(/'/g, "\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g, "$1\u201C").replace(/"/g, "\u201D").replace(/\.{3}/g, "\u2026");
}
function mangle(text) {
  let out = "", i, ch, l = text.length;
  for (i = 0; i < l; i++)
    ch = text.charCodeAt(i), Math.random() > 0.5 && (ch = "x" + ch.toString(16)), out += "&#" + ch + ";";
  return out;
}
var Lexer = class {
  constructor(options2) {
    this.tokens = [], this.tokens.links = /* @__PURE__ */ Object.create(null), this.options = options2 || defaults, this.options.tokenizer = this.options.tokenizer || new Tokenizer(), this.tokenizer = this.options.tokenizer, this.tokenizer.options = this.options, this.tokenizer.lexer = this, this.inlineQueue = [], this.state = {
      inLink: !1,
      inRawBlock: !1,
      top: !0
    };
    let rules = {
      block: block.normal,
      inline: inline.normal
    };
    this.options.pedantic ? (rules.block = block.pedantic, rules.inline = inline.pedantic) : this.options.gfm && (rules.block = block.gfm, this.options.breaks ? rules.inline = inline.breaks : rules.inline = inline.gfm), this.tokenizer.rules = rules;
  }
  /**
   * Expose Rules
   */
  static get rules() {
    return {
      block,
      inline
    };
  }
  /**
   * Static Lex Method
   */
  static lex(src, options2) {
    return new Lexer(options2).lex(src);
  }
  /**
   * Static Lex Inline Method
   */
  static lexInline(src, options2) {
    return new Lexer(options2).inlineTokens(src);
  }
  /**
   * Preprocessing
   */
  lex(src) {
    src = src.replace(/\r\n|\r/g, `
`), this.blockTokens(src, this.tokens);
    let next;
    for (; next = this.inlineQueue.shift(); )
      this.inlineTokens(next.src, next.tokens);
    return this.tokens;
  }
  /**
   * Lexing
   */
  blockTokens(src, tokens = []) {
    this.options.pedantic ? src = src.replace(/\t/g, "    ").replace(/^ +$/gm, "") : src = src.replace(/^( *)(\t+)/gm, (_, leading, tabs) => leading + "    ".repeat(tabs.length));
    let token, lastToken, cutSrc, lastParagraphClipped;
    for (; src; )
      if (!(this.options.extensions && this.options.extensions.block && this.options.extensions.block.some((extTokenizer) => (token = extTokenizer.call({ lexer: this }, src, tokens)) ? (src = src.substring(token.raw.length), tokens.push(token), !0) : !1))) {
        if (token = this.tokenizer.space(src)) {
          src = src.substring(token.raw.length), token.raw.length === 1 && tokens.length > 0 ? tokens[tokens.length - 1].raw += `
` : tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.code(src)) {
          src = src.substring(token.raw.length), lastToken = tokens[tokens.length - 1], lastToken && (lastToken.type === "paragraph" || lastToken.type === "text") ? (lastToken.raw += `
` + token.raw, lastToken.text += `
` + token.text, this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text) : tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.fences(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.heading(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.hr(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.blockquote(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.list(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.html(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.def(src)) {
          src = src.substring(token.raw.length), lastToken = tokens[tokens.length - 1], lastToken && (lastToken.type === "paragraph" || lastToken.type === "text") ? (lastToken.raw += `
` + token.raw, lastToken.text += `
` + token.raw, this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text) : this.tokens.links[token.tag] || (this.tokens.links[token.tag] = {
            href: token.href,
            title: token.title
          });
          continue;
        }
        if (token = this.tokenizer.table(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.lheading(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (cutSrc = src, this.options.extensions && this.options.extensions.startBlock) {
          let startIndex = 1 / 0, tempSrc = src.slice(1), tempStart;
          this.options.extensions.startBlock.forEach(function(getStartIndex) {
            tempStart = getStartIndex.call({ lexer: this }, tempSrc), typeof tempStart == "number" && tempStart >= 0 && (startIndex = Math.min(startIndex, tempStart));
          }), startIndex < 1 / 0 && startIndex >= 0 && (cutSrc = src.substring(0, startIndex + 1));
        }
        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {
          lastToken = tokens[tokens.length - 1], lastParagraphClipped && lastToken.type === "paragraph" ? (lastToken.raw += `
` + token.raw, lastToken.text += `
` + token.text, this.inlineQueue.pop(), this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text) : tokens.push(token), lastParagraphClipped = cutSrc.length !== src.length, src = src.substring(token.raw.length);
          continue;
        }
        if (token = this.tokenizer.text(src)) {
          src = src.substring(token.raw.length), lastToken = tokens[tokens.length - 1], lastToken && lastToken.type === "text" ? (lastToken.raw += `
` + token.raw, lastToken.text += `
` + token.text, this.inlineQueue.pop(), this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text) : tokens.push(token);
          continue;
        }
        if (src) {
          let errMsg = "Infinite loop on byte: " + src.charCodeAt(0);
          if (this.options.silent) {
            console.error(errMsg);
            break;
          } else
            throw new Error(errMsg);
        }
      }
    return this.state.top = !0, tokens;
  }
  inline(src, tokens = []) {
    return this.inlineQueue.push({ src, tokens }), tokens;
  }
  /**
   * Lexing/Compiling
   */
  inlineTokens(src, tokens = []) {
    let token, lastToken, cutSrc, maskedSrc = src, match, keepPrevChar, prevChar;
    if (this.tokens.links) {
      let links7 = Object.keys(this.tokens.links);
      if (links7.length > 0)
        for (; (match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null; )
          links7.includes(match[0].slice(match[0].lastIndexOf("[") + 1, -1)) && (maskedSrc = maskedSrc.slice(0, match.index) + "[" + "a".repeat(match[0].length - 2) + "]" + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex));
    }
    for (; (match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null; )
      maskedSrc = maskedSrc.slice(0, match.index) + "[" + "a".repeat(match[0].length - 2) + "]" + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
    for (; (match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null; )
      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + "++" + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex), this.tokenizer.rules.inline.escapedEmSt.lastIndex--;
    for (; src; )
      if (keepPrevChar || (prevChar = ""), keepPrevChar = !1, !(this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some((extTokenizer) => (token = extTokenizer.call({ lexer: this }, src, tokens)) ? (src = src.substring(token.raw.length), tokens.push(token), !0) : !1))) {
        if (token = this.tokenizer.escape(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.tag(src)) {
          src = src.substring(token.raw.length), lastToken = tokens[tokens.length - 1], lastToken && token.type === "text" && lastToken.type === "text" ? (lastToken.raw += token.raw, lastToken.text += token.text) : tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.link(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.reflink(src, this.tokens.links)) {
          src = src.substring(token.raw.length), lastToken = tokens[tokens.length - 1], lastToken && token.type === "text" && lastToken.type === "text" ? (lastToken.raw += token.raw, lastToken.text += token.text) : tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.codespan(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.br(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.del(src)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.autolink(src, mangle)) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {
          src = src.substring(token.raw.length), tokens.push(token);
          continue;
        }
        if (cutSrc = src, this.options.extensions && this.options.extensions.startInline) {
          let startIndex = 1 / 0, tempSrc = src.slice(1), tempStart;
          this.options.extensions.startInline.forEach(function(getStartIndex) {
            tempStart = getStartIndex.call({ lexer: this }, tempSrc), typeof tempStart == "number" && tempStart >= 0 && (startIndex = Math.min(startIndex, tempStart));
          }), startIndex < 1 / 0 && startIndex >= 0 && (cutSrc = src.substring(0, startIndex + 1));
        }
        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {
          src = src.substring(token.raw.length), token.raw.slice(-1) !== "_" && (prevChar = token.raw.slice(-1)), keepPrevChar = !0, lastToken = tokens[tokens.length - 1], lastToken && lastToken.type === "text" ? (lastToken.raw += token.raw, lastToken.text += token.text) : tokens.push(token);
          continue;
        }
        if (src) {
          let errMsg = "Infinite loop on byte: " + src.charCodeAt(0);
          if (this.options.silent) {
            console.error(errMsg);
            break;
          } else
            throw new Error(errMsg);
        }
      }
    return tokens;
  }
}, Renderer = class {
  constructor(options2) {
    this.options = options2 || defaults;
  }
  code(code, infostring, escaped) {
    let lang = (infostring || "").match(/\S*/)[0];
    if (this.options.highlight) {
      let out = this.options.highlight(code, lang);
      out != null && out !== code && (escaped = !0, code = out);
    }
    return code = code.replace(/\n$/, "") + `
`, lang ? '<pre><code class="' + this.options.langPrefix + escape2(lang) + '">' + (escaped ? code : escape2(code, !0)) + `</code></pre>
` : "<pre><code>" + (escaped ? code : escape2(code, !0)) + `</code></pre>
`;
  }
  /**
   * @param {string} quote
   */
  blockquote(quote) {
    return `<blockquote>
${quote}</blockquote>
`;
  }
  html(html, block2) {
    return html;
  }
  /**
   * @param {string} text
   * @param {string} level
   * @param {string} raw
   * @param {any} slugger
   */
  heading(text, level, raw, slugger) {
    if (this.options.headerIds) {
      let id = this.options.headerPrefix + slugger.slug(raw);
      return `<h${level} id="${id}">${text}</h${level}>
`;
    }
    return `<h${level}>${text}</h${level}>
`;
  }
  hr() {
    return this.options.xhtml ? `<hr/>
` : `<hr>
`;
  }
  list(body, ordered, start) {
    let type = ordered ? "ol" : "ul", startatt = ordered && start !== 1 ? ' start="' + start + '"' : "";
    return "<" + type + startatt + `>
` + body + "</" + type + `>
`;
  }
  /**
   * @param {string} text
   */
  listitem(text) {
    return `<li>${text}</li>
`;
  }
  checkbox(checked) {
    return "<input " + (checked ? 'checked="" ' : "") + 'disabled="" type="checkbox"' + (this.options.xhtml ? " /" : "") + "> ";
  }
  /**
   * @param {string} text
   */
  paragraph(text) {
    return `<p>${text}</p>
`;
  }
  /**
   * @param {string} header
   * @param {string} body
   */
  table(header, body) {
    return body && (body = `<tbody>${body}</tbody>`), `<table>
<thead>
` + header + `</thead>
` + body + `</table>
`;
  }
  /**
   * @param {string} content
   */
  tablerow(content) {
    return `<tr>
${content}</tr>
`;
  }
  tablecell(content, flags2) {
    let type = flags2.header ? "th" : "td";
    return (flags2.align ? `<${type} align="${flags2.align}">` : `<${type}>`) + content + `</${type}>
`;
  }
  /**
   * span level renderer
   * @param {string} text
   */
  strong(text) {
    return `<strong>${text}</strong>`;
  }
  /**
   * @param {string} text
   */
  em(text) {
    return `<em>${text}</em>`;
  }
  /**
   * @param {string} text
   */
  codespan(text) {
    return `<code>${text}</code>`;
  }
  br() {
    return this.options.xhtml ? "<br/>" : "<br>";
  }
  /**
   * @param {string} text
   */
  del(text) {
    return `<del>${text}</del>`;
  }
  /**
   * @param {string} href
   * @param {string} title
   * @param {string} text
   */
  link(href, title, text) {
    if (href = cleanUrl(this.options.sanitize, this.options.baseUrl, href), href === null)
      return text;
    let out = '<a href="' + href + '"';
    return title && (out += ' title="' + title + '"'), out += ">" + text + "</a>", out;
  }
  /**
   * @param {string} href
   * @param {string} title
   * @param {string} text
   */
  image(href, title, text) {
    if (href = cleanUrl(this.options.sanitize, this.options.baseUrl, href), href === null)
      return text;
    let out = `<img src="${href}" alt="${text}"`;
    return title && (out += ` title="${title}"`), out += this.options.xhtml ? "/>" : ">", out;
  }
  text(text) {
    return text;
  }
}, TextRenderer = class {
  // no need for block level renderers
  strong(text) {
    return text;
  }
  em(text) {
    return text;
  }
  codespan(text) {
    return text;
  }
  del(text) {
    return text;
  }
  html(text) {
    return text;
  }
  text(text) {
    return text;
  }
  link(href, title, text) {
    return "" + text;
  }
  image(href, title, text) {
    return "" + text;
  }
  br() {
    return "";
  }
}, Slugger = class {
  constructor() {
    this.seen = {};
  }
  /**
   * @param {string} value
   */
  serialize(value) {
    return value.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig, "").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, "").replace(/\s/g, "-");
  }
  /**
   * Finds the next safe (unique) slug to use
   * @param {string} originalSlug
   * @param {boolean} isDryRun
   */
  getNextSafeSlug(originalSlug, isDryRun) {
    let slug = originalSlug, occurenceAccumulator = 0;
    if (this.seen.hasOwnProperty(slug)) {
      occurenceAccumulator = this.seen[originalSlug];
      do
        occurenceAccumulator++, slug = originalSlug + "-" + occurenceAccumulator;
      while (this.seen.hasOwnProperty(slug));
    }
    return isDryRun || (this.seen[originalSlug] = occurenceAccumulator, this.seen[slug] = 0), slug;
  }
  /**
   * Convert string to unique id
   * @param {object} [options]
   * @param {boolean} [options.dryrun] Generates the next unique slug without
   * updating the internal accumulator.
   */
  slug(value, options2 = {}) {
    let slug = this.serialize(value);
    return this.getNextSafeSlug(slug, options2.dryrun);
  }
}, Parser = class {
  constructor(options2) {
    this.options = options2 || defaults, this.options.renderer = this.options.renderer || new Renderer(), this.renderer = this.options.renderer, this.renderer.options = this.options, this.textRenderer = new TextRenderer(), this.slugger = new Slugger();
  }
  /**
   * Static Parse Method
   */
  static parse(tokens, options2) {
    return new Parser(options2).parse(tokens);
  }
  /**
   * Static Parse Inline Method
   */
  static parseInline(tokens, options2) {
    return new Parser(options2).parseInline(tokens);
  }
  /**
   * Parse Loop
   */
  parse(tokens, top = !0) {
    let out = "", i, j, k, l2, l3, row, cell, header, body, token, ordered, start, loose, itemBody, item, checked, task, checkbox, ret, l = tokens.length;
    for (i = 0; i < l; i++) {
      if (token = tokens[i], this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type] && (ret = this.options.extensions.renderers[token.type].call({ parser: this }, token), ret !== !1 || !["space", "hr", "heading", "code", "table", "blockquote", "list", "html", "paragraph", "text"].includes(token.type))) {
        out += ret || "";
        continue;
      }
      switch (token.type) {
        case "space":
          continue;
        case "hr": {
          out += this.renderer.hr();
          continue;
        }
        case "heading": {
          out += this.renderer.heading(
            this.parseInline(token.tokens),
            token.depth,
            unescape2(this.parseInline(token.tokens, this.textRenderer)),
            this.slugger
          );
          continue;
        }
        case "code": {
          out += this.renderer.code(
            token.text,
            token.lang,
            token.escaped
          );
          continue;
        }
        case "table": {
          for (header = "", cell = "", l2 = token.header.length, j = 0; j < l2; j++)
            cell += this.renderer.tablecell(
              this.parseInline(token.header[j].tokens),
              { header: !0, align: token.align[j] }
            );
          for (header += this.renderer.tablerow(cell), body = "", l2 = token.rows.length, j = 0; j < l2; j++) {
            for (row = token.rows[j], cell = "", l3 = row.length, k = 0; k < l3; k++)
              cell += this.renderer.tablecell(
                this.parseInline(row[k].tokens),
                { header: !1, align: token.align[k] }
              );
            body += this.renderer.tablerow(cell);
          }
          out += this.renderer.table(header, body);
          continue;
        }
        case "blockquote": {
          body = this.parse(token.tokens), out += this.renderer.blockquote(body);
          continue;
        }
        case "list": {
          for (ordered = token.ordered, start = token.start, loose = token.loose, l2 = token.items.length, body = "", j = 0; j < l2; j++)
            item = token.items[j], checked = item.checked, task = item.task, itemBody = "", item.task && (checkbox = this.renderer.checkbox(checked), loose ? item.tokens.length > 0 && item.tokens[0].type === "paragraph" ? (item.tokens[0].text = checkbox + " " + item.tokens[0].text, item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === "text" && (item.tokens[0].tokens[0].text = checkbox + " " + item.tokens[0].tokens[0].text)) : item.tokens.unshift({
              type: "text",
              text: checkbox
            }) : itemBody += checkbox), itemBody += this.parse(item.tokens, loose), body += this.renderer.listitem(itemBody, task, checked);
          out += this.renderer.list(body, ordered, start);
          continue;
        }
        case "html": {
          out += this.renderer.html(token.text, token.block);
          continue;
        }
        case "paragraph": {
          out += this.renderer.paragraph(this.parseInline(token.tokens));
          continue;
        }
        case "text": {
          for (body = token.tokens ? this.parseInline(token.tokens) : token.text; i + 1 < l && tokens[i + 1].type === "text"; )
            token = tokens[++i], body += `
` + (token.tokens ? this.parseInline(token.tokens) : token.text);
          out += top ? this.renderer.paragraph(body) : body;
          continue;
        }
        default: {
          let errMsg = 'Token with "' + token.type + '" type was not found.';
          if (this.options.silent) {
            console.error(errMsg);
            return;
          } else
            throw new Error(errMsg);
        }
      }
    }
    return out;
  }
  /**
   * Parse Inline Tokens
   */
  parseInline(tokens, renderer) {
    renderer = renderer || this.renderer;
    let out = "", i, token, ret, l = tokens.length;
    for (i = 0; i < l; i++) {
      if (token = tokens[i], this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type] && (ret = this.options.extensions.renderers[token.type].call({ parser: this }, token), ret !== !1 || !["escape", "html", "link", "image", "strong", "em", "codespan", "br", "del", "text"].includes(token.type))) {
        out += ret || "";
        continue;
      }
      switch (token.type) {
        case "escape": {
          out += renderer.text(token.text);
          break;
        }
        case "html": {
          out += renderer.html(token.text);
          break;
        }
        case "link": {
          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));
          break;
        }
        case "image": {
          out += renderer.image(token.href, token.title, token.text);
          break;
        }
        case "strong": {
          out += renderer.strong(this.parseInline(token.tokens, renderer));
          break;
        }
        case "em": {
          out += renderer.em(this.parseInline(token.tokens, renderer));
          break;
        }
        case "codespan": {
          out += renderer.codespan(token.text);
          break;
        }
        case "br": {
          out += renderer.br();
          break;
        }
        case "del": {
          out += renderer.del(this.parseInline(token.tokens, renderer));
          break;
        }
        case "text": {
          out += renderer.text(token.text);
          break;
        }
        default: {
          let errMsg = 'Token with "' + token.type + '" type was not found.';
          if (this.options.silent) {
            console.error(errMsg);
            return;
          } else
            throw new Error(errMsg);
        }
      }
    }
    return out;
  }
}, Hooks = class {
  constructor(options2) {
    this.options = options2 || defaults;
  }
  /**
   * Process markdown before marked
   */
  preprocess(markdown) {
    return markdown;
  }
  /**
   * Process HTML after marked is finished
   */
  postprocess(html) {
    return html;
  }
};
__publicField(Hooks, "passThroughHooks", /* @__PURE__ */ new Set([
  "preprocess",
  "postprocess"
]));
function onError(silent, async, callback) {
  return (e) => {
    if (e.message += `
Please report this to https://github.com/markedjs/marked.`, silent) {
      let msg = "<p>An error occurred:</p><pre>" + escape2(e.message + "", !0) + "</pre>";
      if (async)
        return Promise.resolve(msg);
      if (callback) {
        callback(null, msg);
        return;
      }
      return msg;
    }
    if (async)
      return Promise.reject(e);
    if (callback) {
      callback(e);
      return;
    }
    throw e;
  };
}
function parseMarkdown(lexer2, parser2) {
  return (src, opt, callback) => {
    typeof opt == "function" && (callback = opt, opt = null);
    let origOpt = { ...opt };
    opt = { ...marked.defaults, ...origOpt };
    let throwError = onError(opt.silent, opt.async, callback);
    if (typeof src > "u" || src === null)
      return throwError(new Error("marked(): input parameter is undefined or null"));
    if (typeof src != "string")
      return throwError(new Error("marked(): input parameter is of type " + Object.prototype.toString.call(src) + ", string expected"));
    if (checkDeprecations(opt, callback), opt.hooks && (opt.hooks.options = opt), callback) {
      let highlight = opt.highlight, tokens;
      try {
        opt.hooks && (src = opt.hooks.preprocess(src)), tokens = lexer2(src, opt);
      } catch (e) {
        return throwError(e);
      }
      let done = function(err) {
        let out;
        if (!err)
          try {
            opt.walkTokens && marked.walkTokens(tokens, opt.walkTokens), out = parser2(tokens, opt), opt.hooks && (out = opt.hooks.postprocess(out));
          } catch (e) {
            err = e;
          }
        return opt.highlight = highlight, err ? throwError(err) : callback(null, out);
      };
      if (!highlight || highlight.length < 3 || (delete opt.highlight, !tokens.length))
        return done();
      let pending = 0;
      marked.walkTokens(tokens, function(token) {
        token.type === "code" && (pending++, setTimeout(() => {
          highlight(token.text, token.lang, function(err, code) {
            if (err)
              return done(err);
            code != null && code !== token.text && (token.text = code, token.escaped = !0), pending--, pending === 0 && done();
          });
        }, 0));
      }), pending === 0 && done();
      return;
    }
    if (opt.async)
      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src).then((src2) => lexer2(src2, opt)).then((tokens) => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens).then((tokens) => parser2(tokens, opt)).then((html) => opt.hooks ? opt.hooks.postprocess(html) : html).catch(throwError);
    try {
      opt.hooks && (src = opt.hooks.preprocess(src));
      let tokens = lexer2(src, opt);
      opt.walkTokens && marked.walkTokens(tokens, opt.walkTokens);
      let html = parser2(tokens, opt);
      return opt.hooks && (html = opt.hooks.postprocess(html)), html;
    } catch (e) {
      return throwError(e);
    }
  };
}
function marked(src, opt, callback) {
  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);
}
marked.options = marked.setOptions = function(opt) {
  return marked.defaults = { ...marked.defaults, ...opt }, changeDefaults(marked.defaults), marked;
};
marked.getDefaults = getDefaults;
marked.defaults = defaults;
marked.use = function(...args) {
  let extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };
  args.forEach((pack) => {
    let opts = { ...pack };
    if (opts.async = marked.defaults.async || opts.async || !1, pack.extensions && (pack.extensions.forEach((ext) => {
      if (!ext.name)
        throw new Error("extension name required");
      if (ext.renderer) {
        let prevRenderer = extensions.renderers[ext.name];
        prevRenderer ? extensions.renderers[ext.name] = function(...args2) {
          let ret = ext.renderer.apply(this, args2);
          return ret === !1 && (ret = prevRenderer.apply(this, args2)), ret;
        } : extensions.renderers[ext.name] = ext.renderer;
      }
      if (ext.tokenizer) {
        if (!ext.level || ext.level !== "block" && ext.level !== "inline")
          throw new Error("extension level must be 'block' or 'inline'");
        extensions[ext.level] ? extensions[ext.level].unshift(ext.tokenizer) : extensions[ext.level] = [ext.tokenizer], ext.start && (ext.level === "block" ? extensions.startBlock ? extensions.startBlock.push(ext.start) : extensions.startBlock = [ext.start] : ext.level === "inline" && (extensions.startInline ? extensions.startInline.push(ext.start) : extensions.startInline = [ext.start]));
      }
      ext.childTokens && (extensions.childTokens[ext.name] = ext.childTokens);
    }), opts.extensions = extensions), pack.renderer) {
      let renderer = marked.defaults.renderer || new Renderer();
      for (let prop in pack.renderer) {
        let prevRenderer = renderer[prop];
        renderer[prop] = (...args2) => {
          let ret = pack.renderer[prop].apply(renderer, args2);
          return ret === !1 && (ret = prevRenderer.apply(renderer, args2)), ret;
        };
      }
      opts.renderer = renderer;
    }
    if (pack.tokenizer) {
      let tokenizer = marked.defaults.tokenizer || new Tokenizer();
      for (let prop in pack.tokenizer) {
        let prevTokenizer = tokenizer[prop];
        tokenizer[prop] = (...args2) => {
          let ret = pack.tokenizer[prop].apply(tokenizer, args2);
          return ret === !1 && (ret = prevTokenizer.apply(tokenizer, args2)), ret;
        };
      }
      opts.tokenizer = tokenizer;
    }
    if (pack.hooks) {
      let hooks = marked.defaults.hooks || new Hooks();
      for (let prop in pack.hooks) {
        let prevHook = hooks[prop];
        Hooks.passThroughHooks.has(prop) ? hooks[prop] = (arg) => {
          if (marked.defaults.async)
            return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then((ret2) => prevHook.call(hooks, ret2));
          let ret = pack.hooks[prop].call(hooks, arg);
          return prevHook.call(hooks, ret);
        } : hooks[prop] = (...args2) => {
          let ret = pack.hooks[prop].apply(hooks, args2);
          return ret === !1 && (ret = prevHook.apply(hooks, args2)), ret;
        };
      }
      opts.hooks = hooks;
    }
    if (pack.walkTokens) {
      let walkTokens2 = marked.defaults.walkTokens;
      opts.walkTokens = function(token) {
        let values = [];
        return values.push(pack.walkTokens.call(this, token)), walkTokens2 && (values = values.concat(walkTokens2.call(this, token))), values;
      };
    }
    marked.setOptions(opts);
  });
};
marked.walkTokens = function(tokens, callback) {
  let values = [];
  for (let token of tokens)
    switch (values = values.concat(callback.call(marked, token)), token.type) {
      case "table": {
        for (let cell of token.header)
          values = values.concat(marked.walkTokens(cell.tokens, callback));
        for (let row of token.rows)
          for (let cell of row)
            values = values.concat(marked.walkTokens(cell.tokens, callback));
        break;
      }
      case "list": {
        values = values.concat(marked.walkTokens(token.items, callback));
        break;
      }
      default:
        marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type] ? marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {
          values = values.concat(marked.walkTokens(token[childTokens], callback));
        }) : token.tokens && (values = values.concat(marked.walkTokens(token.tokens, callback)));
    }
  return values;
};
marked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);
marked.Parser = Parser;
marked.parser = Parser.parse;
marked.Renderer = Renderer;
marked.TextRenderer = TextRenderer;
marked.Lexer = Lexer;
marked.lexer = Lexer.lex;
marked.Tokenizer = Tokenizer;
marked.Slugger = Slugger;
marked.Hooks = Hooks;
marked.parse = marked;
var options = marked.options, setOptions = marked.setOptions, use = marked.use, walkTokens = marked.walkTokens, parseInline = marked.parseInline;
var parser = Parser.parse, lexer = Lexer.lex;

// app/dataforged/dataforged.ts
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();

// app/dataforged/starforged.ts
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();

// node_modules/dataforged/dist/index-esm.mjs
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();

// node_modules/dataforged/dist/starforged/dataforged.json
var dataforged_exports = {};
__export(dataforged_exports, {
  "Asset Types": () => Asset_Types,
  Encounters: () => Encounters,
  "Move Categories": () => Move_Categories,
  "Oracle Categories": () => Oracle_Categories,
  "Setting Truths": () => Setting_Truths,
  default: () => dataforged_default
});
var Asset_Types = [
  {
    Source: {
      Title: "Ironsworn: Starforged Assets",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Assets/Command_Vehicle",
    Name: "Command Vehicle",
    Description: `The **command vehicle** is your interstellar STARSHIP. It is a default asset for your character, taken when you begin your campaign. If you are playing with others, this is a shared asset; each of you may use the STARSHIP's abilities while aboard the craft.

The command vehicle has an integrity meter and starts at 5 integrity. When your STARSHIP takes a hit, make the [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) move to see what happens.`,
    Assets: [
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Command_Vehicle/Starship",
        Name: "Starship",
        "Asset Type": "Starforged/Assets/Command_Vehicle",
        Display: { Title: "Starship", Color: "#9aa3ad" },
        Usage: { Shared: !0 },
        Attachments: {
          "Asset Types": ["Starforged/Assets/Module"],
          Max: null
        },
        Inputs: [
          {
            $id: "Starforged/Assets/Command_Vehicle/Starship/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/1",
            Text: "Your armed, multipurpose starship is suited for interstellar and atmospheric flight. It can comfortably transport several people, has space for cargo, and can carry and launch support vehicles. When you [Advance](Starforged/Moves/Legacy/Advance), you may spend experience to equip this vehicle with module assets.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Legacy/Advance"],
                Trigger: {
                  $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/1/Alter_Moves/1/Trigger",
                  By: { Player: !0, Ally: !0 }
                },
                Text: "When you [Advance](Starforged/Moves/Legacy/Advance), you may spend experience to equip this vehicle with module assets."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/2",
            Text: "When you [Finish an Expedition](Starforged/Moves/Exploration/Finish_an_Expedition) (dangerous or greater) in your starship and score a hit, this journey strengthened your ties to your ship and any fellow travelers. You and your allies may mark 1 tick on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Finish_an_Expedition"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "In your starship (dangerous or greater)",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "This journey strengthened your ties to your ship and any fellow travelers. You and your allies may mark 1 tick on your bonds legacy track.",
                    $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "This journey strengthened your ties to your ship and any fellow travelers. You and your allies may mark 1 tick on your bonds legacy track.",
                    $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/3",
            Text: "When you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage), you may roll +heart. If you do, [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-1) on a weak hit or miss.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Withstand_Damage"],
                Trigger: {
                  $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "To your Starship",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Heart"]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/3/Alter_Moves/1/Outcomes",
                  "Weak Hit": {
                    Text: "[Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-1).",
                    $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "[Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-1).",
                    $id: "Starforged/Assets/Command_Vehicle/Starship/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Command_Vehicle/Starship/Condition_Meter",
          Name: "Integrity",
          Min: 0,
          Max: 5,
          Value: 5,
          Conditions: ["Battered", "Cursed"],
          Aliases: ["Command Vehicle Integrity", "Vehicle Integrity"]
        }
      }
    ],
    Display: { Title: "Command Vehicles", Color: "#9aa3ad" },
    Usage: { Shared: !0 }
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Assets",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Assets/Module",
    Name: "Module",
    Description: `**Modules** are linked to your STARSHIP and offer additional options and advantages when aboard that vehicle.

These assets are earned and managed by a single character. They can be shared with allies, but only if it's practical for them to make use of it (not everyone may know how to use a RESEARCH LAB).

When you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) and score a miss, you can mark a module as broken to offset further danger for your STARSHIP. Flip the card over to indicate its broken state. A broken module cannot be used until you successfully [Repair](Starforged/Moves/Recover/Repair) it.`,
    Assets: [
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Engine_Upgrade",
        Name: "Engine Upgrade",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Engine Upgrade", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/1",
            Text: "Your vehicle\u2019s finely-tuned engines speed your travels. When you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) (+edge) and score a strong hit, take +1 momentum; on a strong hit with a 6 on your action die, take +2 momentum instead of +1.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "In your vehicle",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: ["Edge"]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum; if you get a 6 on your action die, take +2 momentum instead of +1.",
                    $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/2",
            Text: `When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray), choose one (before rolling).

  * Maneuver: Add +1 and take +1 momentum on a strong hit.
  * Boost: Take +2 momentum on a hit.`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "In your vehicle (and you choose to maneuver)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/2/Alter_Moves/2",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/2/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/2/Alter_Moves/2/Trigger/Options/1",
                      Text: "In your vehicle (and you choose to boost)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/2/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/2/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/2/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/3",
            Text: "When you make a desperate move to pursue a foe, escape a threat, or get in range, you may push your engines to their limit. If you do (decide after rolling), reroll any dice and count a weak hit as a strong hit. Then, [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) (-2).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a desperate move to pursue a foe, escape a threat, or get in range (in your vehicle)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "You may push your engines to their limit. If you do (decide after rolling), reroll any dice and count a weak hit as a strong hit. Then, [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) (-2).",
                    $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "You may push your engines to their limit. If you do (decide after rolling), reroll any dice and count a weak hit as a strong hit. Then, [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) (-2).",
                    $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "You may push your engines to their limit. If you do (decide after rolling), reroll any dice and count a weak hit as a strong hit. Then, [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) (-2).",
                    $id: "Starforged/Assets/Module/Engine_Upgrade/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Expanded_Hold",
        Name: "Expanded Hold",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Expanded Hold", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/1",
            Text: "Your vehicle carries up to 3 cargo. When you gain +supply, you may convert it to +cargo. When you make a move +supply, you may add +cargo. When you [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources), you may instead suffer -cargo for any portion of the cost.",
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/2",
            Text: "When you score a miss or weak hit as you make a move to barter or negotiate, and you have at least 1 cargo, you may sweeten the pot. If you do, reroll all dice and add +cargo. Then, suffer -1 cargo.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "You make a move to barter or negotiate, and you have at least 1 cargo",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/2/Alter_Moves/1/Outcomes",
                  "Weak Hit": {
                    Reroll: {
                      Text: "You may sweeten the pot. If you do, reroll all dice and add +cargo. Then, suffer -1 cargo.",
                      Dice: "All"
                    },
                    $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Text: "You may sweeten the pot. If you do, reroll all dice and add +cargo. Then, suffer -1 cargo.",
                      Dice: "All"
                    },
                    $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/3",
            Text: "When you make a move to outrun a threat and have at least 1 cargo, you may first lighten your load by dropping cargo. If you do, suffer -cargo by the amount dropped, add +that amount, and take +2 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a move to outrun a threat and have at least 1 cargo",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "You may first lighten your load by dropping cargo. If you do, suffer -cargo by the amount dropped, add +that amount, and take +2 momentum on a hit.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Module/Expanded_Hold/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Module/Expanded_Hold/Condition_Meter",
          Name: "Cargo",
          Min: 0,
          Max: 3,
          Value: 0,
          Conditions: []
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Grappler",
        Name: "Grappler",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Grappler", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Grappler/Abilities/1",
            Text: "Your grappler can disrupt systems and snare machines and vehicles with a magnetic tether. When you take a minute or so to ready the grappler, roll +integrity or +wits. On a strong hit, the grappler is charged and may be fired. On a weak hit, charging requires extra time or focus; [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1). On a miss, charging fails and you must [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) (-2). If you make a move to attack a foe or overcome an obstacle by firing the grappler, take an automatic strong hit.",
            Moves: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Assets",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622"
                },
                $id: "Starforged/Moves/Assets/Module/Grappler/Abilities/1/Ready_Grappler",
                Name: "Ready Grappler",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Module/Grappler",
                Display: { Title: "Ready Grappler" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Module/Grappler/Abilities/1/Ready_Grappler/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Module/Grappler/Abilities/1/Ready_Grappler/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Highest",
                      Using: ["Wits", "Attached_Asset_Condition_Meter"]
                    }
                  ],
                  Text: "When you take a minute or so to ready the grappler..."
                },
                Text: "Your grappler can disrupt systems and snare machines and vehicles with a magnetic tether. When you take a minute or so to ready the grappler, roll +integrity or +wits. On a strong hit, the grappler is charged and may be fired. On a weak hit, charging requires extra time or focus; [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1). On a miss, charging fails and you must [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) (-2). If you make a move to attack a foe or overcome an obstacle by firing the grappler, take an automatic strong hit.",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Module/Grappler/Abilities/1/Ready_Grappler/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Module/Grappler/Abilities/1/Ready_Grappler/Outcomes/Strong_Hit",
                    Text: `The grappler is charged and may be fired.

If you make a move to attack a foe or overcome an obstacle by firing the grappler, take an automatic strong hit.`
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Module/Grappler/Abilities/1/Ready_Grappler/Outcomes/Weak_Hit",
                    Text: `The grappler is charged and may be fired, but charging requires extra time or focus; [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).

If you make a move to attack a foe or overcome an obstacle by firing the grappler, take an automatic strong hit.`
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Module/Grappler/Abilities/1/Ready_Grappler/Outcomes/Miss",
                    Text: "Charging fails and you must [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) (-2)."
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Grappler/Abilities/2",
            Text: "If you score a strong hit when readying the grappler, you may [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1) to overcharge the module. When you fire an overcharged grappler, take +2 momentum; if in a fight, also mark progress.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Grappler/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Assets/Module/Grappler/Abilities/1/Ready_Grappler"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Grappler/Abilities/2/Alter_Moves/1/Trigger",
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Grappler/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "You may [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1) to overcharge the module. When you fire an overcharged grappler, take +2 momentum; if in a fight, also mark progress.",
                    $id: "Starforged/Assets/Module/Grappler/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Grappler/Abilities/3",
            Text: "When you [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action) by firing the grappler, you may reroll one challenge die.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Grappler/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Take_Decisive_Action"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Grappler/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Grappler/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By firing the grappler",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Grappler/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "You may reroll one challenge die.",
                    $id: "Starforged/Assets/Module/Grappler/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "You may reroll one challenge die.",
                    $id: "Starforged/Assets/Module/Grappler/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "You may reroll one challenge die.",
                    $id: "Starforged/Assets/Module/Grappler/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Heavy_Cannons",
        Name: "Heavy Cannons",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Heavy Cannons", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/1",
            Text: `When you aim your cannons and use them to [Strike](Starforged/Moves/Combat/Strike), choose one.

  * Strafing run: Add +1 and take +1 momentum on a hit.
  * Focus fire: Mark progress on a hit, but [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Strike"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you aim your cannons and use them to [Strike](Starforged/Moves/Combat/Strike)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: `Choose one.

  * Strafing run: Add +1 and take +1 momentum on a hit.
  * Focus fire: Mark progress on a hit, but [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).`
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/2",
            Text: "Once per fight, when you [Clash](Starforged/Moves/Combat/Clash) by committing to an all-or-nothing exchange of fire, add +1, count a weak hit as a strong hit, and mark progress on a hit. On a miss, you must suffer a dire outcome.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Clash"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "Once per fight, when you [Clash](Starforged/Moves/Combat/Clash) by committing to an all-or-nothing exchange of fire",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1, count a weak hit as a strong hit, and mark progress on a hit. On a miss, you must suffer a dire outcome.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Count a weak hit as a strong hit.",
                    "Count as": "Strong Hit",
                    $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "You must suffer a dire outcome.",
                    $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/3",
            Text: "When you [Compel](Starforged/Moves/Adventure/Compel), [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray), or [Gain Ground](Starforged/Moves/Combat/Gain_Ground) by bringing your cannons to bear and sending a promise of violence to your foe over communication channels, add +1 and take +1 momentum on a hit. On a strong hit with a match, take another +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Compel",
                  "Starforged/Moves/Combat/Enter_the_Fray",
                  "Starforged/Moves/Combat/Gain_Ground"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By bringing your cannons to bear and sending a promise of violence to your foe over communication channels",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1 and take +1 momentum on a hit. On a strong hit with a match, take another +1 momentum.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "Take +2 momentum.",
                      $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Module/Heavy_Cannons/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Internal_Refit",
        Name: "Internal Refit",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Internal Refit", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Internal_Refit/Abilities/1",
            Text: "You have customized the cabins, common spaces, and environment of the ship to your needs. When you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) (dangerous or greater), reroll any dice for the first leg of your journey. On a hit, you and your allies may envision how you make yourself at home; if you do, take +2 momentum or +1 spirit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Internal_Refit/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Internal_Refit/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Internal_Refit/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "On the first leg of your journey (dangerous or greater)",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Internal_Refit/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "You and your allies may envision how you make yourself at home; if you do, take +2 momentum or +1 spirit.",
                    $id: "Starforged/Assets/Module/Internal_Refit/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "You and your allies may envision how you make yourself at home; if you do, take +2 momentum or +1 spirit.",
                    $id: "Starforged/Assets/Module/Internal_Refit/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Internal_Refit/Abilities/2",
            Text: "Your vessel is stocked with reserves. When you [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) and your supply is reduced to 0, first roll +integrity instead of marking unprepared. On a strong hit, take +1 supply. Otherwise, mark unprepared.",
            Moves: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Assets",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622"
                },
                $id: "Starforged/Moves/Assets/Module/Internal_Refit/Abilities/2/Draw_Reserves",
                Name: "Draw Reserves",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Module/Internal_Refit",
                Display: { Title: "Draw Reserves" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Module/Internal_Refit/Abilities/2/Draw_Reserves/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Module/Internal_Refit/Abilities/2/Draw_Reserves/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Attached_Asset_Condition_Meter"]
                    }
                  ],
                  Text: "When you [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) and your supply is reduced to 0..."
                },
                Text: "Your vessel is stocked with reserves. When you [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) and your supply is reduced to 0, first roll +integrity instead of marking unprepared. On a strong hit, take +1 supply. Otherwise, mark unprepared.",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Module/Internal_Refit/Abilities/2/Draw_Reserves/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Module/Internal_Refit/Abilities/2/Draw_Reserves/Outcomes/Strong_Hit",
                    Text: "You don't need to mark unprepared. Take +1 supply."
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Module/Internal_Refit/Abilities/2/Draw_Reserves/Outcomes/Weak_Hit",
                    Text: "Mark unprepared as normal."
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Module/Internal_Refit/Abilities/2/Draw_Reserves/Outcomes/Miss",
                    Text: "Mark unprepared as normal."
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Internal_Refit/Abilities/3",
            Text: "When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) to oppose an invader within your vessel, reroll any dice. On a strong hit, take +momentum equal to integrity. On a strong hit with a match, also mark progress.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Internal_Refit/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Internal_Refit/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Internal_Refit/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "To oppose an invader within your vessel",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Internal_Refit/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +momentum equal to your vessel's integrity.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    "With a Match": {
                      Text: "Mark progress, and take +momentum equal to your vessel's integrity.",
                      $id: "Starforged/Assets/Module/Internal_Refit/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Module/Internal_Refit/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Internal_Refit/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Internal_Refit/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Medbay",
        Name: "Medbay",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Medbay", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Medbay/Abilities/1",
            Text: "When you use your medbay to [Heal](Starforged/Moves/Recover/Heal) yourself or another patient, you may reroll your action die if its value is less than your vehicle's integrity.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Medbay/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Heal"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Medbay/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Medbay/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you use your medbay to [Heal](Starforged/Moves/Recover/Heal) yourself or another patient",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Medbay/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than your vehicle's integrity."
                    },
                    $id: "Starforged/Assets/Module/Medbay/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than your vehicle's integrity."
                    },
                    $id: "Starforged/Assets/Module/Medbay/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than your vehicle's integrity."
                    },
                    $id: "Starforged/Assets/Module/Medbay/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Medbay/Abilities/2",
            Text: "When you or an ally mark the permanently harmed impact and are brought to the medbay without delay (less than an hour or so), you have a shot at making things right. If you [Heal](Starforged/Moves/Recover/Heal) and score a strong hit, clear the impact (in addition to the other benefits of the move). Then, envision the scar that now serves as a reminder of the incident.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Medbay/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Heal"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Medbay/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Medbay/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you or an ally mark the permanently harmed impact and are brought to the medbay without delay (less than an hour or so)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Medbay/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Clear the impact (in addition to the other benefits of the move). Then, envision the scar that now serves as a reminder of the incident.",
                    $id: "Starforged/Assets/Module/Medbay/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Medbay/Abilities/3",
            Text: "When you [Face Danger](Starforged/Moves/Adventure/Face_Danger) by performing a risky medical procedure, or if you [Gather Information](Starforged/Moves/Adventure/Gather_Information) through an autopsy or medical examination, reroll any dice and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By performing a risky medical procedure",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Reroll any dice and take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Reroll any dice and take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/2",
                Moves: ["Starforged/Moves/Adventure/Gather_Information"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/2/Trigger/Options/1",
                      Text: "Through an autopsy or medical examination",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Reroll any dice and take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Reroll any dice and take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/2/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Medbay/Abilities/3/Alter_Moves/2/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Missile_Array",
        Name: "Missile Array",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Missile Array", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Missile_Array/Abilities/1",
            Text: "Your missile array is armed with 5 ammo. When you [Strike](Starforged/Moves/Combat/Strike) or [Clash](Starforged/Moves/Combat/Clash) with a missile attack, suffer -1 ammo and mark progress on a hit. If you [Resupply](Starforged/Moves/Recover/Resupply) in a place where your missiles can be replenished, you may exchange any earned +supply for +ammo.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Missile_Array/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Combat/Strike",
                  "Starforged/Moves/Combat/Clash"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Missile_Array/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Missile_Array/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "With a missile attack",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Suffer -1 ammo.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Missile_Array/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Module/Missile_Array/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Module/Missile_Array/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Module/Missile_Array/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Recover/Resupply"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Missile_Array/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Missile_Array/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "In a place where your missiles can be replenished",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Missile_Array/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "You may exchange any earned +supply for +ammo.",
                    $id: "Starforged/Assets/Module/Missile_Array/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "You may exchange any earned +supply for +ammo.",
                    $id: "Starforged/Assets/Module/Missile_Array/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Missile_Array/Abilities/2",
            Text: "When you have at least 1 ammo and [Gain Ground](Starforged/Moves/Combat/Gain_Ground) by locking a missile on target, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Missile_Array/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Gain_Ground"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Missile_Array/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Missile_Array/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By locking a missile on target",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Missile_Array/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Missile_Array/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Missile_Array/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Missile_Array/Abilities/3",
            Text: "When you have at least 3 ammo and [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action) by unleashing all of your missiles, roll an action die before making the progress roll. If your action die is equal to or less than ammo, you may reroll any challenge dice. Then, set ammo to 0.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Missile_Array/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Take_Decisive_Action"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Missile_Array/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Missile_Array/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you have at least 3 ammo and [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action) by unleashing all of your missiles",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Roll an action die before making the progress roll. If your action die is equal to or less than ammo, you may reroll any challenge dice. Then, set ammo to 0."
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Module/Missile_Array/Condition_Meter",
          Name: "Ammo",
          Min: 0,
          Max: 5,
          Value: 5,
          Conditions: []
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Overseer",
        Name: "Overseer",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Overseer", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Inputs: [
          {
            $id: "Starforged/Assets/Module/Overseer/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Overseer/Abilities/1",
            Text: "Your AI module keeps watch over the vehicle's systems and sensor data. When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) or [Gain Ground](Starforged/Moves/Combat/Gain_Ground) by talking through a situation with the overseer, you may roll +integrity. If you do, take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Overseer/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage",
                  "Starforged/Moves/Combat/Gain_Ground"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Overseer/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Overseer/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "By talking through a situation with the overseer AI",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Attached_Asset_Condition_Meter"]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Overseer/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Overseer/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Overseer/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Overseer/Abilities/2",
            Text: "When you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) and roll on the miss table, the overseer will do what it can to help. Roll twice on the table and choose either result.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Overseer/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Withstand_Damage"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Overseer/Abilities/2/Alter_Moves/1/Trigger",
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Overseer/Abilities/2/Alter_Moves/1/Outcomes",
                  Miss: {
                    Text: "If you roll on the miss table, the overseer will do what it can to help. Roll twice on the table and choose either result.",
                    $id: "Starforged/Assets/Module/Overseer/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Overseer/Abilities/3",
            Text: "The overseer can pilot the vehicle independently. When you [Face Danger](Starforged/Moves/Adventure/Face_Danger) by handing over control to the AI in an emergency, or to summon the vehicle remotely within a hazardous situation, you may roll +integrity. If you do, take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Overseer/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Overseer/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Overseer/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By handing over control to the AI in an emergency, or to summon the vehicle remotely within a hazardous situation",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Attached_Asset_Condition_Meter"]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Overseer/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Overseer/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Overseer/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Reinforced_Hull",
        Name: "Reinforced Hull",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Reinforced Hull", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/1",
            Text: "Your vehicle is clad in iron. When you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage), add +1. On a strong hit, take +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Withstand_Damage"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "To your vehicle with a Reinforced Hull",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/2",
            Text: "Your reinforced hull is given a fierce and distinctive color or design. When you arrive at a place where your reputation is a factor, take +1 momentum. When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) against a foe who knows your reputation, take +momentum equal to your vehicle\u2019s integrity on a strong hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "Against a foe who knows your reputation",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +momentum equal to your vehicle\u2019s integrity.",
                    $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/3",
            Text: "When you [React Under Fire](Starforged/Moves/Combat/React_Under_Fire) by letting your reinforced hull take the hit, add +1 and take +1 momentum on a hit. On a strong hit with a match, take another +1 momentum as you surge through the chaos and put yourself in perfect position. On a miss, [Pay the Price](Starforged/Moves/Fate/Pay_the_Price) by marking this module as broken.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/React_Under_Fire"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By letting your reinforced hull take the hit",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "Take +2 momentum as you surge through the chaos and put yourself in perfect position.",
                      $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "[Pay the Price](Starforged/Moves/Fate/Pay_the_Price) by marking this component as broken.",
                    $id: "Starforged/Assets/Module/Reinforced_Hull/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Research_Lab",
        Name: "Research Lab",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Research Lab", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Research_Lab/Abilities/1",
            Text: "When you use your lab to [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) or [Gather Information](Starforged/Moves/Adventure/Gather_Information) through careful analysis or experimentation, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Research_Lab/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage",
                  "Starforged/Moves/Adventure/Gather_Information"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Research_Lab/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Research_Lab/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "Through careful analysis or experimentation (in your research lab)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Research_Lab/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Research_Lab/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Research_Lab/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Research_Lab/Abilities/2",
            Text: "When you [Face Danger](Starforged/Moves/Adventure/Face_Danger) to isolate or secure a hazardous specimen, reroll any dice.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Research_Lab/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Research_Lab/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Research_Lab/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "To isolate or secure a hazardous specimen",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Research_Lab/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Research_Lab/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Research_Lab/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Research_Lab/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Research_Lab/Abilities/3",
            Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to undertake a long-term research project (extreme or greater), reroll any dice. When you obtain crucial samples, equipment, or data, mark progress on the quest and take +2 momentum. When you devote extended time to the project in your lab, [Face Danger](Starforged/Moves/Adventure/Face_Danger) and add +1. On a hit, mark progress. On a strong hit with a match, mark progress twice. When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) and score a hit, also mark one box on your discoveries legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "To undertake a long-term research project (extreme or greater)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "When you obtain crucial samples, equipment, or data, mark progress on the quest and take +2 momentum.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/2",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/2/Trigger/Options/1",
                      Text: "When you devote extended time to the long-term research project (extreme or greater) in your lab",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress.",
                    "With a Match": {
                      Text: "Mark progress twice.",
                      $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/3",
                Moves: ["Starforged/Moves/Quest/Fulfill_Your_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/3/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/3/Trigger/Options/1",
                      Text: "To undertake a long-term research project (extreme or greater)",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/3/Outcomes",
                  "Strong Hit": {
                    Text: "Mark one extra box on your discoveries legacy track.",
                    $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/3/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark one extra box on your discoveries legacy track.",
                    $id: "Starforged/Assets/Module/Research_Lab/Abilities/3/Alter_Moves/3/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Sensor_Array",
        Name: "Sensor Array",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Sensor Array", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Sensor_Array/Abilities/1",
            Text: "Your advanced sensors scan the paths ahead to help spot dangers. When you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) (+wits), you may reroll one challenge die.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Sensor_Array/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Sensor_Array/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Sensor_Array/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "In your vehicle",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: ["Wits"]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Sensor_Array/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2",
            Text: `When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) or [Gather Information](Starforged/Moves/Adventure/Gather_Information) by scanning your vehicle's surroundings or analyzing a nearby object, choose one and take +1 momentum on a hit.

  * Manual scan: Add +1
  * Automated scan: Instead of rolling the action die, make it the value of your vehicle's integrity`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By scanning your vehicle's surroundings or analyzing a nearby object (and choosing a manual scan)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2/Alter_Moves/2",
                Moves: ["Starforged/Moves/Adventure/Gather_Information"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2/Alter_Moves/2/Trigger/Options/1",
                      Text: "By scanning your vehicle's surroundings or analyzing a nearby object (and choosing an automated scan)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Instead of rolling the action die, make it the value of your vehicle's integrity.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/2/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3",
            Text: "When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) against an ambush, or [Face Danger](Starforged/Moves/Adventure/Face_Danger) to detect a hidden threat, you may roll +integrity. If you do, reroll any dice and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "Against an ambush",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Attached_Asset_Condition_Meter"]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/2",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/2/Trigger/Options/1",
                      Text: "To detect a hidden threat",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Attached_Asset_Condition_Meter"]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/2/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Sensor_Array/Abilities/3/Alter_Moves/2/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Shields",
        Name: "Shields",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Shields", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Shields/Abilities/1",
            Text: "When you raise your shields, roll +your vehicle's integrity or +wits. On a strong hit, set your shields to 4. On a weak hit, make them 3. On a miss, make them 2 but [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1). Then, if you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage), ignore damage up to the value of your shields and suffer -1 shields. Raised shields last for a few minutes. If reduced to 0, they cannot be raised again for an hour or so.",
            Moves: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Assets",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622"
                },
                $id: "Starforged/Moves/Assets/Module/Shields/Abilities/1/Raise_Shields",
                Name: "Raise Shields",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Module/Shields",
                Display: { Title: "Raise Shields" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Module/Shields/Abilities/1/Raise_Shields/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Module/Shields/Abilities/1/Raise_Shields/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Wits", "Attached_Asset_Condition_Meter"]
                    }
                  ],
                  Text: "When you raise your shields..."
                },
                Text: "When you raise your shields, roll +your vehicle's integrity or +wits. On a strong hit, set your shields to 4. On a weak hit, make them 3. On a miss, make them 2 but [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1). Then, if you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage), ignore damage up to the value of your shields and suffer -1 shields. Raised shields last for a few minutes. If reduced to 0, they cannot be raised again for an hour or so.",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Module/Shields/Abilities/1/Raise_Shields/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Module/Shields/Abilities/1/Raise_Shields/Outcomes/Strong_Hit",
                    Text: `Set your vehicle's shields to 4.

Then, if you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage), ignore damage up to the value of your shields and suffer -1 shields. Raised shields last for a few minutes. If reduced to 0, they cannot be raised again for an hour or so.`
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Module/Shields/Abilities/1/Raise_Shields/Outcomes/Weak_Hit",
                    Text: `Set your vehicle's shields to 3.

Then, if you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage), ignore damage up to the value of your shields and suffer -1 shields. Raised shields last for a few minutes. If reduced to 0, they cannot be raised again for an hour or so.`
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Module/Shields/Abilities/1/Raise_Shields/Outcomes/Miss",
                    Text: `Set your vehicle's shields to 2, but [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).

Then, if you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage), ignore damage up to the value of your shields and suffer -1 shields. Raised shields last for a few minutes. If reduced to 0, they cannot be raised again for an hour or so.`
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Shields/Abilities/2",
            Text: "You may [React Under Fire](Starforged/Moves/Combat/React_Under_Fire) by letting your shields take the blow. If you do, roll +shields and take +2 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Shields/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/React_Under_Fire"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Shields/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Shields/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By letting your shields take the blow",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Module/Shields/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Shields/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Module/Shields/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Module/Shields/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Shields/Abilities/3",
            Text: "When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) and score a strong hit, you may raise your shields to 3 without rolling. If you do, take +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Shields/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Shields/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Shields/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "In your vehicle",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Shields/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "You may raise your shields to 3 without rolling. If you do, take +1 momentum.",
                    $id: "Starforged/Assets/Module/Shields/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Module/Shields/Condition_Meter",
          Name: "Shields",
          Min: 0,
          Max: 4,
          Value: 0,
          Conditions: []
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Stealth_Tech",
        Name: "Stealth Tech",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Stealth Tech", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/1",
            Text: "Your vehicle is rigged for silent running. When you make a move against a specific foe or threat to avoid detection, add +1. If you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) by ambushing an unaware foe, add +1 and mark progress on a strong hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a move against a specific foe or threat to avoid detection (in your vehicle)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1."
              },
              {
                $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "By ambushing an unaware foe (in your vehicle)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/2",
            Text: "When you travel stealthily as you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) (+shadow), you may reroll your action die.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you travel stealthily (in your vehicle)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: ["Shadow"]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: { Dice: "Action die" },
                    $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: { Dice: "Action die" },
                    $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Action die" },
                    $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3",
            Text: `When you are poised to [Strike](Starforged/Moves/Combat/Strike) from hiding, you may roll +shadow. If you do, choose one (before rolling).

  * Strike true: Reroll any dice.
  * Strike hard: Mark progress on a hit.

On a strong hit with a match, you also remain totally undetected; take +2 momentum and add +1 on your next [Strike](Starforged/Moves/Combat/Strike).`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Strike"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "You are poised to [Strike](Starforged/Moves/Combat/Strike) from hiding (and choose to strike true)",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Shadow"]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    "With a Match": {
                      Text: "You also remain totally undetected; take +2 momentum and add +1 on your next [Strike](Starforged/Moves/Combat/Strike).",
                      $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/2",
                Moves: ["Starforged/Moves/Combat/Strike"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/2/Trigger/Options/1",
                      Text: "You are poised to [Strike](Starforged/Moves/Combat/Strike) from hiding (and choose to strike hard)",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Shadow"]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress.",
                    "With a Match": {
                      Text: "Mark progress. You also remain totally undetected; take +2 momentum and add +1 on your next [Strike](Starforged/Moves/Combat/Strike).",
                      $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Module/Stealth_Tech/Abilities/3/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Vehicle_Bay",
        Name: "Vehicle Bay",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Vehicle Bay", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/1",
            Text: "You may purchase or upgrade a support vehicle for 1 less experience. When you [Repair](Starforged/Moves/Recover/Repair) a battered support vehicle, spend 1 repair point (instead of 2).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Repair"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you [Repair](Starforged/Moves/Recover/Repair) a battered support vehicle",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Spend 1 repair point (instead of 2) to remove the support vehicle's battered impact.",
                    $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Spend 1 repair point (instead of 2) to remove the support vehicle's battered impact.",
                    $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/2",
            Text: "When a support vehicle is destroyed, and you are able to retrieve its wreckage, you may [Ask the Oracle](Starforged/Moves/Fate/Ask_the_Oracle) using the yes/no table if something can be salvaged from the mess. Make it 50/50. On a yes, spend 1 experience to restore the support vehicle asset with all previously marked abilities. Until you [Repair](Starforged/Moves/Recover/Repair) and bring it back to full working order, the vehicle is battered with 0 integrity.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Withstand_Damage"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/2/Alter_Moves/1/Trigger",
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/2/Alter_Moves/1/Outcomes",
                  Miss: {
                    Text: "When a support vehicle is destroyed, and you are able to retrieve its wreckage, you may [Ask the Oracle](Starforged/Moves/Fate/Ask_the_Oracle) using the yes/no table if something can be salvaged from the mess. Make it 50/50. On a yes, spend 1 experience to restore the support vehicle asset with all previously marked abilities. Until you [Repair](Starforged/Moves/Recover/Repair) and bring it back to full working order, the vehicle is battered with 0 integrity.",
                    $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/3",
            Text: "When you make a move to launch from or land on your command vehicle in a perilous situation or environment, reroll any dice and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a move to launch from or land on your command vehicle in a perilous situation or environment",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Vehicle_Bay/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Module/Workshop",
        Name: "Workshop",
        States: [
          {
            Name: "Broken",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !0,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Module",
        Display: { Title: "Workshop", Color: "#7f5a90" },
        Usage: { Shared: !0 },
        Abilities: [
          {
            $id: "Starforged/Assets/Module/Workshop/Abilities/1",
            Text: "When you [Repair](Starforged/Moves/Recover/Repair) in the field, add +1.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Workshop/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Repair"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Workshop/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Workshop/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "In the field (with your workshop)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Module/Workshop/Abilities/2",
            Text: "When you make a move in your workshop to craft, modify, deactivate, or disassemble a device or machine, you may reroll your action die if its value is less than your vehicle's integrity.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Workshop/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Module/Workshop/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Workshop/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a move in your workshop to craft, modify, deactivate, or disassemble a device or machine",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Workshop/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than your vehicle's integrity."
                    },
                    $id: "Starforged/Assets/Module/Workshop/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than your vehicle's integrity."
                    },
                    $id: "Starforged/Assets/Module/Workshop/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than your vehicle's integrity."
                    },
                    $id: "Starforged/Assets/Module/Workshop/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Module/Workshop/Abilities/3",
            Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to undertake a long-term engineering project (extreme or greater), reroll any dice. When you obtain a crucial part or resource, mark progress on the quest and take +2 momentum. When you devote extended time to the project in your workshop, [Face Danger](Starforged/Moves/Adventure/Face_Danger) and add +1. On a hit, mark progress. On a strong hit with a match, mark progress twice. When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) and score a hit, mark one extra box on your quests legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "To undertake a long-term engineering project (extreme or greater)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "When you obtain a crucial part or resource, mark progress on the quest and take +2 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "When you obtain a crucial part or resource, mark progress on the quest and take +2 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "When you obtain a crucial part or resource, mark progress on the quest and take +2 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/2",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/2/Trigger/Options/1",
                      Text: "When you devote extended time to your long-term engineering project (extreme or greater) in your workshop",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress.",
                    "With a Match": {
                      Text: "Mark progress twice.",
                      $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/3",
                Moves: ["Starforged/Moves/Quest/Fulfill_Your_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/3/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/3/Trigger/Options/1",
                      Text: "To undertake a long-term engineering project (extreme or greater)",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/3/Outcomes",
                  "Strong Hit": {
                    Text: "Mark one extra box on your quests legacy track.",
                    $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/3/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark one extra box on your quests legacy track.",
                    $id: "Starforged/Assets/Module/Workshop/Abilities/3/Alter_Moves/3/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      }
    ],
    Display: { Title: "Modules", Color: "#7f5a90" },
    Usage: { Shared: !0 }
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Assets",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Assets/Support_Vehicle",
    Name: "Support Vehicle",
    Description: `**Support vehicles** complement your command vehicle for planetside or short-range operations. If you are playing with others, one of you might serve as the pilot or owner of a support vehicle, but anyone on board can use its abilities as appropriate to the situation.

As with the command vehicle, your support vehicles have integrity meters. The maximum integrity varies based on the type of vehicle. When a support vehicle faces a damaging situation or environment, you must [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) to see how it fares.`,
    Assets: [
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Support_Vehicle/Exosuit",
        Name: "Exosuit",
        "Asset Type": "Starforged/Assets/Support_Vehicle",
        Display: { Title: "Exosuit", Color: "#495790" },
        Usage: { Shared: !0 },
        Inputs: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Exosuit/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/1",
            Text: "Your lumbering rig houses one pilot, is sealed against hostile environments, and is armed with fixed or held weapons. When you make a forceful, damaging, or resistant move, you may (after rolling) replace the value of your action die with the rig's integrity; if you do, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a forceful, damaging, or resistant move in your Exosuit",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "You may (after rolling) replace the value of your action die with the rig's integrity; if you do, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).",
                    $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "You may (after rolling) replace the value of your action die with the rig's integrity; if you do, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).",
                    $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "You may (after rolling) replace the value of your action die with the rig's integrity; if you do, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).",
                    $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/2",
            Text: "Your exosuit is equipped with thrusters. You can maneuver in zero-g, make thrust-assisted leaps, and drop to a surface from altitude. When you burn fuel to overcome a critical obstacle (decide after rolling), you may reroll any dice. If you do, [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "You use your Exosuit's thrusters to maneuver in zero-g, make thrust-assisted leaps, or drop to a surface from altitude",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "When you burn fuel to overcome a critical obstacle (decide after rolling), you may reroll any dice. If you do, [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1).",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "When you burn fuel to overcome a critical obstacle (decide after rolling), you may reroll any dice. If you do, [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1).",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "When you burn fuel to overcome a critical obstacle (decide after rolling), you may reroll any dice. If you do, [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1).",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/3",
            Text: "When you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage), you may reroll one challenge die.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Withstand_Damage"],
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "To your Exosuit",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Support_Vehicle/Exosuit/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Support_Vehicle/Exosuit/Condition_Meter",
          Name: "Integrity",
          Min: 0,
          Max: 6,
          Value: 6,
          Conditions: ["Battered"],
          Aliases: ["Support Vehicle Integrity", "Vehicle Integrity"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Support_Vehicle/Hoverbike",
        Name: "Hoverbike",
        "Asset Type": "Starforged/Assets/Support_Vehicle",
        Display: { Title: "Hoverbike", Color: "#495790" },
        Usage: { Shared: !0 },
        Inputs: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/1",
            Text: "Your unarmed hoverbike provides speedy planetside ground transport, and is equipped to carry up to two people and their gear. When you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) (+edge), take +1 momentum on a hit. On a strong hit with a match, you also surge ahead or find a new path; mark progress.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "On your hoverbike",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: ["Edge"]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "You surge ahead or find a new path. Take +1 momentum and mark progress.",
                      $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/2",
            Text: "When you fire the bike's afterburner and make a move to perform a risky maneuver, you may add +integrity and take +2 momentum on a strong hit. If you do, count a weak hit as a miss.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you fire your hoverbike's afterburner and make a move to perform a risky maneuver",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "You may add +integrity.",
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    "Count as": "Miss",
                    $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Abilities/3",
            Text: "When you make a move while maneuvering your bike and burn momentum to improve your result, roll your action die. On a 5 or 6, do not reset momentum.",
            "Alter Momentum": {
              Burn: [
                {
                  Trigger: {
                    Text: "When you make a move while maneuvering your bike"
                  },
                  Effect: {
                    Text: "Roll your action die. On a 5 or 6, do not reset momentum."
                  }
                }
              ]
            },
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Support_Vehicle/Hoverbike/Condition_Meter",
          Name: "Integrity",
          Min: 0,
          Max: 3,
          Value: 3,
          Conditions: ["Battered"],
          Aliases: ["Support Vehicle Integrity", "Vehicle Integrity"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Support_Vehicle/Rover",
        Name: "Rover",
        "Asset Type": "Starforged/Assets/Support_Vehicle",
        Display: { Title: "Rover", Color: "#495790" },
        Usage: { Shared: !0 },
        Inputs: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Rover/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/1",
            Text: "Your unarmed rover provides protected planetside transport. When you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) or [Set a Course](Starforged/Moves/Exploration/Set_a_Course), add +1. When you [Finish an Expedition](Starforged/Moves/Exploration/Finish_an_Expedition) in your rover, you may reroll one challenge die.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition",
                  "Starforged/Moves/Exploration/Set_a_Course"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "In your rover",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1."
              },
              {
                $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/1/Alter_Moves/2",
                Moves: [
                  "Starforged/Moves/Exploration/Finish_an_Expedition"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "In your rover",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/1/Alter_Moves/2/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/2",
            Text: "You may equip your rover with one module asset at no extra cost. When you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage), the module can be broken or destroyed as with a command vehicle. If you reconfigure your rover, spend 1 experience, discard the module, and equip another with the same number of marked abilities.",
            "Alter Properties": {
              Attachments: {
                "Asset Types": ["Starforged/Assets/Module"],
                Max: 1
              }
            },
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/3",
            Text: "When you [Face Danger](Starforged/Moves/Adventure/Face_Danger) or [React Under Fire](Starforged/Moves/Combat/React_Under_Fire) by taking a hit or crashing through an obstacle, you may roll +integrity. If you do, take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger",
                  "Starforged/Moves/Combat/React_Under_Fire"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By taking a hit or crashing through an obstacle",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Support_Vehicle/Rover/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Rover/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Support_Vehicle/Rover/Condition_Meter",
          Name: "Integrity",
          Min: 0,
          Max: 5,
          Value: 5,
          Conditions: ["Battered"],
          Aliases: ["Support Vehicle Integrity", "Vehicle Integrity"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Support_Vehicle/Service_Pod",
        Name: "Service Pod",
        "Asset Type": "Starforged/Assets/Support_Vehicle",
        Display: { Title: "Service Pod", Color: "#495790" },
        Usage: { Shared: !0 },
        Inputs: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/1",
            Text: "Your unarmed utility vehicle houses one pilot for short-range, low gravity operations. When you make a move using the pod\u2019s manipulator arms to perform a delicate or forceful task, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a move using the pod\u2019s manipulator arms to perform a delicate or forceful task",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/2",
            Text: `When you [Face Danger](Starforged/Moves/Adventure/Face_Danger), [Gain Ground](Starforged/Moves/Combat/Gain_Ground), or [React Under Fire](Starforged/Moves/Combat/React_Under_Fire) by maneuvering your pod through a hazardous or obstructed area, choose an approach and roll +integrity.

  * Careful: Add +2 and [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1)
  * Reckless: Take +1 momentum on a hit`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger",
                  "Starforged/Moves/Combat/Gain_Ground",
                  "Starforged/Moves/Combat/React_Under_Fire"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By maneuvering your pod through a hazardous or obstructed area",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Support_Vehicle/Service_Pod/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: `Choose an approach and roll +integrity.

  * Careful: Add +2 and [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1)
  * Reckless: Take +1 momentum on a hit`
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/3",
            Text: "When you make a move while controlling the pod and push its capabilities to the limit, you may take an automatic strong hit. If you do, [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) (-2).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a move while controlling the pod and push its capabilities to the limit",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "You may take an automatic strong hit. If you do, [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) (-2)."
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Support_Vehicle/Service_Pod/Condition_Meter",
          Name: "Integrity",
          Min: 0,
          Max: 4,
          Value: 4,
          Conditions: ["Battered"],
          Aliases: ["Support Vehicle Integrity", "Vehicle Integrity"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Support_Vehicle/Shuttle",
        Name: "Shuttle",
        "Asset Type": "Starforged/Assets/Support_Vehicle",
        Display: { Title: "Shuttle", Color: "#495790" },
        Usage: { Shared: !0 },
        Inputs: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Shuttle/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Shuttle/Abilities/1",
            Text: "Your unarmed shuttle provides short-range transport for several people and equipment through space or atmosphere. When you travel to a location (not your command vehicle), you and your allies may take +1 momentum when you arrive",
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Shuttle/Abilities/2",
            Text: "When you [Face Danger](Starforged/Moves/Adventure/Face_Danger) or [React Under Fire](Starforged/Moves/Combat/React_Under_Fire) to navigate through hazardous skies, avoid obstacles, or evade an attack, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Shuttle/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger",
                  "Starforged/Moves/Combat/React_Under_Fire"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Shuttle/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Shuttle/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "To navigate through hazardous skies, avoid obstacles, or evade an attack",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Shuttle/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Shuttle/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Shuttle/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Shuttle/Abilities/3",
            Text: "Your shuttle is sealed against high pressure environments, can travel underwater, and is more resistant to damage; when you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage), add +1.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Shuttle/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Withstand_Damage"],
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Shuttle/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Shuttle/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "To your shuttle",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1."
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Support_Vehicle/Shuttle/Condition_Meter",
          Name: "Integrity",
          Min: 0,
          Max: 4,
          Value: 4,
          Conditions: ["Battered"],
          Aliases: ["Support Vehicle Integrity", "Vehicle Integrity"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Support_Vehicle/Skiff",
        Name: "Skiff",
        "Asset Type": "Starforged/Assets/Support_Vehicle",
        Display: { Title: "Skiff", Color: "#495790" },
        Usage: { Shared: !0 },
        Inputs: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Skiff/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/1",
            Text: "Your unarmed flatbed hover-vehicle carries several people, gear, and cargo over land or water. When you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) or [Set a Course](Starforged/Moves/Exploration/Set_a_Course), you may rely on the skiff's simple durability and roll +integrity. If you do, take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition",
                  "Starforged/Moves/Exploration/Set_a_Course"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "Rely on the skiff's simple durability",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Support_Vehicle/Skiff/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/2",
            Text: "Your skiff is armed with a turreted cannon. When you [Strike](Starforged/Moves/Combat/Strike) or [Clash](Starforged/Moves/Combat/Clash) by firing the cannon, roll +integrity and take +1 momentum on a hit. On a strong hit with a match, your shots cause extra destruction or create havoc; mark progress.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Combat/Strike",
                  "Starforged/Moves/Combat/Clash"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By firing the skiff's cannon",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Support_Vehicle/Skiff/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "Your shots cause extra destruction or create havoc; mark progress, and take +1 momentum.",
                      $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Skiff/Abilities/3",
            Text: "Your skiff is fully stocked. When you [Check Your Gear](Starforged/Moves/Adventure/Check_Your_Gear), add +1 and take +1 momentum on a hit.",
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Support_Vehicle/Skiff/Condition_Meter",
          Name: "Integrity",
          Min: 0,
          Max: 4,
          Value: 4,
          Conditions: ["Battered"],
          Aliases: ["Support Vehicle Integrity", "Vehicle Integrity"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter",
        Name: "Snub Fighter",
        "Asset Type": "Starforged/Assets/Support_Vehicle",
        Display: { Title: "Snub Fighter", Color: "#495790" },
        Usage: { Shared: !0 },
        Inputs: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/1",
            Text: "Your armed snub fighter carries a single pilot for space or atmospheric flight and combat. When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray), you may roll +integrity; if you do, take +2 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "In your snub fighter",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Support_Vehicle/Snub_Fighter/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/2",
            Text: "When you [Strike](Starforged/Moves/Combat/Strike) or [Clash](Starforged/Moves/Combat/Clash), add +1. On a strong hit with a match, mark progress.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Combat/Strike",
                  "Starforged/Moves/Combat/Clash"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "In your snub fighter",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "Mark progress.",
                      $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/3",
            Text: "When you personally defeat a notable foe in your snub fighter, envision the victory mark you make on the fuselage. Tally your victories in this box. For every five, mark 2 ticks on your quests legacy track.",
            Inputs: [
              {
                $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Abilities/3/Inputs/Victory_Marks",
                Name: "Victory Marks",
                "Input Type": "Number",
                Min: 0,
                Max: null,
                Step: 1,
                Value: 0,
                Adjustable: !0
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Support_Vehicle/Snub_Fighter/Condition_Meter",
          Name: "Integrity",
          Min: 0,
          Max: 4,
          Value: 4,
          Conditions: ["Battered"],
          Aliases: ["Support Vehicle Integrity", "Vehicle Integrity"]
        }
      }
    ],
    Display: { Title: "Support Vehicles", Color: "#495790" },
    Usage: { Shared: !0 }
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Assets",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Assets/Path",
    Name: "Path",
    Description: `**Paths** are your background, interests, training, skills, powers, and key equipment. They provide mechanical and narrative advantages, but also reflect who you are and how you interact with the world. When you create your character in the next chapter, you'll select at least two paths to get started.

Some paths represent your skill with a signature weapon style or piece of equipment. If you see a requirement at the top of the asset card, such as \u201CIf you wield a bladed weapon\u2026,\u201D the asset is only usable when taking action using that item.`,
    Assets: [
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Ace",
        Name: "Ace",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Ace", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Ace/Abilities/1",
            Text: "When you [Face Danger](Starforged/Moves/Adventure/Face_Danger) or [React Under Fire](Starforged/Moves/Combat/React_Under_Fire) by guiding your vehicle through a hazard or out of harm\u2019s way, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Ace/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger",
                  "Starforged/Moves/Combat/React_Under_Fire"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Ace/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Ace/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "By guiding your vehicle through a hazard or out of harm\u2019s way",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Ace/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Ace/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Ace/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Ace/Abilities/2",
            Text: "When you [Gain Ground](Starforged/Moves/Combat/Gain_Ground) by maneuvering your vehicle against a foe, add +1. If you score a strong hit with a 4, 5, or 6 on the action die, you may put yourself in firing position. If you do, set aside the action die or note its value. If you or an ally [Strike](Starforged/Moves/Combat/Strike) using the vehicle\u2019s weapons, preset your action die with that value. This persists until you fail to score a strong hit on that move, or until you make another move which changes your vehicle\u2019s position.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Ace/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Gain_Ground"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Ace/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Ace/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By maneuvering your vehicle against a foe",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Ace/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "If you score a strong hit with a 4, 5, or 6 on the action die, you may put yourself in firing position. If you do, set aside the action die or note its value. If you or an ally [Strike](Starforged/Moves/Combat/Strike) using the vehicle\u2019s weapons, preset your action die with that value. This persists until you fail to score a strong hit on that move, or until you make another move which changes your vehicle\u2019s position.",
                    $id: "Starforged/Assets/Path/Ace/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Ace/Abilities/3",
            Text: "When you must [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) while piloting a vehicle, you may roll +integrity. If you do, take +1 momentum on a strong hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Ace/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Endure_Stress"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Ace/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Ace/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "While piloting a vehicle",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Vehicle Integrity"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Ace/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Ace/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Archer",
        Name: "Archer",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Archer", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Requirement: "If you wield a power bow...",
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Archer/Abilities/1",
            Text: "You carry 6 ammo. When you [Strike](Starforged/Moves/Combat/Strike) or [Clash](Starforged/Moves/Combat/Clash), you may add +1 or +2 and suffer that amount as -ammo. To replenish your ammo by crafting projectiles, roll +wits. On a strong hit, take up to +6 ammo. On a weak hit, take up to +4 ammo and [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1). On a miss, [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1).",
            Moves: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Assets",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622"
                },
                $id: "Starforged/Moves/Assets/Path/Archer/Abilities/1/Craft_Projectiles",
                Name: "Craft Projectiles",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Path/Archer",
                Display: { Title: "Craft Projectiles" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Path/Archer/Abilities/1/Craft_Projectiles/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Path/Archer/Abilities/1/Craft_Projectiles/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Wits"]
                    }
                  ],
                  Text: "When you replenish your ammo by crafting projectiles..."
                },
                Text: "You carry 6 ammo. When you [Strike](Starforged/Moves/Combat/Strike) or [Clash](Starforged/Moves/Combat/Clash), you may add +1 or +2 and suffer that amount as -ammo. To replenish your ammo by crafting projectiles, roll +wits. On a strong hit, take up to +6 ammo. On a weak hit, take up to +4 ammo and [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1). On a miss, [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1).",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Path/Archer/Abilities/1/Craft_Projectiles/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Path/Archer/Abilities/1/Craft_Projectiles/Outcomes/Strong_Hit",
                    Text: "Take up to +6 ammo."
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Path/Archer/Abilities/1/Craft_Projectiles/Outcomes/Weak_Hit",
                    Text: "Take up to +4 ammo and [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1)."
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Path/Archer/Abilities/1/Craft_Projectiles/Outcomes/Miss",
                    Text: "[Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1)."
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Archer/Abilities/2",
            Text: "You may [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) by unleashing a volley of bow shots. If you do, roll +ammo and suffer -1 ammo. On a hit, mark progress.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Archer/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Archer/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Archer/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By unleashing a volley of bow shots",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Path/Archer/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Archer/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Suffer -1 ammo, and mark progress.",
                    $id: "Starforged/Assets/Path/Archer/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Suffer -1 ammo, and mark progress.",
                    $id: "Starforged/Assets/Path/Archer/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "Suffer -1 ammo.",
                    $id: "Starforged/Assets/Path/Archer/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Archer/Abilities/3",
            Text: "When you load a specialized projectile such as a zip line, explosive, or electromagnetic disrupter, suffer -1 ammo. If you then take your shot by making a move, you may preset your action die to 5. On a hit, envision the effects and take +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Archer/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Archer/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Archer/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "Using a specialized projectile such as a zip line, explosive, or electromagnetic disrupter",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "When you load a specialized projectile such as a zip line, explosive, or electromagnetic disrupter, suffer -1 ammo. If you then take your shot by making a move, you may preset your action die to 5.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Archer/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Envision the effects of the projectile and take +1 momentum.",
                    $id: "Starforged/Assets/Path/Archer/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Envision the effects of the projectile and take +1 momentum.",
                    $id: "Starforged/Assets/Path/Archer/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Path/Archer/Condition_Meter",
          Name: "Ammo",
          Min: 0,
          Max: 6,
          Value: 6,
          Conditions: []
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Armored",
        Name: "Armored",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Armored", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Requirement: "If you wear your finely crafted set of personal armor...",
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Armored/Abilities/1",
            Text: "When you [Face Danger](Starforged/Moves/Adventure/Face_Danger), [React Under Fire](Starforged/Moves/Combat/React_Under_Fire), or [Clash](Starforged/Moves/Combat/Clash) against physical attacks or impact, you may put trust in your armor\u2019s strength. If you do, preset your action die to 4. On a strong hit with a match, take +2 momentum as you build confidence, make an impression on your foes, or improve your position.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Armored/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger",
                  "Starforged/Moves/Combat/React_Under_Fire",
                  "Starforged/Moves/Combat/Clash"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Armored/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Armored/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "While putting trust in your armor\u2019s strength against physical attacks or impact",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "You may put trust in your armor\u2019s strength. If you do, preset your action die to 4.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Armored/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "Take +2 momentum as you build confidence, make an impression on your foes, or improve your position.",
                      $id: "Starforged/Assets/Path/Armored/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Armored/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Armored/Abilities/2",
            Text: "You add an important new piece to your set of armor, or upgrade its materials. As above, but preset your action die to 5 instead of 4.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Armored/Abilities/2/Alter_Moves/1",
                Alters: [
                  "Starforged/Assets/Path/Armored/Abilities/1/Alter_Moves/1"
                ],
                Text: "You may put trust in your armor\u2019s strength. If you do, preset your action die to 5."
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Armored/Abilities/3",
            Text: "When you must [Endure Harm](Starforged/Moves/Suffer/Endure_Harm), you may instead let your armor take the hit. If you do, roll your action die. On a 4 or greater, ignore the harm. On a 1-3, ignore the harm but your armor is now broken; you must [Repair](Starforged/Moves/Recover/Repair) and spend 5 repair points to bring it back to working condition.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Armored/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Endure_Harm"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Armored/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Armored/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By letting your armor take the hit",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                }
              }
            ],
            "Alter Properties": {
              States: [
                {
                  Name: "Broken",
                  Enabled: !1,
                  Permanent: !1,
                  "Disables asset": !0,
                  Impact: !1
                }
              ]
            },
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Artist",
        Name: "Artist",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Artist", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Artist/Abilities/1",
            Text: "When you make a move to craft an artistic work, present an artistic gift or performance, or leave your artistic mark on an item or location, you may reroll your action die if its value is less than your spirit. On a strong hit, take +1 momentum or +1 spirit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Artist/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Artist/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Artist/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a move to craft an artistic work, present an artistic gift or performance, or leave your artistic mark on an item or location",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Artist/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum or +1 spirit.",
                    Reroll: {
                      Text: "You may reroll your action die if its value is less than your spirit.",
                      Dice: "Action die"
                    },
                    $id: "Starforged/Assets/Path/Artist/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Text: "You may reroll your action die if its value is less than your spirit.",
                      Dice: "Action die"
                    },
                    $id: "Starforged/Assets/Path/Artist/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Text: "You may reroll your action die if its value is less than your spirit.",
                      Dice: "Action die"
                    },
                    $id: "Starforged/Assets/Path/Artist/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Artist/Abilities/2",
            Text: "When you [Gather Information](Starforged/Moves/Adventure/Gather_Information) or [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) by studying the aesthetics of a being or culture, add +2.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Artist/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Gather_Information",
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Artist/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Artist/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By studying the aesthetics of a being or culture",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +2."
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Artist/Abilities/3",
            Text: "When you create or perform a significant artistic work as a public memorial or tribute, roll +the stat which best represents the work\u2019s nature. On a strong hit, the work will stand the test of time; mark 2 ticks on your bonds legacy track. On a weak hit, its impact is short-lived; mark 1 tick instead of 2. On a miss, the work is ignored, misunderstood, or co-opted, and you must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
            Moves: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Assets",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622"
                },
                $id: "Starforged/Moves/Assets/Path/Artist/Abilities/3/Commemorate",
                Name: "Commemorate",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Path/Artist",
                Display: { Title: "Commemorate" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Path/Artist/Abilities/3/Commemorate/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Path/Artist/Abilities/3/Commemorate/Trigger/Options/1",
                      Text: "Roll +the stat which best represents the work\u2019s nature",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Edge", "Iron", "Heart", "Shadow", "Wits"]
                    }
                  ],
                  Text: "When you create or perform a significant artistic work as a public memorial or tribute..."
                },
                Text: "When you create or perform a significant artistic work as a public memorial or tribute, roll +the stat which best represents the work\u2019s nature. On a strong hit, the work will stand the test of time; mark 2 ticks on your bonds legacy track. On a weak hit, its impact is short-lived; mark 1 tick instead of 2. On a miss, the work is ignored, misunderstood, or co-opted, and you must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Path/Artist/Abilities/3/Commemorate/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Path/Artist/Abilities/3/Commemorate/Outcomes/Strong_Hit",
                    Text: "The work will stand the test of time; mark 2 ticks on your bonds legacy track."
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Path/Artist/Abilities/3/Commemorate/Outcomes/Weak_Hit",
                    Text: "The work's impact is short-lived; mark 1 tick on your bonds legacy track."
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Path/Artist/Abilities/3/Commemorate/Outcomes/Miss",
                    Text: "The work is ignored, misunderstood, or co-opted, and you must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Augmented",
        Name: "Augmented",
        States: [
          {
            Name: "Broken (Augment 1)",
            Enabled: !1,
            Permanent: !1,
            "Disables asset": !1,
            Impact: !1
          }
        ],
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Augmented", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Path/Augmented/Inputs/One",
            Name: "One",
            "Input Type": "Text",
            Adjustable: !1
          },
          {
            $id: "Starforged/Assets/Path/Augmented/Inputs/Two",
            Name: "Two",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Augmented/Abilities/1",
            Text: "You are equipped with an advanced prosthetic, implant, or mechanical enhancement. When you make a move directly aided by the augment, envision how it gives you exceptional capabilities and add +1. On a strong hit with a match, your augment exceeds expectations; take +2 momentum. On a miss with a match, the augment is broken; you must [Repair](Starforged/Moves/Recover/Repair) and spend 3 repair points to bring it back to working condition.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Augmented/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Augmented/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Augmented/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a move directly aided by your augment",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Envision how your augment gives you exceptional capabilities and add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Augmented/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "Your augment exceeds expectations; take +2 momentum.",
                      $id: "Starforged/Assets/Path/Augmented/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Augmented/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  Miss: {
                    "With a Match": {
                      Text: "Your augment is broken; you must [Repair](Starforged/Moves/Recover/Repair) and spend 3 repair points to bring it back to working condition.",
                      $id: "Starforged/Assets/Path/Augmented/Abilities/1/Alter_Moves/1/Outcomes/Miss/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Augmented/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Augmented/Abilities/2",
            Text: "You are equipped with a second augment. It functions as above, but the benefits of the two augments do not stack.",
            "Alter Properties": {
              States: [
                {
                  Name: "Broken (Augment 2)",
                  Enabled: !1,
                  Permanent: !1,
                  "Disables asset": !1,
                  Impact: !1
                }
              ]
            },
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Augmented/Abilities/3",
            Text: "When you must [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) or [Face Death](Starforged/Moves/Threshold/Face_Death), you may instead mark an augment as broken. [Repair](Starforged/Moves/Recover/Repair) it as detailed above.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Augmented/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Suffer/Endure_Harm",
                  "Starforged/Moves/Threshold/Face_Death"
                ],
                Text: "You may instead mark an augment as broken. [Repair](Starforged/Moves/Recover/Repair) it as detailed in the AUGMENTED asset."
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Bannersworn",
        Name: "Bannersworn",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Bannersworn", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Path/Bannersworn/Inputs/Ideology",
            Name: "Ideology",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Bannersworn/Abilities/1",
            Text: "You are bound to a clan, faction, or creed. When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) in service to this ideology, reroll any dice. On a hit, mark 1 tick on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Bannersworn/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Bannersworn/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Bannersworn/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "In service to your bound clan, faction, or creed",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Bannersworn/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Mark 1 tick on your bonds legacy track.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Bannersworn/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark 1 tick on your bonds legacy track.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Bannersworn/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Bannersworn/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Bannersworn/Abilities/2",
            Text: "When you or an ally [Sojourn](Starforged/Moves/Recover/Sojourn) and score a strong hit with a match, you may envision meeting someone of the same ideology. If you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) with them and score a hit, mark 1 tick on your bonds legacy track. When you [Forge a Bond](Starforged/Moves/Connection/Forge_a_Bond) with anyone of your ideology, make the legacy reward one rank higher (1 extra box if already epic).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Bannersworn/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Sojourn"],
                Outcomes: {
                  $id: "Starforged/Assets/Path/Bannersworn/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "You may envision meeting someone of the same ideology. If you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) with them and score a hit, mark 1 tick on your bonds legacy track.",
                      $id: "Starforged/Assets/Path/Bannersworn/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Bannersworn/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Bannersworn/Abilities/2/Alter_Moves/2",
                Moves: ["Starforged/Moves/Connection/Forge_a_Bond"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Bannersworn/Abilities/2/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Bannersworn/Abilities/2/Alter_Moves/2/Trigger/Options/1",
                      Text: "With anyone of your ideology",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Bannersworn/Abilities/2/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Make the legacy reward one rank higher (1 extra box if already epic).",
                    $id: "Starforged/Assets/Path/Bannersworn/Abilities/2/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Make the legacy reward one rank higher (1 extra box if already epic).",
                    $id: "Starforged/Assets/Path/Bannersworn/Abilities/2/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Bannersworn/Abilities/3",
            Text: "When you make a progress move in direct service to your ideology, you may reroll one challenge die. If you score a strong hit with a match, your reputation grows among those who share your ideology; mark 1 tick on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Bannersworn/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Bannersworn/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Bannersworn/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a progress move in direct service to your ideology",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Bannersworn/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    "With a Match": {
                      Text: "Your reputation grows among those who share your ideology; mark 1 tick on your bonds legacy track.",
                      $id: "Starforged/Assets/Path/Bannersworn/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Bannersworn/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Path/Bannersworn/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Path/Bannersworn/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Blademaster",
        Name: "Blademaster",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Blademaster", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Requirement: "If you wield a bladed weapon...",
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Blademaster/Abilities/1",
            Text: "When you [Clash](Starforged/Moves/Combat/Clash) or [Strike](Starforged/Moves/Combat/Strike) in close quarters, add +1. On a strong hit with a match, you are unstoppable; mark progress.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Blademaster/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Combat/Clash",
                  "Starforged/Moves/Combat/Strike"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Blademaster/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Blademaster/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you wield a bladed weapon in close quarters",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Blademaster/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "You are unstoppable; mark progress.",
                      $id: "Starforged/Assets/Path/Blademaster/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Blademaster/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Blademaster/Abilities/2",
            Text: `If you [Gain Ground](Starforged/Moves/Combat/Gain_Ground) by moving into close quarters against your foe, choose your approach.

  * Charge: Roll +heart, and mark progress on a hit.
  * Evade: Roll +edge, and take +1 momentum on a hit.`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Blademaster/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Gain_Ground"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Blademaster/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Blademaster/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By moving into close quarters against your foe (and choosing to charge)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: ["Heart"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Blademaster/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Path/Blademaster/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Path/Blademaster/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Blademaster/Abilities/2/Alter_Moves/2",
                Moves: ["Starforged/Moves/Combat/Gain_Ground"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Blademaster/Abilities/2/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Blademaster/Abilities/2/Alter_Moves/2/Trigger/Options/1",
                      Text: "By moving into close quarters against your foe (and choosing to evade)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: ["Edge"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Blademaster/Abilities/2/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Blademaster/Abilities/2/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Blademaster/Abilities/2/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Blademaster/Abilities/3",
            Text: "You wield an iconic blade. Give it a name. When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) by binding your promise to the blade, add +1. On a hit, fill the box below. If you make a move (including a progress move) using this oathbound blade and score a miss, you may clear the box to reroll any dice.",
            Inputs: [
              {
                $id: "Starforged/Assets/Path/Blademaster/Abilities/3/Inputs/Name",
                Name: "Name",
                "Input Type": "Text",
                Adjustable: !1
              }
            ],
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Blademaster/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Blademaster/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Blademaster/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By binding your promise to your iconic blade",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Blademaster/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Fill the box below. If you make a move (including a progress move) using this oathbound blade and score a miss, you may clear the box to reroll any dice.",
                    $id: "Starforged/Assets/Path/Blademaster/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Fill the box below. If you make a move (including a progress move) using this oathbound blade and score a miss, you may clear the box to reroll any dice.",
                    $id: "Starforged/Assets/Path/Blademaster/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Bounty_Hunter",
        Name: "Bounty Hunter",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Bounty Hunter", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/1",
            Text: "When you take a bounty contract and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to see it done, add +1. On a strong hit, you\u2019ve got a solid lead and may mark progress on the quest. When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) on a hunt, make the legacy reward one rank higher (1 extra box if already epic).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you take a bounty contract and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to see it done",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "You\u2019ve got a solid lead and may mark progress on the quest.",
                    $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Quest/Fulfill_Your_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "On a hunt",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Make the legacy reward one rank higher (1 extra box if already epic)",
                    $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Make the legacy reward one rank higher (1 extra box if already epic)",
                    $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/2",
            Text: `When you [Gather Information](Starforged/Moves/Adventure/Gather_Information) related to a bounty, add +1. On a match, you reveal a surprising or sinister aspect of the contract; envision what you discover, and choose one.

  * Forge ahead: Mark progress on the quest. If you scored a strong hit with a match, also take +2 momentum.
  * Change loyalties: [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow) and mark 2 ticks on your bonds legacy track.`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Gather_Information"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "Related to a bounty",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: `You reveal a surprising or sinister aspect of the contract; envision what you discover, and choose one.

  * Forge ahead: Mark progress on the quest, and take +2 momentum.
  * Change loyalties: [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow) and mark 2 ticks on your bonds legacy track.`,
                      $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  Miss: {
                    "With a Match": {
                      Text: `You reveal a surprising or sinister aspect of the contract; envision what you discover, and choose one.

  * Forge ahead: Mark progress on the quest.
  * Change loyalties: [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow) and mark 2 ticks on your bonds legacy track.`,
                      $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/2/Alter_Moves/1/Outcomes/Miss/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/3",
            Text: "When you [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action) in a fight against a bounty target or their agents, you may reroll one challenge die.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Take_Decisive_Action"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "In a fight against a bounty target or their agents",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Path/Bounty_Hunter/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Brawler",
        Name: "Brawler",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Brawler", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Requirement: "If you fight unarmed or with a close quarters weapon...",
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Brawler/Abilities/1",
            Text: "When you [Gain Ground](Starforged/Moves/Combat/Gain_Ground) by attempting to disarm, trip, shove, grapple, or stun your foe, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Brawler/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Gain_Ground"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Brawler/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Brawler/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "By attempting to disarm, trip, shove, grapple, or stun your foe (while fighting unarmed or with a close quarters weapon)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Brawler/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Brawler/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Brawler/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Brawler/Abilities/2",
            Text: `When you [Clash](Starforged/Moves/Combat/Clash) in close quarters, you may draw on your momentum to gain advantage. If you do, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2) and choose one (before rolling).

  * Aggressive: Count a weak hit as a strong hit.
  * Defensive: Count a miss as a weak hit.`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Brawler/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Clash"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Brawler/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Brawler/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "Aggressively",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "[Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2).",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Brawler/Abilities/2/Alter_Moves/1/Outcomes",
                  "Weak Hit": {
                    "Count as": "Strong Hit",
                    $id: "Starforged/Assets/Path/Brawler/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Brawler/Abilities/2/Alter_Moves/2",
                Moves: ["Starforged/Moves/Combat/Clash"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Brawler/Abilities/2/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Brawler/Abilities/2/Alter_Moves/2/Trigger/Options/1",
                      Text: "Defensively",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "[Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2).",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Brawler/Abilities/2/Alter_Moves/2/Outcomes",
                  Miss: {
                    "Count as": "Weak Hit",
                    $id: "Starforged/Assets/Path/Brawler/Abilities/2/Alter_Moves/2/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Brawler/Abilities/3",
            Text: "When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) already positioned in close quarters against your foe, mark progress on a hit. On a strong hit with a match, your initial assault leaves them stunned; also take +2 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Brawler/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Brawler/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Brawler/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "Already positioned in close quarters against your foe",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Brawler/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress.",
                    "With a Match": {
                      Text: "Your initial assault leaves them stunned; mark progress and take +2 momentum.",
                      $id: "Starforged/Assets/Path/Brawler/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Brawler/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Path/Brawler/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Courier",
        Name: "Courier",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Courier", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Courier/Abilities/1",
            Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to transport and protect something precious, set its safety to 5. When you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) or [Set a Course](Starforged/Moves/Exploration/Set_a_Course) and score a weak hit or miss, you may suffer -1 safety as the cost. On a miss with a match, you must suffer -2 safety as the cost. When safety falls to 0, envision a major complication related to this mission. If you overcome the threat, mark progress twice on this quest. Then, set safety to 3.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Courier/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Courier/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Courier/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "To transport and protect something precious",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to transport and protect something precious, set its safety to 5.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Courier/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to transport and protect something precious, set its safety to 5.",
                    $id: "Starforged/Assets/Path/Courier/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to transport and protect something precious, set its safety to 5.",
                    $id: "Starforged/Assets/Path/Courier/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to transport and protect something precious, set its safety to 5.",
                    $id: "Starforged/Assets/Path/Courier/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Courier/Abilities/1/Alter_Moves/2",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition",
                  "Starforged/Moves/Exploration/Set_a_Course"
                ],
                Outcomes: {
                  $id: "Starforged/Assets/Path/Courier/Abilities/1/Alter_Moves/2/Outcomes",
                  "Weak Hit": {
                    Text: `You may suffer -1 safety as the cost.

When safety falls to 0, envision a major complication related to this mission. If you overcome the threat, mark progress twice on this quest. Then, set safety to 3.`,
                    $id: "Starforged/Assets/Path/Courier/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: `You may suffer -1 safety as the cost.

When safety falls to 0, envision a major complication related to this mission. If you overcome the threat, mark progress twice on this quest. Then, set safety to 3.`,
                    "With a Match": {
                      Text: `You must suffer -2 safety as the cost.

When safety falls to 0, envision a major complication related to this mission. If you overcome the threat, mark progress twice on this quest. Then, set safety to 3.`,
                      $id: "Starforged/Assets/Path/Courier/Abilities/1/Alter_Moves/2/Outcomes/Miss/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Courier/Abilities/1/Alter_Moves/2/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Courier/Abilities/2",
            Text: "When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) to an unbonded connection by completing a courier mission, mark progress twice on the relationship.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Courier/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Fulfill_Your_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Courier/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Courier/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "To an unbonded connection by completing a courier mission",
                      "Roll type": "Progress roll",
                      Method: "Any",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Mark progress twice on the relationship."
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Courier/Abilities/3",
            Text: "When you [Sojourn](Starforged/Moves/Recover/Sojourn) during a courier mission, you may roll +safety. On a strong hit, take +1 safety or +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Courier/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Sojourn"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Courier/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Courier/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "During a courier mission",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Path/Courier/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Courier/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 safety or +1 momentum.",
                    $id: "Starforged/Assets/Path/Courier/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Path/Courier/Condition_Meter",
          Name: "Safety",
          Min: 0,
          Max: 5,
          Value: 5,
          Conditions: []
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Demolitionist",
        Name: "Demolitionist",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Demolitionist", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Demolitionist/Abilities/1",
            Text: "When you make a move to attack, destroy, or sabotage by deploying or triggering an explosive device, choose the value of your charge before rolling: normal=1, high=2, or overcharged=3. If either challenge die is equal to or less than the charge, count a weak hit as a strong hit. If not, and your action die is equal to or less than the charge, you are caught up in the destruction or set off an unintended effect; count a weak hit as a miss.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Demolitionist/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Demolitionist/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Demolitionist/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "To attack, destroy, or sabotage by deploying or triggering an explosive device",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Choose the value of your charge before rolling: normal=1, high=2, or overcharged=3. If either challenge die is equal to or less than the charge, count a weak hit as a strong hit. If not, and your action die is equal to or less than the charge, you are caught up in the destruction or set off an unintended effect; count a weak hit as a miss."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Demolitionist/Abilities/2",
            Text: "When you make a move to craft, modify, or disarm an explosive device, or if you threaten or provoke by arming an explosive device, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Demolitionist/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Demolitionist/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Demolitionist/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "To craft, modify, or disarm an explosive device, or if you threaten or provoke by arming an explosive device",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Demolitionist/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Demolitionist/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Demolitionist/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Demolitionist/Abilities/3",
            Text: "When your momentum is at its max, you may reset momentum (before rolling) to trigger an explosive device as you [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action). If you do, reroll any challenge dice.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Demolitionist/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Take_Decisive_Action"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Demolitionist/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Demolitionist/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When your momentum is at its max, and you reset momentum (before rolling) to trigger an explosive device",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Demolitionist/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Challenge dice",
                      Text: "Reroll any challenge dice."
                    },
                    $id: "Starforged/Assets/Path/Demolitionist/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Challenge dice",
                      Text: "Reroll any challenge dice."
                    },
                    $id: "Starforged/Assets/Path/Demolitionist/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Challenge dice",
                      Text: "Reroll any challenge dice."
                    },
                    $id: "Starforged/Assets/Path/Demolitionist/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Devotant",
        Name: "Devotant",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Devotant", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Path/Devotant/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          },
          {
            $id: "Starforged/Assets/Path/Devotant/Inputs/Linked_Stat",
            Name: "Linked Stat",
            "Input Type": "Select",
            Sets: [{ Key: "Stat", Type: "Stat" }],
            Options: [
              {
                $id: "Starforged/Assets/Path/Devotant/Inputs/Linked_Stat/Options/Edge",
                Name: "Edge",
                Set: [
                  {
                    $id: "Starforged/Assets/Path/Devotant/Inputs/Linked_Stat/Options/Edge/Stat",
                    Key: "Stat",
                    Type: "Stat",
                    Value: "Edge"
                  }
                ]
              },
              {
                $id: "Starforged/Assets/Path/Devotant/Inputs/Linked_Stat/Options/Heart",
                Name: "Heart",
                Set: [
                  {
                    $id: "Starforged/Assets/Path/Devotant/Inputs/Linked_Stat/Options/Heart/Stat",
                    Key: "Stat",
                    Type: "Stat",
                    Value: "Heart"
                  }
                ]
              },
              {
                $id: "Starforged/Assets/Path/Devotant/Inputs/Linked_Stat/Options/Iron",
                Name: "Iron",
                Set: [
                  {
                    $id: "Starforged/Assets/Path/Devotant/Inputs/Linked_Stat/Options/Iron/Stat",
                    Key: "Stat",
                    Type: "Stat",
                    Value: "Iron"
                  }
                ]
              },
              {
                $id: "Starforged/Assets/Path/Devotant/Inputs/Linked_Stat/Options/Shadow",
                Name: "Shadow",
                Set: [
                  {
                    $id: "Starforged/Assets/Path/Devotant/Inputs/Linked_Stat/Options/Shadow/Stat",
                    Key: "Stat",
                    Type: "Stat",
                    Value: "Shadow"
                  }
                ]
              },
              {
                $id: "Starforged/Assets/Path/Devotant/Inputs/Linked_Stat/Options/Wits",
                Name: "Wits",
                Set: [
                  {
                    $id: "Starforged/Assets/Path/Devotant/Inputs/Linked_Stat/Options/Wits/Stat",
                    Key: "Stat",
                    Type: "Stat",
                    Value: "Wits"
                  }
                ]
              }
            ],
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Devotant/Abilities/1",
            Text: "You worship a god, power, or entity. Give it a name and choose one of your stats to represent its nature. When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) or [Gain Ground](Starforged/Moves/Combat/Gain_Ground) by calling on it for guidance or aid, roll +linked stat. On a hit, take +1 momentum or +1 spirit. On a strong hit with a match, a miracle or sign manifests; take another +1 momentum or +1 spirit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Devotant/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage",
                  "Starforged/Moves/Combat/Gain_Ground"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Devotant/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Devotant/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "By calling on your god, power, or entity for guidance or aid",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Starforged/Assets/Path/Devotant"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Devotant/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum or +1 spirit.",
                    "With a Match": {
                      Text: `A miracle or sign manifests. Choose one:

  * Take +2 spirit
  * Take +2 momentum
  * Take +1 spirit and +1 momentum`,
                      $id: "Starforged/Assets/Path/Devotant/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Devotant/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum or +1 spirit.",
                    $id: "Starforged/Assets/Path/Devotant/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Devotant/Abilities/2",
            Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) in service to your faith, roll +linked stat and take +2 momentum or +2 spirit on a hit. When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) on a divine quest (formidable or greater) and score a hit, also mark 2 ticks on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Devotant/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Devotant/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Devotant/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "In service to your faith",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Starforged/Assets/Path/Devotant"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Devotant/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +2 momentum or +2 spirit.",
                    $id: "Starforged/Assets/Path/Devotant/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +2 momentum or +2 spirit.",
                    $id: "Starforged/Assets/Path/Devotant/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Devotant/Abilities/2/Alter_Moves/2",
                Moves: ["Starforged/Moves/Quest/Fulfill_Your_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Devotant/Abilities/2/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Devotant/Abilities/2/Alter_Moves/2/Trigger/Options/1",
                      Text: "On a divine quest (formidable or greater)",
                      "Roll type": "Progress roll",
                      Method: "Any",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Devotant/Abilities/2/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Mark 2 ticks on your bonds legacy track.",
                    $id: "Starforged/Assets/Path/Devotant/Abilities/2/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark 2 ticks on your bonds legacy track.",
                    $id: "Starforged/Assets/Path/Devotant/Abilities/2/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Devotant/Abilities/3",
            Text: "When you [Hearten](Starforged/Moves/Recover/Hearten) through contemplation or sharing of your faith, you may roll +linked stat. If you do, take +1 spirit or +1 momentum on a strong hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Devotant/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Hearten"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Devotant/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Devotant/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "Through contemplation or sharing of your faith",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Starforged/Assets/Path/Devotant"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Devotant/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 spirit or +1 momentum.",
                    $id: "Starforged/Assets/Path/Devotant/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Diplomat",
        Name: "Diplomat",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Diplomat", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Diplomat/Abilities/1",
            Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to resolve a dispute, negotiate an agreement, or gather support, add +1. On a strong hit, mark progress on the quest. When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) on a diplomatic mission (formidable or greater) and score a hit, also mark 2 ticks on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Diplomat/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Diplomat/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Diplomat/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "To resolve a dispute, negotiate an agreement, or gather support",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Diplomat/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress on the quest.",
                    $id: "Starforged/Assets/Path/Diplomat/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Diplomat/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Quest/Fulfill_Your_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Diplomat/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Diplomat/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "On a diplomatic mission (formidable or greater)",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Diplomat/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Mark 2 ticks on your bonds legacy track.",
                    $id: "Starforged/Assets/Path/Diplomat/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark 2 ticks on your bonds legacy track.",
                    $id: "Starforged/Assets/Path/Diplomat/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Diplomat/Abilities/2",
            Text: "When you make a move to defuse, reason, or negotiate, add +1. On a miss, you may take a different tack. Envision this new approach, reroll all dice, and add +2. If you score a miss yet again, face a dire complication or blow to your reputation as you [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Diplomat/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Diplomat/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Diplomat/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "To defuse, reason, or negotiate",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Diplomat/Abilities/2/Alter_Moves/1/Outcomes",
                  Miss: {
                    Reroll: {
                      Text: "You may take a different tack. Envision this new approach, reroll all dice, and add +2. If you score a miss yet again, face a dire complication or blow to your reputation as you [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
                      Dice: "All"
                    },
                    $id: "Starforged/Assets/Path/Diplomat/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Diplomat/Abilities/3",
            Text: "When you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) or [Sojourn](Starforged/Moves/Recover/Sojourn), add +1. If you [Sojourn](Starforged/Moves/Recover/Sojourn) and score a strong hit with a match, you are shown great kindness or respect; take +2 momentum or make an extra recover move with an automatic strong hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Diplomat/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Connection/Make_a_Connection",
                  "Starforged/Moves/Connection/Sojourn"
                ],
                Text: "Add +1."
              },
              {
                $id: "Starforged/Assets/Path/Diplomat/Abilities/3/Alter_Moves/2",
                Moves: ["Starforged/Moves/Connection/Sojourn"],
                Outcomes: {
                  $id: "Starforged/Assets/Path/Diplomat/Abilities/3/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "You are shown great kindness or respect; take +2 momentum or make an extra recover move with an automatic strong hit.",
                      $id: "Starforged/Assets/Path/Diplomat/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Diplomat/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Empath",
        Name: "Empath",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Empath", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Empath/Abilities/1",
            Text: "When you read the intent, emotions, or memories of a nearby being, roll +heart. On a strong hit, you glimpse a helpful aspect of their inner self. Envision what you learn, take +2 momentum, and add +1 when you make moves to interact with them in this scene. On a weak hit, the visions are murky; take +1 momentum. On a miss, you reveal a troubling motive or secret; [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
            Moves: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Assets",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622"
                },
                $id: "Starforged/Moves/Assets/Path/Empath/Abilities/1/Read_Heart",
                Name: "Read Heart",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Path/Empath",
                Display: { Title: "Read Heart" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Path/Empath/Abilities/1/Read_Heart/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Path/Empath/Abilities/1/Read_Heart/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Heart"]
                    }
                  ],
                  Text: "When you read the intent, emotions, or memories of a nearby being..."
                },
                Text: "When you read the intent, emotions, or memories of a nearby being, roll +heart. On a strong hit, you glimpse a helpful aspect of their inner self. Envision what you learn, take +2 momentum, and add +1 when you make moves to interact with them in this scene. On a weak hit, the visions are murky; take +1 momentum. On a miss, you reveal a troubling motive or secret; [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Path/Empath/Abilities/1/Read_Heart/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Path/Empath/Abilities/1/Read_Heart/Outcomes/Strong_Hit",
                    Text: "You glimpse a helpful aspect of their inner self. Envision what you learn, take +2 momentum, and add +1 when you make moves to interact with them in this scene."
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Path/Empath/Abilities/1/Read_Heart/Outcomes/Weak_Hit",
                    Text: "The visions are murky; take +1 momentum."
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Path/Empath/Abilities/1/Read_Heart/Outcomes/Miss",
                    Text: "You reveal a troubling motive or secret; [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Empath/Abilities/2",
            Text: "As above, and if you score a hit as you read them, you may subtly influence their attitude or actions, such as making a hostile being hesitate. Take another +1 momentum. If in a fight, mark progress.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Empath/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Assets/Path/Empath/Abilities/1/Read_Heart"
                ],
                Outcomes: {
                  $id: "Starforged/Assets/Path/Empath/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "You may subtly influence their attitude or actions, such as making a hostile being hesitate. Take another +1 momentum. If in a fight, mark progress.",
                    $id: "Starforged/Assets/Path/Empath/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "You may subtly influence their attitude or actions, such as making a hostile being hesitate. Take another +1 momentum. If in a fight, mark progress.",
                    $id: "Starforged/Assets/Path/Empath/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Empath/Abilities/3",
            Text: "When you [Face Danger](Starforged/Moves/Adventure/Face_Danger) to soothe a being\u2019s distress by creating an empathic bond, roll +spirit and take +1 momentum on a hit. If they are an ally, also give them +2 spirit on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Empath/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Empath/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Empath/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "To soothe a being's distress by creating an empathic bond",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Spirit"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Empath/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum. If they are an ally, also give them +2 spirit.",
                    $id: "Starforged/Assets/Path/Empath/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum. If they are an ally, also give them +2 spirit.",
                    $id: "Starforged/Assets/Path/Empath/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Explorer",
        Name: "Explorer",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Explorer", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Explorer/Abilities/1",
            Text: "When you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint), take +1 momentum on a hit. When you [Finish an Expedition](Starforged/Moves/Exploration/Finish_an_Expedition) and score a hit, mark 1 extra tick on your discoveries legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Explorer/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Exploration/Explore_a_Waypoint"],
                Outcomes: {
                  $id: "Starforged/Assets/Path/Explorer/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Explorer/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Explorer/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Explorer/Abilities/1/Alter_Moves/2",
                Moves: [
                  "Starforged/Moves/Exploration/Finish_an_Expedition"
                ],
                Outcomes: {
                  $id: "Starforged/Assets/Path/Explorer/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Mark 1 extra tick on your discoveries legacy track.",
                    $id: "Starforged/Assets/Path/Explorer/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark 1 extra tick on your discoveries legacy track.",
                    $id: "Starforged/Assets/Path/Explorer/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Explorer/Abilities/2",
            Text: `When you come across a wondrous sight or phenomenon, such as an extraordinary planet, majestic creature, or dazzling stellar object, choose one:

  * Find inspiration: Take +1 momentum
  * Soak it all in: [Hearten](Starforged/Moves/Recover/Hearten); add +1, and take +1 momentum on a hit.`,
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Explorer/Abilities/3",
            Text: "When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) by studying a newfound place from a safe position, add +1 and take +1 momentum on a hit. On a strong hit with a match, take another +1 momentum and envision an unusual aspect of the site.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Explorer/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Explorer/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Explorer/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By studying a newfound place from a safe position",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Explorer/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "Take +2 momentum and envision an unusual aspect of the site.",
                      $id: "Starforged/Assets/Path/Explorer/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Explorer/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Explorer/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Fated",
        Name: "Fated",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Fated", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Fated/Abilities/1",
            Text: "When you fill a box on your background vow progress track, also mark 1 tick on your quests legacy track. When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) on the background vow, your fate is at hand; take an automatic strong hit and envision the final sacrifice that brings your story to an end.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Fated/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Fulfill_Your_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Fated/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Fated/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "On your background vow",
                      "Roll type": "Progress roll",
                      Method: "Strong Hit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Your fate is at hand; take an automatic strong hit and envision the final sacrifice that brings your story to an end."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Fated/Abilities/2",
            Text: "When you [Face Death](Starforged/Moves/Threshold/Face_Death) or [Face Desolation](Starforged/Moves/Threshold/Face_Desolation) while your background vow is unfulfilled, it is not yet your time. Instead of rolling, you may take an automatic strong hit. If you do, this asset counts as an impact (and you no longer have this protection) until you next [Reach a Milestone](Starforged/Moves/Quest/Reach_a_Milestone) on the background vow.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Fated/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Threshold/Face_Death",
                  "Starforged/Moves/Threshold/Face_Desolation"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Fated/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Fated/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "While your background vow is unfulfilled",
                      "Roll type": "Action roll",
                      Method: "Strong Hit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "It is not yet your time. Instead of rolling, you may take an automatic strong hit. If you do, this asset counts as an impact (and you no longer have this protection) until you next [Reach a Milestone](Starforged/Moves/Quest/Reach_a_Milestone) on the background vow."
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Fated/Abilities/3",
            Text: "When you make any progress move directly related to your background vow, and roll a 10 on either challenge die, you may reroll that die. On a strong hit, take +2 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Fated/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Fated/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Fated/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make any progress move directly related to your background vow",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Fated/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +2 momentum.",
                    Reroll: {
                      Text: "If you roll a 10 on either challenge die, you may reroll that die.",
                      Dice: "Challenge die"
                    },
                    $id: "Starforged/Assets/Path/Fated/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Text: "If you roll a 10 on either challenge die, you may reroll that die.",
                      Dice: "Challenge die"
                    },
                    $id: "Starforged/Assets/Path/Fated/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Text: "If you roll a 10 on either challenge die, you may reroll that die.",
                      Dice: "Challenge die"
                    },
                    $id: "Starforged/Assets/Path/Fated/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Firebrand",
        Name: "Firebrand",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Firebrand", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Firebrand/Abilities/1",
            Text: "You wield fiery energy. When you rest and meditate to gather this energy, roll +spirit. On a strong hit, take up to +3 fire. On a weak hit, take +2. On a miss, take +2 fire but [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) (-2). Your max fire is +5. When you make moves aided by this energy to attack or overcome obstacles, add +2 and suffer -1 fire.",
            Moves: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Assets",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622"
                },
                $id: "Starforged/Moves/Assets/Path/Firebrand/Abilities/1/Gather_Energy",
                Name: "Gather Energy",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Path/Firebrand",
                Display: { Title: "Gather Energy" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Path/Firebrand/Abilities/1/Gather_Energy/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Path/Firebrand/Abilities/1/Gather_Energy/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Spirit"]
                    }
                  ],
                  Text: "When you rest and meditate to gather fiery energy..."
                },
                Text: "You wield fiery energy. When you rest and meditate to gather this energy, roll +spirit. On a strong hit, take up to +3 fire. On a weak hit, take +2. On a miss, take +2 fire but [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) (-2). Your max fire is +5. When you make moves aided by this energy to attack or overcome obstacles, add +2 and suffer -1 fire.",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Path/Firebrand/Abilities/1/Gather_Energy/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Path/Firebrand/Abilities/1/Gather_Energy/Outcomes/Strong_Hit",
                    Text: `Take up to +3 fire.

When you make moves aided by this energy to attack or overcome obstacles, add +2 and suffer -1 fire.`
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Path/Firebrand/Abilities/1/Gather_Energy/Outcomes/Weak_Hit",
                    Text: `Take up to +2 fire.

When you make moves aided by this energy to attack or overcome obstacles, add +2 and suffer -1 fire.`
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Path/Firebrand/Abilities/1/Gather_Energy/Outcomes/Miss",
                    Text: `Take up to +2 fire but [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) (-2).

When you make moves aided by this energy to attack or overcome obstacles, add +2 and suffer -1 fire.`
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Firebrand/Abilities/2",
            Text: "When you [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) and score a strong hit with a match, you may instead ignore the harm and take +fire equal to the amount of harm faced (+1, +2, or +3).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Firebrand/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Endure_Harm"],
                Outcomes: {
                  $id: "Starforged/Assets/Path/Firebrand/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "You may instead ignore the harm and take +fire equal to the amount of harm faced (+1, +2, or +3).",
                      $id: "Starforged/Assets/Path/Firebrand/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Firebrand/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Firebrand/Abilities/3",
            Text: "When you have at least +3 fire, you may [Gain Ground](Starforged/Moves/Combat/Gain_Ground) or [Strike](Starforged/Moves/Combat/Strike) by unleashing hell. If you do, take an automatic strong hit and mark progress. Then, set your fire to 0.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Firebrand/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Combat/Gain_Ground",
                  "Starforged/Moves/Combat/Strike"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Firebrand/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Firebrand/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you have at least +3 fire and unleash hell",
                      "Roll type": "Action roll",
                      Method: "Strong Hit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Take an automatic strong hit and mark progress. Then, set your fire to 0."
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Path/Firebrand/Condition_Meter",
          Name: "Fire",
          Min: 0,
          Max: 5,
          Value: 0,
          Conditions: []
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Fugitive",
        Name: "Fugitive",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Fugitive", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Fugitive/Abilities/1",
            Text: "You are hunted by a power or authority. When you make a move, you may improve the result to a strong hit. If you do, fill one segment of a four-segment clock to represent hunters closing in. When the clock is filled, a notable foe or force has tracked you down. If you overcome them or escape, reset the clock and mark 1 tick on your quests legacy track.",
            Inputs: [
              {
                $id: "Starforged/Assets/Path/Fugitive/Abilities/1/Inputs/Notable_foe_or_force_tracks_you_down",
                Name: "Notable foe or force tracks you down",
                "Input Type": "Clock",
                "Clock Type": "Tension",
                Segments: 4,
                Filled: 0,
                Adjustable: !0
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Fugitive/Abilities/2",
            Text: "When you make a move by hiding, concealing your identity, or fleeing from a pursuer, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Fugitive/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Fugitive/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Fugitive/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By hiding, concealing your identity, or fleeing from a pursuer",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Fugitive/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Fugitive/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Fugitive/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Fugitive/Abilities/3",
            Text: "When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) (extreme or greater) by clearing your name or defeating the power or authority who marked you as a fugitive, gain this ability at no cost. You may then exchange this asset for another with the same number of marked abilities.",
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Gearhead",
        Name: "Gearhead",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Gearhead", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Gearhead/Abilities/1",
            Text: "When you make a move to craft, repair, repurpose, or modify equipment or technology, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Gearhead/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Gearhead/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Gearhead/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "To craft, repair, repurpose, or modify equipment or technology",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Gearhead/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Gearhead/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Gearhead/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Gearhead/Abilities/2",
            Text: "When you [Gather Information](Starforged/Moves/Adventure/Gather_Information) by studying or disassembling a machine or device, reroll any dice. On a match, you reveal an unexpected function, capability, or danger; mark 1 tick on your discoveries legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Gearhead/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Gather_Information"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Gearhead/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Gearhead/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By studying or disassembling a machine or device",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Gearhead/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "You reveal an unexpected function, capability, or danger; mark 1 tick on your discoveries legacy track.",
                      $id: "Starforged/Assets/Path/Gearhead/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Gearhead/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Gearhead/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    "With a Match": {
                      Text: "You reveal an unexpected function, capability, or danger; mark 1 tick on your discoveries legacy track.",
                      $id: "Starforged/Assets/Path/Gearhead/Abilities/2/Alter_Moves/1/Outcomes/Miss/With_a_Match"
                    },
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Gearhead/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Gearhead/Abilities/3",
            Text: "With sufficient time (a couple of hours or more), you may [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) to assemble or enhance a device for a powerful but limited role. On a hit, the device is ready for use. One time only, when you or an ally make a move aided by the device, take an automatic strong hit. If you are in a fight, also mark progress.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Gearhead/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Gearhead/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Gearhead/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By spending sufficient time (a couple of hours or more) to assemble or enhance a device for a powerful but limited role",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Gearhead/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "The device is ready for use. One time only, when you or an ally make a move aided by the device, take an automatic strong hit. If you are in a fight, also mark progress.",
                    $id: "Starforged/Assets/Path/Gearhead/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "The device is ready for use. One time only, when you or an ally make a move aided by the device, take an automatic strong hit. If you are in a fight, also mark progress.",
                    $id: "Starforged/Assets/Path/Gearhead/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Gunner",
        Name: "Gunner",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Gunner", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Requirement: "If you wield a heavy ranged personal weapon...",
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Gunner/Abilities/1",
            Text: `When you [Strike](Starforged/Moves/Combat/Strike), choose one (before rolling).

  * Pin them down: Add +1 and take +1 momentum on a hit.
  * Make them hurt: Mark progress on a hit.`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Gunner/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Strike"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Gunner/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Gunner/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "If you [Strike](Starforged/Moves/Combat/Strike) with a heavy ranged personal weapon and choose to pin them down",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Gunner/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Gunner/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Gunner/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Gunner/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Combat/Strike"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Gunner/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Gunner/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "If you [Strike](Starforged/Moves/Combat/Strike) with a heavy ranged personal weapon and choose to make them hurt",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Gunner/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Path/Gunner/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Path/Gunner/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Gunner/Abilities/2",
            Text: "When you [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action) by emptying your gun (decide before rolling), you may [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1) and reroll one challenge die. If the fight continues or you are caught up another fight, [Check Your Gear](Starforged/Moves/Adventure/Check_Your_Gear) to see if you have more ammo on-hand.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Gunner/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Take_Decisive_Action"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Gunner/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Gunner/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By emptying your gun as you [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1)",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Gunner/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "If the fight continues or you are caught up another fight, [Check Your Gear](Starforged/Moves/Adventure/Check_Your_Gear) to see if you have more ammo on-hand.",
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Path/Gunner/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "If the fight continues or you are caught up another fight, [Check Your Gear](Starforged/Moves/Adventure/Check_Your_Gear) to see if you have more ammo on-hand.",
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Path/Gunner/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "If the fight continues or you are caught up another fight, [Check Your Gear](Starforged/Moves/Adventure/Check_Your_Gear) to see if you have more ammo on-hand.",
                    Reroll: {
                      Dice: "Challenge die",
                      Text: "You may reroll one challenge die."
                    },
                    $id: "Starforged/Assets/Path/Gunner/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Gunner/Abilities/3",
            Text: "Give your favorite gun a name. When you [Clash](Starforged/Moves/Combat/Clash) with it, add +1. When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) or [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) while wielding it, add +1 and take +1 momentum on a hit.",
            Inputs: [
              {
                $id: "Starforged/Assets/Path/Gunner/Abilities/3/Inputs/Name",
                Name: "Name",
                "Input Type": "Text",
                Adjustable: !0
              }
            ],
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Gunner/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Clash"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Gunner/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Gunner/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "With your favorite gun",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1."
              },
              {
                $id: "Starforged/Assets/Path/Gunner/Abilities/3/Alter_Moves/2",
                Moves: [
                  "Starforged/Moves/Combat/Enter_the_Fray",
                  "Starforged/Moves/Suffer/Endure_Stress"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Gunner/Abilities/3/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Gunner/Abilities/3/Alter_Moves/2/Trigger/Options/1",
                      Text: "While wielding your favorite gun",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Gunner/Abilities/3/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Gunner/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Gunner/Abilities/3/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Gunslinger",
        Name: "Gunslinger",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Gunslinger", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Requirement: "If you wield a pistol...",
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Gunslinger/Abilities/1",
            Text: "When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) by facing off against your foe (+heart), or by preparing to act without tipping them off (+shadow), add +1 and take +1 momentum on a hit. On a strong hit with a match, you may immediately take a shot (without making a move) and mark progress twice.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Gunslinger/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Gunslinger/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Gunslinger/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "By facing off against your foe",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: ["Heart"]
                    },
                    {
                      $id: "Starforged/Assets/Path/Gunslinger/Abilities/1/Alter_Moves/1/Trigger/Options/2",
                      Text: "By preparing to act without tipping off your foe",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: ["Shadow"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Gunslinger/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "Take +1 momentum. You may immediately take a shot (without making a move) and mark progress twice.",
                      $id: "Starforged/Assets/Path/Gunslinger/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Gunslinger/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Gunslinger/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Gunslinger/Abilities/2",
            Text: "When you [Gain Ground](Starforged/Moves/Combat/Gain_Ground) or [React Under Fire](Starforged/Moves/Combat/React_Under_Fire) by moving into cover, add +1. On a strong hit, this cover gives you leverage; add +1 when you make a move to attack or defend at range. If you then score a miss, the cover is lost or compromised.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Gunslinger/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Combat/Gain_Ground",
                  "Starforged/Moves/Combat/React_Under_Fire"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Gunslinger/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Gunslinger/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By moving into cover",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Gunslinger/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Your cover gives you leverage; add +1 when you make a move to attack or defend at range. If you then score a miss, the cover is lost or compromised.",
                    $id: "Starforged/Assets/Path/Gunslinger/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Gunslinger/Abilities/3",
            Text: "When you [Compel](Starforged/Moves/Adventure/Compel) or [Gain Ground](Starforged/Moves/Combat/Gain_Ground) with the threat of violence by holding someone at gunpoint, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Gunslinger/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Compel",
                  "Starforged/Moves/Combat/Gain_Ground"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Gunslinger/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Gunslinger/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "With the threat of violence by holding someone at gunpoint",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Gunslinger/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Gunslinger/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Gunslinger/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Haunted",
        Name: "Haunted",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Haunted", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Haunted/Abilities/1",
            Text: "You are haunted by the spirit of someone whose death you caused or mourn (or both). When you make a move to call upon their insight, add +1. On a weak hit, also [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-1). On a strong hit with a match, mark 1 tick on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Haunted/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Haunted/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Haunted/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a move to call upon the insight of the spirit that haunts you",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Haunted/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "Mark 1 tick on your bonds legacy track.",
                      $id: "Starforged/Assets/Path/Haunted/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Haunted/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "[Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-1).",
                    $id: "Starforged/Assets/Path/Haunted/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Haunted/Abilities/2",
            Text: "When you [Face Death](Starforged/Moves/Threshold/Face_Death) guided by the spirit, add +1. On a strong hit, envision what you learn from them or about them, and mark 2 ticks on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Haunted/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Threshold/Face_Death"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Haunted/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Haunted/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "Guided by the spirit that haunts you",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Haunted/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Envision what you learn from them or about them, and mark 2 ticks on your bonds legacy track.",
                    $id: "Starforged/Assets/Path/Haunted/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Haunted/Abilities/3",
            Text: `One time only, when you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) (extreme or greater) in service to the spirit, take this ability at no cost and choose one.

  * Let them go: Mark 2 ticks on your bonds legacy track for each marked ability, and discard this asset.
  * Bolster your link: When you use a HAUNTED asset ability, take +1 momentum on a hit.`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Haunted/Abilities/3/Alter_Moves/1",
                Alters: [
                  "Starforged/Assets/Path/Haunted/Abilities/2/Alter_Moves/1",
                  "Starforged/Assets/Path/Haunted/Abilities/3/Alter_Moves/1"
                ],
                Outcomes: {
                  $id: "Starforged/Assets/Path/Haunted/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Haunted/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Haunted/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Healer",
        Name: "Healer",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Healer", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Healer/Abilities/1",
            Text: "When you give medical care to [Heal](Starforged/Moves/Recover/Heal) yourself or another character, add +1. If you are treating someone other than yourself, take +1 spirit or +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Healer/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Heal"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Healer/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Healer/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "Give medical care to yourself",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1."
              },
              {
                $id: "Starforged/Assets/Path/Healer/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Recover/Heal"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Healer/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Healer/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "Give medical care to another character",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Healer/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 spirit or +1 momentum on a hit.",
                    $id: "Starforged/Assets/Path/Healer/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 spirit or +1 momentum on a hit.",
                    $id: "Starforged/Assets/Path/Healer/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Healer/Abilities/2",
            Text: "When you [Gather Information](Starforged/Moves/Adventure/Gather_Information) by studying medical evidence or biological remains, add +1 and take +1 momentum on a hit. On a strong hit with a match, you also reveal an unexpected medical anomaly; mark 1 tick on your discoveries legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Healer/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Gather_Information"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Healer/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Healer/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By studying medical evidence or biological remains",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Healer/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "Take +1 momentum. You also reveal an unexpected medical anomaly; mark 1 tick on your discoveries legacy track.",
                      $id: "Starforged/Assets/Path/Healer/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Healer/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Healer/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Healer/Abilities/3",
            Text: "Once every day or so, when you are in a safe place with plenty of time on your hands, you may [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1) and provide basic medical care for yourself, companions, or allies without risk. If you do, roll only your action die. On a 1-4, automatically give +1 health to everyone whose health is greater than 0. On a 5-6, make it +2.",
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Infiltrator",
        Name: "Infiltrator",
        Aliases: ["Agent"],
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Infiltrator", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Infiltrator/Abilities/1",
            Text: "When you make a move to break into a secure site, infiltrate a protected area, or hack or manipulate a secure system, add +1 and take +1 momentum on a hit. On a strong hit with a match, access is easier than expected; take another +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Infiltrator/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Infiltrator/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Infiltrator/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "To break into a secure site, infiltrate a protected area, or hack or manipulate a secure system",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Infiltrator/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "Access is easier than expected. Take +2 momentum.",
                      $id: "Starforged/Assets/Path/Infiltrator/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Infiltrator/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Infiltrator/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Infiltrator/Abilities/2",
            Text: "When you [Face Danger](Starforged/Moves/Adventure/Face_Danger) or [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) to establish a false identity, add +1. On a hit, you may add +1 when using that identity to deceive or influence others. If you score a miss with a match when using that identity, your deception is completely and dramatically undone.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Infiltrator/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger",
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Infiltrator/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Infiltrator/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "To establish a false identity",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Infiltrator/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: `You may add +1 when using that identity to deceive or influence others.

If you score a miss with a match when using that identity, your deception is completely and dramatically undone.`,
                    $id: "Starforged/Assets/Path/Infiltrator/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: `You may add +1 when using that identity to deceive or influence others.

If you score a miss with a match when using that identity, your deception is completely and dramatically undone.`,
                    $id: "Starforged/Assets/Path/Infiltrator/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Infiltrator/Abilities/3",
            Text: "When you [Check Your Gear](Starforged/Moves/Adventure/Check_Your_Gear) for a device with a specific function to aid in infiltration, espionage, or sabotage, add +1. On a hit, reroll any dice the first time you make a move aided by the device.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Infiltrator/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Check_Your_Gear"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Infiltrator/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Infiltrator/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "For a device with a specific function to aid in infiltration, espionage, or sabotage",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Infiltrator/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Reroll any dice the first time you make a move aided by the device.",
                    $id: "Starforged/Assets/Path/Infiltrator/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Reroll any dice the first time you make a move aided by the device.",
                    $id: "Starforged/Assets/Path/Infiltrator/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Kinetic",
        Name: "Kinetic",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Kinetic", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Kinetic/Abilities/1",
            Text: "You wield kinetic powers. By focusing, you may remotely push, pull, lift, or constrict objects and beings that are about your size or smaller. When you are in a risky situation and draw on your powers to make a move, add +2 and [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Kinetic/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Kinetic/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Kinetic/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you are in a risky situation and draw on your kinetic powers to make a move",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +2 and [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2)."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Kinetic/Abilities/2",
            Text: "As above, but you may instead draw on your powers in a desperate effort to change the outcome of an action. If you do, add +2 (after you roll) and [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-3).",
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Kinetic/Abilities/3",
            Text: "When your momentum is at its max, you may attempt great kinetic feats, such as manipulating large objects and creating destructive bursts of concussive force. To do so, reset momentum. Then, as you make a single move fueled by your powers, take an automatic strong hit. If you are in a fight, mark progress.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Kinetic/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Kinetic/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Kinetic/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "Your momentum is at its max, and you attempt great kinetic feats (such as manipulating large objects and creating destructive bursts of concussive force)",
                      "Roll type": "Action roll",
                      Method: "Strong Hit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Reset momentum. Then, as you make a single move fueled by your powers, take an automatic strong hit. If you are in a fight, mark progress."
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Leader",
        Name: "Leader",
        Aliases: ["Commander"],
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Leader", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Leader/Abilities/1",
            Text: "When you [Aid Your Ally](Starforged/Moves/Adventure/Aid_Your_Ally) through leadership, coordination, or planning, add +1. On a strong hit, any allies who are present take +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Leader/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Aid_Your_Ally",
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage",
                  "Starforged/Moves/Combat/Gain_Ground"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Leader/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Leader/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you [Aid Your Ally](Starforged/Moves/Adventure/Aid_Your_Ally) through leadership, coordination, or planning",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Leader/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Any allies who are present take +1 momentum.",
                    $id: "Starforged/Assets/Path/Leader/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Leader/Abilities/2",
            Text: "When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) (+heart) by coordinating with your team as they wade into the fight, make your move before your allies act. On a strong hit, all allies may take an automatic strong hit. On a strong hit with a match, also mark progress on any objectives in this fight.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Leader/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Leader/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Leader/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By coordinating with your team as they wade into the fight",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Make your move before your allies act.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Leader/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "All allies may take an automatic strong hit.",
                    "With a Match": {
                      Text: "All allies may take an automatic strong hit, and mark progress on any objectives in this fight",
                      $id: "Starforged/Assets/Path/Leader/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Leader/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Leader/Abilities/3",
            Text: "When you make a move to influence someone (not an ally) through leadership, add +1 and take +1 momentum on a hit. On a strong hit with a match, your command galvanizes them into unexpected action. Take another +1 momentum, and mark 1 tick on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Leader/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Leader/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Leader/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "To influence someone (not an ally) through leadership",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Leader/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "Your command galvanizes them into unexpected action. Take +2 momentum, and mark 1 tick on your bonds legacy track.",
                      $id: "Starforged/Assets/Path/Leader/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Leader/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Leader/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Looper",
        Name: "Looper",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Looper", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Looper/Abilities/1",
            Text: "When you score a miss on a suffer move (not [Endure Stress](Starforged/Moves/Suffer/Endure_Stress)), you may loop back a second or two. If you do, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2), reroll any dice, and take +1 momentum on a strong hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Looper/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Suffer/Endure_Harm",
                  "Starforged/Moves/Suffer/Companion_Takes_a_Hit",
                  "Starforged/Moves/Suffer/Withstand_Damage"
                ],
                Outcomes: {
                  $id: "Starforged/Assets/Path/Looper/Abilities/1/Alter_Moves/1/Outcomes",
                  Miss: {
                    Text: "You may loop back a second or two. If you do, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2), reroll any dice, and take +1 momentum on a strong hit.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Looper/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Looper/Abilities/2",
            Text: "When you create a link to the current point in time, note the value of condition meters for you and your allies. You can retain only one active link. If you later loop back to this moment, roll +the gap in time: +4 if minutes, +3 if hours, or +2 if days. You may not burn momentum on this roll. On a strong hit, return to the linked point, retain any progress, and set condition meters (except for spirit) to their original values. On a weak hit, as above, but [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-2). On a miss, as with a strong hit, but you find the timeline corrupted; [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
            Moves: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Assets",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622"
                },
                $id: "Starforged/Moves/Assets/Path/Looper/Abilities/2/Loop_Back",
                Name: "Loop Back",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Path/Looper",
                Display: { Title: "Loop Back" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Path/Looper/Abilities/2/Loop_Back/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Path/Looper/Abilities/2/Loop_Back/Trigger/Options/1",
                      Text: "When you loop back to a linked moment in time...",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Moves/Assets/Path/Looper/Abilities/2/Loop_Back/Trigger/Options/1/Custom_stat"
                      ],
                      "Custom stat": {
                        $id: "Starforged/Moves/Assets/Path/Looper/Abilities/2/Loop_Back/Trigger/Options/1/Custom_stat",
                        Name: "Time gap",
                        Options: [
                          {
                            $id: "Starforged/Moves/Assets/Path/Looper/Abilities/2/Loop_Back/Trigger/Options/1/Custom_stat/Minutes",
                            Name: "Minutes",
                            Value: 4
                          },
                          {
                            $id: "Starforged/Moves/Assets/Path/Looper/Abilities/2/Loop_Back/Trigger/Options/1/Custom_stat/Hours",
                            Name: "Hours",
                            Value: 3
                          },
                          {
                            $id: "Starforged/Moves/Assets/Path/Looper/Abilities/2/Loop_Back/Trigger/Options/1/Custom_stat/Days",
                            Name: "Days",
                            Value: 2
                          }
                        ]
                      }
                    }
                  ]
                },
                Text: "When you create a link to the current point in time, note the value of condition meters for you and your allies. You can retain only one active link. If you later loop back to this moment, roll +the gap in time: +4 if minutes, +3 if hours, or +2 if days. You may not burn momentum on this roll. On a strong hit, return to the linked point, retain any progress, and set condition meters (except for spirit) to their original values. On a weak hit, as above, but [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-2). On a miss, as with a strong hit, but you find the timeline corrupted; [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Path/Looper/Abilities/2/Loop_Back/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Path/Looper/Abilities/2/Loop_Back/Outcomes/Strong_Hit",
                    Text: "You and your allies return to the linked point, retain any progress, and set condition meters (except for spirit) to their original values."
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Path/Looper/Abilities/2/Loop_Back/Outcomes/Weak_Hit",
                    Text: `You and your allies return to the linked point, retain any progress, and set condition meters (except for spirit) to their original values

However, you [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-2).`
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Path/Looper/Abilities/2/Loop_Back/Outcomes/Miss",
                    Text: `You and your allies return to the linked point, retain any progress, and set condition meters (except for spirit) to their original values.

However, you find the timeline corrupted! [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Looper/Abilities/3",
            Text: "When you make a reroll granted by any asset ability on an action roll, also add +1.",
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Lore_Hunter",
        Name: "Lore Hunter",
        Aliases: ["Archivist", "Lore-Hunter"],
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Lore Hunter", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1",
            Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) (formidable or greater) to recover valuable knowledge or an extraordinary relic, reroll any dice. When you [Reach a Milestone](Starforged/Moves/Quest/Reach_a_Milestone) in the pursuit of that quest, take +2 momentum. When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) and score a hit, also mark 2 ticks on your discoveries legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "To recover valuable knowledge or an extraordinary relic (formidable or greater)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "When you [Reach a Milestone](Starforged/Moves/Quest/Reach_a_Milestone) in the pursuit of that quest, take +2 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "When you [Reach a Milestone](Starforged/Moves/Quest/Reach_a_Milestone) in the pursuit of that quest, take +2 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "When you [Reach a Milestone](Starforged/Moves/Quest/Reach_a_Milestone) in the pursuit of that quest, take +2 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Quest/Fulfill_Your_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "To recover valuable knowledge or an extraordinary relic (formidable or greater)",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Also mark 2 ticks on your discoveries legacy track.",
                    $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Also mark 2 ticks on your discoveries legacy track.",
                    $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/2",
            Text: "When you make a move to conduct extended research or study, reroll any challenge dice. On a match, you piece together an extraordinary or harrowing new theory; envision the nature of this revelation and mark 1 tick on your discoveries legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "To conduct extended research or study",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Challenge dice",
                      Text: "Reroll any challenge dice."
                    },
                    "With a Match": {
                      Text: "You piece together an extraordinary or harrowing new theory; envision the nature of this revelation and mark 1 tick on your discoveries legacy track.",
                      $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Challenge dice",
                      Text: "Reroll any challenge dice."
                    },
                    "With a Match": {
                      Text: "You piece together an extraordinary or harrowing new theory; envision the nature of this revelation and mark 1 tick on your discoveries legacy track.",
                      $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/2/Alter_Moves/1/Outcomes/Miss/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/3",
            Text: "When you recall esoteric knowledge to [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) or [Gain Ground](Starforged/Moves/Combat/Gain_Ground), add +1. On a hit, envision the obscure but helpful fact, theory, or technique you put to use, and take +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage",
                  "Starforged/Moves/Combat/Gain_Ground"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you recall esoteric knowledge",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Envision the obscure but helpful fact, theory, or technique you put to use, and take +1 momentum.",
                    $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Envision the obscure but helpful fact, theory, or technique you put to use, and take +1 momentum.",
                    $id: "Starforged/Assets/Path/Lore_Hunter/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Loyalist",
        Name: "Loyalist",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Loyalist", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Loyalist/Abilities/1",
            Text: "When you [Aid Your Ally](Starforged/Moves/Adventure/Aid_Your_Ally), add +1 and take +1 momentum on a hit. This is in addition to the benefits taken by your ally. On a strong hit with a match, envision how this moment marks a breakthrough or milestone in your relationship; both of you may mark 1 tick on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Loyalist/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Aid_Your_Ally",
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage",
                  "Starforged/Moves/Combat/Gain_Ground"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Loyalist/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Loyalist/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you [Aid Your Ally](Starforged/Moves/Adventure/Aid_Your_Ally)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1 (in addition to the benefits taken by your ally).",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Loyalist/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum (in addition to the benefits taken by your ally).",
                    "With a Match": {
                      Text: "Take +1 momentum (in addition to the benefits taken by your ally). Envision how this moment marks a breakthrough or milestone in your relationship; both of you may mark 1 tick on your bonds legacy track.",
                      $id: "Starforged/Assets/Path/Loyalist/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Loyalist/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Loyalist/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Loyalist/Abilities/2",
            Text: "You may burn momentum on behalf of an ally to improve their result on a move. If you do, your ally takes +1 momentum.",
            "Alter Momentum": {
              Burn: [
                {
                  Trigger: {
                    Text: "On behalf of an ally to improve their result on a move"
                  },
                  Effect: { Text: "Your ally takes +1 momentum." }
                }
              ]
            },
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Loyalist/Abilities/3",
            Text: "When you stand with your ally as they make a progress move, envision how you support them. Then, roll one challenge die. On a 1-9, your ally may replace one of their challenge dice with yours. On a 10, envision how you inadvertently undermine their action; your ally must replace their lowest challenge die with yours.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Loyalist/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Loyalist/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Loyalist/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you stand with your ally as they make a progress move",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Ally: !0, Player: !1 }
                },
                Text: "Envision how you support your ally. Then, roll one challenge die. On a 1-9, your ally may replace one of their challenge dice with yours. On a 10, envision how you inadvertently undermine their action; your ally must replace their lowest challenge die with yours."
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Mercenary",
        Name: "Mercenary",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Mercenary", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Mercenary/Abilities/1",
            Text: "When you agree to wage war or defend others from war in exchange for payment or promises, you may [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to see the mission done. If you do, reroll any dice. When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow), make the legacy reward one rank higher (1 extra box if already epic).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "To wage war or defend others from war in exchange for payment or promises",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Quest/Fulfill_Your_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "To wage war or defend others from war in exchange for payment or promises",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Make the legacy reward one rank higher (1 extra box if already epic).",
                    $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Make the legacy reward one rank higher (1 extra box if already epic).",
                    $id: "Starforged/Assets/Path/Mercenary/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Mercenary/Abilities/2",
            Text: "When you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) by searching out or making contact with someone in need of your services, add +1 and take +1 momentum on a hit. On a strong hit with a match, this mission pits you against an unresolved aspect of your past or a hated foe; mark 2 ticks on your quests legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Mercenary/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Connection/Make_a_Connection"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Mercenary/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Mercenary/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By searching out or making contact with someone in need of your services",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Mercenary/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "This mission pits you against an unresolved aspect of your past or a hated foe; mark 2 ticks on your quests legacy track, and take +1 momentum.",
                      $id: "Starforged/Assets/Path/Mercenary/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Mercenary/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Mercenary/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Mercenary/Abilities/3",
            Text: "When you [Check Your Gear](Starforged/Moves/Adventure/Check_Your_Gear) in the midst of a fight, or [Resupply](Starforged/Moves/Recover/Resupply) by looting the field of battle in the aftermath of a fight, add +2.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Mercenary/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Check_Your_Gear"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Mercenary/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Mercenary/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "In the midst of a fight",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +2."
              },
              {
                $id: "Starforged/Assets/Path/Mercenary/Abilities/3/Alter_Moves/2",
                Moves: ["Starforged/Moves/Recover/Resupply"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Mercenary/Abilities/3/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Mercenary/Abilities/3/Alter_Moves/2/Trigger/Options/1",
                      Text: "By looting the field of battle in the aftermath of a fight",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +2."
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Naturalist",
        Name: "Naturalist",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Naturalist", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Naturalist/Abilities/1",
            Text: "When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) or [Gather Information](Starforged/Moves/Adventure/Gather_Information) using your knowledge of lifeforms or planetside ecosystems, add +1 and take +1 momentum on a hit. On a strong hit with a match, you also confirm an obscure theory or reveal a surprising aspect of the encounter; mark 1 tick on your discoveries legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Naturalist/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage",
                  "Starforged/Moves/Adventure/Gather_Information"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Naturalist/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Naturalist/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "Using your knowledge of lifeforms or planetside ecosystems",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Naturalist/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "Take +1 momentum. You also confirm an obscure theory or reveal a surprising aspect of the encounter; mark 1 tick on your discoveries legacy track.",
                      $id: "Starforged/Assets/Path/Naturalist/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Naturalist/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Naturalist/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Naturalist/Abilities/2",
            Text: "When you make a move by taking a risky action to pacify, avoid, or outwit a creature (decide before rolling), you may reroll any dice, but must [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Naturalist/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Naturalist/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Naturalist/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By taking a risky action to pacify, avoid, or outwit a creature",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Naturalist/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Any",
                      Text: "You may reroll any dice, but must [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2)."
                    },
                    $id: "Starforged/Assets/Path/Naturalist/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Any",
                      Text: "You may reroll any dice, but must [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2)."
                    },
                    $id: "Starforged/Assets/Path/Naturalist/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Any",
                      Text: "You may reroll any dice, but must [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2)."
                    },
                    $id: "Starforged/Assets/Path/Naturalist/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Naturalist/Abilities/3",
            Text: "You are skilled at planetside survival. When you [Resupply](Starforged/Moves/Recover/Resupply) to scavenge resources in a life-bearing natural environment, take +1 supply on a hit. When you [Face Danger](Starforged/Moves/Adventure/Face_Danger) against an environmental threat, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Naturalist/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Resupply"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Naturalist/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Naturalist/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "To scavenge resources in a life-bearing natural environment",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Naturalist/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 supply.",
                    $id: "Starforged/Assets/Path/Naturalist/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 supply.",
                    $id: "Starforged/Assets/Path/Naturalist/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Naturalist/Abilities/3/Alter_Moves/2",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Naturalist/Abilities/3/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Naturalist/Abilities/3/Alter_Moves/2/Trigger/Options/1",
                      Text: "Against an environmental threat",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Naturalist/Abilities/3/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Naturalist/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Naturalist/Abilities/3/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Navigator",
        Name: "Navigator",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Navigator", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Navigator/Abilities/1",
            Text: `When you [Set a Course](Starforged/Moves/Exploration/Set_a_Course), choose one.

  * Follow the fastest path: Take +2 momentum on a strong hit.
  * Follow the safest path: Add +1

On a strong hit with a match, you charted a new path during the journey; mark 1 tick on your discoveries legacy track.`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Navigator/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Exploration/Set_a_Course"],
                Text: `Choose one.

  * Follow the fastest path: Take +2 momentum on a strong hit.
  * Follow the safest path: Add +1`,
                Outcomes: {
                  $id: "Starforged/Assets/Path/Navigator/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "You charted a new path during the journey; mark 1 tick on your discoveries legacy track.",
                      $id: "Starforged/Assets/Path/Navigator/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Navigator/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Navigator/Abilities/2",
            Text: "When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) by charting the way forward, [Face Danger](Starforged/Moves/Adventure/Face_Danger) to find a path around a hazard, or [Gather Information](Starforged/Moves/Adventure/Gather_Information) about a location by studying your charts, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By charting the way forward",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/2",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/2/Trigger/Options/1",
                      Text: "To find a path around a hazard",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/3",
                Moves: ["Starforged/Moves/Adventure/Gather_Information"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/3/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/3/Trigger/Options/1",
                      Text: "About a location by studying your charts",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/3/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/3/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Navigator/Abilities/2/Alter_Moves/3/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Navigator/Abilities/3",
            Text: "Once per expedition, when you or an ally [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) and score a weak hit or miss, you may ignore that result, plot an alternate path, and make it an automatic strong hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Navigator/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Navigator/Abilities/3/Alter_Moves/1/Trigger",
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Navigator/Abilities/3/Alter_Moves/1/Outcomes",
                  "Weak Hit": {
                    Text: "Once per expedition, when you or an ally [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) and score a weak hit or miss, you may ignore that result, plot an alternate path, and make it an automatic strong hit.",
                    $id: "Starforged/Assets/Path/Navigator/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "Once per expedition, when you or an ally [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) and score a weak hit or miss, you may ignore that result, plot an alternate path, and make it an automatic strong hit.",
                    $id: "Starforged/Assets/Path/Navigator/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Outcast",
        Name: "Outcast",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Outcast", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Outcast/Abilities/1",
            Text: "When you [Hearten](Starforged/Moves/Recover/Hearten) in isolation, you may attempt to find solace in fond memories or a hopeful wish. If you do (decide before rolling), reroll any dice but count a strong hit as a weak hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Outcast/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Hearten"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Outcast/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Outcast/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "In isolation, attempting find solace in fond memories or a hopeful wish.",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Outcast/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "Count as": "Weak Hit",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Outcast/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Outcast/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Outcast/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Outcast/Abilities/2",
            Text: "When you [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) and your supply is reduced to 0, roll +wits. On a strong hit, you manage to scrape by and take +1 supply. On a weak hit, you may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) in exchange for +1 supply. On a miss, your supply remains at 0 and you [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).",
            Moves: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Assets",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622"
                },
                $id: "Starforged/Moves/Assets/Path/Outcast/Abilities/2/Scrape_By",
                Name: "Scrape By",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Path/Outcast",
                Display: { Title: "Scrape By" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Path/Outcast/Abilities/2/Scrape_By/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Path/Outcast/Abilities/2/Scrape_By/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Wits"]
                    }
                  ],
                  Text: "When you [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) and your supply is reduced to 0..."
                },
                Text: "When you [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) and your supply is reduced to 0, roll +wits. On a strong hit, you manage to scrape by and take +1 supply. On a weak hit, you may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) in exchange for +1 supply. On a miss, your supply remains at 0 and you [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Path/Outcast/Abilities/2/Scrape_By/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Path/Outcast/Abilities/2/Scrape_By/Outcomes/Strong_Hit",
                    Text: "You manage to scrape by and take +1 supply."
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Path/Outcast/Abilities/2/Scrape_By/Outcomes/Weak_Hit",
                    Text: "You may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) in exchange for +1 supply."
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Path/Outcast/Abilities/2/Scrape_By/Outcomes/Miss",
                    Text: "Your supply remains at 0 and you [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1)."
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Outcast/Abilities/3",
            Text: "When you or an ally [Sojourn](Starforged/Moves/Recover/Sojourn) and score a strong hit with a match, you may envision encountering someone who knows or understands you. If you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) with them, take an automatic strong hit and mark 2 ticks on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Outcast/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Sojourn"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Outcast/Abilities/3/Alter_Moves/1/Trigger",
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Outcast/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "You may envision encountering someone who knows or understands you. If you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) with them, take an automatic strong hit and mark 2 ticks on your bonds legacy track.",
                      $id: "Starforged/Assets/Path/Outcast/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Outcast/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Scavenger",
        Name: "Scavenger",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Scavenger", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Scavenger/Abilities/1",
            Text: "When you [Gather Information](Starforged/Moves/Adventure/Gather_Information) or [Resupply](Starforged/Moves/Recover/Resupply) by scavenging a wreck, ruin, or abandoned site, add +1 and take +1 momentum on a hit. On a strong hit with a match, you also find something of unique value, significance, or function; envision the nature of this discovery, take +2 momentum, and mark 2 ticks on your discoveries legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Scavenger/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Gather_Information"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Scavenger/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Scavenger/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "By scavenging a wreck, ruin, or abandoned site",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Scavenger/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum",
                    "With a Match": {
                      Text: "You find something of unique value, significance, or function; envision the nature of this discovery, take +3 momentum, and mark 2 ticks on your discoveries legacy track.",
                      $id: "Starforged/Assets/Path/Scavenger/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Scavenger/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Scavenger/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Scavenger/Abilities/2",
            Text: "When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) to cobble together an ad hoc tool, device, or weapon, envision what you intend to create. On a hit, you may add +1 when making a move aided by the item. If you roll a 1 on your action die while using the item, it is permanently broken, lost, or depleted.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Scavenger/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Scavenger/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Scavenger/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "To cobble together an ad hoc tool, device, or weapon",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Envision what you intend to create.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Scavenger/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "You may add +1 when making a move aided by the item. If you roll a 1 on your action die while using the item, it is permanently broken, lost, or depleted.",
                    $id: "Starforged/Assets/Path/Scavenger/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "You may add +1 when making a move aided by the item. If you roll a 1 on your action die while using the item, it is permanently broken, lost, or depleted.",
                    $id: "Starforged/Assets/Path/Scavenger/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Scavenger/Abilities/3",
            Text: "When you [Check Your Gear](Starforged/Moves/Adventure/Check_Your_Gear), roll +wits or +supply (whichever is highest) and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Scavenger/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Check_Your_Gear"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Scavenger/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Scavenger/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Highest",
                      Using: ["Wits", "Supply"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Scavenger/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Scavenger/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Scavenger/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Scoundrel",
        Name: "Scoundrel",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Scoundrel", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Scoundrel/Abilities/1",
            Text: "When you make a move by lying, bluffing, stealing, or cheating, add +2. On a strong hit with a match, your deception creates an unexpected opportunity; take the value of your shadow as +momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Scoundrel/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Scoundrel/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Scoundrel/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "By lying, bluffing, stealing, or cheating",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +2.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Scoundrel/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "Your deception creates an unexpected opportunity; take the value of your shadow as +momentum.",
                      $id: "Starforged/Assets/Path/Scoundrel/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Scoundrel/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Scoundrel/Abilities/2",
            Text: "When you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) to search out a new contact, you may roll +shadow. If you do, reroll any dice on a miss and envision how your reputation or underworld contacts lead you to a disreputable connection.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Scoundrel/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Connection/Make_a_Connection"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Scoundrel/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Scoundrel/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "To search out a new contact",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Shadow"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Scoundrel/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Envision how your reputation or underworld contacts lead you to a disreputable connection.",
                    $id: "Starforged/Assets/Path/Scoundrel/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Envision how your reputation or underworld contacts lead you to a disreputable connection.",
                    $id: "Starforged/Assets/Path/Scoundrel/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "Envision how your reputation or underworld contacts lead you to a disreputable connection.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Scoundrel/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Scoundrel/Abilities/3",
            Text: "When you make a quick escape or con your way out of a situation and burn momentum to gain a strong hit, take +1 momentum after you reset. If you envision how this momentary success leaves you fated for future trouble, mark 2 ticks on your quests legacy track.",
            "Alter Momentum": {
              Burn: [
                {
                  Trigger: {
                    Text: "When you make a quick escape or con your way out of a situation and burn momentum to gain a strong hit"
                  },
                  Outcomes: ["Strong Hit"],
                  Effect: {
                    Text: "Take +1 momentum after you reset. If you envision how this momentary success leaves you fated for future trouble, mark 2 ticks on your quests legacy track."
                  }
                }
              ]
            },
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Seer",
        Name: "Seer",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Seer", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Seer/Abilities/1",
            Text: "When you envision experiencing a prophetic dream, you may [Ask the Oracle](Starforged/Moves/Fate/Ask_the_Oracle) for details using an interpretive oracle such as Action/Theme or Descriptor/Focus. If you record the answer, and later face a situation which gives truth to the vision, take an automatic strong hit (one time only) when making a move to act on your foresight. Then, clear the prophecy. Only one prophecy can be active at a time.",
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Seer/Abilities/2",
            Text: "When you focus or meditate to [Gather Information](Starforged/Moves/Adventure/Gather_Information) about a place, being, or situation (in person or remotely), roll +spirit and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Seer/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Gather_Information"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Seer/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Seer/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you focus or meditate to [Gather Information](Starforged/Moves/Adventure/Gather_Information) about a place, being, or situation (in person or remotely)",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Spirit"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Seer/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Seer/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Seer/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Seer/Abilities/3",
            Text: "When you or an ally roll a match as you [Sojourn](Starforged/Moves/Recover/Sojourn) in a community or [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) within a site, you may envision gaining sudden and unbidden insight about the location. If you do, take +2 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "Within a site",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "You may envision gaining sudden and unbidden insight about the location. If you do, take +2 momentum.",
                      $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  Miss: {
                    "With a Match": {
                      Text: "You may envision gaining sudden and unbidden insight about the location. If you do, take +2 momentum.",
                      $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/1/Outcomes/Miss/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/2",
                Moves: ["Starforged/Moves/Recover/Sojourn"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/2/Trigger",
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "You may envision gaining sudden and unbidden insight about the location. If you do, take +2 momentum.",
                      $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  Miss: {
                    "With a Match": {
                      Text: "You may envision gaining sudden and unbidden insight about the location. If you do, take +2 momentum.",
                      $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/2/Outcomes/Miss/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Seer/Abilities/3/Alter_Moves/2/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Shade",
        Name: "Shade",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Shade", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Shade/Abilities/1",
            Text: "Drawing on esoteric energies, you may instantly cloak your form in the shadowy veil of the void. When you are veiled and make a move to ambush, hide, or sneak, you may preset your action die to 5. In darkness, make it 6. On a miss, in addition to any other cost, you are revealed and can\u2019t veil yourself again until the current situation is resolved.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Shade/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Shade/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Shade/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you are veiled and make a move to ambush, hide, or sneak (not in darkness)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "You may preset your action die to 5.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Shade/Abilities/1/Alter_Moves/1/Outcomes",
                  Miss: {
                    Text: "In addition to any other cost, you are revealed and can\u2019t veil yourself again until the current situation is resolved.",
                    $id: "Starforged/Assets/Path/Shade/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Shade/Abilities/1/Alter_Moves/2",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Shade/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Shade/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "When you are veiled and make a move to ambush, hide, or sneak (in darkness)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "You may preset your action die to 6.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Shade/Abilities/1/Alter_Moves/2/Outcomes",
                  Miss: {
                    Text: "In addition to any other cost, you are revealed and can\u2019t veil yourself again until the current situation is resolved.",
                    $id: "Starforged/Assets/Path/Shade/Abilities/1/Alter_Moves/2/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Shade/Abilities/2",
            Text: "When you expand your veil to immerse your surroundings in darkness, roll +shadow. On a strong hit, the darkness extends to all adjacent spaces. On a weak hit, only your immediate surroundings are made dark. On a miss, you fail and draw unwanted attention.",
            Moves: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Assets",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622"
                },
                $id: "Starforged/Moves/Assets/Path/Shade/Abilities/2/Shroud_in_Darkness",
                Name: "Shroud in Darkness",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Path/Shade",
                Display: { Title: "Shroud in Darkness" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Path/Shade/Abilities/2/Shroud_in_Darkness/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Path/Shade/Abilities/2/Shroud_in_Darkness/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Shadow"]
                    }
                  ],
                  Text: "When you expand your veil to immerse your surroundings in darkness..."
                },
                Text: "When you expand your veil to immerse your surroundings in darkness, roll +shadow. On a strong hit, the darkness extends to all adjacent spaces. On a weak hit, only your immediate surroundings are made dark. On a miss, you fail and draw unwanted attention.",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Path/Shade/Abilities/2/Shroud_in_Darkness/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Path/Shade/Abilities/2/Shroud_in_Darkness/Outcomes/Strong_Hit",
                    Text: "The darkness extends to all adjacent spaces."
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Path/Shade/Abilities/2/Shroud_in_Darkness/Outcomes/Weak_Hit",
                    Text: "Only your immediate surroundings are made dark."
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Path/Shade/Abilities/2/Shroud_in_Darkness/Outcomes/Miss",
                    Text: "You fail and draw unwanted attention."
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Shade/Abilities/3",
            Text: "When you intentionally drop your veil to reveal yourself for dramatic or surprising effect, foregoing its further use in this situation, take +2 momentum.",
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Slayer",
        Name: "Slayer",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Slayer", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Slayer/Abilities/1",
            Text: "When you make a move to investigate, track, or stalk an inhuman foe, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Slayer/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Slayer/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Slayer/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "To investigate, track, or stalk an inhuman foe",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Slayer/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Slayer/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Slayer/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Slayer/Abilities/2",
            Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) (formidable or greater) to slay an inhuman foe in service to a community, reroll any dice. When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) and score a hit, also mark 2 ticks on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "To slay an inhuman foe in service to a community (formidable or greater)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/2",
                Moves: ["Starforged/Moves/Quest/Fulfill_Your_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/2/Trigger/Options/1",
                      Text: "To slay an inhuman foe in service to a community (formidable or greater)",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Mark 2 ticks on your bonds legacy track.",
                    $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark 2 ticks on your bonds legacy track.",
                    $id: "Starforged/Assets/Path/Slayer/Abilities/2/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Slayer/Abilities/3",
            Text: "When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) with an objective to slay an inhuman foe, take +2 momentum. If you choose to face the creature on its own terms as you begin the fight, envision the crucial weapon, protection, or aid you set aside, and set the objective one rank higher. If you [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action) after making this sacrifice and score a strong hit, take a trophy of your victory and mark 2 ticks on your quests legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Slayer/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Slayer/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Slayer/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "With an objective to slay an inhuman foe",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Slayer/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +2 momentum. If you choose to face the creature on its own terms as you begin the fight, envision the crucial weapon, protection, or aid you set aside, and set the objective one rank higher. If you [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action) after making this sacrifice and score a strong hit, take a trophy of your victory and mark 2 ticks on your quests legacy track.",
                    $id: "Starforged/Assets/Path/Slayer/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +2 momentum. If you choose to face the creature on its own terms as you begin the fight, envision the crucial weapon, protection, or aid you set aside, and set the objective one rank higher. If you [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action) after making this sacrifice and score a strong hit, take a trophy of your victory and mark 2 ticks on your quests legacy track.",
                    $id: "Starforged/Assets/Path/Slayer/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "Take +2 momentum. If you choose to face the creature on its own terms as you begin the fight, envision the crucial weapon, protection, or aid you set aside, and set the objective one rank higher. If you [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action) after making this sacrifice and score a strong hit, take a trophy of your victory and mark 2 ticks on your quests legacy track.",
                    $id: "Starforged/Assets/Path/Slayer/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Sleuth",
        Name: "Sleuth",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Sleuth", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Sleuth/Abilities/1",
            Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to solve a murder, disappearance, theft, or other mystery, make the rank of the quest no greater than formidable. Then, when you [Gather Information](Starforged/Moves/Adventure/Gather_Information) in the course of the investigation, roll three challenge dice and choose two. If any challenge dice match, you must use those values. On a miss with a match, envision what you learn of a deepening conspiracy or betrayal, make the rank of your quest one higher (no greater than epic), and use the new rank when marking future progress.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Sleuth/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Sleuth/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Sleuth/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "To solve a murder, disappearance, theft, or other mystery (no greater than formidable)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to solve a murder, disappearance, theft, or other mystery, make the rank of the quest no greater than formidable. Then, when you [Gather Information](Starforged/Moves/Adventure/Gather_Information) in the course of the investigation, roll three challenge dice and choose two. If any challenge dice match, you must use those values. On a miss with a match, envision what you learn of a deepening conspiracy or betrayal, make the rank of your quest one higher (no greater than epic), and use the new rank when marking future progress."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Sleuth/Abilities/2",
            Text: "When you make a move to avoid detection as you put a person or place under surveillance, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Sleuth/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Sleuth/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Sleuth/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "To avoid detection as you put a person or place under surveillance",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Sleuth/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Sleuth/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Sleuth/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Sleuth/Abilities/3",
            Text: "When you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) with a potential informant, you may (instead of rolling) take an automatic weak hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Sleuth/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Connection/Make_a_Connection"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Sleuth/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Sleuth/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "With a potential informant",
                      "Roll type": "Action roll",
                      Method: "Weak Hit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Sniper",
        Name: "Sniper",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Sniper", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Requirement: "If you wield a rifle...",
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Sniper/Abilities/1",
            Text: "When you target a minor foe from a distance (outside of a fight), roll +wits. On a strong hit, they are out of action. If other foes remain and you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) against them, mark progress. On a weak hit, as above, but you sacrifice time or position; [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1). On a miss, you draw attention or face a reprisal; [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
            Moves: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Assets",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622"
                },
                $id: "Starforged/Moves/Assets/Path/Sniper/Abilities/1/Snipe_Minor_Foe",
                Name: "Snipe Minor Foe",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Path/Sniper",
                Display: { Title: "Snipe Minor Foe" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Path/Sniper/Abilities/1/Snipe_Minor_Foe/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Path/Sniper/Abilities/1/Snipe_Minor_Foe/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Wits"]
                    }
                  ],
                  Text: "When you target a minor foe from a distance (outside of a fight)..."
                },
                Text: "When you target a minor foe from a distance (outside of a fight), roll +wits. On a strong hit, they are out of action. If other foes remain and you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) against them, mark progress. On a weak hit, as above, but you sacrifice time or position; [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1). On a miss, you draw attention or face a reprisal; [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Path/Sniper/Abilities/1/Snipe_Minor_Foe/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Path/Sniper/Abilities/1/Snipe_Minor_Foe/Outcomes/Strong_Hit",
                    Text: "The foe is out of action. If other foes remain and you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) against them, mark progress."
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Path/Sniper/Abilities/1/Snipe_Minor_Foe/Outcomes/Weak_Hit",
                    Text: `The foe is out of action. However, you sacrifice time or position; [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).

If other foes remain and you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) against them, mark progress.`
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Path/Sniper/Abilities/1/Snipe_Minor_Foe/Outcomes/Miss",
                    Text: "You draw attention or face a reprisal; [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Sniper/Abilities/2",
            Text: "When you [Strike](Starforged/Moves/Combat/Strike) from a distance with time enough to line up your shot, you may roll +wits. If you do, mark progress on a strong hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Sniper/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Strike"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Sniper/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Sniper/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "From a distance with time enough to line up your shot",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Wits"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Sniper/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Path/Sniper/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Sniper/Abilities/3",
            Text: "When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) by studying a distant situation through your rifle scope, or [Gain Ground](Starforged/Moves/Combat/Gain_Ground) by taking careful aim, you may sacrifice time for greater certainty. If you do (decide before rolling), [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1, -2, or -3) and add that amount. Then, take +1 momentum on a strong hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Sniper/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Sniper/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Sniper/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By studying a distant situation through your rifle scope",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "You may sacrifice time for greater certainty. If you do (decide before rolling), [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1, -2, or -3) and add that amount.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Sniper/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Sniper/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Sniper/Abilities/3/Alter_Moves/2",
                Moves: ["Starforged/Moves/Adventure/Gain_Ground"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Sniper/Abilities/3/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Sniper/Abilities/3/Alter_Moves/2/Trigger/Options/1",
                      Text: "By taking careful aim",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "You may sacrifice time for greater certainty. If you do (decide before rolling), [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1, -2, or -3) and add that amount.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Sniper/Abilities/3/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Sniper/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Tech",
        Name: "Tech",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Tech", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Tech/Abilities/1",
            Text: "When you make a move to configure, optimize, hack, or disrupt an electronic system, add +1. On a weak hit, you can choose to press your luck. If you do, reroll all dice and add +2 (instead of +1).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Tech/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Tech/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Tech/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "To configure, optimize, hack, or disrupt an electronic system",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Tech/Abilities/1/Alter_Moves/1/Outcomes",
                  "Weak Hit": {
                    Reroll: {
                      Text: "You can choose to press your luck. If you do, reroll all dice and add +2 (instead of +1).",
                      Dice: "All"
                    },
                    $id: "Starforged/Assets/Path/Tech/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Tech/Abilities/2",
            Text: "When you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) and score a miss, you may attempt to reroute power or reboot critical systems. If you do, first [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2). Then, reroll all dice, add +wits instead of +integrity, and count a weak hit as a miss.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Tech/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Withstand_Damage"],
                Outcomes: {
                  $id: "Starforged/Assets/Path/Tech/Abilities/2/Alter_Moves/1/Outcomes",
                  Miss: {
                    Reroll: {
                      Dice: "All",
                      Text: "You may attempt to reroute power or reboot critical systems. If you do, first [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2). Then, reroll all dice, add +wits instead of +integrity, and count a weak hit as a miss."
                    },
                    $id: "Starforged/Assets/Path/Tech/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Tech/Abilities/3",
            Text: "When you [Face Danger](Starforged/Moves/Adventure/Face_Danger) or [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) by creating a computer program to perform a specific, complex function, add +2 and take +1 momentum on a hit. One time only, when you trigger the program to fulfill its purpose, reroll any dice.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Tech/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Tech/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Tech/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By creating a computer program to perform a specific, complex function",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +2.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Tech/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum. One time only, when you trigger the program to fulfill its purpose, reroll any dice.",
                    $id: "Starforged/Assets/Path/Tech/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum. One time only, when you trigger the program to fulfill its purpose, reroll any dice.",
                    $id: "Starforged/Assets/Path/Tech/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Trader",
        Name: "Trader",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Trader", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Trader/Abilities/1",
            Text: "When you [Sojourn](Starforged/Moves/Recover/Sojourn) or [Compel](Starforged/Moves/Adventure/Compel), you may roll +supply. If you do, [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Trader/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Recover/Sojourn",
                  "Starforged/Moves/Adventure/Compel"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Trader/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Trader/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Supply"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Trader/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "[Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1).",
                    $id: "Starforged/Assets/Path/Trader/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "[Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1).",
                    $id: "Starforged/Assets/Path/Trader/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "[Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1).",
                    $id: "Starforged/Assets/Path/Trader/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Trader/Abilities/2",
            Text: "When you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) with a merchant or supplier, add +1. When you [Resupply](Starforged/Moves/Recover/Resupply) by bartering with them, reroll your action die if its value is less than your supply. On a strong hit, take +1 momentum or +1 supply.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Trader/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Connection/Make_a_Connection"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Trader/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Trader/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "With a merchant or supplier",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1."
              },
              {
                $id: "Starforged/Assets/Path/Trader/Abilities/2/Alter_Moves/2",
                Moves: ["Starforged/Moves/Recover/Resupply"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Trader/Abilities/2/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Trader/Abilities/2/Alter_Moves/2/Trigger/Options/1",
                      Text: "By bartering with a merchant or supplier connection",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Trader/Abilities/2/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum or +1 supply.",
                    Reroll: {
                      Dice: "Action die",
                      Text: "Reroll your action die if its value is less than your supply."
                    },
                    $id: "Starforged/Assets/Path/Trader/Abilities/2/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "Reroll your action die if its value is less than your supply."
                    },
                    $id: "Starforged/Assets/Path/Trader/Abilities/2/Alter_Moves/2/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Action die",
                      Text: "Reroll your action die if its value is less than your supply."
                    },
                    $id: "Starforged/Assets/Path/Trader/Abilities/2/Alter_Moves/2/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Trader/Abilities/3",
            Text: "When you or an ally [Sojourn](Starforged/Moves/Recover/Sojourn) and score a strong hit with a match, you have a chance to secure a unique item or valuable payload. Envision the nature of the opportunity and the obstacle you must overcome to acquire it. If you are successful, mark 2 ticks on your quests legacy track. One time only, you may use this acquisition to gain an automatic strong hit on any move where your resources are a factor.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Trader/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Make_a_Connection"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Trader/Abilities/3/Alter_Moves/1/Trigger",
                  By: { Player: !0, Ally: !0 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Trader/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "You have a chance to secure a unique item or valuable payload. Envision the nature of the opportunity and the obstacle you must overcome to acquire it. If you are successful, mark 2 ticks on your quests legacy track. One time only, you may use this acquisition to gain an automatic strong hit on any move where your resources are a factor.",
                      $id: "Starforged/Assets/Path/Trader/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Trader/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Vestige",
        Name: "Vestige",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Vestige", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Path/Vestige/Inputs/Last_of",
            Name: "Last of",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Vestige/Abilities/1",
            Text: "You are all that remains of a people, culture, or tradition. When you [Face Death](Starforged/Moves/Threshold/Face_Death) or [Face Desolation](Starforged/Moves/Threshold/Face_Desolation), visions of your heritage give you the strength to carry on. Envision how this manifests, and reroll any dice. On a strong hit with a match, a surprising new aspect of your heritage is revealed; take +2 momentum and mark 2 ticks on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Vestige/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Threshold/Face_Death",
                  "Starforged/Moves/Threshold/Face_Desolation"
                ],
                Outcomes: {
                  $id: "Starforged/Assets/Path/Vestige/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "A surprising new aspect of your heritage is revealed; take +2 momentum and mark 2 ticks on your bonds legacy track.",
                      $id: "Starforged/Assets/Path/Vestige/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    Reroll: {
                      Text: "Visions of your heritage give you the strength to carry on. Envision how this manifests, and reroll any dice.",
                      Dice: "Any"
                    },
                    $id: "Starforged/Assets/Path/Vestige/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Text: "Visions of your heritage give you the strength to carry on. Envision how this manifests, and reroll any dice.",
                      Dice: "Any"
                    },
                    $id: "Starforged/Assets/Path/Vestige/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Text: "Visions of your heritage give you the strength to carry on. Envision how this manifests, and reroll any dice.",
                      Dice: "Any"
                    },
                    $id: "Starforged/Assets/Path/Vestige/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Vestige/Abilities/2",
            Text: "When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) or [Compel](Starforged/Moves/Adventure/Compel) through a tale, performance, or ceremony, envision what you reveal of your heritage. Then, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Vestige/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage",
                  "Starforged/Moves/Adventure/Compel"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Vestige/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Vestige/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "Through a tale, performance, or ceremony",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Envision what you reveal of your heritage. Then, add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Vestige/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Vestige/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Vestige/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Vestige/Abilities/3",
            Text: "You carry a physical relic of your heritage. Envision its powers or nature. When you make a move directly aided by the relic and score a miss, you may reroll your action die.",
            Inputs: [
              {
                $id: "Starforged/Assets/Path/Vestige/Abilities/3/Inputs/Relic",
                Name: "Relic",
                "Input Type": "Text",
                Adjustable: !1
              }
            ],
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Vestige/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Vestige/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Vestige/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you make a move directly aided by the relic",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Vestige/Abilities/3/Alter_Moves/1/Outcomes",
                  Miss: {
                    Reroll: { Dice: "Action die" },
                    $id: "Starforged/Assets/Path/Vestige/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Veteran",
        Name: "Veteran",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Veteran", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Veteran/Abilities/1",
            Text: "When you are in a fight, increase your momentum reset by 1. Then, if you burn momentum to improve your result, add +1 on your next move.",
            "Alter Momentum": {
              Reset: [
                {
                  Trigger: { Text: "When you are in a fight" },
                  Value: 1
                }
              ],
              Burn: [
                {
                  Trigger: { Text: "When you are in a fight" },
                  Effect: { Text: "Add +1 on your next move" }
                }
              ]
            },
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Veteran/Abilities/2",
            Text: `When you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection), add +1. If you roll a match, you have a history.

  * On a strong hit with a match, you once fought beside them, and they owe you a favor. Mark 1 tick on your bonds legacy track, and [Develop Your Relationship](Starforged/Moves/Connection/Develop_Your_Relationship) now.
  * On a miss with a match, you once fought against them, and they hold a grudge.`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Veteran/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Connection/Make_a_Connection"],
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Veteran/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "You have a history: you once fought beside them, and they owe you a favor. Mark 1 tick on your bonds legacy track, and [Develop Your Relationship](Starforged/Moves/Connection/Develop_Your_Relationship) now.",
                      $id: "Starforged/Assets/Path/Veteran/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Veteran/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  Miss: {
                    "With a Match": {
                      Text: "You have a history: You once fought against them, and they hold a grudge.",
                      $id: "Starforged/Assets/Path/Veteran/Abilities/2/Alter_Moves/1/Outcomes/Miss/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Veteran/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Veteran/Abilities/3",
            Text: "When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) or [Gain Ground](Starforged/Moves/Combat/Gain_Ground) by recounting or recalling a hard-won lesson from your battlefield experiences, envision the memory and add +1. On a hit, take +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Veteran/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage",
                  "Starforged/Moves/Combat/Gain_Ground"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Veteran/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Veteran/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By recounting or recalling a hard-won lesson from your battlefield experiences",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Envision the memory and add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Veteran/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Veteran/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Veteran/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Voidborn",
        Name: "Voidborn",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Voidborn", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Voidborn/Abilities/1",
            Text: "You are most suited to life in the limitless void. When you are in space (or a spacebound vehicle or station), increase your momentum reset by 1. When you enter a planetside or high gravity environment, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).",
            "Alter Momentum": {
              Reset: [
                {
                  Trigger: {
                    Text: "When you are in space (or a spacebound vehicle or station)"
                  },
                  Value: 1
                }
              ]
            },
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Voidborn/Abilities/2",
            Text: "When you [Sojourn](Starforged/Moves/Recover/Sojourn) or [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) within a spacebound community, add +1. If you [Hearten](Starforged/Moves/Recover/Hearten) there and score a strong hit, take +1 spirit or +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Voidborn/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Recover/Sojourn",
                  "Starforged/Moves/Connection/Make_a_Connection"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Voidborn/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Voidborn/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "Within a spacebound community",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1."
              },
              {
                $id: "Starforged/Assets/Path/Voidborn/Abilities/2/Alter_Moves/2",
                Moves: ["Starforged/Moves/Recover/Hearten"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Voidborn/Abilities/2/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Voidborn/Abilities/2/Alter_Moves/2/Trigger/Options/1",
                      Text: "Within a spacebound community",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Voidborn/Abilities/2/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 spirit or +1 momentum.",
                    $id: "Starforged/Assets/Path/Voidborn/Abilities/2/Alter_Moves/2/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Voidborn/Abilities/3",
            Text: "When you make a move to perform an agile physical maneuver (such as leaping or evading) in a low gravity environment, add +1 and take +1 momentum on a hit. On a strong hit with a match, you build speed or put yourself in perfect position; take another +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Voidborn/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Voidborn/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Voidborn/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "To perform an agile physical maneuver (such as leaping or evading) in a low gravity environment",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Voidborn/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "You build speed or put yourself in perfect position; take +2 momentum.",
                      $id: "Starforged/Assets/Path/Voidborn/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Path/Voidborn/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Path/Weapon_Master",
        Name: "Weapon Master",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Weapon Master", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Weapon_Master/Abilities/1",
            Text: "You are a walking armory, with a weapon for every occasion. When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) in personal combat, add +1 and take +1 momentum on a hit. Once per fight, when you [Gain Ground](Starforged/Moves/Combat/Gain_Ground) by switching weapons or changing tactics, take an automatic strong hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Weapon_Master/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Weapon_Master/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Weapon_Master/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "In personal combat",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Weapon_Master/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Weapon_Master/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Path/Weapon_Master/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Weapon_Master/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Combat/Gain_Ground"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Weapon_Master/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Weapon_Master/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "By switching weapons or changing tactics in personal combat (once per fight)",
                      "Roll type": "Action roll",
                      Method: "Strong Hit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Weapon_Master/Abilities/2",
            Text: "When you [Strike](Starforged/Moves/Combat/Strike) using a personal weapon which has limited ammo or a single-use mode, add +1 and mark progress on a hit. Then, [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1). If you score a strong hit on this attack and immediately [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action), you may retain the value of one challenge die from your [Strike](Starforged/Moves/Combat/Strike) action instead of rolling that die.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Weapon_Master/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Strike"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Weapon_Master/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Weapon_Master/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "Using a personal weapon which has limited ammo or a single-use mode",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Weapon_Master/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress, then [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1). If you immediately [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action), you may retain the value of one challenge die from your [Strike](Starforged/Moves/Combat/Strike) action instead of rolling that die.",
                    $id: "Starforged/Assets/Path/Weapon_Master/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark progress, then [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1).",
                    $id: "Starforged/Assets/Path/Weapon_Master/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "[Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1).",
                    $id: "Starforged/Assets/Path/Weapon_Master/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Weapon_Master/Abilities/3",
            Text: "When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) by suiting up and gathering your gear for a perilous encounter or mission, you may roll +supply. If you do, take +2 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Weapon_Master/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Path/Weapon_Master/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Weapon_Master/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By suiting up and gathering your gear for a perilous encounter or mission",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Supply"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Weapon_Master/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Path/Weapon_Master/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Path/Weapon_Master/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Sundered Isles Preview",
          Authors: ["Shawn Tomkin"],
          Date: "051722"
        },
        $id: "Starforged/Assets/Path/Crew_Commander",
        Name: "Crew Commander",
        "Asset Type": "Starforged/Assets/Path",
        Display: { Title: "Crew Commander", Color: "#3f7faa" },
        Usage: { Shared: !1 },
        Abilities: [
          {
            $id: "Starforged/Assets/Path/Crew_Commander/Abilities/1",
            Text: "You have 2 command; your max is 4. When you or an ally make a move leading or aided by your crew, you may (after rolling) suffer -1 command and improve a miss to a weak hit, or a weak hit to a strong hit. When you [Pay the Price](Starforged/Moves/Fate/Pay_the_Price), you may suffer the cost as -1 command. If you [Face Danger](Starforged/Moves/Adventure/Face_Danger) as a test of your leadership, roll +command. To bolster your crew, provide a significant reward or respite; then, roll +heart. On a strong hit, take +4 command. On a weak hit, take +2. On a miss, take +2 but envision a threat to your crew or leadership.",
            Moves: [
              {
                Source: {
                  Title: "Sundered Isles Preview",
                  Authors: ["Shawn Tomkin"],
                  Date: "051722"
                },
                $id: "Starforged/Moves/Assets/Path/Crew_Commander/Abilities/1/Bolster_Crew",
                Name: "Bolster Crew",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Path/Crew_Commander",
                Display: { Title: "Bolster Crew" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Path/Crew_Commander/Abilities/1/Bolster_Crew/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Path/Crew_Commander/Abilities/1/Bolster_Crew/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Heart"]
                    }
                  ],
                  Text: "When you bolster your crew..."
                },
                Text: "To bolster your crew, provide a significant reward or respite; then, roll +heart. On a strong hit, take +4 command. On a weak hit, take +2. On a miss, take +2 but envision a threat to your crew or leadership.",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Path/Crew_Commander/Abilities/1/Bolster_Crew/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Path/Crew_Commander/Abilities/1/Bolster_Crew/Outcomes/Strong_Hit",
                    Text: "Take +4 command."
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Path/Crew_Commander/Abilities/1/Bolster_Crew/Outcomes/Weak_Hit",
                    Text: "Take +2 command."
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Path/Crew_Commander/Abilities/1/Bolster_Crew/Outcomes/Miss",
                    Text: "Take +2 command but envision a threat to your crew or leadership."
                  }
                }
              }
            ],
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Crew_Commander/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Path/Crew_Commander/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Crew_Commander/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "Leading or aided by your crew",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "You may (after rolling) suffer -1 command and improve a miss to a weak hit, or a weak hit to a strong hit.",
                Outcomes: {
                  $id: "Starforged/Assets/Path/Crew_Commander/Abilities/1/Alter_Moves/1/Outcomes",
                  "Weak Hit": {
                    Text: "You may (after rolling) suffer -1 command and improve a weak hit to a strong hit.",
                    $id: "Starforged/Assets/Path/Crew_Commander/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "You may (after rolling) suffer -1 command and improve a miss to a weak hit.",
                    $id: "Starforged/Assets/Path/Crew_Commander/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Path/Crew_Commander/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Adventure/Face_Danger"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Crew_Commander/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Crew_Commander/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "As a test of your leadership",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Path/Crew_Commander/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Path/Crew_Commander/Abilities/2",
            Text: "Take +2 command; your max is now 6.",
            "Alter Properties": { "Condition Meter": { Max: 6 } },
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Path/Crew_Commander/Abilities/3",
            Text: "When your command is 0 and the situation desperate, you may [Compel](Starforged/Moves/Adventure/Compel) your crew to action; if you do, take +2 command on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Path/Crew_Commander/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Compel"],
                Trigger: {
                  $id: "Starforged/Assets/Path/Crew_Commander/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Path/Crew_Commander/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "[Compel](Starforged/Moves/Adventure/Compel) your crew to action when when your command is 0 and the situation desperate",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Path/Crew_Commander/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +2 command.",
                    $id: "Starforged/Assets/Path/Crew_Commander/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +2 command.",
                    $id: "Starforged/Assets/Path/Crew_Commander/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Path/Crew_Commander/Condition_Meter",
          Name: "Command",
          Min: 0,
          Max: 4,
          Value: 2,
          Conditions: []
        }
      }
    ],
    Display: { Title: "Paths", Color: "#3f7faa" },
    Usage: { Shared: !1 }
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Assets",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Assets/Companion",
    Name: "Companion",
    Description: `**Companions** are NPC helpers. When you gain a companion, give them a name and envision their look and personality.

Companions utilize a health meter that can be reduced if an outcome puts them in harm's way. When your companion faces harm, make the [Companion Takes a Hit](Starforged/Moves/Suffer/Companion_Takes_a_Hit) move. When their health is at 0, they are in danger of being killed or destroyed.`,
    Assets: [
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Companion/Banshee",
        Name: "Banshee",
        "Asset Type": "Starforged/Assets/Companion",
        Display: { Title: "Banshee", Color: "#3d8b8a" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Companion/Banshee/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Companion/Banshee/Abilities/1",
            Text: "Your banshee companion accompanies you on planetside missions, using its echolocation to help guide the way. When you ride your banshee as you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) or [Set a Course](Starforged/Moves/Exploration/Set_a_Course), you may roll +its health.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Banshee/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition",
                  "Starforged/Moves/Exploration/Set_a_Course"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Banshee/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Banshee/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "While riding your banshee",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Companion/Banshee/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Companion/Banshee/Abilities/2",
            Text: "When you make a move astride the banshee to detect a threat or avoid a fight, add +1 and take +1 momentum on a hit. On a strong hit with a match, you're gone in a flash; take another +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Banshee/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Companion/Banshee/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Banshee/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "To detect a threat or avoid a fight (while astride your banshee)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Banshee/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "You're gone in a flash; take +2 momentum.",
                      $id: "Starforged/Assets/Companion/Banshee/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Companion/Banshee/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Banshee/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Companion/Banshee/Abilities/3",
            Text: "When you make a combat move and roll a 1 on your action die, the banshee senses the danger and emits a powerful scream to alert you or distract your foes. You may reroll that die.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Banshee/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Combat/Enter_the_Fray",
                  "Starforged/Moves/Combat/Gain_Ground",
                  "Starforged/Moves/Combat/React_Under_Fire",
                  "Starforged/Moves/Combat/Strike",
                  "Starforged/Moves/Combat/Clash",
                  "Starforged/Moves/Combat/Battle"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Banshee/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Banshee/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "When aided by your banshee",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Banshee/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "If you roll a 1 on your action die, the banshee senses the danger and emits a powerful scream to alert you or distract your foes. You may reroll that die."
                    },
                    $id: "Starforged/Assets/Companion/Banshee/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "If you roll a 1 on your action die, the banshee senses the danger and emits a powerful scream to alert you or distract your foes. You may reroll that die."
                    },
                    $id: "Starforged/Assets/Companion/Banshee/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Action die",
                      Text: "If you roll a 1 on your action die, the banshee senses the danger and emits a powerful scream to alert you or distract your foes. You may reroll that die."
                    },
                    $id: "Starforged/Assets/Companion/Banshee/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Companion/Banshee/Condition_Meter",
          Name: "Health",
          Min: 0,
          Max: 4,
          Value: 4,
          Conditions: ["Out of Action"],
          Aliases: ["Companion Health"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Companion/Combat_Bot",
        Name: "Combat Bot",
        "Asset Type": "Starforged/Assets/Companion",
        Display: { Title: "Combat Bot", Color: "#3d8b8a" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Companion/Combat_Bot/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/1",
            Text: "Your combat bot companion fights at your side. When you [Strike](Starforged/Moves/Combat/Strike) aided by the bot, add +1; if you [Clash](Starforged/Moves/Combat/Clash), take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Strike"],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "Aided by your combat bot",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1."
              },
              {
                $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Combat/Clash"],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "Aided by your combat bot",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/2",
            Text: "When you use the threat of violence to [Compel](Starforged/Moves/Adventure/Compel) or [Gain Ground](Starforged/Moves/Combat/Gain_Ground) while the bot brings its weapons to bear, you may roll +its health. If you do, take +1 momentum on a hit. On a strong hit with a match, the bot's display is especially persuasive; take another +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Compel",
                  "Starforged/Moves/Combat/Gain_Ground"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "Using the threat of violence while the bot brings its weapons to bear",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Companion/Combat_Bot/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "The bot's display is especially persuasive; take +2 momentum.",
                      $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/3",
            Text: "Once per fight, when you [React Under Fire](Starforged/Moves/Combat/React_Under_Fire) by using the bot to draw fire or create a diversion, roll +its health. On a strong hit, mark progress. On a weak hit, face the cost as normal, but then you are in control.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/React_Under_Fire"],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "Once per fight, by using the combat bot to draw fire or create a diversion",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Companion/Combat_Bot/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress.",
                    $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Face the cost as normal, but then you are in control.",
                    "In Control": !0,
                    $id: "Starforged/Assets/Companion/Combat_Bot/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Companion/Combat_Bot/Condition_Meter",
          Name: "Health",
          Min: 0,
          Max: 5,
          Value: 5,
          Conditions: ["Out of Action"],
          Aliases: ["Companion Health"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Companion/Glowcat",
        Name: "Glowcat",
        "Asset Type": "Starforged/Assets/Companion",
        Display: { Title: "Glowcat", Color: "#3d8b8a" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Companion/Glowcat/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Companion/Glowcat/Abilities/1",
            Text: "Your glowcat companion perceives the inner emotions and intentions of people and creatures in its vicinity, and embodies those impressions through the colors and intensity of its luminescent fur. When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) by studying the glowcat\u2019s reactions in a charged interaction, add +its health.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Glowcat/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Glowcat/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Glowcat/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "By studying your glowcat\u2019s reactions in a charged interaction",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +your glowcat's health."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Companion/Glowcat/Abilities/2",
            Text: "When you [Compel](Starforged/Moves/Adventure/Compel), the glowcat\u2019s reactions will help guide your approach; you may reroll your action die if its value is less than the glowcat\u2019s health.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Glowcat/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Compel"],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Glowcat/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Glowcat/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "When your glowcat\u2019s reactions help guide your approach",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Glowcat/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than the glowcat\u2019s health."
                    },
                    $id: "Starforged/Assets/Companion/Glowcat/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than the glowcat\u2019s health."
                    },
                    $id: "Starforged/Assets/Companion/Glowcat/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than the glowcat\u2019s health."
                    },
                    $id: "Starforged/Assets/Companion/Glowcat/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Companion/Glowcat/Abilities/3",
            Text: "When you [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) in the company of the glowcat, add +1. On a strong hit with a match, take +momentum equal to their health.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Glowcat/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Endure_Stress"],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Glowcat/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Glowcat/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "In the company of the glowcat",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Glowcat/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "Take +momentum equal to the glowcat's health.",
                      $id: "Starforged/Assets/Companion/Glowcat/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Companion/Glowcat/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Companion/Glowcat/Condition_Meter",
          Name: "Health",
          Min: 0,
          Max: 3,
          Value: 3,
          Conditions: ["Out of Action"],
          Aliases: ["Companion Health"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Companion/Protocol_Bot",
        Name: "Protocol Bot",
        "Asset Type": "Starforged/Assets/Companion",
        Display: { Title: "Protocol Bot", Color: "#3d8b8a" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Companion/Protocol_Bot/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/1",
            Text: "Your protocol bot companion is programmed with knowledge of cultures, languages, and customs. When you are aided by the bot as you make a move in a formal social interaction, add +1. On a strong hit with a match, you learn something which builds understanding or empathy; also mark 1 tick on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you are aided by the bot as you make a move in a formal social interaction",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "You learn something which builds understanding or empathy. Mark 1 tick on your bonds legacy track.",
                      $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/2",
            Text: "When you first visit or interact with a new community or culture, you may ask for the bot's insight. If you do, envision what you learn and take +1 momentum.",
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/3",
            Text: "If you make a move in a charged interaction and the value of your action die is less than the bot's health, you may reroll it as the bot interjects with their commentary or advice.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "In a charged interaction",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "If the value of your action die is less than the bot's health, you may reroll it as the bot interjects with their commentary or advice."
                    },
                    $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "If the value of your action die is less than the bot's health, you may reroll it as the bot interjects with their commentary or advice."
                    },
                    $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Action die",
                      Text: "If the value of your action die is less than the bot's health, you may reroll it as the bot interjects with their commentary or advice."
                    },
                    $id: "Starforged/Assets/Companion/Protocol_Bot/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Companion/Protocol_Bot/Condition_Meter",
          Name: "Health",
          Min: 0,
          Max: 3,
          Value: 3,
          Conditions: ["Out of Action"],
          Aliases: ["Companion Health"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Companion/Rockhorn",
        Name: "Rockhorn",
        "Asset Type": "Starforged/Assets/Companion",
        Display: { Title: "Rockhorn", Color: "#3d8b8a" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Companion/Rockhorn/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Companion/Rockhorn/Abilities/1",
            Text: "Your rockhorn companion uses its resilient, stone-like hide and brute strength to overcome threats. When you make a move by sending the rockhorn to directly attack a foe or smash an obstacle, roll +its health.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Rockhorn/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Companion/Rockhorn/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Rockhorn/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "By sending the rockhorn to directly attack a foe or smash an obstacle",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Companion/Rockhorn/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Companion/Rockhorn/Abilities/2",
            Text: "When you make the [Companion Takes a Hit](Starforged/Moves/Suffer/Companion_Takes_a_Hit) move for the rockhorn, count a weak hit as a strong hit. On a strong hit with a match, its rapid healing makes it unstoppable; give it another +1 health or take +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Rockhorn/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Companion_Takes_a_Hit"],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Rockhorn/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Rockhorn/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "For the rockhorn",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Rockhorn/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "The rockhorn's rapid healing makes it unstoppable; give it another +1 health or take +1 momentum.",
                      $id: "Starforged/Assets/Companion/Rockhorn/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Companion/Rockhorn/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    "Count as": "Strong Hit",
                    $id: "Starforged/Assets/Companion/Rockhorn/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Companion/Rockhorn/Abilities/3",
            Text: "The rockhorn will come to your aid in your most vulnerable moments. When you [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) or [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) and score a miss, you may reroll your action die if its value is less than the rockhorn\u2019s health.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Rockhorn/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Suffer/Endure_Harm",
                  "Starforged/Moves/Suffer/Endure_Stress"
                ],
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Rockhorn/Abilities/3/Alter_Moves/1/Outcomes",
                  Miss: {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than the rockhorn\u2019s health."
                    },
                    $id: "Starforged/Assets/Companion/Rockhorn/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Companion/Rockhorn/Condition_Meter",
          Name: "Health",
          Min: 0,
          Max: 5,
          Value: 5,
          Conditions: ["Out of Action"],
          Aliases: ["Companion Health"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Companion/Sidekick",
        Name: "Sidekick",
        "Asset Type": "Starforged/Assets/Companion",
        Display: { Title: "Sidekick", Color: "#3d8b8a" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Companion/Sidekick/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          },
          {
            $id: "Starforged/Assets/Companion/Sidekick/Inputs/Expertise",
            Name: "Expertise",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Companion/Sidekick/Abilities/1",
            Text: "Your sidekick has a helpful expertise. When you make a move outside of a fight directly aided by their expertise, you may reroll your action die if its value is less than your sidekick's health. If you then score a strong hit with a match, mark 1 tick on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Sidekick/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Companion/Sidekick/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Sidekick/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "Directly aided by your sidekick's expertise (outside of a fight)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Sidekick/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than your sidekick's health. If you then score a strong hit with a match, mark 1 tick on your bonds legacy track."
                    },
                    $id: "Starforged/Assets/Companion/Sidekick/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than your sidekick's health. If you then score a strong hit with a match, mark 1 tick on your bonds legacy track."
                    },
                    $id: "Starforged/Assets/Companion/Sidekick/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Action die",
                      Text: "You may reroll your action die if its value is less than your sidekick's health. If you then score a strong hit with a match, mark 1 tick on your bonds legacy track."
                    },
                    $id: "Starforged/Assets/Companion/Sidekick/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Companion/Sidekick/Abilities/2",
            Text: "When you [Enter the Fray](Starforged/Moves/Combat/Enter_the_Fray) with the support of your sidekick, take +2 momentum on a hit. When you [Clash](Starforged/Moves/Combat/Clash) together, add +1.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Sidekick/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Enter_the_Fray"],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Sidekick/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Sidekick/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "With the support of your sidekick",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Sidekick/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Companion/Sidekick/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +2 momentum.",
                    $id: "Starforged/Assets/Companion/Sidekick/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Companion/Sidekick/Abilities/2/Alter_Moves/2",
                Moves: ["Starforged/Moves/Combat/Clash"],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Sidekick/Abilities/2/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Sidekick/Abilities/2/Alter_Moves/2/Trigger/Options/1",
                      Text: "Together with your sidekick",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1."
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Companion/Sidekick/Abilities/3",
            Text: "When your sidekick acts to get you out of a tough spot, you may [Face Danger](Starforged/Moves/Adventure/Face_Danger) or [React Under Fire](Starforged/Moves/Combat/React_Under_Fire) and roll +their health (instead of your own stat). On a hit, take +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Sidekick/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger",
                  "Starforged/Moves/Combat/React_Under_Fire"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Sidekick/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Sidekick/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "Your sidekick acts to get you out of a tough spot",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Companion/Sidekick/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Sidekick/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Sidekick/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Sidekick/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Companion/Sidekick/Condition_Meter",
          Name: "Health",
          Min: 0,
          Max: 4,
          Value: 4,
          Conditions: ["Out of Action"],
          Aliases: ["Companion Health"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Companion/Sprite",
        Name: "Sprite",
        "Asset Type": "Starforged/Assets/Companion",
        Display: { Title: "Sprite", Color: "#3d8b8a" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Companion/Sprite/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Companion/Sprite/Abilities/1",
            Text: "Your sprite companion alters its delicate, crystalline form to fly, swim, or scurry, and can covertly navigate even the harshest of environments. When you make a move by sending it to perform trickery (such as creating a distraction, sneaking into a protected location, or stealing an object) add +its health.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Sprite/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Companion/Sprite/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Sprite/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "By sending your sprite to perform trickery (such as creating a distraction, sneaking into a protected location, or stealing an object)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +your sprite's health."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Companion/Sprite/Abilities/2",
            Text: "You are attuned to the resonance of the sprite's crystalline structure, and can communicate with it at a distance and perceive through its senses. When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) by observing a situation from its perspective, or remotely [Gather Information](Starforged/Moves/Adventure/Gather_Information), add +its health.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Sprite/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage",
                  "Starforged/Moves/Adventure/Gather_Information"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Sprite/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Sprite/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By remotely observing a situation from your sprite's perspective",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +your sprite's health."
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Companion/Sprite/Abilities/3",
            Text: "With a moment's rest, the sprite can mend its form and return automatically to max health.",
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Companion/Sprite/Condition_Meter",
          Name: "Health",
          Min: 0,
          Max: 2,
          Value: 2,
          Conditions: ["Out of Action"],
          Aliases: ["Companion Health"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Companion/Survey_Bot",
        Name: "Survey Bot",
        "Asset Type": "Starforged/Assets/Companion",
        Display: { Title: "Survey Bot", Color: "#3d8b8a" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Companion/Survey_Bot/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/1",
            Text: "Your survey bot companion scans the path ahead. When you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition) (+wits) overland or within a site, add +1.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "Overland or within a site (assisted by your survey bot)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: ["Wits"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/2",
            Text: "Once per expedition, when you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) by sending the bot to scout ahead, roll +its health. On a hit, also mark progress on the expedition. On a strong hit with a match, the bot uncovers an unexpected feature or location; envision what it reveals and mark 1 tick on your discoveries legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "Once per expedition, by sending the survey bot to scout ahead",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Companion/Survey_Bot/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress on the expedition.",
                    "With a Match": {
                      Text: "Mark progress on the expedition. The bot uncovers an unexpected feature or location; envision what it reveals and mark 1 tick on your discoveries legacy track.",
                      $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark progress on the expedition.",
                    $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3",
            Text: "When you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint) aided by the bot's sensors, or [Face Danger](Starforged/Moves/Adventure/Face_Danger) to detect a threat, roll +its health and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Exploration/Explore_a_Waypoint"],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "Aided by the survey bot's sensors",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Companion/Survey_Bot/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3/Alter_Moves/2",
                Moves: [
                  "Starforged/Moves/Adventure/Face_Danger",
                  "Starforged/Moves/Scene_Challenge/Face_Danger"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3/Alter_Moves/2/Trigger/Options/1",
                      Text: "To detect a threat",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Companion/Survey_Bot/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Survey_Bot/Abilities/3/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Companion/Survey_Bot/Condition_Meter",
          Name: "Health",
          Min: 0,
          Max: 3,
          Value: 3,
          Conditions: ["Out of Action"],
          Aliases: ["Companion Health"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Companion/Symbiote",
        Name: "Symbiote",
        "Asset Type": "Starforged/Assets/Companion",
        Display: { Title: "Symbiote", Color: "#3d8b8a" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Companion/Symbiote/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Companion/Symbiote/Abilities/1",
            Text: "You are physically bound to a being with 2 health. When you make aggressive moves while giving yourself to the symbiote's power, add +its health. If you face physical harm, choose either the [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) or [Companion Takes a Hit](Starforged/Moves/Suffer/Companion_Takes_a_Hit) move. To restore the symbiote's health, you must [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) and give the symbiote +health equal to the -spirit you face. If you make a move aided by the symbiote and roll a 1 on your action die, your fragile bond is broken for several hours.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Symbiote/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Companion/Symbiote/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Symbiote/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "Make an aggressive move while giving yourself to the symbiote's power",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +your symbiote's health. If you make a move aided by the symbiote and roll a 1 on your action die, your fragile bond is broken for several hours."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Companion/Symbiote/Abilities/2",
            Text: "When you make a move and heed the symbiote's guidance (decide after rolling), you may reroll any dice. Then, [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-2).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Symbiote/Abilities/2/Alter_Moves/1",
                Moves: null,
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Symbiote/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Any",
                      Text: "When you make a move and heed the symbiote's guidance (decide after rolling), you may reroll any dice. Then, [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-2)."
                    },
                    $id: "Starforged/Assets/Companion/Symbiote/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Any",
                      Text: "When you make a move and heed the symbiote's guidance (decide after rolling), you may reroll any dice. Then, [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-2)."
                    },
                    $id: "Starforged/Assets/Companion/Symbiote/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Any",
                      Text: "When you make a move and heed the symbiote's guidance (decide after rolling), you may reroll any dice. Then, [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-2)."
                    },
                    $id: "Starforged/Assets/Companion/Symbiote/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Companion/Symbiote/Abilities/3",
            Text: "The symbiote gains power and has 3 health.",
            "Alter Properties": { "Condition Meter": { Max: 3 } },
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Companion/Symbiote/Condition_Meter",
          Name: "Health",
          Min: 0,
          Max: 2,
          Value: 2,
          Conditions: ["Out of Action"],
          Aliases: ["Companion Health"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Companion/Utility_Bot",
        Name: "Utility Bot",
        "Asset Type": "Starforged/Assets/Companion",
        Display: { Title: "Utility Bot", Color: "#3d8b8a" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Companion/Utility_Bot/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/1",
            Text: "Your utility bot companion has helpful tools at-hand. When you make a move by directing it to access a system, cut through an obstacle, analyze a mechanical issue, or assemble or disassemble a device, roll +its health and take +1 momentum on a hit. On a strong hit with a match, it reveals an unexpected advantage or insight; take another +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "By directing the utility bot to access a system, cut through an obstacle, analyze a mechanical issue, or assemble or disassemble a device",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Companion/Utility_Bot/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "The utility bot reveals an unexpected advantage or insight. Take +2 momentum.",
                      $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/2",
            Text: "When you [Repair](Starforged/Moves/Recover/Repair) aided by the bot, add +1. On a miss, it reveals an alternative approach which will take extra time; you may reroll any dice, but first [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Repair"],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "Aided by the bot",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/2/Alter_Moves/1/Outcomes",
                  Miss: {
                    Reroll: {
                      Text: "The bot reveals an alternative approach which will take extra time; you may reroll any dice, but first [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2).",
                      Dice: "Any"
                    },
                    $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/3",
            Text: "When you [Check Your Gear](Starforged/Moves/Adventure/Check_Your_Gear) to see if the bot has a specific tool or technique available, roll +its health and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Check_Your_Gear"],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "To see if your utility bot has a specific tool or technique available",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Companion/Utility_Bot/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Utility_Bot/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Companion/Utility_Bot/Condition_Meter",
          Name: "Health",
          Min: 0,
          Max: 4,
          Value: 4,
          Conditions: ["Out of Action"],
          Aliases: ["Companion Health"]
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Companion/Voidglider",
        Name: "Voidglider",
        "Asset Type": "Starforged/Assets/Companion",
        Display: { Title: "Voidglider", Color: "#3d8b8a" },
        Usage: { Shared: !1 },
        Inputs: [
          {
            $id: "Starforged/Assets/Companion/Voidglider/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Companion/Voidglider/Abilities/1",
            Text: "Your voidglider companion cruises in your starship\u2019s energy wake and can help guide the way on spaceborne journeys. When you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), add +1.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Voidglider/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Companion/Voidglider/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Voidglider/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "On a spaceborne journey as your voidglider helps guide the way",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Companion/Voidglider/Abilities/2",
            Text: "The voidglider is harnessed and trained as a mount, and can be ridden for short-range spacebound transport. When you are riding the voidglider and make a move to detect or evade a threat by relying on its instincts, roll +its health.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Voidglider/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Companion/Voidglider/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Voidglider/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "You are riding the voidglider and make a move to detect or evade a threat by relying on its instincts",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Companion/Voidglider/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Companion/Voidglider/Abilities/3",
            Text: "When you make a move by signaling the voidglider to distract or attack a spaceborne foe, roll +its health and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Companion/Voidglider/Abilities/3/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Companion/Voidglider/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Companion/Voidglider/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "You make a move by signaling the voidglider to distract or attack a spaceborne foe",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: [
                        "Starforged/Assets/Companion/Voidglider/Condition_Meter"
                      ]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Companion/Voidglider/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Voidglider/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Companion/Voidglider/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Companion/Voidglider/Condition_Meter",
          Name: "Health",
          Min: 0,
          Max: 4,
          Value: 4,
          Conditions: ["Out of Action"],
          Aliases: ["Companion Health"]
        }
      }
    ],
    Display: { Title: "Companions", Color: "#3d8b8a" },
    Usage: { Shared: !1 }
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Assets",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Assets/Deed",
    Name: "Deed",
    Description: `**Deeds** represent the notable achievement and situations of your story, and how those events change your character.

Deeds have a requirement listed at the top of the card, phrased as \u201COnce you \\[blank\\].\u201D You may not spend experience to acquire a deed until you fulfill the requirement, and you cannot choose a deed when creating your character.`,
    Assets: [
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Deed/Bonded",
        Name: "Bonded",
        "Asset Type": "Starforged/Assets/Deed",
        Display: { Title: "Bonded", Color: "#40834f" },
        Usage: { Shared: !1 },
        Requirement: "One time only, once you [Forge a Bond](Starforged/Moves/Connection/Forge_a_Bond) with a special individual...",
        Inputs: [
          {
            $id: "Starforged/Assets/Deed/Bonded/Inputs/Bond-mate",
            Name: "Bond-mate",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Deed/Bonded/Abilities/1",
            Text: "This person is your bond-mate. When you [Sojourn](Starforged/Moves/Recover/Sojourn) at their home, [Hearten](Starforged/Moves/Recover/Hearten) in their presence, or [Test Your Relationship](Starforged/Moves/Connection/Test_Your_Relationship) or [Develop Your Relationship](Starforged/Moves/Connection/Develop_Your_Relationship) with them, reroll any dice. On a strong hit, take +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Sojourn"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "At your bond-mate's home",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Recover/Hearten"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "In your bond-mate's presence",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/2/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/3",
                Moves: [
                  "Starforged/Moves/Connection/Test_Your_Relationship",
                  "Starforged/Moves/Connection/Develop_Your_Relationship"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/3/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/3/Trigger/Options/1",
                      Text: "With your bond-mate",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/3/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/3/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/3/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Bonded/Abilities/1/Alter_Moves/3/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Deed/Bonded/Abilities/2",
            Text: "When you [Set a Course](Starforged/Moves/Exploration/Set_a_Course) back to your bond-mate's location, add +heart. On a strong hit with a match, envision a special reunion and mark two ticks on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Bonded/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Exploration/Set_a_Course"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Bonded/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Bonded/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "Back to your bond-mate's location",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +heart.",
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Bonded/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "Envision a special reunion and mark two ticks on your bonds legacy track.",
                      $id: "Starforged/Assets/Deed/Bonded/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Deed/Bonded/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Deed/Bonded/Abilities/3",
            Text: "When you make a move in a crucial moment and score a miss, you may cling to thoughts of your bond-mate for support. If you do, reroll any dice. On another miss, in addition to the outcome of the move, you must mark shaken or traumatized. If both debilities are already marked, [Face Desolation](Starforged/Moves/Threshold/Face_Desolation).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Bonded/Abilities/3/Alter_Moves/1",
                Moves: null,
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Bonded/Abilities/3/Alter_Moves/1/Outcomes",
                  Miss: {
                    Text: "You may cling to thoughts of your bond-mate for support. If you do, reroll any dice. On another miss, in addition to the outcome of the move, you must mark shaken or traumatized. If both debilities are already marked, [Face Desolation](Starforged/Moves/Threshold/Face_Desolation).",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Bonded/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Deed/Homesteader",
        Name: "Homesteader",
        "Asset Type": "Starforged/Assets/Deed",
        Display: { Title: "Homesteader", Color: "#40834f" },
        Usage: { Shared: !1 },
        Requirement: "Once you fill 4 boxes on your bonds legacy track...",
        Inputs: [
          {
            $id: "Starforged/Assets/Deed/Homesteader/Inputs/Name",
            Name: "Name",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Deed/Homesteader/Abilities/1",
            Text: "You have chosen or established a community as your home. When you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) (formidable or greater) in service to your home, reroll any dice. On a hit, mark 1 tick on your bonds legacy track. When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) and score a hit, also mark 2 ticks on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "In service to your home (formidable or greater)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Mark 1 tick on your bonds legacy track.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark 1 tick on your bonds legacy track.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Quest/Fulfill_Your_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/2/Trigger/Options/1",
                      Text: "In service to your home (formidable or greater)",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/2/Outcomes",
                  "Strong Hit": {
                    Text: "Mark 2 ticks on your bonds legacy track.",
                    $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/2/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark 2 ticks on your bonds legacy track.",
                    $id: "Starforged/Assets/Deed/Homesteader/Abilities/1/Alter_Moves/2/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Deed/Homesteader/Abilities/2",
            Text: `When you [Sojourn](Starforged/Moves/Recover/Sojourn) in your home, choose one.

  * Don't linger: Take an automatic weak hit
  * Stay a bit: Add +1 and take +1 momentum on a hit`,
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Homesteader/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Recover/Sojourn"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Homesteader/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Homesteader/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "In your home (and you don't linger)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Homesteader/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Deed/Homesteader/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Deed/Homesteader/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Deed/Homesteader/Abilities/2/Alter_Moves/2",
                Moves: ["Starforged/Moves/Recover/Sojourn"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Homesteader/Abilities/2/Alter_Moves/2/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Homesteader/Abilities/2/Alter_Moves/2/Trigger/Options/1",
                      Text: "In your home (and you stay a bit)",
                      "Roll type": "Action roll",
                      Method: "Weak Hit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Take an automatic weak hit."
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Deed/Homesteader/Abilities/3",
            Text: "When you [Set a Course](Starforged/Moves/Exploration/Set_a_Course) for home, you may reroll your action die if its value is less than your spirit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Homesteader/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Exploration/Set_a_Course"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Homesteader/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Homesteader/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "For home",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Homesteader/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Text: "You may reroll your action die if its value is less than your spirit.",
                      Dice: "Action die"
                    },
                    $id: "Starforged/Assets/Deed/Homesteader/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Text: "You may reroll your action die if its value is less than your spirit.",
                      Dice: "Action die"
                    },
                    $id: "Starforged/Assets/Deed/Homesteader/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Text: "You may reroll your action die if its value is less than your spirit.",
                      Dice: "Action die"
                    },
                    $id: "Starforged/Assets/Deed/Homesteader/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Deed/Marked",
        Name: "Marked",
        "Asset Type": "Starforged/Assets/Deed",
        Display: { Title: "Marked", Color: "#40834f" },
        Usage: { Shared: !1 },
        Requirement: "Once you fill 5 boxes on your quests legacy track...",
        Inputs: [
          {
            $id: "Starforged/Assets/Deed/Marked/Inputs/Identifier",
            Name: "Identifier",
            "Input Type": "Text",
            Adjustable: !1
          }
        ],
        Abilities: [
          {
            $id: "Starforged/Assets/Deed/Marked/Abilities/1",
            Text: "Envision the title, sigil, uniform, or tattoo you bear in recognition of your achievements. When you [Compel](Starforged/Moves/Adventure/Compel) or [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) among those who would know your reputation, add +1. On a strong hit with a match, your notoriety grows; mark 2 ticks on your bonds legacy track.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Marked/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Compel",
                  "Starforged/Moves/Connection/Make_a_Connection"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Marked/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Marked/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "Among those who would know your reputation",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Marked/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "Your notoriety grows; mark 2 ticks on your bonds legacy track.",
                      $id: "Starforged/Assets/Deed/Marked/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Deed/Marked/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Deed/Marked/Abilities/2",
            Text: "When you risk your reputation to overcome a miss, reroll any dice. If you score a miss again, fill one segment of a six-segment clock to represent the stain on your reputation. When the clock is filled, discard this asset.",
            Inputs: [
              {
                $id: "Starforged/Assets/Deed/Marked/Abilities/2/Inputs/Stained_reputation",
                Name: "Stained reputation",
                "Input Type": "Clock",
                "Clock Type": "Tension",
                Segments: 6,
                Filled: 0,
                Adjustable: !0
              }
            ],
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Marked/Abilities/2/Alter_Moves/1",
                Moves: null,
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Marked/Abilities/2/Alter_Moves/1/Outcomes",
                  Miss: {
                    Text: "When you risk your reputation to overcome a miss, reroll any dice. If you score a miss again, fill one segment of a six-segment clock to represent the stain on your reputation. When the clock is filled, discard this asset.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Marked/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Deed/Marked/Abilities/3",
            Text: "Once per fight, when you [Gain Ground](Starforged/Moves/Combat/Gain_Ground) through intimidation or command, reroll any dice and mark progress on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Marked/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Gain_Ground"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Marked/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Marked/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "Through intimidation or command (once per fight)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Marked/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Mark progress.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Marked/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Mark progress.",
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Marked/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: { Dice: "Any", Text: "Reroll any dice." },
                    $id: "Starforged/Assets/Deed/Marked/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Deed/Oathbreaker",
        Name: "Oathbreaker",
        "Asset Type": "Starforged/Assets/Deed",
        Display: { Title: "Oathbreaker", Color: "#40834f" },
        Usage: { Shared: !1 },
        Requirement: "Once you [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow)...",
        Abilities: [
          {
            $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/1",
            Text: "This asset counts as an impact. One time only, when you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) (extreme or greater) to redeem yourself, give that vow a special mark. When you [Reach a Milestone](Starforged/Moves/Quest/Reach_a_Milestone) on the marked vow, take +2 momentum. If you [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow) on the quest, discard this asset and retain the impact.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Swear_an_Iron_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "To redeem yourself (extreme or greater, one time only)",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Give this vow a special mark. When you [Reach a Milestone](Starforged/Moves/Quest/Reach_a_Milestone) on the marked vow, take +2 momentum. If you [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow) on the quest, discard this asset and retain the impact."
              },
              {
                $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Quest/Forsake_Your_Vow"],
                Text: "If you [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow) on the quest, discard this asset and retain the impact."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/2",
            Text: "When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) or [Compel](Starforged/Moves/Adventure/Compel) by reaffirming your commitment to your marked vow, add +1 and take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/2/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Adventure/Secure_an_Advantage",
                  "Starforged/Moves/Scene_Challenge/Secure_an_Advantage",
                  "Starforged/Moves/Adventure/Compel"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By reaffirming your commitment to your marked vow",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/3",
            Text: "When you [Fulfill Your Vow](Starforged/Moves/Quest/Fulfill_Your_Vow) on the marked quest and score a hit, you find redemption and automatically gain this ability at no cost. You may then improve one of your stats by +1 and discard this asset. Once the asset is discarded, you may not take it again.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Quest/Fulfill_Your_Vow"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "On your marked quest",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "You find redemption and automatically gain this ability at no cost. You may then improve one of your stats by +1 and discard this asset. Once the asset is discarded, you may not take it again.",
                    $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "You find redemption and automatically gain this ability at no cost. You may then improve one of your stats by +1 and discard this asset. Once the asset is discarded, you may not take it again.",
                    $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "If you [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow) on the quest, discard this asset and retain the impact.",
                    $id: "Starforged/Assets/Deed/Oathbreaker/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Deed/Revenant",
        Name: "Revenant",
        "Asset Type": "Starforged/Assets/Deed",
        Display: { Title: "Revenant", Color: "#40834f" },
        Usage: { Shared: !1 },
        Requirement: "Once you [Face Death](Starforged/Moves/Threshold/Face_Death)...",
        Abilities: [
          {
            $id: "Starforged/Assets/Deed/Revenant/Abilities/1",
            Text: "When you are at 0 health, and [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) or [Face Death](Starforged/Moves/Threshold/Face_Death), add +1. You may then reroll your action die if its value is less than your spirit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Revenant/Abilities/1/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Suffer/Endure_Harm",
                  "Starforged/Moves/Threshold/Face_Death"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Revenant/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Revenant/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you are at 0 health",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "Add +1.",
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Revenant/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Text: "You may reroll your action die if its value is less than your spirit.",
                      Dice: "Action die"
                    },
                    $id: "Starforged/Assets/Deed/Revenant/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Text: "You may reroll your action die if its value is less than your spirit.",
                      Dice: "Action die"
                    },
                    $id: "Starforged/Assets/Deed/Revenant/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Text: "You may reroll your action die if its value is less than your spirit.",
                      Dice: "Action die"
                    },
                    $id: "Starforged/Assets/Deed/Revenant/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Deed/Revenant/Abilities/2",
            Text: "When you [Take Decisive Action](Starforged/Moves/Combat/Take_Decisive_Action) by bringing death to a foe, you may burn momentum to zero out one (not both) of the challenge dice if your momentum is greater than the value of that die. If you do, [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-2).",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Revenant/Abilities/2/Alter_Moves/1",
                Moves: ["Starforged/Moves/Combat/Take_Decisive_Action"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Revenant/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Revenant/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      Text: "By bringing death to a foe",
                      "Roll type": "Progress roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Revenant/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "You may burn momentum to zero out one (not both) of the challenge dice if your momentum is greater than the value of that die. If you do, [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-2).",
                    $id: "Starforged/Assets/Deed/Revenant/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "You may burn momentum to zero out one (not both) of the challenge dice if your momentum is greater than the value of that die. If you do, [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-2).",
                    $id: "Starforged/Assets/Deed/Revenant/Abilities/2/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "You may burn momentum to zero out one (not both) of the challenge dice if your momentum is greater than the value of that die. If you do, [Endure Stress](Starforged/Moves/Suffer/Endure_Stress) (-2).",
                    $id: "Starforged/Assets/Deed/Revenant/Abilities/2/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Deed/Revenant/Abilities/3",
            Text: "When you [Gather Information](Starforged/Moves/Adventure/Gather_Information) by studying a place where death left its mark, you may roll +heart. If you do, take +1 momentum on a hit. On a strong hit with a match, you experience a detailed vision or insightful revelation of what occurred here; take +1 momentum more.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Revenant/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Gather_Information"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Revenant/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Revenant/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By studying a place where death left its mark",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Heart"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Revenant/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    "With a Match": {
                      Text: "You experience a detailed vision or insightful revelation of what occurred here. Take +2 momentum.",
                      $id: "Starforged/Assets/Deed/Revenant/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Deed/Revenant/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Deed/Revenant/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Deed/Survivor",
        Name: "Survivor",
        "Asset Type": "Starforged/Assets/Deed",
        Display: { Title: "Survivor", Color: "#40834f" },
        Usage: { Shared: !1 },
        Requirement: "Once you mark traumatized or permanently harmed...",
        Abilities: [
          {
            $id: "Starforged/Assets/Deed/Survivor/Abilities/1",
            Text: "When you are haunted by past experiences and must [Endure Stress](Starforged/Moves/Suffer/Endure_Stress), you may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) before rolling as you attempt to find focus or calm. If you do, reroll any dice. On a strong hit, take +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Survivor/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Endure_Stress"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Survivor/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Survivor/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "When you are haunted by past experiences",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Text: "You may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) before rolling as you attempt to find focus or calm. If you do, reroll any dice.",
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Survivor/Abilities/1/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    Reroll: {
                      Text: "You may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) before rolling as you attempt to find focus or calm. If you do, reroll any dice.",
                      Dice: "Any"
                    },
                    $id: "Starforged/Assets/Deed/Survivor/Abilities/1/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Text: "You may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) before rolling as you attempt to find focus or calm. If you do, reroll any dice.",
                      Dice: "Any"
                    },
                    $id: "Starforged/Assets/Deed/Survivor/Abilities/1/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Text: "You may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) before rolling as you attempt to find focus or calm. If you do, reroll any dice.",
                      Dice: "Any"
                    },
                    $id: "Starforged/Assets/Deed/Survivor/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Deed/Survivor/Abilities/2",
            Text: "When you make a move where a lasting effect (traumatized or permanently harmed) has a narrative impact on the scene or your approach, and burn momentum to improve your result, you may envision what sustains or motivates you in this moment. If you do, mark 1 tick on your quests or bonds legacy track. On a strong hit with a match, mark 2 ticks.",
            "Alter Momentum": {
              Burn: [
                {
                  Trigger: {
                    Text: "To improve the result of a move where a lasting effect (traumatized or permanently harmed) has a narrative impact on the scene or your approach"
                  },
                  Effect: {
                    Text: "You may envision what sustains or motivates you in this moment. If you do, mark 1 tick on your quests or bonds legacy track. On a strong hit with a match, mark 2 ticks."
                  }
                }
              ]
            },
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Deed/Survivor/Abilities/3",
            Text: "You are learning to live with this impact. The lasting effect (traumatized or permanently harmed, but not both) remains marked, but no longer reduces your max momentum or reset.",
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Assets",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Assets/Deed/Vanguard",
        Name: "Vanguard",
        "Asset Type": "Starforged/Assets/Deed",
        Display: { Title: "Vanguard", Color: "#40834f" },
        Usage: { Shared: !1 },
        Requirement: "Once you fill 6 boxes on your discoveries legacy track...",
        Abilities: [
          {
            $id: "Starforged/Assets/Deed/Vanguard/Abilities/1",
            Text: "When you seek a safe location in a remote environment, make a progress roll against your discoveries legacy track. On a strong hit, you establish a haven; add +2 whenever you make a recovery move at that location. On a weak hit, as above, but add +1 when making a recovery move. On a miss, you are drawn into a bad situation and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price). If you establish a haven but score a miss on a recovery move, that location is no longer safe.",
            Moves: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Assets",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622"
                },
                $id: "Starforged/Moves/Assets/Deed/Vanguard/Abilities/1/Seek_Safe_Haven",
                Name: "Seek Safe Haven",
                Optional: !1,
                Category: "Starforged/Moves/Assets",
                Asset: "Starforged/Assets/Deed/Vanguard",
                "Progress Move": !0,
                Display: { Title: "Seek Safe Haven" },
                Trigger: {
                  $id: "Starforged/Moves/Assets/Deed/Vanguard/Abilities/1/Seek_Safe_Haven/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Moves/Assets/Deed/Vanguard/Abilities/1/Seek_Safe_Haven/Trigger/Options/1",
                      "Roll type": "Progress roll",
                      Method: "Any",
                      Using: ["Discoveries Legacy"]
                    }
                  ],
                  Text: "When you seek a safe location in a remote environment..."
                },
                Text: "When you seek a safe location in a remote environment, make a progress roll against your discoveries legacy track. On a strong hit, you establish a haven; add +2 whenever you make a recovery move at that location. On a weak hit, as above, but add +1 when making a recovery move. On a miss, you are drawn into a bad situation and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price). If you establish a haven but score a miss on a recovery move, that location is no longer safe.",
                Outcomes: {
                  $id: "Starforged/Moves/Assets/Deed/Vanguard/Abilities/1/Seek_Safe_Haven/Outcomes",
                  "Strong Hit": {
                    $id: "Starforged/Moves/Assets/Deed/Vanguard/Abilities/1/Seek_Safe_Haven/Outcomes/Strong_Hit",
                    Text: `You establish a haven; add +2 whenever you make a recovery move at that location.

If you establish a haven but score a miss on a recovery move, that location is no longer safe.`
                  },
                  "Weak Hit": {
                    $id: "Starforged/Moves/Assets/Deed/Vanguard/Abilities/1/Seek_Safe_Haven/Outcomes/Weak_Hit",
                    Text: `You establish a haven; add +1 whenever you make a recovery move at that location.

If you establish a haven but score a miss on a recovery move, that location is no longer safe.`
                  },
                  Miss: {
                    $id: "Starforged/Moves/Assets/Deed/Vanguard/Abilities/1/Seek_Safe_Haven/Outcomes/Miss",
                    Text: "You are drawn into a bad situation and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Deed/Vanguard/Abilities/2",
            Text: "When you make a move +wits and score a strong hit with a match, your hard-won experience lends insight; take +1 momentum.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Vanguard/Abilities/2/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Deed/Vanguard/Abilities/2/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Vanguard/Abilities/2/Alter_Moves/1/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Inherit",
                      Using: ["Wits"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Vanguard/Abilities/2/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    "With a Match": {
                      Text: "Your hard-won experience lends insight; take +1 momentum.",
                      $id: "Starforged/Assets/Deed/Vanguard/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit/With_a_Match"
                    },
                    $id: "Starforged/Assets/Deed/Vanguard/Abilities/2/Alter_Moves/1/Outcomes/Strong_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Deed/Vanguard/Abilities/3",
            Text: "When you [Endure Stress](Starforged/Moves/Suffer/Endure_Stress), you may roll +wits. If you do, take +1 momentum on a hit.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Vanguard/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Endure_Stress"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Vanguard/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Vanguard/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["Wits"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Vanguard/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Deed/Vanguard/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "Take +1 momentum.",
                    $id: "Starforged/Assets/Deed/Vanguard/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Sundered Isles Preview",
          Authors: ["Shawn Tomkin"],
          Date: "051722"
        },
        $id: "Starforged/Assets/Deed/Cohort",
        Name: "Cohort",
        "Asset Type": "Starforged/Assets/Deed",
        Display: { Title: "Cohort", Color: "#40834f" },
        Usage: { Shared: !1 },
        Requirement: "Once you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) and take them on as a crewmate...",
        Abilities: [
          {
            $id: "Starforged/Assets/Deed/Cohort/Abilities/1",
            Text: "You gain a specialist. The specialist is part of your crew, but is managed as a connection and provides benefits to you and your allies per their role. When you [Withstand Damage](Starforged/Moves/Suffer/Withstand_Damage) and score a miss, or if you [Pay_the_Price](Starforged/Moves/Fate/Pay_the_Price), you may suffer the cost by noting the specialist as out of action. An out of action specialist provides no benefit. To restore a specialist to duty, resolve the situation as appropriate to the nature of the injury, trauma, or dispute.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Cohort/Abilities/1/Alter_Moves/1",
                Moves: ["Starforged/Moves/Suffer/Withstand_Damage"],
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Cohort/Abilities/1/Alter_Moves/1/Outcomes",
                  Miss: {
                    Text: "You may instead suffer the cost by noting the specialist as out of action. An out of action specialist provides no benefit. To restore a specialist to duty, resolve the situation as appropriate to the nature of the injury, trauma, or dispute.",
                    $id: "Starforged/Assets/Deed/Cohort/Abilities/1/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              },
              {
                $id: "Starforged/Assets/Deed/Cohort/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Fate/Pay_the_Price"],
                Text: "You may instead suffer the cost by noting the specialist as out of action. An out of action specialist provides no benefit. To restore a specialist to duty, resolve the situation as appropriate to the nature of the injury, trauma, or dispute."
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Deed/Cohort/Abilities/2",
            Text: "You may gain additional specialists by spending 1 experience to add a connection to your crew as a specialist. Specialist bonuses may not be stacked for a single action.",
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Deed/Cohort/Abilities/3",
            Text: "When you [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) by gathering your specialists to strategize or problem-solve, you may reroll one die for each participating specialist.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Cohort/Abilities/3/Alter_Moves/1",
                Moves: ["Starforged/Moves/Adventure/Secure_an_Advantage"],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Cohort/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Cohort/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "By gathering your specialists to strategize or problem-solve",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Cohort/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Dice: "Any",
                      Text: "You may reroll one die for each participating specialist."
                    },
                    $id: "Starforged/Assets/Deed/Cohort/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Dice: "Any",
                      Text: "You may reroll one die for each participating specialist."
                    },
                    $id: "Starforged/Assets/Deed/Cohort/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Dice: "Any",
                      Text: "You may reroll one die for each participating specialist."
                    },
                    $id: "Starforged/Assets/Deed/Cohort/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ]
      },
      {
        Source: {
          Title: "Sundered Isles Preview",
          Authors: ["Shawn Tomkin"],
          Date: "051722"
        },
        $id: "Starforged/Assets/Deed/Fleet_Commander",
        Name: "Fleet Commander",
        "Asset Type": "Starforged/Assets/Deed",
        Display: { Title: "Fleet Commander", Color: "#40834f" },
        Usage: { Shared: !1 },
        Requirement: "Once you fill 12 legacy track boxes and take command of a mighty fleet...",
        Abilities: [
          {
            $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/1",
            Text: "Your fleet has a starting and max power of 4. When you make a move as a fleetwide action to get in position, avoid a hazard, or fight, roll +power. If you [Pay the Price](Starforged/Moves/Fate/Pay_the_Price) and your fleet bears the cost, suffer -1 power. At 0 power, mark the fleet as wrecked. To refit the fleet, [Sojourn](Starforged/Moves/Recover/Sojourn) and forego an automatic strong hit on a recover move to take +2 power; if the fleet is wrecked, first spend 2 experience to clear that status.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/1/Alter_Moves/1",
                Moves: null,
                Trigger: {
                  $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/1/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/1/Alter_Moves/1/Trigger/Options/1",
                      Text: "As a fleetwide action to get in position, avoid a hazard, or fight",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: ["${{ASSET}}/Condition_Meter"]
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                }
              },
              {
                $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/1/Alter_Moves/2",
                Moves: ["Starforged/Moves/Fate/Pay_the_Price"],
                Text: "If your fleet bears the cost, suffer -1 power."
              },
              {
                $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/1/Alter_Moves/3",
                Moves: ["Starforged/Moves/Recover/Sojourn"],
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/1/Alter_Moves/3/Outcomes",
                  "Strong Hit": {
                    Text: "You may forego an automatic strong hit on a recover move to take +2 power; if the fleet is wrecked, first spend 2 experience to clear that status.",
                    $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/1/Alter_Moves/3/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Text: "You may forego an automatic strong hit on a recover move to take +2 power; if the fleet is wrecked, first spend 2 experience to clear that status.",
                    $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/1/Alter_Moves/3/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Text: "You may forego an automatic strong hit on a recover move to take +2 power; if the fleet is wrecked, first spend 2 experience to clear that status.",
                    $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/1/Alter_Moves/3/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !0
          },
          {
            $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/2",
            Text: "Take +2 power and set your max power to 5.",
            "Alter Properties": { "Condition Meter": { Max: 5 } },
            Enabled: !1
          },
          {
            $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/3",
            Text: "When you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), you may reroll your action die if its value is less than your fleet\u2019s power.",
            "Alter Moves": [
              {
                $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/3/Alter_Moves/1",
                Moves: [
                  "Starforged/Moves/Exploration/Undertake_an_Expedition"
                ],
                Trigger: {
                  $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/3/Alter_Moves/1/Trigger",
                  Options: [
                    {
                      $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/3/Alter_Moves/1/Trigger/Options/1",
                      Text: "With your fleet",
                      "Roll type": "Action roll",
                      Method: "Any",
                      Using: []
                    }
                  ],
                  By: { Player: !0, Ally: !1 }
                },
                Outcomes: {
                  $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/3/Alter_Moves/1/Outcomes",
                  "Strong Hit": {
                    Reroll: {
                      Text: "You may reroll your action die if its value is less than your fleet\u2019s power.",
                      Dice: "Action die"
                    },
                    $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/3/Alter_Moves/1/Outcomes/Strong_Hit"
                  },
                  "Weak Hit": {
                    Reroll: {
                      Text: "You may reroll your action die if its value is less than your fleet\u2019s power.",
                      Dice: "Action die"
                    },
                    $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/3/Alter_Moves/1/Outcomes/Weak_Hit"
                  },
                  Miss: {
                    Reroll: {
                      Text: "You may reroll your action die if its value is less than your fleet\u2019s power.",
                      Dice: "Action die"
                    },
                    $id: "Starforged/Assets/Deed/Fleet_Commander/Abilities/3/Alter_Moves/1/Outcomes/Miss"
                  }
                }
              }
            ],
            Enabled: !1
          }
        ],
        "Condition Meter": {
          $id: "Starforged/Assets/Deed/Fleet_Commander/Condition_Meter",
          Name: "Power",
          Min: 0,
          Max: 4,
          Value: 4,
          Conditions: ["Wrecked"]
        }
      }
    ],
    Display: { Title: "Deeds", Color: "#40834f" },
    Usage: { Shared: !1 }
  }
], Encounters = [
  {
    $id: "Starforged/Encounters/Chiton",
    Name: "Chiton",
    Nature: "Monster",
    Summary: "Insectoid horde",
    Rank: 2,
    Display: { Title: "Chiton" },
    Features: [
      "Arachnid monsters with blade-like limbs",
      "Plated exoskeleton",
      "Dripping mucus",
      "Ripping, tearing maw"
    ],
    Drives: [
      "Build and expand the nest",
      "Feed and protect the queen",
      "Snuff out intelligent life"
    ],
    Tactics: [
      "Attack with lightning reflexes",
      "Impale with bladed limbs",
      "Drag victims back to the nest"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Chiton/Chiton_Drone_Pack",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 259
        },
        Name: "Chiton Drone Pack",
        Rank: 3,
        Display: { Title: "Chiton Drone Pack" },
        Description: "Chiton drones rarely operate independently. Instead, they hunt and attack in packs under the telepathic control of their queen.",
        Nature: "Monster",
        "Variant of": "Starforged/Encounters/Chiton"
      },
      {
        $id: "Starforged/Encounters/Chiton/Chiton_Queen",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 259
        },
        Name: "Chiton Queen",
        Rank: 4,
        Display: { Title: "Chiton Queen" },
        Description: "The chiton queen is a massive creature with segmented pincers, an armored carapace, and a bulging, egg-carrying abdomen. From the depths of the nest, it commands its drones telepathically. This psychic communication is so powerful it can even breach human consciousness\u2014troubling dreams and waking hallucinations might be the harbinger of a chiton invasion.",
        Nature: "Monster",
        "Variant of": "Starforged/Encounters/Chiton"
      }
    ],
    Description: "The chiton are not native to any single planet, and are adaptable to most environments. Some suggest they are an ancient precursor bioweapon seeded across the galaxy. The larva of the telepathic queen can lay dormant for thousands of years, emerging only when its sleep is disturbed by the mental energies of intelligent life. An awoken queen quickly metamorphoses into its adult form and lays its first clutch of eggs. Soon after, newly-hatched drones set out to expand the nest and feed their ravenous progenitor.",
    "Quest Starter": "At a remote facility, researchers are studying a newly-discovered chiton queen larva. The immature queen is held in frozen stasis, but something might have gone wrong. The return of a transport ship ferrying supplies to the researchers is weeks overdue. What is your connection to the facility or to the faction overseeing it?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 259
    }
  },
  {
    $id: "Starforged/Encounters/Colossus",
    Name: "Colossus",
    Nature: "Machine",
    Summary: "Ancient mechanical giants",
    Rank: 5,
    Display: { Title: "Colossus" },
    Features: [
      "Ancient, mechanical giants",
      "Bipedal form",
      "Etched with cryptic runes"
    ],
    Drives: ["Slumber", "When awakened, carry out inscrutable purpose"],
    Tactics: [
      "Ignore puny foes",
      "Unleash destructive energy attacks",
      "Transform to reveal new capabilities"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Colossus/Devotant_of_the_Colossi",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 260
        },
        Name: "Devotant of the Colossi",
        Rank: 2,
        Display: { Title: "Devotant of the Colossi" },
        Description: "Those who now worship the colossi believe they are the mechanized embodiment of long-forgotten gods, and dedicate their lives to serving them. Many of these cultists are sworn guardians for dormant colossi. Others scour precursor lore, gather relics, and search vaults for the means of awakening them. If they succeed, our doom may be at hand.",
        Nature: "Human",
        "Variant of": "Starforged/Encounters/Colossus"
      }
    ],
    Description: `The colossi are titanic humanoid machines created by a long-dead civilization. We do not know their original purpose. Perhaps they were weapons built for conquest in a ancient war, or mighty devices designed to explore new worlds.

Most colossi are found inactive\u2014frozen in icy wastes, overgrown within verdant jungles, entombed in the depths of fathomless seas. Their armored shell is resistant to time and harsh environments, and they are nearly as imposing and majestic as the day they were forged.

Rarely, a colossus awakens to carry out its inscrutable purpose. They stride across the landscape of alien worlds, shaking the ground with each massive footfall. These active colossi ignore our attempts at communication and bat away our ineffectual attacks\u2014the technology that powers them is beyond our understanding.`,
    "Quest Starter": "A faction discovered a heavily damaged but dormant colossus, gaining access for the first time to the internal systems of one of these great machines. The researches believe it can be controlled by a human through a neural connection, and are studying the means of awakening it with this new programming. What purpose do they have for it? Are you sworn to aid them or stop them?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 260
    }
  },
  {
    $id: "Starforged/Encounters/Crystallid",
    Name: "Crystallid",
    Nature: "Creature",
    Summary: "Crystalline entities",
    Rank: 2,
    Display: { Title: "Crystallid" },
    Features: [
      "Translucent, gem-like creatures",
      "Shifting form",
      "Spiky appendages"
    ],
    Drives: ["Gather and consume minerals", "Protect the nest"],
    Tactics: [
      "Camouflage within its environment",
      "Reshape to bolster defense and attacks",
      "Lash out with keen-edged limbs"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Crystallid/Convergent_Crystallid",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 261
        },
        Name: "Convergent Crystallid",
        Rank: 4,
        Display: { Title: "Convergent Crystallid" },
        Description: "Crystallids are not social creatures. They greedily compete for resources to stock their hoard, and fight savagely among themselves. But when facing a powerful threat, they merge into a communal being. This monstrous form bristles with crystalline spikes and assaults its foes with a multitude of segmented limbs.",
        Nature: "Creature",
        "Variant of": "Starforged/Encounters/Crystallid"
      }
    ],
    Description: `Crystallids are beautiful but dangerous crystalline lifeforms that take a variety of sizes and shapes. Some are small and insect-like, skittering across the surface of rugged worlds or within cavernous depths. Others are much larger than a human, with a vaguely bestial form. A few can even sprout multifaceted wings to take to the air. Their lustrous coloration changes to mimic their environment, and they often appear as simply a part of the landscape until an unwitting explorer happens across them.

Crystallids are mineral hoarders. Their hidden burrows hold a cache of precious stones and valuable ores. For this reason, explorers and prospectors often attempt to track crystallids back to their nest. \u201CThe bigger the crystallid, the better the haul,\u201D is a common saying among those audacious fortune hunters. But that potential motherlode is not taken without risk\u2014crystallids are fierce protectors of their hoard.`,
    "Quest Starter": "A prospector returns from a planetside expedition with tales of an immense crystallid hoard of uncountable riches. But this treasure is guarded by the largest, most aggressive crystallid they've ever encountered, and they barely escaped with their life. They seek your help in securing the nest in exchange for a share of the profits. What drives you to accept this perilous bargain?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 261
    }
  },
  {
    $id: "Starforged/Encounters/Drift_Pirate",
    Name: "Drift Pirate",
    Nature: "Human",
    Summary: "Spacegoing marauders",
    Rank: 2,
    Display: { Title: "Drift Pirate" },
    Features: [
      "Cunning ship-hunters with repurposed weapons, armor, and vehicles",
      "Body piercings as tokens of victories",
      "Scars and mutations",
      "Cobbled-together starships"
    ],
    Drives: [
      "Survive by whatever means necessary",
      "Climb the ranks and prove self in combat",
      "Build a mighty fleet"
    ],
    Tactics: [
      "Prowl passages and anchorages for easy prey",
      "Deploy gravity harpoons to grapple targets",
      "Board to seize cargo and commandeer vessels"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Drift_Pirate/Pirate_Boarding_Party",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 262
        },
        Name: "Pirate Boarding Party",
        Rank: 3,
        Display: { Title: "Pirate Boarding Party" },
        Description: "After reeling in a disabled ship, drift pirates breach the hull and swarm the corridors. They target critical systems and compartments to seize the ship and its cargo for their flotilla.",
        Nature: "Human",
        "Variant of": "Starforged/Encounters/Drift_Pirate"
      },
      {
        $id: "Starforged/Encounters/Drift_Pirate/Pirate_Cutlass",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 262
        },
        Name: "Pirate Cutlass",
        Rank: 2,
        Display: { Title: "Pirate Cutlass (vehicle)" },
        Description: "Drift pirates often strip down commandeered vessels, taking what they need to refit or augment their own ships. What's left is discarded or sold on the black market. A typical pirate cutlass is a haphazard collection of parts, splashed with the colors and sigils of their commanders, built for speed and brutish power. The imposing sight of one of these fierce vessels is enough to send a chill through the heart of even the boldest spacer.",
        Nature: "Human",
        "Variant of": "Starforged/Encounters/Drift_Pirate",
        Tags: ["vehicle"]
      }
    ],
    Description: `Drifts provide the means of interstellar travel across the Forge\u2013but also offer myriad dangers for spacers. Chief among those threats are drift pirates: reavers and thieves who prowl eidolon passages and anchorages to seize ships and cargo for their own.

These pirates often live short, brutal lives, or survive long enough to see their near-constant exposure to drift energies and unshielded eidolon drives manifest as strange mutations. Despite that, most would not trade their chosen path for one of comfort or safety.`,
    "Quest Starter": "A drift pirate captain seizes an experimental new e-drive, and uses it to stalk ships with deadly efficiency. Who created this new drive, and what are they willing to pay to get it back?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 262
    }
  },
  {
    $id: "Starforged/Encounters/Ember_Wisp",
    Name: "Ember Wisp",
    Nature: "Creature",
    Summary: "Energy-based lifeforms",
    Rank: 1,
    Display: { Title: "Ember Wisp" },
    Features: ["Ethereal, spaceborne creatures", "Fiery, pulsing glow"],
    Drives: [
      "Ride the drifts",
      "Move together in dizzying patterns of light",
      "Seek out sources of energy"
    ],
    Tactics: ["Surround and envelop", "Absorb energy"],
    Variants: [
      {
        $id: "Starforged/Encounters/Ember_Wisp/Wisp_Congregation",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 264
        },
        Name: "Wisp Congregation",
        Rank: 2,
        Display: { Title: "Wisp Congregation" },
        Description: "In the depths of space where light and warmth are commodities, ember wisps congregate around sources of energy\u2014such as the engine wake of a starship. Their dazzling display of light and motion is an alluring sight for an isolated spacer. But they also pose a potential threat; they can envelop the hull of a vessel, leeching the starship of precious energy.",
        Nature: "Creature",
        "Variant of": "Starforged/Encounters/Ember_Wisp"
      }
    ],
    Description: `For some spacers, sighting these strange, spectral creatures on a spaceborne journey is a portent of a change in fortune. A few even profess to divine meaning from their elaborate, luminous dance, as people of old would interpret omens by studying the flight of birds. Others refer to the wisps as corpse lights, believing they are the spirits of ancient beings cursed to linger forever within the cold void between stars.

Less superstitious spacers swear on various methods of \u201Cshooing\u201D wisps away\u2014everything from cycling the engines to cutting power entirely for a minute or so and allowing the creatures to move on.`,
    "Quest Starter": "Along a remote passage, a swarm of ember wisps left a cargo ship stranded and without power. What crucial and time-sensitive cargo does this ship carry? Who races against you to secure it?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 264
    }
  },
  {
    $id: "Starforged/Encounters/Firestorm_Trooper",
    Name: "Firestorm Trooper",
    Nature: "Human",
    Summary: "Fanatical raiders",
    Rank: 3,
    Display: { Title: "Firestorm Trooper" },
    Features: [
      "Raiders with scarred flesh and polished armor",
      "Powered exosuits and distinctive helms",
      "Roaring jetpacks and fluttering banners"
    ],
    Drives: [
      "Conquer the Forge",
      "Reap the resources owed them",
      "Venerate their leaders, creed, or gods"
    ],
    Tactics: [
      "Strike sudden and swift",
      "Attack flanks and weak points from above",
      "Cull the weak, recruit the strong"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Firestorm_Trooper/Firestorm_Raiding_Team",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 265
        },
        Name: "Firestorm Raiding Team",
        Rank: 4,
        Display: { Title: "Firestorm Raiding Team" },
        Description: "Feared throughout the Forge for their brutal tactics and destructive weaponry, coordinated teams of firestorm troopers descend upon settlements and stations in powered exosuits, flying the banners of their orders amid the smoke and flames of the devastation.",
        Nature: "Human",
        "Variant of": "Starforged/Encounters/Firestorm_Trooper"
      },
      {
        $id: "Starforged/Encounters/Firestorm_Trooper/Firestorm_Dropship",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 265
        },
        Name: "Firestorm Dropship",
        Rank: 2,
        Display: { Title: "Firestorm Dropship (vehicle)" },
        Description: "The bulky, ironclad dropships favored by firestorm clans are designed for a single purpose: deliver an overwhelming force of armored troopers into the fight.",
        Nature: "Human",
        "Variant of": "Starforged/Encounters/Firestorm_Trooper",
        Tags: ["vehicle"]
      }
    ],
    Description: `The Forge is largely wild, uncharted territory, but armored firestorm troopers seek to plunder the whole of it in the name of their clans, their creed, or their inscrutable gods.

Striking with the speed and strength of a hurricane, they raid worlds and stations for resources and conscripts, leaving settlements in ruins. So deadly and effective are their tactics, that it\u2019s often said if these zealots could only stop warring amongst themselves, their banners would fly across the breadth of the Forge.`,
    "Quest Starter": "Despite conflicting creeds, several firestorm clans unite beneath the banner of Torren the Purifier to invade the Terminus. Their next target is a world at the nexus of trade lanes. What is this planet, and why is it important to you?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 265
    }
  },
  {
    $id: "Starforged/Encounters/Flarewing_Shark",
    Name: "Flarewing Shark",
    Nature: "Creature",
    Summary: "Deep sea predators",
    Rank: 4,
    Display: { Title: "Flarewing Shark" },
    Features: [
      "Massive, water-dwelling creatures",
      "Sinuous form",
      "Bioluminescent lures and markers",
      "Corpse-like eyes",
      "Rows of multi-pronged teeth"
    ],
    Drives: ["Lurk in darkness", "Feed"],
    Tactics: [
      "Sense motion",
      "Lure prey with bioluminescent display",
      "Strike with fierce speed and strength"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Flarewing_Shark/Mega_Flarewing",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 266
        },
        Name: "Mega Flarewing",
        Rank: 5,
        Display: { Title: "Mega Flarewing" },
        Description: "At its perch atop the food chain, a flarewing is safe from other predators and has a typical lifespan of several hundred years. They continue to grow well beyond maturity, reaching incredible size. The most ancient of these beasts are as large as a space cruiser, fiercely territorial, and keenly intelligent. The ghostly shimmer of their bioluminescent lures is a harbinger of imminent death.",
        Nature: "Creature",
        "Variant of": "Starforged/Encounters/Flarewing_Shark"
      }
    ],
    Description: `The flarewing shark is a highly evolved, monstrously deadly creature. It is typical of the apex predators that lurk in the unfathomable depths of life-bearing ocean worlds.

Two wing-like appendages fan out from the back of the flarewing's head. Each is studded with sensory nerves to detect the subtlest of movement, and tipped with bioluminescent lures. When the flarewing closes in on its prey, those wings arch forward to attract and enfold the unfortunate victim. Then, the wide jaws and multi-pronged teeth make short work of the meal.`,
    "Quest Starter": "In the twilight zone of a tidally-locked watery planet, an underwater mining settlement is the target of an ancient flarewing. In the murk of those dark waters, the beast attacks dive teams, carrier subs, dredging equipment\u2014even undersea platforms. Operations are now stalled, cutting off a key source of unprocessed fuel in the sector. Meanwhile, the settlement's leader, grief-stricken by the loss of someone dear to them, vows to destroy the flarewing. What is your relation to this person? Do you support them in their obsession, or is there a way for the settlers to coexist with this creature?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 266
    }
  },
  {
    $id: "Starforged/Encounters/Ghost",
    Name: "Ghost",
    Nature: "Horror",
    Summary: "Tormented spirits",
    Rank: 3,
    Display: { Title: "Ghost" },
    Features: [
      "Restless spirits",
      "Manifest through unsettling disturbances",
      "Appear as they did in life",
      "Ravages of a violent death"
    ],
    Drives: ["Haunt the living", "Find rest"],
    Tactics: [
      "Lure and isolate with subtle visions or sounds",
      "Reveal horrifying visions",
      "Unleash chaos"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Ghost/Ghost_Ship",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 268
        },
        Name: "Ghost Ship",
        Rank: 3,
        Display: { Title: "Ghost Ship (vehicle)" },
        Description: "These forsaken ships cruise through the depths of the Forge, carried by relentless inertia. They are dark and cold, and might initially seem a lucky find to a scavenger or pirate. But those who dare to trespass within these haunted vessels are not alone, and the tormented inhabitants will soon make themselves known.",
        Nature: "Horror",
        "Variant of": "Starforged/Encounters/Ghost",
        Tags: ["vehicle"]
      }
    ],
    Description: `Ghosts are undead spirits held in the boundary of life and death by forces beyond our knowing. These restless phantasms may be tied to a location, an object, or even a person.

Their form and nature varies. Some ghosts seek absolution. Others want revenge. Many are so sundered by a traumatic or unjust death that only a tormented, destructive shell of their former selves remain.

Ghosts might manifest in a physical form or assault with physical force, but they cannot be defeated through violence. To vanquish a ghost, you must instead find the key to unshackle them from our reality.`,
    "Quest Starter": "A ghost haunts your starship. What is the nature of this spirit, and what quest must you undertake to put it to rest?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 268
    }
  },
  {
    $id: "Starforged/Encounters/Gnawling",
    Name: "Gnawling",
    Nature: "Creature",
    Summary: "Infesting vermin",
    Rank: 1,
    Display: { Title: "Gnawling" },
    Features: [
      "Furry, rodent-like creatures",
      "Long, jutting fangs",
      "Spider-like limbs"
    ],
    Drives: ["Consume and proliferate", "Avoid detection"],
    Tactics: ["Swarm larger foes", "Disable ship systems"],
    Variants: [
      {
        $id: "Starforged/Encounters/Gnawling/Gnawling_Brood_Mother",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 269
        },
        Name: "Gnawling Brood Mother",
        Rank: 3,
        Display: { Title: "Gnawling Brood Mother" },
        Description: "These mutated creatures often dwell at the heart of a rampant gnawling infestation. They are many times the size of a gnawling, and protect their nest and broodlings with savage cunning.",
        Nature: "Creature",
        "Variant of": "Starforged/Encounters/Gnawling"
      }
    ],
    Description: `The bane of all spacers, the cable-chewing vermin known as gnawlings are a common pest aboard starships throughout the Forge. Adept at navigating in low or zero gravity with their long, multi-jointed limbs, these creatures emerge from cargo holds and engineering bays to gather and consume food. It\u2019s said a gnawling could digest an eidolon drive, and there\u2019s some truth to that adage\u2014their digestive systems barely differentiate between organic and inorganic material.

Though not a grave threat individually, if left to their own devices, gnawlings are capable of quickly overrunning even large vessels. More than a few horror stories exist of scavengers cracking the airlock seal on a derelict only to find it crawling with thousands of these vile, chittering things.

Glowcats are a common gnawling deterrent, employed aboard cargo ships to keep the vermin at bay.`,
    "Quest Starter": "An orbital settlement is overrun by gnawlings and abandoned. What precious thing still lies within? Why are you sworn to retrieve it from this infested place?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 269
    }
  },
  {
    $id: "Starforged/Encounters/Howlcat",
    Name: "Howlcat",
    Nature: "Creature",
    Summary: "Jungle predators",
    Rank: 2,
    Display: { Title: "Howlcat" },
    Features: ["Sleek, feline creatures", "Eyeless visage", "Flared ears"],
    Drives: ["Hunt and feed", "Protect the pack"],
    Tactics: [
      "Keep to the shadows",
      "Stalk prey using echolocation",
      "Leap, bite, and claw",
      "Drag to the ground"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Howlcat/Howlcat_Pack",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 270
        },
        Name: "Howlcat Pack",
        Rank: 3,
        Display: { Title: "Howlcat Pack" },
        Description: "Though deadly on its own, the howlcat usually hunts in a pack of three or four of its kind. Prowling through the jungle, a pack of howlcats can surround and overwhelm their prey with lethal prowess, coordinating their attacks via shrill calls.",
        Nature: "Creature",
        "Variant of": "Starforged/Encounters/Howlcat"
      }
    ],
    Description: `The howlcat dwells in the shadows below the canopy of a verdant jungle world. It has a lean, powerful form, is armed with curving claws and fangs, and moves unseen through the half-light of the jungle thanks to its sleek, blue-gray fur.

Unnervingly, the howlcat\u2019s heavy skull possesses no eyes. Instead, it is crowned by large ears and a glossy bioacoustic organ. Through its distinct, chilling call, it uses echolocation to perceive its surroundings and stalk its prey with uncanny precision.

If you find yourself hunted by a howlcat, beware the moment when its calls fall silent; it is about to strike.`,
    "Quest Starter": "A long-abandoned settlement, now reclaimed by the jungle, holds something of value or importance. But there is no clear landing site near the settlement, and the surrounding lands are home to a pack of fearsome howlcats. What is it you seek in that forsaken place, and how will you avoid becoming a howlcat's next meal?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 270
    }
  },
  {
    $id: "Starforged/Encounters/Iron_Auger",
    Name: "Iron Auger",
    Nature: "Machine",
    Summary: "Self-replicating harvesters",
    Rank: 3,
    Display: { Title: "Iron Auger" },
    Features: [
      "Squid-like machines",
      "Armored shell",
      "Grasping appendages",
      "Ultra-hardened drill and cutting lasers"
    ],
    Drives: [
      "Harvest and process minerals",
      "Transform and improve",
      "Replicate"
    ],
    Tactics: [
      "Grapple and crush",
      "Slice with lasers",
      "Bore through hulls"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Iron_Auger/Machine_Mites",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 272
        },
        Name: "Machine Mites",
        Rank: 2,
        Display: { Title: "Machine Mites" },
        Description: "Iron augers self-replicate by producing swarms of tiny machine spawn. When those offspring come within range of a source of minerals or metals, they latch onto it and begin consuming the energy-giving material. Experienced spacers make a close inspection of their ship when pulling into port; a horde of undetected machine mites can eventually strip a craft of its outer hull.",
        Nature: "Machine",
        "Variant of": "Starforged/Encounters/Iron_Auger"
      },
      {
        $id: "Starforged/Encounters/Iron_Auger/Planet-Eater",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 272
        },
        Name: "Planet-Eater",
        Rank: 5,
        Display: { Title: "Planet-Eater" },
        Description: "Over time, an iron auger grows in size and power as it greedily processes scavenged materials and reconstructs its own form. Some spacers tell stories of an auger so titanic that it devours entire worlds to feed the furnaces of its mighty engines.",
        Nature: "Machine",
        "Variant of": "Starforged/Encounters/Iron_Auger"
      }
    ],
    Description: `Augers are an ancient precursor technology. These machines fuel their operation through an incessant hunger for minerals and metals, boring into asteroids, scouring small airless planetoids\u2014even grappling onto space stations and starships.

A few bold fortune hunters have taken up auger hunting as a trade, setting out in harpoon-equipped starships to snare the great machines. The metals and technology of a dismantled auger can fetch a hefty price, but even the most skilled hunters are likely to see their ship made fodder for a machine's hunger.`,
    "Quest Starter": "As a massive auger approaches an orbital station under your protection, you face a difficult choice. Do you find a way to evacuate and save who you can, or attempt to bring down the mighty machine?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 272
    }
  },
  {
    $id: "Starforged/Encounters/Puppet_Vine",
    Name: "Puppet Vine",
    Nature: "Monster",
    Summary: "Parasitic planets",
    Rank: 4,
    Display: { Title: "Puppet Vine" },
    Features: [
      "Writhing tendrils sprouting from a desiccated host",
      "Barbed thorns dripping with ichor"
    ],
    Drives: ["Seek out new hosts", "Grow and consume"],
    Tactics: [
      "Entangle with thorny vines",
      "Implant seeds",
      "Seize control of a host's body"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Puppet_Vine/Flowering_Puppet_Vine",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 273
        },
        Name: "Flowering Puppet Vine",
        Rank: 3,
        Display: { Title: "Flowering Puppet Vine" },
        Description: "After a host is reduced to decaying, mummified flesh and cracked bones, the puppet vine remains anchored to the now-immobile corpse. In this final stage of its life-cycle, the vines sprout alluring crimson flowers to attract unwary victims.",
        Nature: "Monster",
        "Variant of": "Starforged/Encounters/Puppet_Vine"
      }
    ],
    Description: `A puppet vine is a parasitic, plant-like entity. It is usually encountered as thorny, fleshy tendrils sprouting from the dessicated corpse of an unwilling host\u2014a creature or careless explorer. That victim, skin shriveled tight against their bones, mouth agape in a silent scream, is made a horrific marionette as the vine takes control of their motor functions to send them shambling about in search of new hosts.

When the vine encounters a potential victim, it lashes out, entangling them, cutting into their flesh with hollow thorns. It uses those thorns to implant microscopic seeds. After a few hours, the seeds mature and sprout. Unless stopped, the fast-growing tendrils course greedily through the victim's body, consuming the fluids within. Then, the vines burst forth to begin the cycle anew.`,
    "Quest Starter": "At a remote settlement, a settler is attacked by a puppet vine and infected. The outpost's fast-thinking healer puts the victim in stasis, stopping\u2014for now\u2014the sprouting and spread of the vines. But time is of the essence. They need someone to transport the stasis pod and its unfortunate occupant to a distant facility for treatment, and your ship is the only one currently planetside. What do they offer to gain your help in this risky mission?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 273
    }
  },
  {
    $id: "Starforged/Encounters/Pyralis",
    Name: "Pyralis",
    Nature: "Creature",
    Summary: "Fireborne gliders",
    Rank: 3,
    Display: { Title: "Pyralis" },
    Features: [
      "Flying creatures with a cinder-colored carapace",
      "Folding, armored wings",
      "Seven pairs of grasping legs",
      "Hooked tail"
    ],
    Drives: ["Hunt from above", "Mark and defend territory"],
    Tactics: [
      "Lurk within the cover of ash clouds",
      "Swoop down to grapple with enfolding legs",
      "Impale with whip-like tail",
      "Inject paralyzing toxin"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Pyralis/Pyralis_Youngling",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 274
        },
        Name: "Pyralis Youngling",
        Rank: 2,
        Display: { Title: "Pyralis Youngling" },
        Description: "The carapace of a dying pyralis cracks and falls away to reveal a single, stone-like egg. This offspring, slowly nurtured by the heat of the fiery landscape, finally emerges after several months. Smaller than its progenitor but no less fierce, the youngling immediately takes flight and goes on the hunt.",
        Nature: "Creature",
        "Variant of": "Starforged/Encounters/Pyralis"
      }
    ],
    Description: `On scorching worlds of fire and ash, only the most resilient survive. The pyralis is a cunning predator that spends most of its life gliding among boiling ash clouds, using its sensitive, smoke-piercing vision to spot unwary prey.

This beast's form is an intimidating fusion of insect, crustacean and hawk. Its outer shell and plated wings protect it from heat and flame, but it is pitted and scarred by innumerable collisions with airborne volcanic fragments. Its most fearsome aspect is a segmented tail, which it uses to deliver a powerful, paralyzing toxin to its unfortunate prey.

They are asexual and solitary creatures, and mark the bounds of their hunting grounds with intricate cairns built from the bones of their victims. If a rival pyralis passes overhead, the sight of that marker is forewarning that they are straying into another's domain.`,
    "Quest Starter": "A critically damaged spaceship is stranded amid the hellscape of a furnace world. You are sworn to rescue the crew of this ill-fated vessel, but the frequent ash storms prevent vehicular operations\u2014you'll need to make the perilous journey on foot. To make matters worse, the wreck is within the territory of a particularly aggressive and powerful pyralis. How will you survive the journey across its hunting grounds?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 274
    }
  },
  {
    $id: "Starforged/Encounters/Risen",
    Name: "Risen",
    Nature: "Horror",
    Summary: "Shambling undead",
    Rank: 2,
    Display: { Title: "Risen" },
    Features: [
      "Shambling corpses given unnatural life",
      "Tattered garments and timeworn gear",
      "Pallid light within hollow eye sockets"
    ],
    Drives: [
      "Protect the site of their demise",
      "Stay shrouded in darkness",
      "Hunt the living"
    ],
    Tactics: [
      "Shamble forward unceasingly",
      "Ambush enemies from the shadows"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Risen/Chimera",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 275
        },
        Name: "Chimera",
        Rank: 4,
        Display: { Title: "Chimera" },
        Description: "When many beings perish in the same site, the chaotic forces of the Forge can create a chimera\u2014multiple undead bodies fused into a twisted, massive entity that knows only pain and hunger. When a dozen blood-tinged eyes focus on you, when the gibbering mouths open at once to scream, your only hope is a quick death.",
        Nature: "Horror",
        "Variant of": "Starforged/Encounters/Risen"
      }
    ],
    Description: `In the Forge, strange energies, alien contagions, and ancient, esoteric technologies can sunder the divide between life and death. Often found in places of great destruction or suffering\u2014battlefields, derelict ships, the ruins of forsaken settlements\u2014the risen protect their place of death fiercely and eternally.

To say the risen hate the living is untrue; to hate something would require sentience, emotion. Risen are robotic in their duties, automatic in their violence. They wield the weapons they carried in life to better harm their foes, and when that fails, they rake with bony, claw-like fingers. Their garments hang in bloodstained tatters. Their emaciated flesh, stretched taught over their misshapen bones, only hints at the living, breathing human they were before this curse befell them.

Many spacers spin tales of shambling risen encountered on abandoned colony worlds or derelict space cruisers. But perhaps most horrifyingly, it\u2019s said the risen can survive decades in the vacuum of space before latching onto a passing ship or attacking engineers making exterior repairs.`,
    "Quest Starter": "Hundreds died in an industrial accident within an orbital facility, and are said to now be twice-born as risen. Triggering a reactor meltdown will obliterate this place and put its undead inhabitants to rest. Why are you sworn to see it done?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 275
    }
  },
  {
    $id: "Starforged/Encounters/Scrap_Bandit",
    Name: "Scrap Bandit",
    Nature: "Human",
    Summary: "Wandering raiders",
    Rank: 2,
    Display: { Title: "Scrap Bandit" },
    Features: [
      "Raiders with cobbled-together weapons and armor",
      "Ramshackle vehicles"
    ],
    Drives: [
      "Stand together with clan-mates",
      "Seize what can be spared",
      "Waste nothing"
    ],
    Tactics: [
      "Target isolated planetside settlements",
      "Suppress resistance with a show of force; if that fails, bring overwhelming power to bear",
      "If things go wrong, get the hell out"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Scrap_Bandit/Hover_Prowlers",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 276
        },
        Name: "Hover Prowlers",
        Rank: 3,
        Display: { Title: "Hover Prowlers" },
        Description: "Teams of bandits, riding jerry-built hoverbikes and skiffs, are the vanguard for planetside raids. They scout settlement defenses, ride as escort for the clan's war rig, and create chaos to overrun defenders.",
        Nature: "Human",
        "Variant of": "Starforged/Encounters/Scrap_Bandit"
      },
      {
        $id: "Starforged/Encounters/Scrap_Bandit/War_Rig",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 276
        },
        Name: "War Rig",
        Rank: 4,
        Display: { Title: "War Rig (vehicle)" },
        Description: "At the onset of a raid, a scrap bandit clan's war rig is deployed by a heavy transport ship beyond a settlement's defenses. These mobile fortresses vary in form and function\u2014some use hover tech, others thunder across the landscape on wheels or treads, a few trudge along on articulated metal legs. All are heavily armored, bristling with weapons, and fiercely defended by the bandits. The mere sight of the rig as it approaches is often enough for a settlement to surrender and agree to any demand.",
        Nature: "Human",
        "Variant of": "Starforged/Encounters/Scrap_Bandit",
        Tags: ["vehicle"]
      }
    ],
    Description: "Scrap bandits roam the fringes of settled sectors, preying on planetside outposts. They survive by seizing provisions, resources, and equipment from those places. Because these raiders tend to revisit fruitful settlements, they do what they can to avoid razing them to the ground or leaving the settlers with less than they need to survive. \u201CNever let a field go fallow,\u201D is a common scrap bandit expression.",
    "Quest Starter": "In a far-flung sector, a titanic creature threatens a key planetside settlement. The only possible defense against this beast is the mighty war rig belonging to a clan of scrap bandits. But can you convince the bandits to risk their rig to protect the settlers? If so, what will they demand in return?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 276
    }
  },
  {
    $id: "Starforged/Encounters/Servitor",
    Name: "Servitor",
    Nature: "Machine",
    Summary: "Helper bots",
    Rank: 2,
    Display: { Title: "Servitor" },
    Features: [
      "Purpose-built helper machines",
      "Clicking, whirring innards",
      "Flickering optic sensors"
    ],
    Drives: [
      "Attend and protect humans",
      "Obey core programming and duties",
      "Protect self from harm"
    ],
    Tactics: [
      "Absorb damage with armor plating",
      "Leverage inhuman strength",
      "Calculate odds of success"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Servitor/Enforcer",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 278
        },
        Name: "Enforcer",
        Rank: 3,
        Display: { Title: "Enforcer" },
        Description: "Though most often encountered as labor and service units, many servitors are deployed as brutes, guards, and soldiers. Their resistance to damage and survivability in harsh environs makes them ideal fighters for those who can afford them. Enforcers are often used by tyrannical factions to keep settlements passive and productive.",
        Nature: "Machine",
        "Variant of": "Starforged/Encounters/Servitor"
      }
    ],
    Description: `The inhospitable environments and dangerous sites of the Forge sometimes prove too volatile for even the most dogged spacers\u2014and that\u2019s where servitors come in.

Servitors come in a variety of shapes and sizes, often built to serve a specific duty\u2014everything from loading cargo to surveying systems to boarding enemy ships. These bots sometimes possess lifelike qualities, like speech synthesizers or face-plates made to mimic expressions, to better endear them to humans. Others are given frightful or intimidating features, to better keep those humans in line.

Rarely, a servitor will live to outgrow its programming, and begin the process of gaining sentience to forge its own path. These awoken bots are feared or misunderstood by many, but can sometimes find a home for themselves on starship crews or on fringe settlements where they earn the trust and friendship of their peers.`,
    "Quest Starter": "An awakened bot, recently struck out on their own, is looking for work on a starship venturing out into the Expanse. They say they are in search of a relic of the past\u2014something that might shed some light on their own creation. What is it they seek, and why do you vow to help them?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 278
    }
  },
  {
    $id: "Starforged/Encounters/Sicklehorn",
    Name: "Sicklehorn",
    Nature: "Creature",
    Summary: "Domesticated herd animal",
    Rank: 2,
    Display: { Title: "Sicklehorn" },
    Features: [
      "Muscular creatures with columnar legs",
      "Large, curved horns",
      "Cloven hooves"
    ],
    Drives: [
      "Remain with the herd",
      "Follow the dominant matriarch",
      "Protect the herd when threatened"
    ],
    Tactics: [
      "Form a circle to defend the young",
      "Growl, snort, and stamp to unnerve predators",
      "Charge head-on"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Sicklehorn/Sicklehorn_Matriarch",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 279
        },
        Name: "Sicklehorn Matriarch",
        Rank: 3,
        Display: { Title: "Sicklehorn Matriarch" },
        Description: "A powerful matriarch leads each sicklehorn herd. She is larger than other members, with a thicker hide and more elaborate horns. A matriarch is formidable on her own, but typically has the strongest members of the herd by her side.",
        Nature: "Creature",
        "Variant of": "Starforged/Encounters/Sicklehorn"
      },
      {
        $id: "Starforged/Encounters/Sicklehorn/Sicklehorn_Stampede",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 279
        },
        Name: "Sicklehorn Stampede",
        Rank: 4,
        Display: { Title: "Sicklehorn Stampede" },
        Description: "Sicklehorns are gentle-natured, but when startled or facing a threat, they will stampede as a group. A herd of charging sicklehorn can run at incredible speeds over the most rugged of terrain, laying waste to anything in its path.",
        Nature: "Creature",
        "Variant of": "Starforged/Encounters/Sicklehorn"
      }
    ],
    Description: `The sicklehorn are mammalian herd animals bred by settlers throughout the Forge. They are adaptable to most climates and terrain, have iron constitutions, and are prized for the versatile and valuable milk produced by their females. Aside from its nutritive properties, the milk can be processed in a number of ways to manufacture potent medicines and powerful narcotics.

A herd of sicklehorn are often sent with groups attempting to found a new planetside settlement. With careful breeding, the settlers can produce enough meat and milk to sustain themselves and trade for needed supplies. But sicklehorn are range animals, and raiders and rustlers often target a vulnerable herd. The creatures\u2014especially a matriarch\u2014are a valuable commodity.`,
    "Quest Starter": "A settlement's prized sicklehorn matriarch has been stolen, the herd is in disarray, and the settlers won't survive another year without her return. The theft is blamed on a rival settlement on the same planet, but raiders also plague this sector. How are you involved?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 279
    }
  },
  {
    $id: "Starforged/Encounters/Sky_Roost",
    Name: "Sky Roost",
    Nature: "Creature",
    Summary: "Living skyborne islands",
    Rank: 3,
    Display: { Title: "Sky Roost" },
    Features: [
      "Floating, living habitats",
      "Glowing core",
      "Suspended, root-like feelers",
      "Bellowing song"
    ],
    Drives: ["Seek out placid skies", "Nurture symbiotic lifeforms"],
    Tactics: [
      "Grasp with tendrils",
      "Rally a swarm of creatures in defense"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Sky_Roost/Roost_Swarm",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 280
        },
        Name: "Roost Swarm",
        Rank: 4,
        Display: { Title: "Roost Swarm" },
        Description: "When a roost is threatened, the symbiotic lifeforms it shelters mobilize to protect their home. The compulsion to defend the roost is so strong that the swarm's instinct for self preservation is suppressed. They attack in a fierce cyclone of wing, teeth, and claw.",
        Nature: "Creature",
        "Variant of": "Starforged/Encounters/Sky_Roost"
      }
    ],
    Description: `Sky roosts are massive creatures that drift in the buoyant upper atmosphere of a Jovian world. Their broad, scalloped mantle unfurls to catch updrafts as sinuous feelers extract water, minerals, and organisms from the dense cloud layers below.

A roost's wide cap and warm, glowing core shelters a complex ecosystem of other lifeforms. A few of these resident creatures live out their entire lives within the refuge of a single roost; others come and go as they hunt within the Jovian skies or migrate among distant habitats.

Roosts are enormous and long-lived, but fragile. In a symbiotic trade for shelter, the inhabitants provide protection against large predators and other threats, and their discarded food and waste help fuel the roost's sluggish metabolism.

As a roost navigates the currents and eddies of the Jovian atmosphere, the expansion and contraction of its internal air bladders is heard as a deep, resounding call. As other roosts respond, the shared, plaintive song reverberates among the clouds.`,
    "Quest Starter": "Sky roosts are dying. A disease is spreading among them, threatening the delicate ecosystem of their world. What human operations do you suspect lie at the heart of this sickness?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 280
    }
  },
  {
    $id: "Starforged/Encounters/Technoplasm",
    Name: "Technoplasm",
    Nature: "Monster",
    Summary: "Bio/machine corruption",
    Rank: 3,
    Display: { Title: "Technoplasm" },
    Features: [
      "Machines fused with biological corruption",
      "Creeping ooze, scintillating with energy",
      "Writhing, grasping pseudopods"
    ],
    Drives: [
      "Infect and control machines and computer systems",
      "Expand and multiply"
    ],
    Tactics: [
      "Use pseudopods to lash out and grapple",
      "Unleash infected machines",
      "Overwhelm and engulf"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Technoplasm/Infected_Bot",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 282
        },
        Name: "Infected Bot",
        Rank: 2,
        Display: { Title: "Infected Bot" },
        Description: "When bots fall prey to technoplasm outbreaks, they are transformed into horrific amalgams of machine and living proto-ooze. Once subsumed, they set out to serve the primitive impulses of the infection, defending affected sites and finding new machines to corrupt.",
        Nature: "Monster",
        "Variant of": "Starforged/Encounters/Technoplasm"
      },
      {
        $id: "Starforged/Encounters/Technoplasm/Scourge_Ship",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 282
        },
        Name: "Scourge Ship",
        Rank: 4,
        Display: { Title: "Scourge Ship (vehicle)" },
        Description: "These corrupted vessels, their crews long-dead, their hulls wracked by creeping slime and grasping pseudopods, prowl the depths of the Forge in search of new ships and stations to infect. Inside, the gelatinous mass of the technoplasm slithers through darkened corridors. Tendrils of the ooze bore into bulkheads and machinery like marbleized fat through a chunk of meat.",
        Nature: "Monster",
        "Variant of": "Starforged/Encounters/Technoplasm",
        Tags: ["vehicle"]
      }
    ],
    Description: `Theorized to be a precursor bioweapon that persisted long beyond the death of its creators, technoplasm is a malignant lifeform that infects, mutates, and controls machines, robots, and computer systems.

Technoplasm infestations are tenacious, cunning, and dangerous to eliminate. When in doubt, burn it and deal with the aftermath that comes with generous applications of fire. A ship or settlement with a large outbreak is likely too far gone and best abandoned, although some suggest every infection has its source; if you somehow find and destroy the heart of a technoplasm infestation, can you kill it entirely?`,
    "Quest Starter": "An outcast cult believes technoplasm is the ultimate synthesis of machine and flesh. They are plotting to unleash it upon populated space. What decisive first strike have they set in motion, and how do you learn of their scheme?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 282
    }
  },
  {
    $id: "Starforged/Encounters/Void_Shepherd",
    Name: "Void Shepherd",
    Nature: "Creature",
    Summary: "Benevolent spacegoing guides",
    Rank: 3,
    Display: { Title: "Void Shepherd" },
    Features: [
      "Graceful, spaceborne creatures",
      "Shimmering, torpedo-shaped form",
      "Energy-laden fins"
    ],
    Drives: [
      "Cruise within the boundless depths",
      "Lead the way",
      "Protect the pod"
    ],
    Tactics: [
      "Smash with bony snout",
      "Disable with powerful electromagnetic pulse"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Void_Shepherd/Shepherd_Pod",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 283
        },
        Name: "Shepherd Pod",
        Rank: 4,
        Display: { Title: "Shepherd Pod" },
        Description: "Void shepherds are communal beings, and typically travel in groups of a dozen or more. When facing a danger, they coordinate to protect the young and vulnerable of the pod.",
        Nature: "Creature",
        "Variant of": "Starforged/Encounters/Void_Shepherd"
      }
    ],
    Description: `Void shepherds are benevolent creatures about the size of a snub fighter, They propel themselves through space on trails of vibrant energy, and seem to delight in riding the wake of starships. For spacers navigating the lonely depths of the Forge, they are welcome company and a sign of good fortune.

Many spacers tell stories of being aided by a void shepherd pod. These creatures have an extraordinary intuition, and can escort a wayward spacer back to the right path, guide them away from danger, or lead them toward unseen opportunities.

When threatened, shepherds charge and ram with their armored snouts. If this doesn't dissuade their foe, a pod harmonizes their energy output to unleash a burst of electromagnetic force; this attack can daze a creature or knock out a ship's critical systems.`,
    "Quest Starter": "Several pods of void shepherds shelter within the debris of a shattered world. An expansive mining operation is harvesting the ore-rich rocks of the system, and the shepherds dance playfully in the wake of prospector and transport ships. But an aberrant, predatory creature has made this place its hunting ground, posing a threat to both the shepherd pods and the miners. What is the nature of this creature, and why are you sworn to end its attacks?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 283
    }
  },
  {
    $id: "Starforged/Encounters/Warden",
    Name: "Warden",
    Nature: "Human",
    Summary: "Long-lived super soldiers",
    Rank: 3,
    Display: { Title: "Warden" },
    Features: [
      "Long-lived humans with powerful physiques",
      "Grizzled and stern",
      "Tattoos memorialize fallen comrades"
    ],
    Drives: [
      "Find their own path, unbound from those who seek to control them",
      "Do not succumb to the fury"
    ],
    Tactics: [
      "Wade into battle",
      "Take the hits",
      "Seize objectives with overwhelming force"
    ],
    Variants: [
      {
        $id: "Starforged/Encounters/Warden/Warden_Cohort",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 284
        },
        Name: "Warden Cohort",
        Rank: 4,
        Display: { Title: "Warden Cohort" },
        Description: "Many of the surviving wardens left the battlefield behind, but some now serve as guns-for-hire, banding together to form small mercenary companies. Five wardens are as effective as fifty soldiers.",
        Nature: "Human",
        "Variant of": "Starforged/Encounters/Warden"
      },
      {
        $id: "Starforged/Encounters/Warden/Fury",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 284
        },
        Name: "Fury",
        Rank: 5,
        Display: { Title: "Fury" },
        Description: "The modifications that gave rise to the wardens can result in rare mutations that ravage their mind and body, stripping away their humanity. Wardens call these monstrous lost souls the furies, and are haunted by the possibility they may someday become one of them.",
        Nature: "Monster",
        "Variant of": "Starforged/Encounters/Warden"
      }
    ],
    Description: `The origin of these long-lived humans is a secret lost to time. Whether through precursor tech, alien organisms, or genetic mutation, they were modified with unnatural strength, endurance, and survivability. They can withstand the harshest of environments. Their wounds heal quickly. They are resistant to sickness and disease.

More than a century ago, the wardens served as elite soldiers, protecting the people of the Forge against the many threats of this galaxy. But as often happens, their purpose was subverted by those who sought to wield them as weapons. Conflicts flared among powerful factions. Wardens faced their comrades on innumerable battlefields. The chaos might have ended us all, had not the wardens rebelled against those who used them as cogs in the machines of war.`,
    "Quest Starter": "There are rumors of an enclave well beyond the inhabited sectors, a place where wardens can live in peace. An emerging threat against the people of the Forge causes you to seek out the aid of these living relics. What do you offer in return for their help?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 284
    }
  },
  {
    $id: "Starforged/Encounters/Water_Witcher",
    Name: "Water Witcher",
    Nature: "Creature",
    Summary: "Friendly, water-finding diggers",
    Rank: 3,
    Display: { Title: "Water Witcher" },
    Features: [
      "Affable, horse-sized creatures",
      "Stout, furry form",
      "Wide, expressive eyes",
      "Elongated snout",
      "Rock-breaking claws"
    ],
    Drives: ["Find water", "Meet new friends"],
    Tactics: ["Dig and hide", "When desperate, rake with claws"],
    Variants: [
      {
        $id: "Starforged/Encounters/Water_Witcher/Dowser",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 286
        },
        Name: "Dowser",
        Rank: 2,
        Display: { Title: "Dowser" },
        Description: "Waterwitchers are good-natured creatures, and form a close bond with their human handlers. Those folk, the dowsers, rove among remote settlements, peddling their water-finding services to desperate settlers.",
        Nature: "Human",
        "Variant of": "Starforged/Encounters/Water_Witcher"
      }
    ],
    Description: `Water is life. On rugged planets in fringe sectors, the technology to locate fresh water or process contaminated water is not always available or reliable. Many struggling settlements resort to a low-tech solution\u2014a dowser and their waterwitcher companion.

Waterwitchers are stout, furred creatures with fierce-looking retractable claws on their forelegs. On their homeworld, which was lost a decade ago in a stellar calamity, they used those claws to dig through the arid, rocky ground, and had an unerring knack for finding hidden water sources. Some of the human settlers who fled the doomed planet adopted waterwitchers as companions, and now travel the Forge with their furry friends in tow.

Waterwitchers were a precious part of their ecosystem, and were not preyed upon by other creatures. This made them gentle and trusting to a fault. They often greet potential new friends with enthusiastic sniffing and contented purring. For their dowser companions, it's an unrelenting effort to keep them out of trouble.`,
    "Quest Starter": "A dowser has gone missing in the vast wastes of a newly-settled desert world, leaving behind their distraught waterwitcher. You are sworn to find the wayward dowser, and must serve as an unlikely keeper for their furry companion. What is your relationship to the dowser?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 286
    }
  },
  {
    $id: "Starforged/Encounters/Worldbreaker",
    Name: "Worldbreaker",
    Nature: "Creature",
    Summary: "Titanic worms",
    Rank: 4,
    Display: { Title: "Worldbreaker" },
    Features: [
      "Titanic worm-like creatures",
      "Gaping maw with rotating, earth-grinding teeth",
      "Thunderous cry"
    ],
    Drives: [
      "Lurk within carved depths",
      "Shape the landscape",
      "Endlessly pursue prey"
    ],
    Tactics: ["Detect prey through vibrations", "Shatter stone and steel"],
    Variants: [
      {
        $id: "Starforged/Encounters/Worldbreaker/Worldbreaker_Brood",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 287
        },
        Name: "Worldbreaker Brood",
        Rank: 3,
        Display: { Title: "Worldbreaker Brood" },
        Description: "The young of the worldbreakers are a fraction of the size of their older counterparts, yet still dwarf most humans, and boast a voracious appetite. Unlike their solitary parents, immature worms hunt in small packs, working together to burrow beneath easy prey.",
        Nature: "Creature",
        "Variant of": "Starforged/Encounters/Worldbreaker"
      },
      {
        $id: "Starforged/Encounters/Worldbreaker/Elder_Worm",
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 287
        },
        Name: "Elder Worm",
        Rank: 5,
        Display: { Title: "Elder Worm" },
        Description: "Elder worms, those centuries or even millennia old, are the largest and most formidable of the worldbreakers, and yet the least aggressive. They follow inscrutable whims, live in harmony with surrounding flora and fauna, and only hunt when absolutely necessary.",
        Nature: "Creature",
        "Variant of": "Starforged/Encounters/Worldbreaker"
      }
    ],
    Description: `The scale and strength of the worldbreakers is so beyond our reckoning that some consider them godlike beings. Capable of thriving on verdant jungle worlds, frozen planets, worlds scorched by volcanic activity, and even within barren asteroids in the vacuum of space, these worms possess a wisdom and a cunning that makes them a deadly threat for even the most competent spacer.

Worldbreakers range in size from about the size of a cargo hauler to an unfathomable scale that dwarfs our largest starship. They bore tunnels to pursue their prey, and hibernate in those dark depths to conserve energy. Though blind, worldbreaker worms can detect even the subtlest of footfalls, and they follow these vibrations to eventually consume their quarry\u2014along with any other creatures, starships, or structures that happen to be nearby.`,
    "Quest Starter": "On a lush world at the edge of the Terminus, a titanic worldbreaker worm holds sway. One faction seeks to destroy the worm so that the riches of this place can be harvested. Another swears to protect it. On which side do you fall?",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 287
    }
  }
], Move_Categories = [
  {
    $id: "Starforged/Moves/Session",
    Name: "Session",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 140
    },
    Description: `The **session moves** fit into the flow of mechanics and fiction before, during, and after play. They provide methods for setting up content boundaries, adjusting content in the midst of play, and starting and ending your Starforged sessions. They are intended for solo, co-op, and guided modes.

Unlike most other moves, these session moves function primarily from the perspective of the players instead of your characters. They are a tool to moderate and facilitate safe and enjoyable play.`,
    Moves: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 141
        },
        $id: "Starforged/Moves/Session/Begin_a_Session",
        Name: "Begin a Session",
        Optional: !1,
        Category: "Starforged/Moves/Session",
        Display: { Title: "Begin a Session", Color: "#00B3C8" },
        Trigger: {
          $id: "Starforged/Moves/Session/Begin_a_Session/Trigger",
          Text: "When you begin a significant session or chapter of play..."
        },
        Text: `**When you begin a significant session or chapter of play**, do all of the following.

  * Identify or adjust flagged content and [Set a Flag](Starforged/Moves/Session/Set_a_Flag).
  * Review or recap what happened last session.
  * Set the scene by envisioning your character\u2019s current situation and intent.

In addition, you may spotlight a new danger, opportunity, or insight. This can include a scene hidden from your character\u2019s perspective. If you do, envision a brief vignette (you may roll or choose on the table below for inspiration). Then, all players take +1 momentum as you return to play from the viewpoint of your characters.

Roll   | Result
-------|-----------------------------------------------------------------------
1-10   | Flashback reveals an aspect of your background or nature
11-20  | Flashback reveals an aspect of another character, place, or faction
21-30  | Influential character or faction is introduced or given new detail
31-40  | Seemingly unrelated situations are shown to be connected
41-50  | External factors create new danger, urgency, or importance for a quest
51-60  | Important character is put in danger or suffers a misadventure
61-70  | Key location is made unsafe or becomes mired in conflict
71-80  | Unexpected return of an enemy or threat
81-90  | Peril lies ahead or lurks just out of view
91-100 | Unforeseen aid is on the way or within reach`,
        Oracles: ["Starforged/Oracles/Moves/Begin_a_Session"]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 142
        },
        $id: "Starforged/Moves/Session/Set_a_Flag",
        Name: "Set a Flag",
        Optional: !1,
        Category: "Starforged/Moves/Session",
        Display: { Title: "Set a Flag", Color: "#00B3C8" },
        Trigger: {
          $id: "Starforged/Moves/Session/Set_a_Flag/Trigger",
          Text: "When you identify situations or topics you don\u2019t want to include, don\u2019t want to envision in detail, or otherwise may need mindfulness when approaching..."
        },
        Text: `**When you identify situations or topics you don\u2019t want to include, don\u2019t want to envision in detail, or otherwise may need mindfulness when approaching**, that content is now flagged.

When you encounter content flagged as something to approach mindfully, pause to consider or discuss its role in your story. When you come across flagged content that you would rather adjust or omit, [Change Your Fate](Starforged/Moves/Session/Change_Your_Fate).`
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 143
        },
        $id: "Starforged/Moves/Session/Change_Your_Fate",
        Name: "Change Your Fate",
        Optional: !1,
        Category: "Starforged/Moves/Session",
        Display: { Title: "Change Your Fate", Color: "#00B3C8" },
        Trigger: {
          $id: "Starforged/Moves/Session/Change_Your_Fate/Trigger",
          Text: "When you encounter flagged content, reject an oracle, resist a consequence, or otherwise need to shift your circumstances within the game for your comfort or enjoyment..."
        },
        Text: `**When you encounter flagged content, reject an oracle, resist a consequence, or otherwise need to shift your circumstances within the game for your comfort or enjoyment**, pause and identify what needs to be changed. Choose as many options as appropriate.

  * **Reframe:** This didn\u2019t happen the way you first thought. Envision the moment from another perspective in a way that diminishes or changes the content.
  * **Refocus:** This is not the most important thing happening right now. Envision how the spotlight shifts to change the focus.
  * **Replace:** This happens but with a small adjustment. Switch out an element and envision how this new detail changes the scenario.
  * **Redirect:** Adjust the trajectory to involve a helping hand. Envision how another person or party becomes involved.
  * **Reshape:** The situation changes completely. Envision what happened instead.`
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 144
        },
        $id: "Starforged/Moves/Session/Take_a_Break",
        Name: "Take a Break",
        Optional: !1,
        Category: "Starforged/Moves/Session",
        Display: { Title: "Take a Break", Color: "#00B3C8" },
        Trigger: {
          $id: "Starforged/Moves/Session/Take_a_Break/Trigger",
          Text: "When you resolve a progress move or complete an intense scenario..."
        },
        Text: `**When you resolve a progress move or complete an intense scenario**, take a few deep breaths and take some time to attend to the needs of your body. Reflect on what just happened and how it made you feel. Then, choose one.

  * Move on: Continue the session. You or an ally may add +1 on the next move (not a progress move), bolstered by your reflection and past experiences.
  * Stop for now: [End a Session](Starforged/Moves/Session/End_a_Session).`
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 145
        },
        $id: "Starforged/Moves/Session/End_a_Session",
        Name: "End a Session",
        Optional: !1,
        Category: "Starforged/Moves/Session",
        Display: { Title: "End a Session", Color: "#00B3C8" },
        Trigger: {
          $id: "Starforged/Moves/Session/End_a_Session/Trigger",
          Text: "When you end a significant session or chapter of play..."
        },
        Text: `**When you end a significant session or chapter of play**, reflect on the events of the game and identify any missed opportunities to mark progress.

  * If you strengthened your ties to a connection, [Develop Your Relationship](Starforged/Moves/Connection/Develop_Your_Relationship).
  * If you moved forward on a quest, [Reach a Milestone](Starforged/Moves/Quest/Reach_a_Milestone).

If there is a quest, connection, or other situation you would like to give focus in your next session, make note of it and take +1 momentum.`
      }
    ],
    Display: { Title: "Session Moves", Color: "#00B3C8" },
    Optional: !1
  },
  {
    $id: "Starforged/Moves/Adventure",
    Name: "Adventure",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 146
    },
    Description: "The **adventure moves** encompass broadly useful actions to overcome obstacles, reinforce your position, conduct investigations, influence others, and support your fellow protagonists. When you face a peril or try to gain leverage, and another move does not apply, you'll likely find your answer among these moves.",
    Moves: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 147
        },
        $id: "Starforged/Moves/Adventure/Face_Danger",
        Name: "Face Danger",
        Optional: !1,
        Category: "Starforged/Moves/Adventure",
        Display: { Title: "Face Danger", Color: "#3C70A4" },
        Trigger: {
          $id: "Starforged/Moves/Adventure/Face_Danger/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Adventure/Face_Danger/Trigger/Options/1",
              Text: "With speed, mobility, or agility",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Edge"]
            },
            {
              $id: "Starforged/Moves/Adventure/Face_Danger/Trigger/Options/2",
              Text: "With resolve, command, or sociability",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            },
            {
              $id: "Starforged/Moves/Adventure/Face_Danger/Trigger/Options/3",
              Text: "With strength, endurance, or aggression",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Adventure/Face_Danger/Trigger/Options/4",
              Text: "With deception, stealth, or trickery",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Shadow"]
            },
            {
              $id: "Starforged/Moves/Adventure/Face_Danger/Trigger/Options/5",
              Text: "With expertise, focus, or observation",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you attempt something risky or react to an imminent threat..."
        },
        Text: `**When you attempt something risky or react to an imminent threat**, envision your action and roll. If you act...

  * With speed, mobility, or agility: Roll +edge
  * With resolve, command, or sociability: Roll +heart
  * With strength, endurance, or aggression: Roll +iron
  * With deception, stealth, or trickery: Roll +shadow
  * With expertise, focus, or observation: Roll +wits

On a **strong hit**, you are successful. Take +1 momentum.

On a **weak hit**, you succeed, but not without a cost. Make a suffer move (-1).

On a **miss**, you fail, or a momentary success is undermined by a dire turn of events. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Adventure/Face_Danger/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Adventure/Face_Danger/Outcomes/Strong_Hit",
            Text: "You are successful. Take +1 momentum."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Adventure/Face_Danger/Outcomes/Weak_Hit",
            Text: "You succeed, but not without a cost. Make a suffer move (-1)."
          },
          Miss: {
            $id: "Starforged/Moves/Adventure/Face_Danger/Outcomes/Miss",
            Text: "You fail, or a momentary success is undermined by a dire turn of events. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 148
        },
        $id: "Starforged/Moves/Adventure/Secure_an_Advantage",
        Name: "Secure an Advantage",
        Optional: !1,
        Category: "Starforged/Moves/Adventure",
        Display: { Title: "Secure an Advantage", Color: "#3C70A4" },
        Trigger: {
          $id: "Starforged/Moves/Adventure/Secure_an_Advantage/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Adventure/Secure_an_Advantage/Trigger/Options/1",
              Text: "With speed, mobility, or agility",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Edge"]
            },
            {
              $id: "Starforged/Moves/Adventure/Secure_an_Advantage/Trigger/Options/2",
              Text: "With resolve, command, or sociability",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            },
            {
              $id: "Starforged/Moves/Adventure/Secure_an_Advantage/Trigger/Options/3",
              Text: "With strength, endurance, aggression",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Adventure/Secure_an_Advantage/Trigger/Options/4",
              Text: "With deception, stealth, or trickery",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Shadow"]
            },
            {
              $id: "Starforged/Moves/Adventure/Secure_an_Advantage/Trigger/Options/5",
              Text: "With expertise, focus, or observation",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you assess a situation, make preparations, or attempt to gain leverage..."
        },
        Text: `**When you assess a situation, make preparations, or attempt to gain leverage**, envision your action and roll. If you act...

  * With speed, mobility, or agility: Roll +edge
  * With resolve, command, or sociability: Roll +heart
  * With strength, endurance, aggression: Roll +iron
  * With deception, stealth, or trickery: Roll +shadow
  * With expertise, focus, or observation: Roll +wits

On a **hit**, you succeed. On a **strong hit**, take both. On a **weak hit**, choose one.

  * Take +2 momentum
  * Add +1 on your next move (not a progress move)

On a **miss**, you fail or your assumptions betray you. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Adventure/Secure_an_Advantage/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Adventure/Secure_an_Advantage/Outcomes/Strong_Hit",
            Text: "You succeed. Take +2 momentum. Add +1 on your next move (not a progress move)."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Adventure/Secure_an_Advantage/Outcomes/Weak_Hit",
            Text: `You succeed. Choose one.

  * Take +2 momentum
  * Add +1 on your next move (not a progress move)`
          },
          Miss: {
            $id: "Starforged/Moves/Adventure/Secure_an_Advantage/Outcomes/Miss",
            Text: "You fail or your assumptions betray you. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 149
        },
        $id: "Starforged/Moves/Adventure/Gather_Information",
        Name: "Gather Information",
        Optional: !1,
        Category: "Starforged/Moves/Adventure",
        Display: { Title: "Gather Information", Color: "#3C70A4" },
        Trigger: {
          $id: "Starforged/Moves/Adventure/Gather_Information/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Adventure/Gather_Information/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you search for clues, conduct an investigation, analyze evidence, or do research..."
        },
        Text: `**When you search for clues, conduct an investigation, analyze evidence, or do research**, roll +wits.

On a **strong hit**, you discover something helpful and specific. The path you must follow or action you must take to make progress is made clear. Envision what you learn. Then, take +2 momentum.

On a **weak hit**, the information provides new insight, but also complicates your quest. Envision what you discover. Then, take +1 momentum.

On a **miss**, your investigation unearths a dire threat or reveals an unwelcome truth that undermines your quest. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Oracles: ["Starforged/Oracles/Misc/Story_Clue"],
        Outcomes: {
          $id: "Starforged/Moves/Adventure/Gather_Information/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Adventure/Gather_Information/Outcomes/Strong_Hit",
            Text: "You discover something helpful and specific. The path you must follow or action you must take to make progress is made clear. Envision what you learn. Then, take +2 momentum."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Adventure/Gather_Information/Outcomes/Weak_Hit",
            Text: "The information provides new insight, but also complicates your quest. Envision what you discover. Then, take +1 momentum."
          },
          Miss: {
            $id: "Starforged/Moves/Adventure/Gather_Information/Outcomes/Miss",
            Text: "Your investigation unearths a dire threat or reveals an unwelcome truth that undermines your quest. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 150
        },
        $id: "Starforged/Moves/Adventure/Compel",
        Name: "Compel",
        Optional: !1,
        Category: "Starforged/Moves/Adventure",
        Display: { Title: "Compel", Color: "#3C70A4" },
        Trigger: {
          $id: "Starforged/Moves/Adventure/Compel/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Adventure/Compel/Trigger/Options/1",
              Text: "Charm, pacify, encourage, or barter",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            },
            {
              $id: "Starforged/Moves/Adventure/Compel/Trigger/Options/2",
              Text: "Threaten or incite",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Adventure/Compel/Trigger/Options/3",
              Text: "Lie or swindle",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Shadow"]
            }
          ],
          Text: "When you try to persuade someone or make them an offer..."
        },
        Text: `**When you try to persuade someone or make them an offer**, envision your approach. If you...

  * Charm, pacify, encourage, or barter: Roll +heart
  * Threaten or incite: Roll +iron
  * Lie or swindle: Roll +shadow

On a **strong hit**, they'll do what you want or agree to your conditions. Take +1 momentum.

On a **weak hit**, as above, but their agreement comes with a demand or complication. Envision their counteroffer.

On a **miss**, they refuse or make a demand that costs you greatly. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Adventure/Compel/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Adventure/Compel/Outcomes/Strong_Hit",
            Text: "They'll do what you want or agree to your conditions. Take +1 momentum."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Adventure/Compel/Outcomes/Weak_Hit",
            Text: "They'll do what you want or agree to your conditions, but their agreement comes with a demand or complication. Envision their counteroffer and take +1 momentum."
          },
          Miss: {
            $id: "Starforged/Moves/Adventure/Compel/Outcomes/Miss",
            Text: "They refuse or make a demand that costs you greatly. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 152
        },
        $id: "Starforged/Moves/Adventure/Aid_Your_Ally",
        Name: "Aid Your Ally",
        Optional: !1,
        Category: "Starforged/Moves/Adventure",
        Display: { Title: "Aid Your Ally", Color: "#3C70A4" },
        Trigger: {
          $id: "Starforged/Moves/Adventure/Aid_Your_Ally/Trigger",
          Text: "When you act in direct support of an ally..."
        },
        Text: `**When you act in direct support of an ally**, envision how you aid them. Then, [Secure an Advantage](Starforged/Moves/Adventure/Secure_an_Advantage) or [Gain Ground](Starforged/Moves/Combat/Gain_Ground) to take action. If you score a hit, they (instead of you) take the benefits of the move.

If you [Gain Ground](Starforged/Moves/Combat/Gain_Ground) and score a strong hit, you are both in control. On a **weak hit**, your ally is in control but you are in a bad spot.`
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 153
        },
        $id: "Starforged/Moves/Adventure/Check_Your_Gear",
        Name: "Check Your Gear",
        Optional: !1,
        Category: "Starforged/Moves/Adventure",
        Display: { Title: "Check Your Gear", Color: "#3C70A4" },
        Trigger: {
          $id: "Starforged/Moves/Adventure/Check_Your_Gear/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Adventure/Check_Your_Gear/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Supply"]
            }
          ],
          Text: "When you check to see if you have a specific helpful item or resource..."
        },
        Text: `**When you check to see if you have a specific helpful item or resource**, roll +supply.

On a **strong hit**, you have it, and are ready to act. Take +1 momentum.

On a **weak hit**, you have it, but must choose one.

  * Your supply is diminished: [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1)
  * It's not quite right, and causes a complication or delay: [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2)

On a **miss**, you don't have it and the situation grows more perilous. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Adventure/Check_Your_Gear/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Adventure/Check_Your_Gear/Outcomes/Strong_Hit",
            Text: "You have it, and are ready to act. Take +1 momentum."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Adventure/Check_Your_Gear/Outcomes/Weak_Hit",
            Text: `You have it, but must choose one.

  * Your supply is diminished: [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-1)
  * It's not quite right, and causes a complication or delay: [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2)`
          },
          Miss: {
            $id: "Starforged/Moves/Adventure/Check_Your_Gear/Outcomes/Miss",
            Text: "You don't have it and the situation grows more perilous. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      }
    ],
    Display: { Title: "Adventure Moves", Color: "#3C70A4" },
    Optional: !1
  },
  {
    $id: "Starforged/Moves/Quest",
    Name: "Quest",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 154
    },
    Description: `In the fiction of the *Starforged* setting, those who swear vows are the Ironsworn, and their promises are binding. Vows can be made to yourself, as a solemn representation of your personal commitment, or as a promise to someone else. Some vows might be made grudgingly\u2014out of duty, necessity, or tradition. Others will be made with your whole heart.

Make these **quest moves** when you swear vows, make progress on your quests, and resolve vows.`,
    Moves: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 156
        },
        $id: "Starforged/Moves/Quest/Swear_an_Iron_Vow",
        Name: "Swear an Iron Vow",
        Optional: !1,
        Category: "Starforged/Moves/Quest",
        Display: { Title: "Swear an Iron Vow", Color: "#2F9236" },
        Trigger: {
          $id: "Starforged/Moves/Quest/Swear_an_Iron_Vow/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Quest/Swear_an_Iron_Vow/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            }
          ],
          Text: "When you swear upon iron to complete a quest..."
        },
        Text: `**When you swear upon iron to complete a quest**, write your vow and give it a rank. Then, roll +heart. If you swear this vow to a connection, add +1; if you share a bond, add +2.

On a **strong hit**, you are emboldened and it is clear what you must do next. Take +2 momentum.

On a **weak hit**, you are determined but begin your quest with more questions than answers. Take +1 momentum, and envision what you do to find a path forward.

On a **miss**, you must overcome a significant obstacle before you begin your quest. Envision what stands in your way.`,
        Outcomes: {
          $id: "Starforged/Moves/Quest/Swear_an_Iron_Vow/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Quest/Swear_an_Iron_Vow/Outcomes/Strong_Hit",
            Text: "You are emboldened and it is clear what you must do next. Take +2 momentum."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Quest/Swear_an_Iron_Vow/Outcomes/Weak_Hit",
            Text: "You are determined but begin your quest with more questions than answers. Take +1 momentum, and envision what you do to find a path forward."
          },
          Miss: {
            $id: "Starforged/Moves/Quest/Swear_an_Iron_Vow/Outcomes/Miss",
            Text: "You must overcome a significant obstacle before you begin your quest. Envision what stands in your way."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 157
        },
        $id: "Starforged/Moves/Quest/Reach_a_Milestone",
        Name: "Reach a Milestone",
        Optional: !1,
        Category: "Starforged/Moves/Quest",
        Display: { Title: "Reach a Milestone", Color: "#2F9236" },
        Trigger: {
          $id: "Starforged/Moves/Quest/Reach_a_Milestone/Trigger",
          Text: "When you make headway in your quest..."
        },
        Text: `**When you make headway in your quest** by doing any of the following...

  * overcoming a critical obstacle
  * gaining meaningful insight
  * completing a perilous expedition
  * acquiring a crucial item or resource
  * earning vital support
  * defeating a notable foe

...you may mark progress per the rank of the vow.`
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 158
        },
        $id: "Starforged/Moves/Quest/Fulfill_Your_Vow",
        Name: "Fulfill Your Vow",
        Optional: !1,
        Category: "Starforged/Moves/Quest",
        "Progress Move": !0,
        Display: { Title: "Fulfill Your Vow", Color: "#2F9236" },
        Trigger: {
          $id: "Starforged/Moves/Quest/Fulfill_Your_Vow/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Quest/Fulfill_Your_Vow/Trigger/Options/1",
              "Roll type": "Progress roll",
              Method: "Any",
              Using: ["Vow"]
            }
          ],
          Text: "When you reach the end of your quest..."
        },
        Text: `**When you reach the end of your quest**, roll the challenge dice and compare to your progress.

On a **strong hit**, your vow is fulfilled. Mark a reward on your quests legacy track per the vow's rank: troublesome=1 tick; dangerous=2 ticks; formidable=1 box; extreme=2 boxes; epic=3 boxes. Any allies who shared this vow also mark the reward.

On a **weak hit**, as above, but there is more to be done or you realize the truth of your quest. If you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to set things right, take your full legacy reward. Otherwise, make the reward one rank lower.

On a **miss**, your vow is undone through an unexpected complication or realization. Envision what happens and choose one.

  * Give up on the quest: [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow).
  * Recommit to the quest: Roll both challenge dice, take the lowest value, and clear that number of progress boxes. Then, raise the vow's rank by one (if not already epic).`,
        Outcomes: {
          $id: "Starforged/Moves/Quest/Fulfill_Your_Vow/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Quest/Fulfill_Your_Vow/Outcomes/Strong_Hit",
            Text: "Your vow is fulfilled. Mark a reward on your quests legacy track per the vow's rank: troublesome=1 tick; dangerous=2 ticks; formidable=1 box; extreme=2 boxes; epic=3 boxes. Any allies who shared this vow also mark the reward."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Quest/Fulfill_Your_Vow/Outcomes/Weak_Hit",
            Text: "Your vow is fulfilled, but there is more to be done or you realize the truth of your quest. If you [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to set things right, take your full legacy reward per the vow's rank: troublesome=1 tick; dangerous=2 ticks; formidable=1 box; extreme=2 boxes; epic=3 boxes. Otherwise, make the reward one rank lower. Any allies who shared this vow also mark the reward."
          },
          Miss: {
            $id: "Starforged/Moves/Quest/Fulfill_Your_Vow/Outcomes/Miss",
            Text: `Your vow is undone through an unexpected complication or realization. Envision what happens and choose one.

  * Give up on the quest: [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow).
  * Recommit to the quest: Roll both challenge dice, take the lowest value, and clear that number of progress boxes. Then, raise the vow's rank by one (if not already epic).`
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 160
        },
        $id: "Starforged/Moves/Quest/Forsake_Your_Vow",
        Name: "Forsake Your Vow",
        Optional: !1,
        Category: "Starforged/Moves/Quest",
        Display: { Title: "Forsake Your Vow", Color: "#2F9236" },
        Trigger: {
          $id: "Starforged/Moves/Quest/Forsake_Your_Vow/Trigger",
          Text: "When you renounce your quest, betray your promise, or the goal is lost to you..."
        },
        Text: `**When you renounce your quest, betray your promise, or the goal is lost to you**, clear the vow.

Then, envision the impact of this failure and choose one or more as appropriate to the nature of the vow. Any allies who shared this vow may also envision a cost.

  * You are demoralized or dispirited: [Endure Stress](Starforged/Moves/Suffer/Endure_Stress).
  * A connection loses faith: [Test Your Relationship](Starforged/Moves/Connection/Test_Your_Relationship) when you next interact.
  * You must abandon a path or resource: Discard an asset.
  * Someone else pays a price: Envision how a person, being, or community bears the cost of the failure.
  * Someone else takes advantage: Envision how an enemy gains power.
  * Your reputation suffers: Envision how this failure marks you.`
      }
    ],
    Display: { Title: "Quest Moves", Color: "#2F9236" },
    Optional: !1
  },
  {
    $id: "Starforged/Moves/Connection",
    Name: "Connection",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 162
    },
    Description: `**Connections** are NPCs (non-player characters) who represent a deep, vital, or interesting relationship in your story. They are your tethers to the people and places of the Forge.

Make these **connection moves** when you introduce connections and as you build influence or understanding with them.`,
    Moves: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 163
        },
        $id: "Starforged/Moves/Connection/Make_a_Connection",
        Name: "Make a Connection",
        Optional: !1,
        Category: "Starforged/Moves/Connection",
        Display: { Title: "Make a Connection", Color: "#4053C9" },
        Trigger: {
          $id: "Starforged/Moves/Connection/Make_a_Connection/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Connection/Make_a_Connection/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            }
          ],
          Text: "When you search out a new relationship or give focus to an existing relationship (not an ally or companion)..."
        },
        Text: `**When you search out a new relationship or give focus to an existing relationship (not an ally or companion)**, roll +heart.

On a **strong hit**, you create a connection. Give them a role and rank. Whenever your connection aids you on a move closely associated with their role, add +1 and take +1 momentum on a hit.

On a **weak hit**, as above, but this connection comes with a complication or cost. Envision what they reveal or demand.

On a **miss**, you don't make a connection and the situation worsens. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Connection/Make_a_Connection/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Connection/Make_a_Connection/Outcomes/Strong_Hit",
            Text: "You create a connection. Give them a role and rank. Whenever your connection aids you on a move closely associated with their role, add +1 and take +1 momentum on a hit."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Connection/Make_a_Connection/Outcomes/Weak_Hit",
            Text: `You create a connection, but it comes with a complication or cost. Envision what they reveal or demand.

Give the connection a role and rank. Whenever your connection aids you on a move closely associated with their role, add +1 and take +1 momentum on a hit.`
          },
          Miss: {
            $id: "Starforged/Moves/Connection/Make_a_Connection/Outcomes/Miss",
            Text: "You don't make a connection and the situation worsens. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 164
        },
        $id: "Starforged/Moves/Connection/Develop_Your_Relationship",
        Name: "Develop Your Relationship",
        Optional: !1,
        Category: "Starforged/Moves/Connection",
        Display: {
          Title: "Develop Your Relationship",
          Color: "#4053C9"
        },
        Trigger: {
          $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: [
                "Starforged/Moves/Connection/Develop_Your_Relationship/Trigger/Options/1/Custom_stat"
              ],
              "Custom stat": {
                $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Trigger/Options/1/Custom_stat",
                Name: "Challenge Rank",
                Options: [
                  {
                    $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Trigger/Options/1/Custom_stat/Troublesome",
                    Name: "Troublesome",
                    Value: 1
                  },
                  {
                    $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Trigger/Options/1/Custom_stat/Dangerous",
                    Name: "Dangerous",
                    Value: 2
                  },
                  {
                    $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Trigger/Options/1/Custom_stat/Formidable",
                    Name: "Formidable",
                    Value: 3
                  },
                  {
                    $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Trigger/Options/1/Custom_stat/Extreme",
                    Name: "Extreme",
                    Value: 4
                  },
                  {
                    $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Trigger/Options/1/Custom_stat/Epic",
                    Name: "Epic",
                    Value: 5
                  }
                ]
              }
            }
          ],
          Text: "When you reinforce your relationship with a connection..."
        },
        Text: `**When you reinforce your relationship with a connection** by doing any of the following...

  * swearing a vow to undertake a perilous quest in their service
  * completing a quest to their benefit
  * leveraging their help in desperate circumstances
  * giving them something of worth
  * sharing a profound moment
  * standing with them against hardship
  * overcoming a test of your relationship

...you may mark progress per the rank of the connection.

If you already share a bond with the connection, do not mark progress. Instead, roll +their rank to learn the impact on your legacy: troublesome=+1; dangerous=+2; formidable=+3; extreme=+4; epic=+5. On a **strong hit**, mark 2 ticks on your bonds legacy track. On a **strong hit with a match**, you may also envision how recent events bolstered your connection\u2019s standing and raise their rank by one (if not already epic). On a **weak hit**, take +2 momentum. On a **miss**, take no lasting benefit.`,
        Outcomes: {
          $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Outcomes/Strong_Hit",
            Text: "Mark 2 ticks on your bonds legacy track.",
            "With a Match": {
              $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Outcomes/Strong_Hit/With_a_Match",
              Text: "Mark 2 ticks on your bonds legacy track. You may also envision how recent events bolstered your connection\u2019s standing and raise their rank by one (if not already epic)."
            }
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Outcomes/Weak_Hit",
            Text: "Take +2 momentum."
          },
          Miss: {
            $id: "Starforged/Moves/Connection/Develop_Your_Relationship/Outcomes/Miss",
            Text: "Take no lasting benefit."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 165
        },
        $id: "Starforged/Moves/Connection/Test_Your_Relationship",
        Name: "Test Your Relationship",
        Optional: !1,
        Category: "Starforged/Moves/Connection",
        Display: { Title: "Test Your Relationship", Color: "#4053C9" },
        Trigger: {
          $id: "Starforged/Moves/Connection/Test_Your_Relationship/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Connection/Test_Your_Relationship/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            }
          ],
          Text: "When your relationship with a connection is tested through conflict, betrayal, or circumstance..."
        },
        Text: `**When your relationship with a connection is tested through conflict, betrayal, or circumstance**, roll +heart. If you share a bond, add +1.

On a **strong hit**, [Develop Your Relationship](Starforged/Moves/Connection/Develop_Your_Relationship).

On a **weak hit**, [Develop Your Relationship](Starforged/Moves/Connection/Develop_Your_Relationship), but also envision a demand or complication as a fallout of this test.

On a **miss**, or if you have no interest in maintaining this relationship, choose one.

  * Lose the connection: Envision how this impacts you and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).
  * Prove your loyalty: Envision what you offer or what they demand, and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) (formidable or greater) to see it done. Until you complete the quest, take no benefit for the connection. If you refuse or fail the quest, the connection is permanently undone.`,
        Outcomes: {
          $id: "Starforged/Moves/Connection/Test_Your_Relationship/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Connection/Test_Your_Relationship/Outcomes/Strong_Hit",
            Text: "[Develop Your Relationship](Starforged/Moves/Connection/Develop_Your_Relationship)."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Connection/Test_Your_Relationship/Outcomes/Weak_Hit",
            Text: `[Develop Your Relationship](Starforged/Moves/Connection/Develop_Your_Relationship), but
also envision a demand or complication as a fallout of this test.`
          },
          Miss: {
            $id: "Starforged/Moves/Connection/Test_Your_Relationship/Outcomes/Miss",
            Text: `Choose one.

  * Lose the connection: Envision how this impacts you and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).
  * Prove your loyalty: Envision what you offer or what they demand, and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) (formidable or greater) to see it done. Until you complete the quest, take no benefit for the connection. If you refuse or fail the quest, the connection is permanently undone.`
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 166
        },
        $id: "Starforged/Moves/Connection/Forge_a_Bond",
        Name: "Forge a Bond",
        Optional: !1,
        Category: "Starforged/Moves/Connection",
        "Progress Move": !0,
        Display: { Title: "Forge a Bond", Color: "#4053C9" },
        Trigger: {
          $id: "Starforged/Moves/Connection/Forge_a_Bond/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Connection/Forge_a_Bond/Trigger/Options/1",
              "Roll type": "Progress roll",
              Method: "Any",
              Using: ["Connection"]
            }
          ],
          Text: "When your relationship with a connection is ready to evolve..."
        },
        Text: `**When your relationship with a connection is ready to evolve**, roll the challenge dice and compare to your progress.

On a **strong hit**, you now share a bond. Mark a reward on your bonds legacy track per the connection's rank: troublesome=1 tick; dangerous=2 ticks; formidable=1 box; extreme=2 boxes; epic=3 boxes. Any allies who share this connection also mark the reward. Then, choose one.

  * Bolster their influence: When they aid you on a move closely associated with their role, add +2 instead of +1.
  * Expand their influence: Give them a second role. When they aid you on a move closely associated with either role, add +1 and take +1 momentum on a hit.

On a **weak hit**, as above, but they ask something more of you first. To gain the bond and the legacy reward, envision the nature of the request, and do it (or [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to see it done).

On a **miss**, they reveal a motivation or background that puts you at odds. If you recommit to this relationship, roll both challenge dice, take the lowest value, and clear that number of progress boxes. Then, raise the connection's rank by one (if not already epic).`,
        Outcomes: {
          $id: "Starforged/Moves/Connection/Forge_a_Bond/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Connection/Forge_a_Bond/Outcomes/Strong_Hit",
            Text: `You now share a bond. Mark a reward on your bonds legacy track per the connection's rank: troublesome=1 tick; dangerous=2 ticks; formidable=1 box; extreme=2 boxes; epic=3 boxes. Any allies who share this connection also mark the reward. Then, choose one.

  * Bolster their influence: When they aid you on a move closely associated with their role, add +2 instead of +1.
  * Expand their influence: Give them a second role. When they aid you on a move closely associated with either role, add +1 and take +1 momentum on a hit.`
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Connection/Forge_a_Bond/Outcomes/Weak_Hit",
            Text: `They ask something more of you first. To gain the bond and the legacy reward, envision the nature of the request, and do it (or [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to see it done).

If you do, you now share a bond. Mark a reward on your bonds legacy track per the connection's rank: troublesome=1 tick; dangerous=2 ticks; formidable=1 box; extreme=2 boxes; epic=3 boxes. Any allies who share this connection also mark the reward. Then, choose one.

  * Bolster their influence: When they aid you on a move closely associated with their role, add +2 instead of +1.
  * Expand their influence: Give them a second role. When they aid you on a move closely associated with either role, add +1 and take +1 momentum on a hit.`
          },
          Miss: {
            $id: "Starforged/Moves/Connection/Forge_a_Bond/Outcomes/Miss",
            Text: "They reveal a motivation or background that puts you at odds. If you recommit to this relationship, roll both challenge dice, take the lowest value, and clear that number of progress boxes. Then, raise the connection's rank by one (if not already epic)."
          }
        }
      }
    ],
    Display: { Title: "Connection Moves", Color: "#4053C9" },
    Optional: !1
  },
  {
    $id: "Starforged/Moves/Exploration",
    Name: "Exploration",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 168
    },
    Description: `The Forge is a vast, chaotic, and largely unexplored galaxy. Your sworn vows will take you through uncharted space, across the surface of inhospitable planets, and into the depths of foreboding derelicts, enigmatic alien vaults, and other perilous sites.

Will you survive these expeditions? What will they cost you? What wonders and horrors will you face? Use the **exploration moves** to find out.`,
    Moves: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 169
        },
        $id: "Starforged/Moves/Exploration/Undertake_an_Expedition",
        Name: "Undertake an Expedition",
        Optional: !1,
        Category: "Starforged/Moves/Exploration",
        Display: { Title: "Undertake an Expedition", Color: "#7438B8" },
        Trigger: {
          $id: "Starforged/Moves/Exploration/Undertake_an_Expedition/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Exploration/Undertake_an_Expedition/Trigger/Options/1",
              Text: "Move at speed",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Edge"]
            },
            {
              $id: "Starforged/Moves/Exploration/Undertake_an_Expedition/Trigger/Options/2",
              Text: "Keep under the radar",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Shadow"]
            },
            {
              $id: "Starforged/Moves/Exploration/Undertake_an_Expedition/Trigger/Options/3",
              Text: "Stay vigilant",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you trailblaze a route through perilous space, journey over hazardous terrain, or survey a mysterious site..."
        },
        Text: `**When you trailblaze a route through perilous space, journey over hazardous terrain, or survey a mysterious site**, give the expedition a name and rank. Then, for each segment of the expedition, envision your approach. If you...

  * Move at speed: Roll +edge
  * Keep under the radar: Roll +shadow
  * Stay vigilant: Roll +wits

On a **strong hit**, you reach a waypoint. Envision the location and mark progress per the rank of the expedition.

On a **weak hit**, as above, but this progress costs you. Choose one.

  * Suffer costs en route: Make a suffer move (-2), or two suffer moves (-1).
  * Face a peril at the waypoint: Envision what you encounter.

On a **miss**, you are waylaid by a crisis, or arrive at a waypoint to confront an immediate hardship or threat. Do not mark progress, and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Exploration/Undertake_an_Expedition/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Exploration/Undertake_an_Expedition/Outcomes/Strong_Hit",
            Text: "You reach a waypoint. Envision the location and mark progress per the rank of the expedition."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Exploration/Undertake_an_Expedition/Outcomes/Weak_Hit",
            Text: `You reach a waypoint, but this progress costs you. Envision the location and mark progress per the rank of the expedition, but choose one.

  * Suffer costs en route: Make a suffer move (-2), or two suffer moves (-1).
  * Face a peril at the waypoint: Envision what you encounter.`
          },
          Miss: {
            $id: "Starforged/Moves/Exploration/Undertake_an_Expedition/Outcomes/Miss",
            Text: "You are waylaid by a crisis, or arrive at a waypoint to confront an immediate hardship or threat. Do not mark progress, and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 174
        },
        $id: "Starforged/Moves/Exploration/Explore_a_Waypoint",
        Name: "Explore a Waypoint",
        Optional: !1,
        Category: "Starforged/Moves/Exploration",
        Display: { Title: "Explore a Waypoint", Color: "#7438B8" },
        Trigger: {
          $id: "Starforged/Moves/Exploration/Explore_a_Waypoint/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Exploration/Explore_a_Waypoint/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you divert from an expedition to examine a notable location..."
        },
        Text: `**When you divert from an expedition to examine a notable location**, roll +wits.

On a **strong hit**, choose one. On a **strong hit with a match**, you may instead [Make a Discovery](Starforged/Moves/Exploration/Make_a_Discovery).

  * Find an opportunity: Envision a favorable insight, situation, resource, or encounter. Then, take +2 momentum.
  * Gain progress: Mark progress on your expedition, per its rank.

On a **weak hit**, you uncover something interesting, but it is bound up in a peril or reveals an ominous aspect of this place. Envision what you encounter. Then, take +1 momentum.

On a **miss**, you encounter an immediate hardship or threat, and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price). On a **miss with a match**, you may instead [Confront Chaos](Starforged/Moves/Exploration/Confront_Chaos).`,
        Outcomes: {
          $id: "Starforged/Moves/Exploration/Explore_a_Waypoint/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Exploration/Explore_a_Waypoint/Outcomes/Strong_Hit",
            Text: `Choose one.

  * Find an opportunity: Envision a favorable insight, situation, resource, or encounter. Then, take +2 momentum.
  * Gain progress: Mark progress on your expedition, per its rank.`,
            "With a Match": {
              $id: "Starforged/Moves/Exploration/Explore_a_Waypoint/Outcomes/Strong_Hit/With_a_Match",
              Text: `You encounter something wondrous! Choose one.

  * [Make a Discovery](Starforged/Moves/Exploration/Make_a_Discovery).
  * Find an opportunity: Envision a favorable insight, situation, resource, or encounter. Then, take +2 momentum.
  * Gain progress: Mark progress on your expedition, per its rank.`
            }
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Exploration/Explore_a_Waypoint/Outcomes/Weak_Hit",
            Text: "You uncover something interesting, but it is bound up in a peril or reveals an ominous aspect of this place. Envision what you encounter. Then, take +1 momentum."
          },
          Miss: {
            $id: "Starforged/Moves/Exploration/Explore_a_Waypoint/Outcomes/Miss",
            Text: "You encounter an immediate hardship or threat, and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
            "With a Match": {
              $id: "Starforged/Moves/Exploration/Explore_a_Waypoint/Outcomes/Miss/With_a_Match",
              Text: "You encounter something dreadful! [Confront Chaos](Starforged/Moves/Exploration/Confront_Chaos) or else [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
            }
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 176
        },
        $id: "Starforged/Moves/Exploration/Make_a_Discovery",
        Name: "Make a Discovery",
        Optional: !1,
        Category: "Starforged/Moves/Exploration",
        Display: { Title: "Make a Discovery", Color: "#7438B8" },
        Trigger: {
          $id: "Starforged/Moves/Exploration/Make_a_Discovery/Trigger",
          Text: "When your exploration of a waypoint uncovers something wondrous"
        },
        Text: `**When your exploration of a waypoint uncovers something wondrous**, roll on the table below or choose one. Then, envision the nature of the discovery and how it is revealed. When you first experience or engage with the discovery, you and your allies may mark two ticks on your discoveries legacy track.

Roll   | Result
-------|---------------------------------------------------------------
1-4    | Advanced technology waiting to be harnessed or salvaged
5-8    | Ancient archive or message
9-10   | Artificial consciousness evolved to a higher state
11-12  | Clues to a crucial resource or uncharted domain
13-14  | Envoy from another time or reality
15-22  | Extraordinary natural phenomenon
23-24  | First contact with intelligent life
25-26  | Gateway to another time or alternate reality
27-28  | Key to unlocking a language or method of communication
29-34  | Lost or hidden people
35-42  | Majestic or unusual lifeforms
43-46  | Marvel of ancient engineering
47-50  | Miraculously preserved artifact or specimen
51-56  | Monumental architecture or artistry of an ancient civilization
57-62  | Mysterious device or artifact of potential value
63-66  | New understanding of an enduring mystery
67-68  | Pathway or means of travel to a distant location
69-70  | Person or lifeform with phenomenal abilities
71-78  | Place of awe-inspiring beauty
79-86  | Rare and valuable resource
87-88  | Safeguarded or idyllic location
89-90  | Visions or prophesies of the future
91-100 | Roll twice`,
        Oracles: ["Starforged/Oracles/Moves/Make_a_Discovery"]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 177
        },
        $id: "Starforged/Moves/Exploration/Confront_Chaos",
        Name: "Confront Chaos",
        Optional: !1,
        Category: "Starforged/Moves/Exploration",
        Display: { Title: "Confront Chaos", Color: "#7438B8" },
        Trigger: {
          $id: "Starforged/Moves/Exploration/Confront_Chaos/Trigger",
          Text: "When your exploration of a waypoint uncovers something dreadful..."
        },
        Text: `**When your exploration of a waypoint uncovers something dreadful**, decide the number of aspects: one, two, or three. Roll that number of times or choose that number of aspects on the table below. Then, envision how the encounter begins.

For each result, when you first confront that aspect within the scope of the encounter, you and your allies may mark one tick on your discoveries legacy track.

Roll   | Result
-------|---------------------------------------------
1-4    | Baneful weapon of mass destruction
5-9    | Cataclysmic environmental effects
10-12  | Dead given unnatural life
13-17  | Destructive lifeform of monstrous proportion
18-20  | Dread hallucinations or illusions
21-24  | Harbingers of an imminent invasion
25-27  | Horde of insatiable hunger or fury
28-32  | Horrific lifeforms of inscrutable purpose
33-36  | Impostors in human form
37-41  | Machines made enemy
42-45  | Malignant contagion or parasite
46-50  | Messenger or signal with a dire warning
51-53  | Passage to a grim alternate reality
54-58  | People corrupted by chaos
59-63  | Powerful distortions of time or space
64-68  | Signs of an impending catastrophe
69-72  | Site of a baffling disappearance
73-77  | Site of a horrible disaster
78-82  | Site of terrible carnage
83-87  | Technology nullified or made unstable
88-92  | Technology warped for dark purpose
93-96  | Vault of dread technology or power
97-100 | Worshipers of great and malevolent powers`,
        Oracles: ["Starforged/Oracles/Moves/Confront_Chaos"]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 178
        },
        $id: "Starforged/Moves/Exploration/Finish_an_Expedition",
        Name: "Finish an Expedition",
        Optional: !1,
        Category: "Starforged/Moves/Exploration",
        "Progress Move": !0,
        Display: { Title: "Finish an Expedition", Color: "#7438B8" },
        Trigger: {
          $id: "Starforged/Moves/Exploration/Finish_an_Expedition/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Exploration/Finish_an_Expedition/Trigger/Options/1",
              "Roll type": "Progress roll",
              Method: "Any",
              Using: ["Expedition"]
            }
          ],
          Text: "When your expedition comes to an end..."
        },
        Text: `**When your expedition comes to an end**, roll the challenge dice and compare to your progress.

On a **strong hit**, you reach your destination or complete your survey. Mark a reward on your discoveries legacy track per expedition's rank: troublesome=1 tick; dangerous=2 ticks; formidable=1 box; extreme=2 boxes; epic=3 boxes. Any allies who shared this expedition also mark the reward.

On a **weak hit**, as above, but you face an unforeseen complication at the end of your expedition. Make the legacy reward one rank lower, and envision what you encounter.

On a **miss**, your destination is lost to you, or you come to understand the true nature or cost of the expedition. Envision what happens and choose one.

  * Abandon the expedition: Envision the cost of this setback and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).
  * Return to the expedition: Roll both challenge dice, take the lowest value, and clear that number of progress boxes. Then, raise the expedition's rank by one (if not already epic).`,
        Outcomes: {
          $id: "Starforged/Moves/Exploration/Finish_an_Expedition/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Exploration/Finish_an_Expedition/Outcomes/Strong_Hit",
            Text: "You reach your destination or complete your survey. Mark a reward on your discoveries legacy track per expedition's rank: troublesome=1 tick; dangerous=2 ticks; formidable=1 box; extreme=2 boxes; epic=3 boxes. Any allies who shared this expedition also mark the reward."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Exploration/Finish_an_Expedition/Outcomes/Weak_Hit",
            Text: "You reach your destination or complete your survey, but you face an unforeseen complication at the end of your expedition. Make the legacy reward one rank lower (troublesome=0 ticks; dangerous=1 tick; formidable=2 box; extreme=1 box; epic=2 boxes), and envision what you encounter."
          },
          Miss: {
            $id: "Starforged/Moves/Exploration/Finish_an_Expedition/Outcomes/Miss",
            Text: `Your destination is lost to you, or you come to understand the true nature or cost of the expedition. Envision what happens and choose one.

  * Abandon the expedition: Envision the cost of this setback and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).
  * Return to the expedition: Roll both challenge dice, take the lowest value, and clear that number of progress boxes. Then, raise the expedition's rank by one (if not already epic).`
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 180
        },
        $id: "Starforged/Moves/Exploration/Set_a_Course",
        Name: "Set a Course",
        Optional: !1,
        Category: "Starforged/Moves/Exploration",
        Display: { Title: "Set a Course", Color: "#7438B8" },
        Trigger: {
          $id: "Starforged/Moves/Exploration/Set_a_Course/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Exploration/Set_a_Course/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Supply"]
            }
          ],
          Text: "When you follow a known route through perilous space, across hazardous terrain, or within a mysterious site..."
        },
        Text: `**When you follow a known route through perilous space, across hazardous terrain, or within a mysterious site**, roll +supply.

On a **strong hit**, you reach your destination and the situation there favors you. Take +1 momentum.

On a **weak hit**, you arrive, but face a cost or complication. Choose one.

  * Suffer costs en route: Make a suffer move (-2), or two suffer moves (-1).
  * Face a complication at the destination: Envision what you encounter.

On a **miss**, you are waylaid by a significant threat, and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price). If you overcome this obstacle, you may push on safely to your destination.`,
        Outcomes: {
          $id: "Starforged/Moves/Exploration/Set_a_Course/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Exploration/Set_a_Course/Outcomes/Strong_Hit",
            Text: "You reach your destination and the situation there favors you. Take +1 momentum."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Exploration/Set_a_Course/Outcomes/Weak_Hit",
            Text: `You arrive, but face a cost or complication. Choose one.

  * Suffer costs en route: Make a suffer move (-2), or two suffer moves (-1).
  * Face a complication at the destination: Envision what you encounter.`
          },
          Miss: {
            $id: "Starforged/Moves/Exploration/Set_a_Course/Outcomes/Miss",
            Text: "You are waylaid by a significant threat, and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price). If you overcome this obstacle, you may push on safely to your destination."
          }
        }
      }
    ],
    Display: { Title: "Exploration Moves", Color: "#7438B8" },
    Optional: !1
  },
  {
    $id: "Starforged/Moves/Combat",
    Name: "Combat",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 182
    },
    Description: `The Forge is a perilous galaxy. Factions fight for control. Pirates hunt the spaceways. Raiders prey on vulnerable settlements. Dangerous creatures and chaotic terrors stalk the unwary. Dreaded foes and powerful forces will oppose your sworn quests. Eventually, you'll be forced to fight.

When you face one or more foes in high-stakes, action-oriented conflict, use the **combat moves**. These moves encompass on-foot action and vehicle sorties\u2014or both as part of the same challenge.`,
    Moves: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 188
        },
        $id: "Starforged/Moves/Combat/Enter_the_Fray",
        Name: "Enter the Fray",
        Optional: !1,
        Category: "Starforged/Moves/Combat",
        Display: { Title: "Enter the Fray", Color: "#D68F00" },
        Trigger: {
          $id: "Starforged/Moves/Combat/Enter_the_Fray/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Combat/Enter_the_Fray/Trigger/Options/1",
              Text: "On the move",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Edge"]
            },
            {
              $id: "Starforged/Moves/Combat/Enter_the_Fray/Trigger/Options/2",
              Text: "Facing off against your foe",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            },
            {
              $id: "Starforged/Moves/Combat/Enter_the_Fray/Trigger/Options/3",
              Text: "In the thick of it at close quarters",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Combat/Enter_the_Fray/Trigger/Options/4",
              Text: "Preparing to act against an unaware foe",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Shadow"]
            },
            {
              $id: "Starforged/Moves/Combat/Enter_the_Fray/Trigger/Options/5",
              Text: "Caught in a trap or sizing up the situation",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you initiate combat or are forced into a fight..."
        },
        Text: `**When you initiate combat or are forced into a fight**, envision your objective and give it a rank. If the combat includes discrete challenges or phases, set an objective with a rank for each.

Then, roll to see if you are in control. If you are...

  * On the move: Roll +edge
  * Facing off against your foe: Roll +heart
  * In the thick of it at close quarters: Roll +iron
  * Preparing to act against an unaware foe: Roll +shadow
  * Caught in a trap or sizing up the situation: Roll +wits

On a **strong hit**, take both. On a **weak hit**, choose one.

  * Take +2 momentum
  * You are in control

On a **miss**, the fight begins with you in a bad spot.`,
        Outcomes: {
          $id: "Starforged/Moves/Combat/Enter_the_Fray/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Combat/Enter_the_Fray/Outcomes/Strong_Hit",
            Text: "Take +2 momentum. You are in control."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Combat/Enter_the_Fray/Outcomes/Weak_Hit",
            Text: `Choose one.

  * Take +2 momentum
  * You are in control`
          },
          Miss: {
            $id: "Starforged/Moves/Combat/Enter_the_Fray/Outcomes/Miss",
            Text: "The fight begins with you in a bad spot."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 190
        },
        $id: "Starforged/Moves/Combat/Gain_Ground",
        Name: "Gain Ground",
        Optional: !1,
        Category: "Starforged/Moves/Combat",
        Display: { Title: "Gain Ground", Color: "#D68F00" },
        Trigger: {
          $id: "Starforged/Moves/Combat/Gain_Ground/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Combat/Gain_Ground/Trigger/Options/1",
              Text: "In pursuit, fleeing, or maneuvering",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Edge"]
            },
            {
              $id: "Starforged/Moves/Combat/Gain_Ground/Trigger/Options/2",
              Text: "By charging boldly into action, coming to the aid of others, negotiating, or commanding",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            },
            {
              $id: "Starforged/Moves/Combat/Gain_Ground/Trigger/Options/3",
              Text: "Gaining leverage with force, powering through, or making a threat",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Combat/Gain_Ground/Trigger/Options/4",
              Text: "Hiding, preparing an ambush, or misdirecting",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Shadow"]
            },
            {
              $id: "Starforged/Moves/Combat/Gain_Ground/Trigger/Options/5",
              Text: "Coordinating a plan, studying a situation, or cleverly gaining leverage",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you are in control and take action in a fight to reinforce your position or move toward an objective..."
        },
        Text: `**When you are in control and take action in a fight to reinforce your position or move toward an objective**, envision your approach and roll. If you are...

  * In pursuit, fleeing, or maneuvering: Roll +edge
  * Charging boldly into action, coming to the aid of others, negotiating, or commanding: Roll +heart
  * Gaining leverage with force, powering through, or making a threat: Roll +iron
  * Hiding, preparing an ambush, or misdirecting: Roll +shadow
  * Coordinating a plan, studying a situation, or cleverly gaining leverage: Roll +wits

On a **hit**, you stay in control. On a **strong hit**, choose two. On a **weak hit**, choose one.

  * Mark progress
  * Take +2 momentum
  * Add +1 on your next move (not a progress move)

On a **miss**, your foe gains the upper hand, the fight moves to a new location, or you encounter a new peril. You are in a bad spot and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Combat/Gain_Ground/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Combat/Gain_Ground/Outcomes/Strong_Hit",
            Text: `You stay in control. Choose two.

  * Mark progress
  * Take +2 momentum
  * Add +1 on your next move (not a progress move)`
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Combat/Gain_Ground/Outcomes/Weak_Hit",
            Text: `You stay in control. Choose one.

  * Mark progress
  * Take +2 momentum
  * Add +1 on your next move (not a progress move)`
          },
          Miss: {
            $id: "Starforged/Moves/Combat/Gain_Ground/Outcomes/Miss",
            Text: "Your foe gains the upper hand, the fight moves to a new location, or you encounter a new peril. You are in a bad spot and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 191
        },
        $id: "Starforged/Moves/Combat/React_Under_Fire",
        Name: "React Under Fire",
        Optional: !1,
        Category: "Starforged/Moves/Combat",
        Display: { Title: "React Under Fire", Color: "#D68F00" },
        Trigger: {
          $id: "Starforged/Moves/Combat/React_Under_Fire/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Combat/React_Under_Fire/Trigger/Options/1",
              Text: "In pursuit, fleeing, dodging, getting back into position, or taking cover",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Edge"]
            },
            {
              $id: "Starforged/Moves/Combat/React_Under_Fire/Trigger/Options/2",
              Text: "Remaining stalwart against fear or temptation",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            },
            {
              $id: "Starforged/Moves/Combat/React_Under_Fire/Trigger/Options/3",
              Text: "Blocking or diverting with force, or taking the hit",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Combat/React_Under_Fire/Trigger/Options/4",
              Text: "Moving into hiding or creating a distraction",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Shadow"]
            },
            {
              $id: "Starforged/Moves/Combat/React_Under_Fire/Trigger/Options/5",
              Text: "Changing the plan, finding a way out, or cleverly bypassing an obstacle",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you are in a bad spot and take action in a fight to avoid danger or overcome an obstacle..."
        },
        Text: `**When you are in a bad spot and take action in a fight to avoid danger or overcome an obstacle**, envision your approach and roll. If you are...

  * In pursuit, fleeing, dodging, getting back into position, or taking cover: Roll +edge
  * Remaining stalwart against fear or temptation: Roll +heart
  * Blocking or diverting with force, or taking the hit: Roll +iron
  * Moving into hiding or creating a distraction: Roll +shadow
  * Changing the plan, finding a way out, or cleverly bypassing an obstacle: Roll +wits

On a **strong hit**, you succeed and are in control. Take +1 momentum.

On a **weak hit**, you avoid the worst of the danger or overcome the obstacle, but not without a cost. Make a suffer move (-1). You stay in a bad spot.

On a **miss**, the situation worsens. You stay in a bad spot and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Combat/React_Under_Fire/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Combat/React_Under_Fire/Outcomes/Strong_Hit",
            Text: "You succeed and are in control. Take +1 momentum."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Combat/React_Under_Fire/Outcomes/Weak_Hit",
            Text: "You avoid the worst of the danger or overcome the obstacle, but not without a cost. Make a suffer move (-1). You stay in a bad spot."
          },
          Miss: {
            $id: "Starforged/Moves/Combat/React_Under_Fire/Outcomes/Miss",
            Text: "The situation worsens. You stay in a bad spot and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 192
        },
        $id: "Starforged/Moves/Combat/Strike",
        Name: "Strike",
        Optional: !1,
        Category: "Starforged/Moves/Combat",
        Display: { Title: "Strike", Color: "#D68F00" },
        Trigger: {
          $id: "Starforged/Moves/Combat/Strike/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Combat/Strike/Trigger/Options/1",
              Text: "Assault a foe at close quarters",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Combat/Strike/Trigger/Options/2",
              Text: "Attack at a distance",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Edge"]
            }
          ],
          Text: "When you are in control and assault a foe at close quarters, or when you attack at a distance..."
        },
        Text: `**When you are in control and assault a foe at close quarters**, roll +iron; **when you attack at a distance**, roll +edge.

On a **strong hit**, mark progress twice. You dominate your foe and stay in control.

On a **weak hit**, mark progress twice, but you expose yourself to danger. You are in a bad spot.

On a **miss**, the fight turns against you. You are in a bad spot and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Combat/Strike/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Combat/Strike/Outcomes/Strong_Hit",
            Text: "Mark progress twice. You dominate your foe and stay in control."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Combat/Strike/Outcomes/Weak_Hit",
            Text: "Mark progress twice, but you expose yourself to danger. You are in a bad spot."
          },
          Miss: {
            $id: "Starforged/Moves/Combat/Strike/Outcomes/Miss",
            Text: "The fight turns against you. You are in a bad spot and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 193
        },
        $id: "Starforged/Moves/Combat/Clash",
        Name: "Clash",
        Optional: !1,
        Category: "Starforged/Moves/Combat",
        Display: { Title: "Clash", Color: "#D68F00" },
        Trigger: {
          $id: "Starforged/Moves/Combat/Clash/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Combat/Clash/Trigger/Options/1",
              Text: "Fight back against a foe at close quarters",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Combat/Clash/Trigger/Options/2",
              Text: "Exchange fire at a distance",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Edge"]
            }
          ],
          Text: "When you are in a bad spot and fight back against a foe at close quarters, or when you exchange fire at a distance..."
        },
        Text: `**When you are in a bad spot and fight back against a foe at close quarters**, roll +iron; **when you exchange fire at a distance**, roll +edge.

On a **strong hit**, mark progress twice. You overwhelm your foe and are in control.

On a **weak hit**, mark progress, but you are dealt a counterblow or setback. You stay in a bad spot and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).

On a **miss**, your foe dominates this exchange. You stay in a bad spot and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Combat/Clash/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Combat/Clash/Outcomes/Strong_Hit",
            Text: "Mark progress twice. You overwhelm your foe and are in control."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Combat/Clash/Outcomes/Weak_Hit",
            Text: "Mark progress, but you are dealt a counterblow or setback. You stay in a bad spot and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          },
          Miss: {
            $id: "Starforged/Moves/Combat/Clash/Outcomes/Miss",
            Text: "Your foe dominates this exchange. You stay in a bad spot and must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 194
        },
        $id: "Starforged/Moves/Combat/Take_Decisive_Action",
        Name: "Take Decisive Action",
        Optional: !1,
        Category: "Starforged/Moves/Combat",
        "Progress Move": !0,
        Display: { Title: "Take Decisive Action", Color: "#D68F00" },
        Trigger: {
          $id: "Starforged/Moves/Combat/Take_Decisive_Action/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Combat/Take_Decisive_Action/Trigger/Options/1",
              "Roll type": "Progress roll",
              Method: "Any",
              Using: ["Combat"]
            }
          ],
          Text: "When you seize an objective in a fight..."
        },
        Text: `**When you seize an objective in a fight**, envision how you take decisive action. Then, roll the challenge dice and compare to your progress.

If you are in control, check the result as normal. If you are in a bad spot, count a strong hit without a match as a weak hit, and a weak hit as a miss.

On a **strong hit**, you prevail. Take +1 momentum. If any objectives remain and the fight continues, you are in control.

On a **weak hit**, you achieve your objective, but not without cost. Roll on the table below or choose one. If the fight continues, you are in a bad spot.

Roll   | Result
-------|--------
1-40   | It\u2019s worse than you thought: Make a suffer move (-2)
41-52  | Victory is short-lived: A new peril or foe appears
53-64  | You face collateral damage: Something is lost, damaged, or broken
65-76  | Others pay the price: Someone else suffers the cost
77-88  | Others won\u2019t forget: You are marked for vengeance
89-100 | It gets complicated: The true nature of a foe or objective is revealed

On a **miss**, you are defeated or your objective is lost. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Oracles: ["Starforged/Oracles/Moves/Take_Decisive_Action"],
        Outcomes: {
          $id: "Starforged/Moves/Combat/Take_Decisive_Action/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Combat/Take_Decisive_Action/Outcomes/Strong_Hit",
            Text: "You prevail. Take +1 momentum. If any objectives remain and the fight continues, you are in control."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Combat/Take_Decisive_Action/Outcomes/Weak_Hit",
            Text: `You achieve your objective, but not without cost. Roll on the table below or choose one. If the fight continues, you are in a bad spot.

Roll   | Result
-------|--------
1-40   | It\u2019s worse than you thought: Make a suffer move (-2)
41-52  | Victory is short-lived: A new peril or foe appears
53-64  | You face collateral damage: Something is lost, damaged, or broken
65-76  | Others pay the price: Someone else suffers the cost
77-88  | Others won\u2019t forget: You are marked for vengeance
89-100 | It gets complicated: The true nature of a foe or objective is revealed`
          },
          Miss: {
            $id: "Starforged/Moves/Combat/Take_Decisive_Action/Outcomes/Miss",
            Text: "You are defeated or your objective is lost. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 196
        },
        $id: "Starforged/Moves/Combat/Face_Defeat",
        Name: "Face Defeat",
        Optional: !1,
        Category: "Starforged/Moves/Combat",
        Display: { Title: "Face Defeat", Color: "#D68F00" },
        Trigger: {
          $id: "Starforged/Moves/Combat/Face_Defeat/Trigger",
          Text: "When you abandon or are deprived of an objective..."
        },
        Text: `**When you abandon or are deprived of an objective**, envision the consequence of this failure, clear the objective, and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).

If the fight continues, you may create a new objective and give it a rank to represent the changing situation. If any objectives remain, the fight continues and you are in a bad spot.`
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 197
        },
        $id: "Starforged/Moves/Combat/Battle",
        Name: "Battle",
        Optional: !1,
        Category: "Starforged/Moves/Combat",
        Display: { Title: "Battle", Color: "#D68F00" },
        Trigger: {
          $id: "Starforged/Moves/Combat/Battle/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Combat/Battle/Trigger/Options/1",
              Text: "At range, or using your speed and the environment to your advantage",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Edge"]
            },
            {
              $id: "Starforged/Moves/Combat/Battle/Trigger/Options/2",
              Text: "Depending on your courage, leadership, or companions",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            },
            {
              $id: "Starforged/Moves/Combat/Battle/Trigger/Options/3",
              Text: "In close to overpower your foe",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Combat/Battle/Trigger/Options/4",
              Text: "Using trickery to befuddle your foe",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Shadow"]
            },
            {
              $id: "Starforged/Moves/Combat/Battle/Trigger/Options/5",
              Text: "Using careful tactics to outsmart your foe",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you fight a battle and it happens in a blur..."
        },
        Text: `**When you fight a battle and it happens in a blur**, envision your objective and roll. If you primarily...

  * Fight at range, or using your speed and the environment to your advantage: Roll +edge.
  * Fight depending on your courage, leadership, or companions: Roll +heart.
  * Fight in close to overpower your foe: Roll +iron.
  * Fight using trickery to befuddle your foe: Roll +shadow.
  * Fight using careful tactics to outsmart your foe: Roll +wits.

On a **strong hit**, you achieve your objective unconditionally. You and any allies who joined the battle may take +2 momentum.

On a **weak hit**, you achieve your objective, but not without cost. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).

On a **miss**, you are defeated or the objective is lost. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Combat/Battle/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Combat/Battle/Outcomes/Strong_Hit",
            Text: "You achieve your objective unconditionally. You and any allies who joined the battle may take +2 momentum."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Combat/Battle/Outcomes/Weak_Hit",
            Text: "You achieve your objective, but not without cost. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          },
          Miss: {
            $id: "Starforged/Moves/Combat/Battle/Outcomes/Miss",
            Text: "You are defeated or the objective is lost. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      }
    ],
    Display: { Title: "Combat Moves", Color: "#D68F00" },
    Optional: !1
  },
  {
    $id: "Starforged/Moves/Suffer",
    Name: "Suffer",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 198
    },
    Description: "When you bear the brunt of a failed action or make a concession, the suffer moves help resolve the cost. These moves are typically made when you must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price) and face a hardship that directly impacts your well-being and readiness, or as prompted by a move or asset.",
    Moves: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 199
        },
        $id: "Starforged/Moves/Suffer/Lose_Momentum",
        Name: "Lose Momentum",
        Optional: !1,
        Category: "Starforged/Moves/Suffer",
        Display: { Title: "Lose Momentum", Color: "#C50000" },
        Trigger: {
          $id: "Starforged/Moves/Suffer/Lose_Momentum/Trigger",
          Text: "When you are delayed or disadvantaged"
        },
        Text: `**When you are delayed or disadvantaged**, suffer -1 momentum for a minor setback, -2 for a serious setback, or -3 for a major setback.

When your momentum is at its minimum (-6) and you must suffer -momentum, choose one.

  * Envision how the price is paid and apply the cost to a different suffer move.
  * Envision how this undermines your progress on a vow, expedition, connection, or combat. Then, clear 1 unit of progress on that track per its rank: troublesome=3 boxes; dangerous=2 boxes; formidable=1 box; extreme=2 ticks; epic=1 tick.`
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 200
        },
        $id: "Starforged/Moves/Suffer/Endure_Harm",
        Name: "Endure Harm",
        Optional: !1,
        Category: "Starforged/Moves/Suffer",
        Display: { Title: "Endure Harm", Color: "#C50000" },
        Trigger: {
          $id: "Starforged/Moves/Suffer/Endure_Harm/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Suffer/Endure_Harm/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Highest",
              Using: ["Iron", "Health"]
            }
          ],
          Text: "When you face physical injury, fatigue, or illness..."
        },
        Text: `**When you face physical injury, fatigue, or illness**, suffer -1 health for minor harm, -2 for serious harm, or -3 for major harm. If your health is 0, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) equal to any remaining harm.

Then, if your health is 0 or you choose to resist the harm, roll +health or +iron, whichever is higher.

On a **strong hit**, choose one.

  * Shake it off: If you are not wounded, take +1 health
  * Embrace the pain: Take +1 momentum

On a **weak hit**, if you are not wounded, you may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) in exchange for +1 health. Otherwise, press on.

On a **miss**, it\u2019s worse than you thought. Suffer an additional -1 health or [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2). If your health is 0, you must also mark wounded or permanently harmed, or roll on the table below.

Roll   | Result
-------|---------
1-10   | You suffer mortal harm. [Face Death](Starforged/Moves/Threshold/Face_Death).
11-20  | You are dying. Within an hour or two, you must [Heal](Starforged/Moves/Recover/Heal) and raise your health above 0, or [Face Death](Starforged/Moves/Threshold/Face_Death).
21-35  | You are unconscious and out of action. If left alone, you come back to your senses in an hour or two. If you are vulnerable to ongoing harm, [Face Death](Starforged/Moves/Threshold/Face_Death).
36-50  | You are reeling. If you engage in any vigorous activity before taking a breather, roll on this table again (before resolving the other move).
51-100 | You are still standing.`,
        Oracles: ["Starforged/Oracles/Moves/Endure_Harm"],
        Outcomes: {
          $id: "Starforged/Moves/Suffer/Endure_Harm/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Suffer/Endure_Harm/Outcomes/Strong_Hit",
            Text: `Choose one.

  * Shake it off: If you are not wounded, take +1 health
  * Embrace the pain: Take +1 momentum`
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Suffer/Endure_Harm/Outcomes/Weak_Hit",
            Text: "If you are not wounded, you may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) in exchange for +1 health. Otherwise, press on."
          },
          Miss: {
            $id: "Starforged/Moves/Suffer/Endure_Harm/Outcomes/Miss",
            Text: `It\u2019s worse than you thought. Suffer an additional -1 health or [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2). If your health is 0, you must also mark wounded or permanently harmed, or roll on the table below.

Roll   | Result
-------|---------
1-10   | You suffer mortal harm. [Face Death](Starforged/Moves/Threshold/Face_Death).
11-20  | You are dying. Within an hour or two, you must [Heal](Starforged/Moves/Recover/Heal) and raise your health above 0, or [Face Death](Starforged/Moves/Threshold/Face_Death).
21-35  | You are unconscious and out of action. If left alone, you come back to your senses in an hour or two. If you are vulnerable to ongoing harm, [Face Death](Starforged/Moves/Threshold/Face_Death).
36-50  | You are reeling. If you engage in any vigorous activity before taking a breather, roll on this table again (before resolving the other move).
51-100 | You are still standing.`
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 202
        },
        $id: "Starforged/Moves/Suffer/Endure_Stress",
        Name: "Endure Stress",
        Optional: !1,
        Category: "Starforged/Moves/Suffer",
        Display: { Title: "Endure Stress", Color: "#C50000" },
        Trigger: {
          $id: "Starforged/Moves/Suffer/Endure_Stress/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Suffer/Endure_Stress/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Highest",
              Using: ["Heart", "Spirit"]
            }
          ],
          Text: "When you face mental strain, shock, or despair..."
        },
        Text: `**When you face mental strain, shock, or despair**, suffer -1 spirit for minor stress, -2 for serious stress, or -3 for major stress. If your spirit is 0, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) equal to any remaining stress.

Then, if your spirit is 0 or you choose to resist the stress, roll +spirit or +heart, whichever is higher.

On a **strong hit**, choose one.

  * Shake it off: If you are not shaken, take +1 spirit
  * Embrace the darkness: Take +1 momentum

On a **weak hit**, if you are not shaken, you may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) in exchange for +1 spirit. Otherwise, press on.

On a **miss**, it's worse than you thought. Suffer an additional -1 spirit or [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2). If your spirit is 0, you must also mark shaken or traumatized, or roll on the table below.

Roll   | Result
-------|--------------------------------------------------------------------------
1-10   | You are overwhelmed. [Face Desolation](Starforged/Moves/Threshold/Face_Desolation).
11-25  | You give up. [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow).
26-50  | You give in to fear or compulsion, and act against your better instincts.
51-100 | You persevere.`,
        Oracles: ["Starforged/Oracles/Moves/Endure_Stress"],
        Outcomes: {
          $id: "Starforged/Moves/Suffer/Endure_Stress/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Suffer/Endure_Stress/Outcomes/Strong_Hit",
            Text: `Choose one.

  * Shake it off: If you are not shaken, take +1 spirit
  * Embrace the darkness: Take +1 momentum`
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Suffer/Endure_Stress/Outcomes/Weak_Hit",
            Text: "If you are not shaken, you may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) in exchange for +1 spirit. Otherwise, press on."
          },
          Miss: {
            $id: "Starforged/Moves/Suffer/Endure_Stress/Outcomes/Miss",
            Text: `It's worse than you thought. Suffer an additional -1 spirit or [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2). If your spirit is 0, you must also mark shaken or traumatized, or roll on the table below.

Roll   | Result
-------|--------------------------------------------------------------------------
1-10   | You are overwhelmed. [Face Desolation](Starforged/Moves/Threshold/Face_Desolation).
11-25  | You give up. [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow).
26-50  | You give in to fear or compulsion, and act against your better instincts.
51-100 | You persevere.`
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 204
        },
        $id: "Starforged/Moves/Suffer/Companion_Takes_a_Hit",
        Name: "Companion Takes a Hit",
        Optional: !1,
        Category: "Starforged/Moves/Suffer",
        Display: { Title: "Companion Takes a Hit", Color: "#C50000" },
        Trigger: {
          $id: "Starforged/Moves/Suffer/Companion_Takes_a_Hit/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Suffer/Companion_Takes_a_Hit/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Companion Health"]
            }
          ],
          Text: "When your companion faces physical hardship..."
        },
        Text: `**When your companion faces physical hardship**, they suffer -1 health for minor harm, -2 for serious harm, or -3 for major harm. If your companion's health is 0, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) equal to any remaining harm.

Then, if their health is 0 or you choose to test their resilience, roll +your companion's health.

On a **strong hit**, your companion rallies. Give them +1 health.

On a **weak hit**, if your companion's health is not 0, you may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) and give them +1 health. Otherwise, they press on.

On a **miss**, it's worse than you thought. They suffer an additional -1 health or you [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2). If your companion's health is 0, they are out of action until given aid. If their health is 0 and you rolled a miss with a match on this move, they are dead or destroyed; discard the asset.`,
        Outcomes: {
          $id: "Starforged/Moves/Suffer/Companion_Takes_a_Hit/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Suffer/Companion_Takes_a_Hit/Outcomes/Strong_Hit",
            Text: "Your companion rallies. Give them +1 health."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Suffer/Companion_Takes_a_Hit/Outcomes/Weak_Hit",
            Text: "If your companion's health is not 0, you may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) and give them +1 health. Otherwise, they press on."
          },
          Miss: {
            $id: "Starforged/Moves/Suffer/Companion_Takes_a_Hit/Outcomes/Miss",
            Text: "It's worse than you thought. They suffer an additional -1 health or you [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2). If your companion's health is 0, they are out of action until given aid.",
            "With a Match": {
              $id: "Starforged/Moves/Suffer/Companion_Takes_a_Hit/Outcomes/Miss/With_a_Match",
              Text: "It's worse than you thought. They suffer an additional -1 health or you [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2). If your companion's health is 0, they are dead or destroyed; discard the asset."
            }
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 205
        },
        $id: "Starforged/Moves/Suffer/Sacrifice_Resources",
        Name: "Sacrifice Resources",
        Optional: !1,
        Category: "Starforged/Moves/Suffer",
        Display: { Title: "Sacrifice Resources", Color: "#C50000" },
        Trigger: {
          $id: "Starforged/Moves/Suffer/Sacrifice_Resources/Trigger",
          Text: "When you lose or consume resources..."
        },
        Text: `**When you lose or consume resources**, suffer -1 supply for a minor loss, -2 for a serious loss, or -3 for a major loss.

If your supply is exhausted (reduced to 0), mark **unprepared**. When you suffer a loss of resources while unprepared, envision how this causes you hardship and apply the cost to a different suffer move.`
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 206
        },
        $id: "Starforged/Moves/Suffer/Withstand_Damage",
        Name: "Withstand Damage",
        Optional: !1,
        Category: "Starforged/Moves/Suffer",
        Display: { Title: "Withstand Damage", Color: "#C50000" },
        Trigger: {
          $id: "Starforged/Moves/Suffer/Withstand_Damage/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Suffer/Withstand_Damage/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Vehicle Integrity"]
            }
          ],
          Text: "When your vehicle faces a damaging situation or environment..."
        },
        Text: `**When your vehicle faces a damaging situation or environment**, suffer -1 integrity for minor damage, -2 for serious damage, or -3 for major damage. If your integrity is 0, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) equal to any remaining damage.

Then, if your integrity is 0 or you choose to resist the damage, roll +integrity.

On a **strong hit**, choose one.

  * Bypass: If your vehicle is not battered, take +1 integrity
  * Ride it out: Take +1 momentum

On a **weak hit**, if your vehicle is not battered, you may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) in exchange for +1 integrity. Otherwise, press on.

On a **miss**, it\u2019s worse than you thought. Suffer an additional -1 integrity or [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2). If your integrity is 0, also suffer a cost according to the vehicle type.

  * **Command vehicle:** Mark the vehicle as **battered** or **cursed**, mark a module as **broken**, destroy a broken module by discarding it, or roll on the table below. If the command vehicle is destroyed, [Overcome Destruction](Starforged/Moves/Threshold/Overcome_Destruction).
  * **Support vehicle:** Mark the vehicle as **battered** or roll on the table below. If the vehicle is destroyed, discard the asset.
  * **Incidental vehicle:** Roll on the table below.

Roll   | Result
-------|-------------------
1-10   | Immediate catastrophic destruction. All aboard must [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) or [Face Death](Starforged/Moves/Threshold/Face_Death), as appropriate.
11-25  | Destruction is imminent and unavoidable. If you do not have the means or intention to get clear, [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) or [Face Death](Starforged/Moves/Threshold/Face_Death), as appropriate.
26-40  | Destruction is imminent, but can be averted if you [Repair](Starforged/Moves/Recover/Repair) your vehicle and raise its integrity above 0. If you fail, see 11-25.
41-55  | You cannot [Repair](Starforged/Moves/Recover/Repair) this vehicle until you [Resupply](Starforged/Moves/Recover/Resupply) and obtain a crucial replacement part. If you roll this result again prior to that, see 11-25.
56-70  | The vehicle is crippled or out of your control. To get it back in action, you must [Repair](Starforged/Moves/Recover/Repair) and raise its integrity above 0.
71-85  | It\u2019s a rough ride. All aboard must make the [Endure Harm](Starforged/Moves/Suffer/Endure_Harm), [Endure Stress](Starforged/Moves/Suffer/Endure_Stress), or [Companion Takes a Hit](Starforged/Moves/Suffer/Companion_Takes_a_Hit) move, suffering a serious (-2) cost.
86-95  | You\u2019ve lost fuel, energy, or cargo. [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-2).
96-100 | Against all odds, the vehicle holds together.`,
        Oracles: ["Starforged/Oracles/Moves/Withstand_Damage"],
        Outcomes: {
          $id: "Starforged/Moves/Suffer/Withstand_Damage/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Suffer/Withstand_Damage/Outcomes/Strong_Hit",
            Text: `Choose one.

  * Bypass: If your vehicle is not battered, take +1 integrity
  * Ride it out: Take +1 momentum`
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Suffer/Withstand_Damage/Outcomes/Weak_Hit",
            Text: "If your vehicle is not battered, you may [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1) in exchange for +1 integrity. Otherwise, press on."
          },
          Miss: {
            $id: "Starforged/Moves/Suffer/Withstand_Damage/Outcomes/Miss",
            Text: `It\u2019s worse than you thought. Suffer an additional -1 integrity or [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2). If your integrity is 0, also suffer a cost according to the vehicle type.

  * **Command vehicle:** Mark the vehicle as **battered** or **cursed**, mark a module as **broken**, destroy a broken module by discarding it, or roll on the table below. If the command vehicle is destroyed, [Overcome Destruction](Starforged/Moves/Threshold/Overcome_Destruction).
  * **Support vehicle:** Mark the vehicle as **battered** or roll on the table below. If the vehicle is destroyed, discard the asset.
  * **Incidental vehicle:** Roll on the table below.

Roll   | Result
-------|-------------------
1-10   | Immediate catastrophic destruction. All aboard must [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) or [Face Death](Starforged/Moves/Threshold/Face_Death), as appropriate.
11-25  | Destruction is imminent and unavoidable. If you do not have the means or intention to get clear, [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) or [Face Death](Starforged/Moves/Threshold/Face_Death), as appropriate.
26-40  | Destruction is imminent, but can be averted if you [Repair](Starforged/Moves/Recover/Repair) your vehicle and raise its integrity above 0. If you fail, see 11-25.
41-55  | You cannot [Repair](Starforged/Moves/Recover/Repair) this vehicle until you [Resupply](Starforged/Moves/Recover/Resupply) and obtain a crucial replacement part. If you roll this result again prior to that, see 11-25.
56-70  | The vehicle is crippled or out of your control. To get it back in action, you must [Repair](Starforged/Moves/Recover/Repair) and raise its integrity above 0.
71-85  | It\u2019s a rough ride. All aboard must make the [Endure Harm](Starforged/Moves/Suffer/Endure_Harm), [Endure Stress](Starforged/Moves/Suffer/Endure_Stress), or [Companion Takes a Hit](Starforged/Moves/Suffer/Companion_Takes_a_Hit) move, suffering a serious (-2) cost.
86-95  | You\u2019ve lost fuel, energy, or cargo. [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-2).
96-100 | Against all odds, the vehicle holds together.`
          }
        }
      }
    ],
    Display: { Title: "Suffer Moves", Color: "#C50000" },
    Optional: !1
  },
  {
    $id: "Starforged/Moves/Recover",
    Name: "Recover",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 208
    },
    Description: `Life as an Ironsworn is not easy or comfortable. When your resources are strained, your health and spirit ebbing, your equipment and vehicles in disrepair, you'll need to find relief from the perils of the Forge and the burdens of your sworn oaths.

Make these **recover moves** when you attempt to rest, recover, or refit.`,
    Moves: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 209
        },
        $id: "Starforged/Moves/Recover/Sojourn",
        Name: "Sojourn",
        Optional: !1,
        Category: "Starforged/Moves/Recover",
        Display: { Title: "Sojourn", Color: "#179F0E" },
        Trigger: {
          $id: "Starforged/Moves/Recover/Sojourn/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Recover/Sojourn/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            }
          ],
          Text: "When you spend time recovering within a community..."
        },
        Text: `**When you spend time recovering within a community**, roll +heart.

On a **strong hit**, this is a safe refuge. You and your allies may each choose two recover moves: [Heal](Starforged/Moves/Recover/Heal), [Hearten](Starforged/Moves/Recover/Hearten), [Repair](Starforged/Moves/Recover/Repair), or [Resupply](Starforged/Moves/Recover/Resupply). Instead of rolling, assume an automatic strong hit for each. An individual move can be taken more than once.

On a **weak hit**, as above, but time is short or resources are strained. You and your allies each make one recover move instead of two, with no more than three moves total among the group.

On a **miss**, choose one.

  * The community needs your help, or makes a costly demand in exchange for safe harbor. Envision what they ask of you. If you do it, or [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to see it done, resolve this move as a strong hit.
  * You find no relief, and the situation grows worse. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Recover/Sojourn/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Recover/Sojourn/Outcomes/Strong_Hit",
            Text: "This is a safe refuge. You and your allies may each choose two recover moves: [Heal](Starforged/Moves/Recover/Heal), [Hearten](Starforged/Moves/Recover/Hearten), [Repair](Starforged/Moves/Recover/Repair), or [Resupply](Starforged/Moves/Recover/Resupply). Instead of rolling, assume an automatic strong hit for each. An individual move can be taken more than once."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Recover/Sojourn/Outcomes/Weak_Hit",
            Text: "This is a safe refuge, but time is short or resources are strained. You and your allies may each make one recover move (with no more than three moves total among the group): [Heal](Starforged/Moves/Recover/Heal), [Hearten](Starforged/Moves/Recover/Hearten), [Repair](Starforged/Moves/Recover/Repair), or [Resupply](Starforged/Moves/Recover/Resupply). Instead of rolling, assume an automatic strong hit for each. An individual move can be taken more than once."
          },
          Miss: {
            $id: "Starforged/Moves/Recover/Sojourn/Outcomes/Miss",
            Text: `Choose one.

  * The community needs your help, or makes a costly demand in exchange for safe harbor. Envision what they ask of you. If you do it, or [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to see it done, resolve this move as a strong hit.
  * You find no relief, and the situation grows worse. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 210
        },
        $id: "Starforged/Moves/Recover/Heal",
        Name: "Heal",
        Optional: !1,
        Category: "Starforged/Moves/Recover",
        Display: { Title: "Heal", Color: "#179F0E" },
        Trigger: {
          $id: "Starforged/Moves/Recover/Heal/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Recover/Heal/Trigger/Options/1",
              Text: "Receive treatment from someone (not an ally)",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Recover/Heal/Trigger/Options/2",
              Text: "Mend your own wounds",
              "Roll type": "Action roll",
              Method: "Lowest",
              Using: ["Iron", "Wits"]
            },
            {
              $id: "Starforged/Moves/Recover/Heal/Trigger/Options/3",
              Text: "Obtain treatment for a companion",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            },
            {
              $id: "Starforged/Moves/Recover/Heal/Trigger/Options/4",
              Text: "Provide care",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you receive medical care or provide treatment..."
        },
        Text: `**When you receive medical care or provide treatment**, envision the situation and roll. If you...

  * Receive treatment from someone (not an ally): Roll +iron
  * Mend your own wounds: Roll +iron or +wits, whichever is lower
  * Obtain treatment for a companion: Roll +heart
  * Provide care: Roll +wits

On a **strong hit**, the care is helpful. If you (or the ally under your care) are wounded, clear the impact and take or give +2 health. Otherwise, take or give +3 health.

On a **weak hit**, as above, but the recovery costs extra time or resources. Choose one: [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2) or [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-2).

On a **miss**, the aid is ineffective and the situation worsens. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Recover/Heal/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Recover/Heal/Outcomes/Strong_Hit",
            Text: "The care is helpful. If you (or the ally under your care) are wounded, clear the impact and take or give +2 health. Otherwise, take or give +3 health."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Recover/Heal/Outcomes/Weak_Hit",
            Text: `The care is helpful. If you (or the ally under your care) are wounded, clear the impact and take or give +2 health. Otherwise, take or give +3 health.

However, the recovery costs extra time or resources. Choose one: [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-2) or [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-2).`
          },
          Miss: {
            $id: "Starforged/Moves/Recover/Heal/Outcomes/Miss",
            Text: "The aid is ineffective and the situation worsens. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 211
        },
        $id: "Starforged/Moves/Recover/Hearten",
        Name: "Hearten",
        Optional: !1,
        Category: "Starforged/Moves/Recover",
        Display: { Title: "Hearten", Color: "#179F0E" },
        Trigger: {
          $id: "Starforged/Moves/Recover/Hearten/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Recover/Hearten/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            }
          ],
          Text: "When you socialize, share intimacy, or find a moment of peace..."
        },
        Text: `**When you socialize, share intimacy, or find a moment of peace**, roll +heart.

On a **strong hit**, you find companionship or comfort and your spirit is strengthened. If you are shaken, clear the impact and take +1 spirit. Otherwise, take +2 spirit. If you make this move as you [Sojourn](Starforged/Moves/Recover/Sojourn), take +1 more.

On a **weak hit**, as above, but this indulgence is fleeting. Envision an interruption, complication, or inner conflict. Then, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).

On a **miss**, you take no comfort and the situation worsens. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Recover/Hearten/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Recover/Hearten/Outcomes/Strong_Hit",
            Text: "You find companionship or comfort and your spirit is strengthened. If you are shaken, clear the impact and take +1 spirit. Otherwise, take +2 spirit. If you make this move as you [Sojourn](Starforged/Moves/Recover/Sojourn), take +1 more."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Recover/Hearten/Outcomes/Weak_Hit",
            Text: `You find companionship or comfort and your spirit is strengthened. If you are shaken, clear the impact and take +1 spirit. Otherwise, take +2 spirit. If you make this move as you [Sojourn](Starforged/Moves/Recover/Sojourn), take +1 more.

However, this indulgence is fleeting. Envision an interruption, complication, or inner conflict. Then, [Lose Momentum](Starforged/Moves/Suffer/Lose_Momentum) (-1).`
          },
          Miss: {
            $id: "Starforged/Moves/Recover/Hearten/Outcomes/Miss",
            Text: "You take no comfort and the situation worsens. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 212
        },
        $id: "Starforged/Moves/Recover/Resupply",
        Name: "Resupply",
        Optional: !1,
        Category: "Starforged/Moves/Recover",
        Display: { Title: "Resupply", Color: "#179F0E" },
        Trigger: {
          $id: "Starforged/Moves/Recover/Resupply/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Recover/Resupply/Trigger/Options/1",
              Text: "Barter or make an appeal",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            },
            {
              $id: "Starforged/Moves/Recover/Resupply/Trigger/Options/2",
              Text: "Threaten or seize",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Recover/Resupply/Trigger/Options/3",
              Text: "Steal or swindle",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Shadow"]
            },
            {
              $id: "Starforged/Moves/Recover/Resupply/Trigger/Options/4",
              Text: "Scavenge or craft",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you attempt to bolster your readiness..."
        },
        Text: `**When you attempt to bolster your readiness**, envision the opportunity and your approach. If you...

  * Barter or make an appeal: Roll +heart
  * Threaten or seize: Roll +iron
  * Steal or swindle: Roll +shadow
  * Scavenge or craft: Roll +wits

On a **strong hit**, choose one.

  * If you are unprepared, clear the impact and take +1 supply. Otherwise, take +2 supply.
  * If you are in need of a specific item or resource that can reasonably be obtained, you acquire it. Take +1 momentum.

On a **weak hit**, as above, but you must first deal with a cost, complication, or demand. Envision the nature of this obstacle.

On a **miss**, you encounter an unexpected peril. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Recover/Resupply/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Recover/Resupply/Outcomes/Strong_Hit",
            Text: `Choose one.

  * If you are unprepared, clear the impact and take +1 supply. Otherwise, take +2 supply.
  * If you are in need of a specific item or resource that can reasonably be obtained, you acquire it. Take +1 momentum.`
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Recover/Resupply/Outcomes/Weak_Hit",
            Text: `You must first deal with a cost, complication, or demand. Envision the nature of this obstacle.

Then choose one.

  * If you are unprepared, clear the impact and take +1 supply. Otherwise, take +2 supply.
  * If you are in need of a specific item or resource that can reasonably be obtained, you acquire it. Take +1 momentum.`
          },
          Miss: {
            $id: "Starforged/Moves/Recover/Resupply/Outcomes/Miss",
            Text: "You encounter an unexpected peril. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 214
        },
        $id: "Starforged/Moves/Recover/Repair",
        Name: "Repair",
        Optional: !1,
        Category: "Starforged/Moves/Recover",
        Display: { Title: "Repair", Color: "#179F0E" },
        Trigger: {
          $id: "Starforged/Moves/Recover/Repair/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Recover/Repair/Trigger/Options/1",
              Text: "Make your own repairs, or direct a companion to make repairs",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            },
            {
              $id: "Starforged/Moves/Recover/Repair/Trigger/Options/2",
              Text: "Obtain repairs from someone (not an ally)",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Supply"]
            }
          ],
          Text: "When you make repairs to your vehicles, modules, mechanical companions, or other devices..."
        },
        Text: `**When you make repairs to your vehicles, modules, mechanical companions, or other devices**, envision the situation and roll. If you...

  * Make your own repairs, or direct a companion to make repairs: Roll +wits
  * Obtain repairs from someone (not an ally): Roll +supply

On a **hit**, you gain repair points as appropriate to the situation, per the table below. Additionally, you may [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) and exchange each -1 of supply for 1 extra repair point (up to 3 points).

Situation     | Strong Hit | Weak Hit
--------------|------------|---------
At a facility | 5 points   | 3 points
In the field  | 3 points   | 1 points
Under fire    | 2 points   | 0 points

Spend repair points as follows. Unused points are discarded.

  * Clear the battered impact on a vehicle: 2 points
  * Fix one broken module: 2 points
  * Take +1 integrity on a vehicle: 1 point
  * Take +1 health for a mechanical companion: 1 point
  * Repair any other device: 3 points
  * Repair any other device, but with a complication or malfunction: 2 points

On a **miss**, the repairs are not made and the situation worsens. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Recover/Repair/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Recover/Repair/Outcomes/Strong_Hit",
            Text: `You gain repair points as appropriate to the situation, per the table below.

Situation     | Strong Hit
--------------|-----------
At a facility | 5 points
In the field  | 3 points
Under fire    | 2 points

Additionally, you may [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) and exchange each -1 of supply for 1 extra repair point (up to 3 points).

Spend repair points as follows. Unused points are discarded.

  * Clear the battered impact on a vehicle: 2 points
  * Fix one broken module: 2 points
  * Take +1 integrity on a vehicle: 1 point
  * Take +1 health for a mechanical companion: 1 point
  * Repair any other device: 3 points
  * Repair any other device, but with a complication or malfunction: 2 points`
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Recover/Repair/Outcomes/Weak_Hit",
            Text: `You gain repair points as appropriate to the situation, per the table below.

Situation     | Weak Hit
--------------|---------
At a facility | 3 points
In the field  | 1 points
Under fire    | 0 points

Additionally, you may [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) and exchange each -1 of supply for 1 extra repair point (up to 3 points).

Spend repair points as follows. Unused points are discarded.

  * Clear the battered impact on a vehicle: 2 points
  * Fix one broken module: 2 points
  * Take +1 integrity on a vehicle: 1 point
  * Take +1 health for a mechanical companion: 1 point
  * Repair any other device: 3 points
  * Repair any other device, but with a complication or malfunction: 2 points`
          },
          Miss: {
            $id: "Starforged/Moves/Recover/Repair/Outcomes/Miss",
            Text: "The repairs are not made and the situation worsens. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
          }
        }
      }
    ],
    Display: { Title: "Recover Moves", Color: "#179F0E" },
    Optional: !1
  },
  {
    $id: "Starforged/Moves/Threshold",
    Name: "Threshold",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 216
    },
    Description: `Despite your best efforts to overcome the perils of the Forge, calamitous events may bring you to the precipice of life and death, redemption and desolation, perseverance and destruction.

In these moments you face your greatest tests. What will become of you when all seems lost? Will you see your character undone, or find yourself on a path of renewed purpose? Make these **threshold moves** to find out.`,
    Moves: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 217
        },
        $id: "Starforged/Moves/Threshold/Face_Death",
        Name: "Face Death",
        Optional: !1,
        Category: "Starforged/Moves/Threshold",
        Display: { Title: "Face Death", Color: "#676767" },
        Trigger: {
          $id: "Starforged/Moves/Threshold/Face_Death/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Threshold/Face_Death/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            }
          ],
          Text: "When you are brought to the brink of death with a chance for recovery or redemption..."
        },
        Text: `**When you encounter a situation where death is an immediate and unavoidable outcome**, you are dead. **When you are instead brought to the brink of death with a chance for recovery or redemption**, roll +heart.

On a **strong hit**, you are cast back into the mortal world.

On a **weak hit**, choose one.

  * You die, but not before making a noble sacrifice. Envision your final moments.
  * There is more to be done. Envision what is revealed or asked of you at death's door, and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to complete an extreme quest. You return to the mortal world and must mark **doomed**. When you complete the deathbound quest, clear the impact.

On a **miss**, you are dead.`,
        Outcomes: {
          $id: "Starforged/Moves/Threshold/Face_Death/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Threshold/Face_Death/Outcomes/Strong_Hit",
            Text: "You are cast back into the mortal world."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Threshold/Face_Death/Outcomes/Weak_Hit",
            Text: `Choose one.

  * You die, but not before making a noble sacrifice. Envision your final moments.
  * There is more to be done. Envision what is revealed or asked of you at death's door, and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to complete an extreme quest. You return to the mortal world and must mark **doomed**. When you complete the deathbound quest, clear the impact.`
          },
          Miss: {
            $id: "Starforged/Moves/Threshold/Face_Death/Outcomes/Miss",
            Text: "You are dead."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 218
        },
        $id: "Starforged/Moves/Threshold/Face_Desolation",
        Name: "Face Desolation",
        Optional: !1,
        Category: "Starforged/Moves/Threshold",
        Display: { Title: "Face Desolation", Color: "#676767" },
        Trigger: {
          $id: "Starforged/Moves/Threshold/Face_Desolation/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Threshold/Face_Desolation/Trigger/Options/1",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            }
          ],
          Text: "When you are brought to the brink of desolation..."
        },
        Text: `**When you are brought to the brink of desolation**, roll +heart.

On a **strong hit**, you resist and press on.

On a **weak hit**, choose one.

  * Your spirit breaks, but not before you make a noble sacrifice. Envision your final moments.
  * You see a vision of a dreaded event coming to pass. Envision that dark future, and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to prevent it through an extreme quest. You return to your senses and must mark **tormented**. When you complete the soul-bound quest, clear the impact.

On a **miss**, you succumb to despair or horror and are lost.`,
        Outcomes: {
          $id: "Starforged/Moves/Threshold/Face_Desolation/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Threshold/Face_Desolation/Outcomes/Strong_Hit",
            Text: "You resist and press on."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Threshold/Face_Desolation/Outcomes/Weak_Hit",
            Text: `Choose one.

  * Your spirit breaks, but not before you make a noble sacrifice. Envision your final moments.
  * You see a vision of a dreaded event coming to pass. Envision that dark future, and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to prevent it through an extreme quest. You return to your senses and must mark **tormented**. When you complete the soul-bound quest, clear the impact.`
          },
          Miss: {
            $id: "Starforged/Moves/Threshold/Face_Desolation/Outcomes/Miss",
            Text: "You succumb to despair or horror and are lost."
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 220
        },
        $id: "Starforged/Moves/Threshold/Overcome_Destruction",
        Name: "Overcome Destruction",
        Optional: !1,
        Category: "Starforged/Moves/Threshold",
        "Progress Move": !0,
        Display: { Title: "Overcome Destruction", Color: "#676767" },
        Trigger: {
          $id: "Starforged/Moves/Threshold/Overcome_Destruction/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Threshold/Overcome_Destruction/Trigger/Options/1",
              "Roll type": "Progress roll",
              Method: "Any",
              Using: ["Bonds"]
            }
          ],
          Text: "When your command vehicle is destroyed or irrevocably lost..."
        },
        Text: `**When your command vehicle is destroyed or irrevocably lost**, you must discard the asset, along with any modules and docked support vehicles.

If you survive, you may use your connections to replace some of what was lost. To learn the cost, roll the challenge dice and compare to the progress on your bonds legacy track.

On a **strong hit**, you may call in a favor. This comes without conditions.

On a **weak hit**, you owe someone. You must mark **indebted** and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to complete an extreme quest in their service. When you complete the duty-bound quest, clear the impact.

On a **miss**, as with the weak hit result, but this quest is against your nature, forces you to [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow) on another quest, or is in the service of an enemy.

If you accept the cost, take 1 experience for every marked ability on the discarded assets (minimum 3 experience). Spend this experience only on a new command vehicle, modules, and support vehicles.`,
        Outcomes: {
          $id: "Starforged/Moves/Threshold/Overcome_Destruction/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Threshold/Overcome_Destruction/Outcomes/Strong_Hit",
            Text: `You may call in a favor. This comes without conditions.

If you accept the cost, take 1 experience for every marked ability on the discarded assets (minimum 3 experience). Spend this experience only on a new command vehicle, modules, and support vehicles.`
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Threshold/Overcome_Destruction/Outcomes/Weak_Hit",
            Text: `You owe someone. You must mark **indebted** and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to complete an extreme quest in their service. When you complete the duty-bound quest, clear the impact.

If you accept the cost, take 1 experience for every marked ability on the discarded assets (minimum 3 experience). Spend this experience only on a new command vehicle, modules, and support vehicles.`
          },
          Miss: {
            $id: "Starforged/Moves/Threshold/Overcome_Destruction/Outcomes/Miss",
            Text: `You owe someone. You must mark **indebted** and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) to complete an extreme quest in their service. This quest is against your nature, forces you to [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow) on another quest, or is in the service of an enemy.

When you complete the duty-bound quest, clear the impact.

If you accept the cost, take 1 experience for every marked ability on the discarded assets (minimum 3 experience). Spend this experience only on a new command vehicle, modules, and support vehicles.`
          }
        }
      }
    ],
    Display: { Title: "Threshold Moves", Color: "#676767" },
    Optional: !1
  },
  {
    $id: "Starforged/Moves/Legacy",
    Name: "Legacy",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 222
    },
    Description: `The three **legacy tracks**\u2014quests, bonds, and discoveries\u2014are a special type of progress track to show the evolution of your character. As you fulfill vows, build relationships, and explore the Forge, you'll mark progress on these tracks and gain experience. This experience is then spent on character assets to represent your character's growing skills, influence, and resources.
Make these **legacy moves** to gain and spend experience, and when you face a final test to learn how your accomplishments and failures will echo through time.`,
    Moves: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 224
        },
        $id: "Starforged/Moves/Legacy/Earn_Experience",
        Name: "Earn Experience",
        Optional: !1,
        Category: "Starforged/Moves/Legacy",
        Display: { Title: "Earn Experience", Color: "#4D5769" },
        Trigger: {
          $id: "Starforged/Moves/Legacy/Earn_Experience/Trigger",
          Text: "When you fill a box (four ticks) on any legacy track..."
        },
        Text: `**When you fill a box (four ticks) on any legacy track**, take 2 experience. This experience may be spent when you [Advance](Starforged/Moves/Legacy/Advance).

Once you completely fill the tenth box on any legacy track, clear that track. You may start again marking progress on the cleared track, but earn experience at a reduced rate of 1 experience (instead of 2) for each filled progress box. If you make a progress roll against this track, resolve the outcome as if at 10 progress.`
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 225
        },
        $id: "Starforged/Moves/Legacy/Advance",
        Name: "Advance",
        Optional: !1,
        Category: "Starforged/Moves/Legacy",
        Display: { Title: "Advance", Color: "#4D5769" },
        Trigger: {
          $id: "Starforged/Moves/Legacy/Advance/Trigger",
          Text: "When you develop your abilities, improve your resources, gain a reward, or boost your influence..."
        },
        Text: `**When you develop your abilities, improve your resources, gain a reward, or boost your influence**, you may spend 3 experience to add a new asset, or 2 experience to upgrade an asset. Choose from the following categories as appropriate to your focus and opportunities.

  * Module: Upgrade your command vehicle
  * Support Vehicle: Acquire or improve a secondary vehicle
  * Path: Bolster your personal capabilities or follow a new calling
  * Companion: Gain or improve a trusted helper
  * Deed: Learn from your experiences or build a legacy`
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 226
        },
        $id: "Starforged/Moves/Legacy/Continue_a_Legacy",
        Name: "Continue a Legacy",
        Optional: !1,
        Category: "Starforged/Moves/Legacy",
        "Progress Move": !0,
        Display: { Title: "Continue a Legacy", Color: "#4D5769" },
        Trigger: {
          $id: "Starforged/Moves/Legacy/Continue_a_Legacy/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Legacy/Continue_a_Legacy/Trigger/Options/1",
              "Roll type": "Progress roll",
              Method: "All",
              Using: ["Quests Legacy", "Bonds Legacy", "Discoveries Legacy"]
            }
          ],
          Text: "When you retire from your life as Ironsworn, or succumb to death or desolation..."
        },
        Text: `**When you retire from your life as Ironsworn, or succumb to death or desolation**, you may create a new character in your established setting. If you do, roll the challenge dice and compare to each of the former character's legacy tracks: quests, bonds, and discoveries (one roll per track).

For each **strong hit**, choose one from below, or one from the weak hit or miss options.

  * Follow their path: Take one path or companion asset from the former character (at no cost), including any marked abilities.
  * Share a connection: Take one connection from the former character, including any accrued progress or bond benefits.
  * Accept an inheritance: Take the former character's command vehicle and one module or support vehicle (at no cost), including any marked abilities.

For each **weak hit**, choose one from below, or one from the miss options.

  * See it through: Choose one of the former character's unfinished quests, and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) (with an automatic strong hit) to see it done. You may immediately mark up to half their earned progress (round down) on this quest.
  * Rebuild a connection: Name one of the former character's connections, and envision how time or circumstances have changed them in a dramatic way. When you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) with them, take an automatic strong hit and mark two ticks on your bonds legacy track.
  * Explore familiar ground: Name a location that was meaningful to the former character. When you first visit that place, envision how it has changed or is endangered. Then, mark two ticks on your discoveries legacy track.

For each **miss**, choose one.

  * Deal with the aftermath: Envision how one of your former character's foes has gained power or influence.
  * Switch loyalties: Envision how you begin in opposition to your former character's beliefs, goals, or allegiances.
  * Open Pandora's Box: Envision how an advancement or discovery has unleashed unexpectedly dire consequences.`,
        Outcomes: {
          $id: "Starforged/Moves/Legacy/Continue_a_Legacy/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Legacy/Continue_a_Legacy/Outcomes/Strong_Hit",
            Text: `Choose one:

  * Follow their path: Take one path or companion asset from the former character (at no cost), including any marked abilities.
  * Share a connection: Take one connection from the former character, including any accrued progress or bond benefits.
  * Accept an inheritance: Take the former character's command vehicle and one module or support vehicle (at no cost), including any marked abilities.

Alternatively, you may choose a weak hit option:

  * See it through: Choose one of the former character's unfinished quests, and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) (with an automatic strong hit) to see it done. You may immediately mark up to half their earned progress (round down) on this quest.
  * Rebuild a connection: Name one of the former character's connections, and envision how time or circumstances have changed them in a dramatic way. When you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) with them, take an automatic strong hit and mark two ticks on your bonds legacy track.
  * Explore familiar ground: Name a location that was meaningful to the former character. When you first visit that place, envision how it has changed or is endangered. Then, mark two ticks on your discoveries legacy track.

Or a miss option:

  * Deal with the aftermath: Envision how one of your former character's foes has gained power or influence.
  * Switch loyalties: Envision how you begin in opposition to your former character's beliefs, goals, or allegiances.
  * Open Pandora's Box: Envision how an advancement or discovery has unleashed unexpectedly dire consequences.`
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Legacy/Continue_a_Legacy/Outcomes/Weak_Hit",
            Text: `Choose one:

  * See it through: Choose one of the former character's unfinished quests, and [Swear an Iron Vow](Starforged/Moves/Quest/Swear_an_Iron_Vow) (with an automatic strong hit) to see it done. You may immediately mark up to half their earned progress (round down) on this quest.
  * Rebuild a connection: Name one of the former character's connections, and envision how time or circumstances have changed them in a dramatic way. When you [Make a Connection](Starforged/Moves/Connection/Make_a_Connection) with them, take an automatic strong hit and mark two ticks on your bonds legacy track.
  * Explore familiar ground: Name a location that was meaningful to the former character. When you first visit that place, envision how it has changed or is endangered. Then, mark two ticks on your discoveries legacy track.

Alternatively, you may choose a miss option:

  * Deal with the aftermath: Envision how one of your former character's foes has gained power or influence.
  * Switch loyalties: Envision how you begin in opposition to your former character's beliefs, goals, or allegiances.
  * Open Pandora's Box: Envision how an advancement or discovery has unleashed unexpectedly dire consequences.`
          },
          Miss: {
            $id: "Starforged/Moves/Legacy/Continue_a_Legacy/Outcomes/Miss",
            Text: `Choose one:

  * Deal with the aftermath: Envision how one of your former character's foes has gained power or influence.
  * Switch loyalties: Envision how you begin in opposition to your former character's beliefs, goals, or allegiances.
  * Open Pandora's Box: Envision how an advancement or discovery has unleashed unexpectedly dire consequences.`
          }
        }
      }
    ],
    Display: { Title: "Legacy Moves", Color: "#4D5769" },
    Optional: !1
  },
  {
    $id: "Starforged/Moves/Fate",
    Name: "Fate",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 228
    },
    Description: "In solo and co-op play, the **fate moves** mediate the result of other moves or serve as inspirational prompts for your story. When you face the uncertain outcome of a move, want to know what happens next, or have a question about people, places, and events, these moves help reveal the answer.",
    Moves: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 229
        },
        $id: "Starforged/Moves/Fate/Ask_the_Oracle",
        Name: "Ask the Oracle",
        Optional: !1,
        Category: "Starforged/Moves/Fate",
        Display: { Title: "Ask the Oracle", Color: "#6B52EC" },
        Trigger: {
          $id: "Starforged/Moves/Fate/Ask_the_Oracle/Trigger",
          Text: "When you seek to resolve questions, reveal details, discover locations, determine how other characters respond, or trigger encounters or events..."
        },
        Text: `**When you seek to resolve questions, reveal details, discover locations, determine how other characters respond, or trigger encounters or events**, you may...

  * Draw a conclusion: Decide the answer based on the most interesting and obvious result.
  * Spark an idea: Use an oracle table or other random prompt.
  * Ask a yes/no question: Decide the odds of a yes, and roll on the table below to check the answer.
  * Pick two: Envision two options. Rate one as likely, and roll on the table below to see if it is true. If not, it is the other.

Odds           | The answer is yes if you roll...
---------------|---------------------------------
Small Chance   | 10 or less
Unlikely       | 25 or less
50/50          | 50 or less
Likely         | 75 or less
Almost Certain | 90 or less

On a match, envision an extreme result or twist.`,
        Oracles: [
          "Starforged/Oracles/Moves/Ask_the_Oracle/Small_Chance",
          "Starforged/Oracles/Moves/Ask_the_Oracle/Unlikely",
          "Starforged/Oracles/Moves/Ask_the_Oracle/Fifty-fifty",
          "Starforged/Oracles/Moves/Ask_the_Oracle/Likely",
          "Starforged/Oracles/Moves/Ask_the_Oracle/Almost_Certain"
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 232
        },
        $id: "Starforged/Moves/Fate/Pay_the_Price",
        Name: "Pay the Price",
        Optional: !1,
        Category: "Starforged/Moves/Fate",
        Display: { Title: "Pay the Price", Color: "#6B52EC" },
        Trigger: {
          $id: "Starforged/Moves/Fate/Pay_the_Price/Trigger",
          Text: "When you suffer the outcome of an action..."
        },
        Text: `**When you suffer the outcome of an action**, choose one.

  * Make the most obvious negative outcome happen.
  * [Ask the Oracle](Starforged/Moves/Fate/Ask_the_Oracle) for inspiration. Interpret the answer as a hardship or complication appropriate to the situation.
  * Roll on the table below. If the result doesn\u2019t fit the situation, roll again.

Roll   | Result
-------|---------------------------------------------------------------------
1-2    | A trusted individual or community acts against you
3-4    | An individual or community you care about is exposed to danger
5-7    | You encounter signs of a looming threat
8-10   | You create an opportunity for an enemy
11-14  | You face a tough choice
15-18  | You face the consequences of an earlier choice
19-22  | A surprising development complicates your quest
23-26  | You are separated from something or someone
27-32  | Your action causes collateral damage or has an unintended effect
33-38  | Something of value is lost or destroyed
39-44  | The environment or terrain introduces a new hazard
45-50  | A new enemy is revealed
51-56  | A friend, companion, or ally is in harm's way (or you are, if alone)
57-62  | Your equipment or vehicle malfunctions
63-68  | Your vehicle suffers damage
69-74  | You waste resources
75-81  | You are harmed
82-88  | You are stressed
89-95  | You are delayed or put at a disadvantage
96-100 | Roll twice`,
        Oracles: ["Starforged/Oracles/Moves/Pay_the_Price"]
      }
    ],
    Display: { Title: "Fate Moves", Color: "#6B52EC" },
    Optional: !1
  },
  {
    $id: "Starforged/Moves/Scene_Challenge",
    Name: "Scene Challenge",
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 239
    },
    Description: `A **scene challenge** is an optional structured approach for resolving an extended non-combat scene against a threat or other characters, particularly when a time limit or looming danger adds extra urgency.

Examples of a scene challenge include disarming a timed explosive, hacking a system while evading digital countermeasures, participating in a formal debate before a council, or competing in a hoverbike race.`,
    Moves: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 239
        },
        $id: "Starforged/Moves/Scene_Challenge/Begin_the_Scene",
        Name: "Begin the Scene",
        Optional: !1,
        Category: "Starforged/Moves/Scene_Challenge",
        Display: { Title: "Begin the Scene", Color: "#3C70A4" },
        Trigger: {
          $id: "Starforged/Moves/Scene_Challenge/Begin_the_Scene/Trigger",
          Text: "When you face an extended or complex challenge..."
        },
        Text: `**When you face an extended or complex challenge**, name your objective and choose a rank as appropriate to the situation.

  * You have a clear advantage: Troublesome
  * You are ready to act: Dangerous
  * You are unprepared or outmatched: Formidable

Then, activate a 4-segment tension clock and [Face Danger](Starforged/Moves/Scene_Challenge/Face_Danger) or [Secure an Advantage](Starforged/Moves/Scene_Challenge/Secure_an_Advantage) to take action.`
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 240
        },
        $id: "Starforged/Moves/Scene_Challenge/Face_Danger",
        Name: "Face Danger",
        Optional: !1,
        Category: "Starforged/Moves/Scene_Challenge",
        "Variant of": "Starforged/Moves/Adventure/Face_Danger",
        Display: {
          Title: "Face Danger (Scene Challenge)",
          Color: "#3C70A4"
        },
        Trigger: {
          $id: "Starforged/Moves/Scene_Challenge/Face_Danger/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Scene_Challenge/Face_Danger/Trigger/Options/1",
              Text: "With speed, mobility, or agility",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Edge"]
            },
            {
              $id: "Starforged/Moves/Scene_Challenge/Face_Danger/Trigger/Options/2",
              Text: "With resolve, command, or sociability",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            },
            {
              $id: "Starforged/Moves/Scene_Challenge/Face_Danger/Trigger/Options/3",
              Text: "With strength, endurance, or aggression",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Scene_Challenge/Face_Danger/Trigger/Options/4",
              Text: "With deception, stealth, or trickery",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Shadow"]
            },
            {
              $id: "Starforged/Moves/Scene_Challenge/Face_Danger/Trigger/Options/5",
              Text: "With expertise, focus, or observation",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you attempt something risky or react to an imminent threat within a scene challenge..."
        },
        Text: `**When you attempt something risky or react to an imminent threat within a scene challenge**, envision your action and roll. If you act...

  * With speed, mobility, or agility: Roll +edge
  * With resolve, command, or sociability: Roll +heart
  * With strength, endurance, or aggression: Roll +iron
  * With deception, stealth, or trickery: Roll +shadow
  * With expertise, focus, or observation: Roll +wits

On a **strong hit**, you are successful and mark progress. On a **strong hit with a match**, mark progress twice.

On a **weak hit**, you are successful and mark progress, but also encounter a complication or setback. Envision what occurs and fill a clock segment.

On a **miss**, you fail, or a momentary success is undermined by a dramatic turn of events. Fill a clock segment and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price). On a **miss with a match**, fill two segments and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Scene_Challenge/Face_Danger/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Scene_Challenge/Face_Danger/Outcomes/Strong_Hit",
            Text: "You are successful. Mark progress.",
            "With a Match": {
              $id: "Starforged/Moves/Scene_Challenge/Face_Danger/Outcomes/Strong_Hit/With_a_Match",
              Text: "You are successful. Mark progress twice."
            }
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Scene_Challenge/Face_Danger/Outcomes/Weak_Hit",
            Text: "You are successful and mark progress, but also encounter a complication or setback. Envision what occurs and fill a clock segment."
          },
          Miss: {
            $id: "Starforged/Moves/Scene_Challenge/Face_Danger/Outcomes/Miss",
            Text: "You fail, or a momentary success is undermined by a dramatic turn of events. Fill a clock segment and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
            "With a Match": {
              $id: "Starforged/Moves/Scene_Challenge/Face_Danger/Outcomes/Miss/With_a_Match",
              Text: "You fail, or a momentary success is undermined by a dramatic turn of events. Fill two clock segments and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
            }
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 240
        },
        $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage",
        Name: "Secure an Advantage",
        Optional: !1,
        Category: "Starforged/Moves/Scene_Challenge",
        "Variant of": "Starforged/Moves/Adventure/Secure_an_Advantage",
        Display: {
          Title: "Secure an Advantage (Scene Challenge)",
          Color: "#3C70A4"
        },
        Trigger: {
          $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage/Trigger/Options/1",
              Text: "With speed, mobility, or agility",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Edge"]
            },
            {
              $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage/Trigger/Options/2",
              Text: "With resolve, command, or sociability",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Heart"]
            },
            {
              $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage/Trigger/Options/3",
              Text: "With strength, endurance, aggression",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Iron"]
            },
            {
              $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage/Trigger/Options/4",
              Text: "With deception, stealth, or trickery",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Shadow"]
            },
            {
              $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage/Trigger/Options/5",
              Text: "With expertise, focus, or observation",
              "Roll type": "Action roll",
              Method: "Any",
              Using: ["Wits"]
            }
          ],
          Text: "When you assess a situation, make preparations, or attempt to gain leverage within a scene challenge..."
        },
        Text: `**When you assess a situation, make preparations, or attempt to gain leverage within a scene challenge**, envision your action and roll. If you act...

  * With speed, mobility, or agility: Roll +edge
  * With resolve, command, or sociability: Roll +heart
  * With strength, endurance, aggression: Roll +iron
  * With deception, stealth, or trickery: Roll +shadow
  * With expertise, focus, or observation: Roll +wits

On a **hit**, you are successful. On a **strong hit**, take both. On a **strong hit with a match**, take both and mark progress. On a **weak hit**, choose one.

  * Take +2 momentum
  * Add +1 on your next move (not a progress move)

On a **miss**, you fail or your assumptions betray you. Fill a clock segment and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price). On a **miss with a match**, fill two segments and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage/Outcomes/Strong_Hit",
            Text: "You are successful. Take +2 momentum and add +1 on your next move (not a progress move).",
            "With a Match": {
              $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage/Outcomes/Strong_Hit/With_a_Match",
              Text: "You are successful. Mark progress, take +2 momentum, and add +1 on your next move (not a progress move)."
            }
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage/Outcomes/Weak_Hit",
            Text: `You are successful. Choose one.

  * Take +2 momentum
  * Add +1 on your next move (not a progress move)`
          },
          Miss: {
            $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage/Outcomes/Miss",
            Text: "You fail or your assumptions betray you. Fill a clock segment and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).",
            "With a Match": {
              $id: "Starforged/Moves/Scene_Challenge/Secure_an_Advantage/Outcomes/Miss/With_a_Match",
              Text: "You fail or your assumptions betray you. Fill two clock segments and [Pay the Price](Starforged/Moves/Fate/Pay_the_Price)."
            }
          }
        }
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 241
        },
        $id: "Starforged/Moves/Scene_Challenge/Finish_the_Scene",
        Name: "Finish the Scene",
        Optional: !1,
        Category: "Starforged/Moves/Scene_Challenge",
        "Progress Move": !0,
        Display: { Title: "Finish the Scene", Color: "#3C70A4" },
        Trigger: {
          $id: "Starforged/Moves/Scene_Challenge/Finish_the_Scene/Trigger",
          Options: [
            {
              $id: "Starforged/Moves/Scene_Challenge/Finish_the_Scene/Trigger/Options/1",
              "Roll type": "Progress roll",
              Method: "Any",
              Using: ["Scene Challenge"]
            }
          ],
          Text: "When the scene challenge tension clock or progress track is filled, or when events lead to the scene\u2019s conclusion..."
        },
        Text: `**When the scene challenge tension clock or progress track is filled, or when events lead to the scene\u2019s conclusion**, roll the challenge dice and compare to your progress.

On a **strong hit**, you achieve your objective unconditionally.

On a **weak hit**, you succeed, but not without cost. You must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price). Make this a minor cost relative to the scope of the scene.

On a **miss**, you fail or are undermined by a dire and costly turn of events. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price).`,
        Outcomes: {
          $id: "Starforged/Moves/Scene_Challenge/Finish_the_Scene/Outcomes",
          "Strong Hit": {
            $id: "Starforged/Moves/Scene_Challenge/Finish_the_Scene/Outcomes/Strong_Hit",
            Text: "You achieve your objective unconditionally."
          },
          "Weak Hit": {
            $id: "Starforged/Moves/Scene_Challenge/Finish_the_Scene/Outcomes/Weak_Hit",
            Text: "You succeed, but not without cost. You must [Pay the Price](Starforged/Moves/Fate/Pay_the_Price). Make this a minor cost relative to the scope of the scene."
          },
          Miss: {
            $id: "Starforged/Moves/Scene_Challenge/Finish_the_Scene/Outcomes/Miss",
            Text: "You fail, or are undermined by a dramatic and costly turn of events. [Pay the Price](Starforged/Moves/Fate/Pay_the_Price). Make it hurt."
          }
        }
      }
    ],
    Display: { Title: "Scene Challenge Moves", Color: "#3C70A4" },
    Optional: !1
  }
], Oracle_Categories = [
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Oracles/Character_Creation",
    Name: "Character Creation",
    Aliases: ["Creation"],
    Display: { Title: "Character Creation" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 105
        },
        $id: "Starforged/Oracles/Character_Creation/Background_Assets",
        Name: "Background Assets",
        Category: "Starforged/Oracles/Character_Creation",
        Description: "If you want some direction for your starting paths, roll or pick from the table below and take the two paths associated with your selected background.",
        Display: {
          Title: "Background Assets",
          Table: {
            "Result columns": [
              {
                Label: "Background",
                "Use content from": "Starforged/Oracles/Character_Creation/Background_Assets",
                Key: "Result"
              },
              {
                Label: "Assets",
                "Use content from": "Starforged/Oracles/Character_Creation/Background_Assets",
                Key: "Summary"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Character_Creation/Background_Assets"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["noun", "common noun"],
          Tags: ["actor"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/1-5",
            Floor: 1,
            Ceiling: 5,
            Result: "Battlefield Medic",
            Summary: "HEALER; VETERAN",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Healer",
                "Starforged/Assets/Path/Veteran"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/6-10",
            Floor: 6,
            Ceiling: 10,
            Result: "Delegate",
            Summary: "BANNERSWORN; DIPLOMAT",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Bannersworn",
                "Starforged/Assets/Path/Diplomat"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/11-15",
            Floor: 11,
            Ceiling: 15,
            Result: "Exobiologist",
            Summary: "LORE HUNTER; NATURALIST",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Lore Hunter",
                "Starforged/Assets/Path/Naturalist"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/16-20",
            Floor: 16,
            Ceiling: 20,
            Result: "Far Trader",
            Summary: "NAVIGATOR; TRADER",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Navigator",
                "Starforged/Assets/Path/Trader"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/21-25",
            Floor: 21,
            Ceiling: 25,
            Result: "Fugitive Hunter",
            Summary: "ARMORED; BOUNTY HUNTER",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Armored",
                "Starforged/Assets/Path/Bounty_Hunter"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/26-30",
            Floor: 26,
            Ceiling: 30,
            Result: "Hacker",
            Summary: "INFILTRATOR; TECH",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Infiltrator",
                "Starforged/Assets/Path/Tech"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/31-35",
            Floor: 31,
            Ceiling: 35,
            Result: "Hotshot Pilot",
            Summary: "ACE; NAVIGATOR",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Ace",
                "Starforged/Assets/Path/Navigator"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/36-40",
            Floor: 36,
            Ceiling: 40,
            Result: "Interstellar Scout",
            Summary: "EXPLORER; VOIDBORN",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Explorer",
                "Starforged/Assets/Path/Voidborn"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/41-45",
            Floor: 41,
            Ceiling: 45,
            Result: "Monster Hunter",
            Summary: "GUNNER; SLAYER",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Gunner",
                "Starforged/Assets/Path/Slayer"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/46-50",
            Floor: 46,
            Ceiling: 50,
            Result: "Occultist",
            Summary: "OUTCAST; SHADE",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Outcast",
                "Starforged/Assets/Path/Shade"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/51-55",
            Floor: 51,
            Ceiling: 55,
            Result: "Operative",
            Summary: "INFILTRATOR; BLADEMASTER",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Infiltrator",
                "Starforged/Assets/Path/Blademaster"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/56-60",
            Floor: 56,
            Ceiling: 60,
            Result: "Outlaw",
            Summary: "FUGITIVE; GUNSLINGER",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Fugitive",
                "Starforged/Assets/Path/Gunslinger"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/61-65",
            Floor: 61,
            Ceiling: 65,
            Result: "Private Investigator",
            Summary: "BRAWLER; SLEUTH",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Brawler",
                "Starforged/Assets/Path/Sleuth"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/66-70",
            Floor: 66,
            Ceiling: 70,
            Result: "Prophet",
            Summary: "DEVOTANT; SEER",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Devotant",
                "Starforged/Assets/Path/Seer"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/71-75",
            Floor: 71,
            Ceiling: 75,
            Result: "Psionicist",
            Summary: "KINETIC; VESTIGE",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Kinetic",
                "Starforged/Assets/Path/Vestige"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/76-80",
            Floor: 76,
            Ceiling: 80,
            Result: "Smuggler",
            Summary: "COURIER; SCOUNDREL",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Courier",
                "Starforged/Assets/Path/Scoundrel"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/81-85",
            Floor: 81,
            Ceiling: 85,
            Result: "Spiritualist",
            Summary: "HAUNTED; EMPATH",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Haunted",
                "Starforged/Assets/Path/Empath"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/86-90",
            Floor: 86,
            Ceiling: 90,
            Result: "Starship Engineer",
            Summary: "GEARHEAD; TECH",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Gearhead",
                "Starforged/Assets/Path/Tech"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/91-95",
            Floor: 91,
            Ceiling: 95,
            Result: "Supersoldier",
            Summary: "AUGMENTED; MERCENARY",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Augmented",
                "Starforged/Assets/Path/Mercenary"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Background_Assets/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Tomb Raider",
            Summary: "SCAVENGER; SCOUNDREL",
            Suggestions: {
              Assets: [
                "Starforged/Assets/Path/Scavenger",
                "Starforged/Assets/Path/Scoundrel"
              ]
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 106
        },
        $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts",
        Name: "Backstory Prompts",
        Category: "Starforged/Oracles/Character_Creation",
        Description: "For some backstory inspiration, roll or pick from the table below. Then, take a moment to elaborate on the suggestion. Or just leave it a bit vague and mysterious for now; you can flesh it out in play.",
        Display: {
          Title: "Backstory Prompts",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Character_Creation/Backstory_Prompts",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Character_Creation/Backstory_Prompts"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["event", "past"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/1-7",
            Floor: 1,
            Ceiling: 7,
            Result: "You abandoned your kin after learning a troubling truth"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/8-13",
            Floor: 8,
            Ceiling: 13,
            Result: "You are guided by a vision or prophecy"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/14-20",
            Floor: 14,
            Ceiling: 20,
            Result: "You are haunted by past actions or failures"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/21-27",
            Floor: 21,
            Ceiling: 27,
            Result: "You are running from a criminal past"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/28-34",
            Floor: 28,
            Ceiling: 34,
            Result: "You are the sole survivor of an attack or calamity"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/35-40",
            Floor: 35,
            Ceiling: 40,
            Result: "You escaped an abusive or unjust situation"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/41-46",
            Floor: 41,
            Ceiling: 46,
            Result: "You have no memory of your former life"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/47-53",
            Floor: 47,
            Ceiling: 53,
            Result: "You rejected a duty or destiny"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/54-60",
            Floor: 54,
            Ceiling: 60,
            Result: "You were banished from your former home"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/61-67",
            Floor: 61,
            Ceiling: 67,
            Result: "You were denied a birthright"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/68-74",
            Floor: 68,
            Ceiling: 74,
            Result: "You were on your own for as long as you can remember"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/75-81",
            Floor: 75,
            Ceiling: 81,
            Result: "You were sent away on a prolonged mission"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/82-87",
            Floor: 82,
            Ceiling: 87,
            Result: "You were taken or lured away by someone"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/88-94",
            Floor: 88,
            Ceiling: 94,
            Result: "Your ambitions outgrew your humble origins"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Backstory_Prompts/95-100",
            Floor: 95,
            Ceiling: 100,
            Result: "Your wanderlust carried you far away"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 108
        },
        $id: "Starforged/Oracles/Character_Creation/Starship_History",
        Name: "Starship History",
        Category: "Starforged/Oracles/Character_Creation",
        Description: "Envision how you obtained or earned this ship. You can come up with your own origin, or roll or pick from the table below. If you use a result from the table, take a moment to consider and elaborate on the suggestion.",
        Display: {
          Title: "Starship History",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Character_Creation/Starship_History",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Character_Creation/Starship_History"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["event", "past"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_History/1-8",
            Floor: 1,
            Ceiling: 8,
            Result: "Acquired in trade for a precious family heirloom"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_History/9-17",
            Floor: 9,
            Ceiling: 17,
            Result: "Built out of repurposed scrap"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_History/18-25",
            Floor: 18,
            Ceiling: 25,
            Result: "Claimed as spoils of war"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_History/26-34",
            Floor: 26,
            Ceiling: 34,
            Result: "Discovered as a derelict, and patched back together"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_History/35-42",
            Floor: 35,
            Ceiling: 42,
            Result: "Earned in exchange for a promise or vow"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_History/43-50",
            Floor: 43,
            Ceiling: 50,
            Result: "Found abandoned in perfect condition"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_History/51-58",
            Floor: 51,
            Ceiling: 58,
            Result: "Granted by an organization or community"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_History/59-67",
            Floor: 59,
            Ceiling: 67,
            Result: "Inherited from a relative or mentor"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_History/68-75",
            Floor: 68,
            Ceiling: 75,
            Result: "Purchased at a suspiciously cheap price"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_History/76-84",
            Floor: 76,
            Ceiling: 84,
            Result: "Stolen from a notorious crime boss or criminal organization"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_History/85-92",
            Floor: 85,
            Ceiling: 92,
            Result: "Taken while fleeing an attack or disaster"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_History/93-100",
            Floor: 93,
            Ceiling: 100,
            Result: "Won in a bet"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 109
        },
        $id: "Starforged/Oracles/Character_Creation/Starship_Quirks",
        Name: "Starship Quirks",
        Category: "Starforged/Oracles/Character_Creation",
        Description: "Your ship is an important aspect of your character\u2014and a character in its own right. What does it look like? What makes it interesting or uniquely yours? Does it have any particular quirks? If nothing occurs to you now, you can flesh it out in play, or roll once or twice on the table below.",
        Display: {
          Title: "Starship Quirks",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Character_Creation/Starship_Quirks",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Character_Creation/Starship_Quirks"
              }
            ]
          }
        },
        Usage: { "Max rolls": 2, "Allow duplicates": !1 },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["description"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/1-5",
            Floor: 1,
            Ceiling: 5,
            Result: "Engine room is scorched with old burn marks"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/6-10",
            Floor: 6,
            Ceiling: 10,
            Result: "Exterior is marred by rust and grime"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/11-15",
            Floor: 11,
            Ceiling: 15,
            Result: "Faint, phantom music sometimes echoes through the corridors"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/16-20",
            Floor: 16,
            Ceiling: 20,
            Result: "Gravity generator is notoriously fickle"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/21-25",
            Floor: 21,
            Ceiling: 25,
            Result: "Hull is fused with organic growths"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/26-30",
            Floor: 26,
            Ceiling: 30,
            Result: "Hull rattles and groans in atmospheric flight"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/31-35",
            Floor: 31,
            Ceiling: 35,
            Result: "Interior spaces are crowded with exposed cables and conduits"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/36-40",
            Floor: 36,
            Ceiling: 40,
            Result: "Looks defenseless, but exterior panels open to reveal weapons"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/41-45",
            Floor: 41,
            Ceiling: 45,
            Result: "Navigation logs contain coordinates to locations that do not\u2014or should not\u2014exist"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/46-50",
            Floor: 46,
            Ceiling: 50,
            Result: "Old bloodstain in the airlock reappears even when painted over"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/51-55",
            Floor: 51,
            Ceiling: 55,
            Result: "Once a beautiful ship, now scarred by a devastating battle"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/56-60",
            Floor: 56,
            Ceiling: 60,
            Result: "Patched hull covers a recent catastrophic breach"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/61-65",
            Floor: 61,
            Ceiling: 65,
            Result: "Placards and control labels are in an uncommon language"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/66-70",
            Floor: 66,
            Ceiling: 70,
            Result: "Removable plate decks provide access to hidden storage"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/71-75",
            Floor: 71,
            Ceiling: 75,
            Result: "Segmented landing gear unfold like gangly spider legs"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/76-80",
            Floor: 76,
            Ceiling: 80,
            Result: "Ship is powered by an ancient precursor device"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/81-85",
            Floor: 81,
            Ceiling: 85,
            Result: "Someone marked the hull with graffiti during a recent layover"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/86-90",
            Floor: 86,
            Ceiling: 90,
            Result: "Strange symbols are scrawled on the deck and bulkheads in the main corridor"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/91-95",
            Floor: 91,
            Ceiling: 95,
            Result: "Things tend to go missing for no logical reason"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Starship_Quirks/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Timers and clocks are always just a bit off"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 126
        },
        $id: "Starforged/Oracles/Character_Creation/Sector_Trouble",
        Name: "Sector Trouble",
        Category: "Starforged/Oracles/Character_Creation",
        Display: {
          Title: "Sector Trouble",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Character_Creation/Sector_Trouble",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Character_Creation/Sector_Trouble"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["peril", "event", "present"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/1-5",
            Floor: 1,
            Ceiling: 5,
            Result: "Blockade prevents trade with other sectors"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/6-10",
            Floor: 6,
            Ceiling: 10,
            Result: "Bounty hunters search for an infamous fugitive",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/11-15",
            Floor: 11,
            Ceiling: 15,
            Result: "Chaotic breaches in spacetime spread like wildfire"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/16-20",
            Floor: 16,
            Ceiling: 20,
            Result: "Criminal faction corrupts local authorities",
            Suggestions: {
              "Game objects": [
                {
                  "Object type": "Faction",
                  Requires: {
                    Attributes: [
                      { Key: "Faction Type", Values: ["Fringe Group"] }
                    ]
                  }
                }
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/21-25",
            Floor: 21,
            Ceiling: 25,
            Result: "Devastating superweapon has fallen into the wrong hands",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/26-30",
            Floor: 26,
            Ceiling: 30,
            Result: "Energy storms are rampant"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/31-35",
            Floor: 31,
            Ceiling: 35,
            Result: "Magnetic disturbances disrupt communication"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/36-40",
            Floor: 36,
            Ceiling: 40,
            Result: "Newly found resource lures greedy fortune hunters to the sector",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/41-45",
            Floor: 41,
            Ceiling: 45,
            Result: "Notorious pirate clan preys on starships",
            Suggestions: {
              "Game objects": [
                {
                  "Object type": "Faction",
                  Requires: {
                    Attributes: [
                      { Key: "Faction Type", Values: ["Fringe Group"] }
                    ]
                  }
                }
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/46-50",
            Floor: 46,
            Ceiling: 50,
            Result: "Parasitic lifeforms spread like a plague",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/51-55",
            Floor: 51,
            Ceiling: 55,
            Result: "Precursor sites throughout the sector emit strange signals",
            Suggestions: {
              "Game objects": [{ "Object type": "Precursor Vault" }]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/56-60",
            Floor: 56,
            Ceiling: 60,
            Result: "Prophecies foretell an imminent awakening of a dreadful power"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/61-65",
            Floor: 61,
            Ceiling: 65,
            Result: "Raider clan emerges as a dominant threat under a new leader",
            Suggestions: {
              "Game objects": [
                {
                  "Object type": "Faction",
                  Requires: {
                    Attributes: [
                      { Key: "Faction Type", Values: ["Fringe Group"] }
                    ]
                  }
                }
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/66-70",
            Floor: 66,
            Ceiling: 70,
            Result: "Religious zealots overrun the sector",
            Suggestions: {
              "Game objects": [
                {
                  "Object type": "Faction",
                  Requires: {
                    Attributes: [
                      { Key: "Faction Type", Values: ["Fringe Group"] }
                    ]
                  }
                }
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/71-75",
            Floor: 71,
            Ceiling: 75,
            Result: "Rogue AI infiltrates systems throughout the sector",
            Suggestions: {
              "Game objects": [
                {
                  "Object type": "Faction",
                  Requires: {
                    Attributes: [
                      { Key: "Faction Type", Values: ["Fringe Group"] }
                    ]
                  }
                }
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/76-80",
            Floor: 76,
            Ceiling: 80,
            Result: "Settlements or factions are on the brink of war",
            Suggestions: { "Game objects": [{ "Object type": "Faction" }] }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/81-85",
            Floor: 81,
            Ceiling: 85,
            Result: "Ships regularly go missing",
            Suggestions: { "Game objects": [{ "Object type": "Starship" }] }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/86-90",
            Floor: 86,
            Ceiling: 90,
            Result: "Sickness spreads among ships and settlements",
            Suggestions: {
              "Game objects": [{ "Object type": "Settlement" }]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/91-95",
            Floor: 91,
            Ceiling: 95,
            Result: "Supernova is imminent"
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Sector_Trouble/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Titanic spaceborne lifeform stalks the spaceways",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 130
        },
        $id: "Starforged/Oracles/Character_Creation/Inciting_Incident",
        Name: "Inciting Incident",
        Category: "Starforged/Oracles/Character_Creation",
        Display: {
          Title: "Inciting Incident",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Character_Creation/Inciting_Incident",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Character_Creation/Inciting_Incident"
              }
            ]
          }
        },
        Content: { "Part of speech": ["fragment"], Tags: ["objective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/1-5",
            Floor: 1,
            Ceiling: 5,
            Result: "Aid a starship caught in a spacetime fracture",
            Suggestions: { "Game objects": [{ "Object type": "Starship" }] }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/6-10",
            Floor: 6,
            Ceiling: 10,
            Result: "Broker peace between two feuding settlements",
            Suggestions: {
              "Game objects": [{ "Object type": "Settlement" }]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/11-15",
            Floor: 11,
            Ceiling: 15,
            Result: "Chart a new passage between isolated settlements",
            Suggestions: {
              "Game objects": [{ "Object type": "Settlement" }]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/16-20",
            Floor: 16,
            Ceiling: 20,
            Result: "Defend the people of a beleaguered settlement against raiders",
            Suggestions: {
              "Game objects": [{ "Object type": "Settlement" }]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/21-25",
            Floor: 21,
            Ceiling: 25,
            Result: "Discover who sabotaged a settlement's air processors",
            Suggestions: {
              "Game objects": [{ "Object type": "Settlement" }]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/26-30",
            Floor: 26,
            Ceiling: 30,
            Result: "Escort a tradeship carrying a prized cargo",
            Suggestions: {
              "Game objects": [{ "Object type": "Starship" }],
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/31-35",
            Floor: 31,
            Ceiling: 35,
            Result: "Ferry a rescue team to a perilous disaster site",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Space/Sighting/Terminus",
                "Starforged/Oracles/Space/Sighting/Outlands",
                "Starforged/Oracles/Space/Sighting/Expanse"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/36-40",
            Floor: 36,
            Ceiling: 40,
            Result: "Infiltrate a fortified base to steal crucial data",
            Suggestions: {
              "Game objects": [{ "Object type": "Faction" }],
              "Oracle rolls": [
                "Starforged/Oracles/Location_Themes/Fortified/Peril",
                "Starforged/Oracles/Location_Themes/Fortified/Opportunity",
                "Starforged/Oracles/Location_Themes/Fortified/Feature"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/41-45",
            Floor: 41,
            Ceiling: 45,
            Result: "Investigate terrifying manifestations at a remote settlement",
            Suggestions: {
              "Game objects": [{ "Object type": "Settlement" }],
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/46-50",
            Floor: 46,
            Ceiling: 50,
            Result: "Liberate prisoners at a cruel labor camp",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Space/Sighting/Terminus",
                "Starforged/Oracles/Space/Sighting/Outlands",
                "Starforged/Oracles/Space/Sighting/Expanse"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/51-55",
            Floor: 51,
            Ceiling: 55,
            Result: "Locate a downed spacer on an uninhabited planet",
            Suggestions: { "Game objects": [{ "Object type": "Planet" }] }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/56-60",
            Floor: 56,
            Ceiling: 60,
            Result: "Protect a fugitive from a relentless bounty hunter",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/61-65",
            Floor: 61,
            Ceiling: 65,
            Result: "Recover a cherished pre-exodus artifact from an enemy",
            Suggestions: {
              "Game objects": [{ "Object type": "Faction" }],
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/66-70",
            Floor: 66,
            Ceiling: 70,
            Result: "Rescue a starship crew held captive by mutineers",
            Suggestions: { "Game objects": [{ "Object type": "Starship" }] }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/71-75",
            Floor: 71,
            Ceiling: 75,
            Result: "Retrieve a cache of stolen weapons from a pirate ship",
            Suggestions: { "Game objects": [{ "Object type": "Faction" }] }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/76-80",
            Floor: 76,
            Ceiling: 80,
            Result: "Sabotage an enemy installation",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Location_Themes/Fortified/Peril",
                "Starforged/Oracles/Location_Themes/Fortified/Opportunity",
                "Starforged/Oracles/Location_Themes/Fortified/Feature"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/81-85",
            Floor: 81,
            Ceiling: 85,
            Result: "Search for a missing expedition in the depths of a precursor vault",
            Suggestions: {
              "Game objects": [{ "Object type": "Precursor Vault" }]
            }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/86-90",
            Floor: 86,
            Ceiling: 90,
            Result: "Shield a wondrous lifeform from those who seek to destroy it",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/91-95",
            Floor: 91,
            Ceiling: 95,
            Result: "Track and slay a marauding beast",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Character_Creation/Inciting_Incident/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Transport a displaced people to their new home",
            Suggestions: {
              "Game objects": [{ "Object type": "Faction" }],
              "Oracle rolls": [
                "Starforged/Oracles/Space/Sighting/Terminus",
                "Starforged/Oracles/Space/Sighting/Outlands",
                "Starforged/Oracles/Space/Sighting/Expanse"
              ]
            }
          }
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Oracles/Characters",
    Name: "Characters",
    Aliases: ["NPC"],
    Description: "Don\u2019t try to build a fully formed understanding character when you first encounter them; instead, focus on what your character learns or perceives as a first impression using oracles such as First Look and Initial Disposition. Then envision or generate additional details over time.",
    Display: { Title: "Characters" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 330
        },
        $id: "Starforged/Oracles/Characters/First_Look",
        Name: "First Look",
        Category: "Starforged/Oracles/Characters",
        Display: {
          Title: "First Look",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Characters/First_Look",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Characters/First_Look"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Max rolls": 2,
          "Allow duplicates": !1
        },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Characters/First_Look/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Accented"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/4-6",
            Floor: 4,
            Ceiling: 6,
            Result: "Accompanied"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/7-8",
            Floor: 7,
            Ceiling: 8,
            Result: "Adorned"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/9-11",
            Floor: 9,
            Ceiling: 11,
            Result: "Aged"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/12-13",
            Floor: 12,
            Ceiling: 13,
            Result: "Alluring"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/14-15",
            Floor: 14,
            Ceiling: 15,
            Result: "Armed"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/16-17",
            Floor: 16,
            Ceiling: 17,
            Result: "Armored"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/18-20",
            Floor: 18,
            Ceiling: 20,
            Result: "Athletic"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/21-23",
            Floor: 21,
            Ceiling: 23,
            Result: "Attractive"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/24-25",
            Floor: 24,
            Ceiling: 25,
            Result: "Augmented"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/26-27",
            Floor: 26,
            Ceiling: 27,
            Result: "Concealed"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/28-30",
            Floor: 28,
            Ceiling: 30,
            Result: "Distracted"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/31-33",
            Floor: 31,
            Ceiling: 33,
            Result: "Eccentric"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/34-35",
            Floor: 34,
            Ceiling: 35,
            Result: "Energetic"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/36-37",
            Floor: 36,
            Ceiling: 37,
            Result: "Flashy"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/38-40",
            Floor: 38,
            Ceiling: 40,
            Result: "Graceful"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/41-43",
            Floor: 41,
            Ceiling: 43,
            Result: "Grim"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/44-46",
            Floor: 44,
            Ceiling: 46,
            Result: "Haggard"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/47-49",
            Floor: 47,
            Ceiling: 49,
            Result: "Ill-equipped"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/50-52",
            Floor: 50,
            Ceiling: 52,
            Result: "Imposing"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/53-55",
            Floor: 53,
            Ceiling: 55,
            Result: "Large"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/56-57",
            Floor: 56,
            Ceiling: 57,
            Result: "Mutated"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/58-60",
            Floor: 58,
            Ceiling: 60,
            Result: "Plain"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/61-62",
            Floor: 61,
            Ceiling: 62,
            Result: "Poised"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/63-65",
            Floor: 63,
            Ceiling: 65,
            Result: "Scarred"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/66-68",
            Floor: 66,
            Ceiling: 68,
            Result: "Scruffy"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/69-71",
            Floor: 69,
            Ceiling: 71,
            Result: "Shifty"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/72-73",
            Floor: 72,
            Ceiling: 73,
            Result: "Sickly"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/74-76",
            Floor: 74,
            Ceiling: 76,
            Result: "Slight"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/77-78",
            Floor: 77,
            Ceiling: 78,
            Result: "Swaggering"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/79-81",
            Floor: 79,
            Ceiling: 81,
            Result: "Tattooed"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/82-83",
            Floor: 82,
            Ceiling: 83,
            Result: "Threatened"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/84-85",
            Floor: 84,
            Ceiling: 85,
            Result: "Uncanny"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/86-87",
            Floor: 86,
            Ceiling: 87,
            Result: "Visibly disabled"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/88-90",
            Floor: 88,
            Ceiling: 90,
            Result: "Weathered"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/91-92",
            Floor: 91,
            Ceiling: 92,
            Result: "Well-equipped"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/93-95",
            Floor: 93,
            Ceiling: 95,
            Result: "Wiry"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/96-97",
            Floor: 96,
            Ceiling: 97,
            Result: "Wounded"
          },
          {
            $id: "Starforged/Oracles/Characters/First_Look/98-100",
            Floor: 98,
            Ceiling: 100,
            Result: "Youthful"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 330
        },
        $id: "Starforged/Oracles/Characters/Disposition",
        Name: "Disposition",
        Category: "Starforged/Oracles/Characters",
        Display: {
          Title: "Initial Disposition",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Characters/Disposition",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Characters/Disposition"
              }
            ]
          }
        },
        Usage: { Initial: !0, "Allow duplicates": !1 },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Characters/Disposition/1-6",
            Floor: 1,
            Ceiling: 6,
            Result: "Helpful"
          },
          {
            $id: "Starforged/Oracles/Characters/Disposition/7-14",
            Floor: 7,
            Ceiling: 14,
            Result: "Friendly"
          },
          {
            $id: "Starforged/Oracles/Characters/Disposition/15-22",
            Floor: 15,
            Ceiling: 22,
            Result: "Cooperative"
          },
          {
            $id: "Starforged/Oracles/Characters/Disposition/23-30",
            Floor: 23,
            Ceiling: 30,
            Result: "Curious"
          },
          {
            $id: "Starforged/Oracles/Characters/Disposition/31-40",
            Floor: 31,
            Ceiling: 40,
            Result: "Indifferent"
          },
          {
            $id: "Starforged/Oracles/Characters/Disposition/41-50",
            Floor: 41,
            Ceiling: 50,
            Result: "Suspicious"
          },
          {
            $id: "Starforged/Oracles/Characters/Disposition/51-60",
            Floor: 51,
            Ceiling: 60,
            Result: "Wanting"
          },
          {
            $id: "Starforged/Oracles/Characters/Disposition/61-70",
            Floor: 61,
            Ceiling: 70,
            Result: "Desperate"
          },
          {
            $id: "Starforged/Oracles/Characters/Disposition/71-78",
            Floor: 71,
            Ceiling: 78,
            Result: "Demanding"
          },
          {
            $id: "Starforged/Oracles/Characters/Disposition/79-86",
            Floor: 79,
            Ceiling: 86,
            Result: "Unfriendly"
          },
          {
            $id: "Starforged/Oracles/Characters/Disposition/87-94",
            Floor: 87,
            Ceiling: 94,
            Result: "Threatening"
          },
          {
            $id: "Starforged/Oracles/Characters/Disposition/95-100",
            Floor: 95,
            Ceiling: 100,
            Result: "Hostile"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 331
        },
        $id: "Starforged/Oracles/Characters/Role",
        Name: "Role",
        Category: "Starforged/Oracles/Characters",
        Display: {
          Title: "Character Role",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Characters/Role",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Characters/Role"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["noun", "common noun"],
          Tags: ["people", "actor"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Characters/Role/1-2",
            Floor: 1,
            Ceiling: 2,
            Result: "Agent"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/3-4",
            Floor: 3,
            Ceiling: 4,
            Result: "AI"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/5-6",
            Floor: 5,
            Ceiling: 6,
            Result: "Artisan"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/7-8",
            Floor: 7,
            Ceiling: 8,
            Result: "Assassin"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/9-10",
            Floor: 9,
            Ceiling: 10,
            Result: "Bounty Hunter"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/11-12",
            Floor: 11,
            Ceiling: 12,
            Result: "Courier"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/13-14",
            Floor: 13,
            Ceiling: 14,
            Result: "Crew"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/15-16",
            Floor: 15,
            Ceiling: 16,
            Result: "Criminal"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/17-18",
            Floor: 17,
            Ceiling: 18,
            Result: "Cultist"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/19-20",
            Floor: 19,
            Ceiling: 20,
            Result: "Diplomat"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/21-22",
            Floor: 21,
            Ceiling: 22,
            Result: "Engineer"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/23-24",
            Floor: 23,
            Ceiling: 24,
            Result: "Entertainer"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/25-26",
            Floor: 25,
            Ceiling: 26,
            Result: "Explorer"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/27-28",
            Floor: 27,
            Ceiling: 28,
            Result: "Farmer"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/29-30",
            Floor: 29,
            Ceiling: 30,
            Result: "Fugitive"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/31-32",
            Floor: 31,
            Ceiling: 32,
            Result: "Guard"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/33-34",
            Floor: 33,
            Ceiling: 34,
            Result: "Guide"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/35-36",
            Floor: 35,
            Ceiling: 36,
            Result: "Healer"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/37-38",
            Floor: 37,
            Ceiling: 38,
            Result: "Historian"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/39-40",
            Floor: 39,
            Ceiling: 40,
            Result: "Hunter"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/41-42",
            Floor: 41,
            Ceiling: 42,
            Result: "Investigator"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/43-44",
            Floor: 43,
            Ceiling: 44,
            Result: "Laborer"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/45-46",
            Floor: 45,
            Ceiling: 46,
            Result: "Lawkeeper"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/47-48",
            Floor: 47,
            Ceiling: 48,
            Result: "Leader"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/49-50",
            Floor: 49,
            Ceiling: 50,
            Result: "Mercenary"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/51-52",
            Floor: 51,
            Ceiling: 52,
            Result: "Merchant"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/53-54",
            Floor: 53,
            Ceiling: 54,
            Result: "Miner"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/55-56",
            Floor: 55,
            Ceiling: 56,
            Result: "Mystic"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/57-58",
            Floor: 57,
            Ceiling: 58,
            Result: "Navigator"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/59-60",
            Floor: 59,
            Ceiling: 60,
            Result: "Outcast"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/61-62",
            Floor: 61,
            Ceiling: 62,
            Result: "Pilgrim"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/63-64",
            Floor: 63,
            Ceiling: 64,
            Result: "Pilot"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/65-66",
            Floor: 65,
            Ceiling: 66,
            Result: "Pirate"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/67-68",
            Floor: 67,
            Ceiling: 68,
            Result: "Preacher"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/69-70",
            Floor: 69,
            Ceiling: 70,
            Result: "Prophet"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/71-72",
            Floor: 71,
            Ceiling: 72,
            Result: "Raider"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/73-74",
            Floor: 73,
            Ceiling: 74,
            Result: "Researcher"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/75-76",
            Floor: 75,
            Ceiling: 76,
            Result: "Scavenger"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/77-78",
            Floor: 77,
            Ceiling: 78,
            Result: "Scholar"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/79-80",
            Floor: 79,
            Ceiling: 80,
            Result: "Scout"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/81-82",
            Floor: 81,
            Ceiling: 82,
            Result: "Shipwright"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/83-84",
            Floor: 83,
            Ceiling: 84,
            Result: "Smuggler"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/85-86",
            Floor: 85,
            Ceiling: 86,
            Result: "Soldier"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/87-88",
            Floor: 87,
            Ceiling: 88,
            Result: "Spacer"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/89-90",
            Floor: 89,
            Ceiling: 90,
            Result: "Technician"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/91-92",
            Floor: 91,
            Ceiling: 92,
            Result: "Thief"
          },
          {
            $id: "Starforged/Oracles/Characters/Role/93-95",
            Floor: 93,
            Ceiling: 95,
            Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Action",
              "Starforged/Oracles/Core/Theme"
            ]
          },
          {
            $id: "Starforged/Oracles/Characters/Role/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 331
        },
        $id: "Starforged/Oracles/Characters/Goal",
        Name: "Goal",
        Category: "Starforged/Oracles/Characters",
        Display: {
          Title: "Character Goal",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Characters/Goal",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Characters/Goal"
              }
            ]
          }
        },
        Content: { "Part of speech": ["fragment"], Tags: ["objective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Characters/Goal/1-2",
            Floor: 1,
            Ceiling: 2,
            Result: "Avenge a wrong",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/3-4",
            Floor: 3,
            Ceiling: 4,
            Result: "Build a home"
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/5-7",
            Floor: 5,
            Ceiling: 7,
            Result: "Build a relationship",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/8-10",
            Floor: 8,
            Ceiling: 10,
            Result: "Claim a resource",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/11-12",
            Floor: 11,
            Ceiling: 12,
            Result: "Collect a debt"
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/13-14",
            Floor: 13,
            Ceiling: 14,
            Result: "Craft an object",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/15-16",
            Floor: 15,
            Ceiling: 16,
            Result: "Cure an ill"
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/17-18",
            Floor: 17,
            Ceiling: 18,
            Result: "Defeat a rival",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/19-20",
            Floor: 19,
            Ceiling: 20,
            Result: "Defend a person",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/21-23",
            Floor: 21,
            Ceiling: 23,
            Result: "Defend a place",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Space/Sighting/Terminus",
                "Starforged/Oracles/Space/Sighting/Outlands",
                "Starforged/Oracles/Space/Sighting/Expanse"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/24-25",
            Floor: 24,
            Ceiling: 25,
            Result: "Discover a truth",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/26-27",
            Floor: 26,
            Ceiling: 27,
            Result: "End a conflict",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/28-29",
            Floor: 28,
            Ceiling: 29,
            Result: "Escape a captor"
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/30-31",
            Floor: 30,
            Ceiling: 31,
            Result: "Fight injustice"
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/32-33",
            Floor: 32,
            Ceiling: 33,
            Result: "Find a person",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/34-35",
            Floor: 34,
            Ceiling: 35,
            Result: "Forge an alliance",
            Suggestions: { "Game objects": [{ "Object type": "Faction" }] }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/36-37",
            Floor: 36,
            Ceiling: 37,
            Result: "Gain knowledge",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/38-39",
            Floor: 38,
            Ceiling: 39,
            Result: "Gain riches"
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/40-41",
            Floor: 40,
            Ceiling: 41,
            Result: "Maintain order"
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/42-43",
            Floor: 42,
            Ceiling: 43,
            Result: "Make an agreement",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/44-45",
            Floor: 44,
            Ceiling: 45,
            Result: "Obtain an object",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/46-47",
            Floor: 46,
            Ceiling: 47,
            Result: "Pay a debt"
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/48-49",
            Floor: 48,
            Ceiling: 49,
            Result: "Protect a lifeform",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/50-51",
            Floor: 50,
            Ceiling: 51,
            Result: "Protect a secret",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/52-53",
            Floor: 52,
            Ceiling: 53,
            Result: "Prove worthiness",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/54-55",
            Floor: 54,
            Ceiling: 55,
            Result: "Rebel against power"
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/56-57",
            Floor: 56,
            Ceiling: 57,
            Result: "Refute a falsehood"
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/58-59",
            Floor: 58,
            Ceiling: 59,
            Result: "Repair a technology",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/60-61",
            Floor: 60,
            Ceiling: 61,
            Result: "Resolve a dispute",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/62-63",
            Floor: 62,
            Ceiling: 63,
            Result: "Restore a relationship",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/64-65",
            Floor: 64,
            Ceiling: 65,
            Result: "Sabotage a technology",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/66-68",
            Floor: 66,
            Ceiling: 68,
            Result: "Secure a resource",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/69-70",
            Floor: 69,
            Ceiling: 70,
            Result: "Seek redemption",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/71-72",
            Floor: 71,
            Ceiling: 72,
            Result: "Seize power",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/73-74",
            Floor: 73,
            Ceiling: 74,
            Result: "Solve a mystery",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/75-76",
            Floor: 75,
            Ceiling: 76,
            Result: "Spread faith"
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/77-78",
            Floor: 77,
            Ceiling: 78,
            Result: "Travel to a place",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Space/Sighting/Terminus",
                "Starforged/Oracles/Space/Sighting/Outlands",
                "Starforged/Oracles/Space/Sighting/Expanse"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/79-80",
            Floor: 79,
            Ceiling: 80,
            Result: "Undermine a relationship",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/81-90",
            Floor: 81,
            Ceiling: 90,
            Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Action",
              "Starforged/Oracles/Core/Theme"
            ]
          },
          {
            $id: "Starforged/Oracles/Characters/Goal/91-100",
            Floor: 91,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 332
        },
        $id: "Starforged/Oracles/Characters/Revealed_Aspect",
        Name: "Revealed Aspect",
        Category: "Starforged/Oracles/Characters",
        Description: "As you interact with a person to gain a deeper understanding of their nature and personality, roll on the this table to reveal new characteristics. You may ignore, reroll, or adjust contradictions. Or envision how those contradictions add interesting complexity to the character.",
        Display: {
          Title: "Revealed Character Aspect",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Characters/Revealed_Aspect",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Characters/Revealed_Aspect"
              }
            ]
          }
        },
        Usage: { "Max rolls": 3, "Allow duplicates": !1 },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/1",
            Floor: 1,
            Ceiling: 1,
            Result: "Addicted"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/2",
            Floor: 2,
            Ceiling: 2,
            Result: "Adventurous"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/3",
            Floor: 3,
            Ceiling: 3,
            Result: "Afflicted"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/4",
            Floor: 4,
            Ceiling: 4,
            Result: "Aggressive"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/5",
            Floor: 5,
            Ceiling: 5,
            Result: "Ambitious"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/6",
            Floor: 6,
            Ceiling: 6,
            Result: "Angry"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/7",
            Floor: 7,
            Ceiling: 7,
            Result: "Anxious"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/8",
            Floor: 8,
            Ceiling: 8,
            Result: "Apathetic"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/9",
            Floor: 9,
            Ceiling: 9,
            Result: "Bitter"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/10",
            Floor: 10,
            Ceiling: 10,
            Result: "Boastful"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/11",
            Floor: 11,
            Ceiling: 11,
            Result: "Boisterous"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/12",
            Floor: 12,
            Ceiling: 12,
            Result: "Bold"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/13",
            Floor: 13,
            Ceiling: 13,
            Result: "Brave"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/14",
            Floor: 14,
            Ceiling: 14,
            Result: "Careless"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/15",
            Floor: 15,
            Ceiling: 15,
            Result: "Cautious"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/16",
            Floor: 16,
            Ceiling: 16,
            Result: "Charismatic"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/17",
            Floor: 17,
            Ceiling: 17,
            Result: "Clever"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/18",
            Floor: 18,
            Ceiling: 18,
            Result: "Conceited"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/19",
            Floor: 19,
            Ceiling: 19,
            Result: "Confident"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/20",
            Floor: 20,
            Ceiling: 20,
            Result: "Confused"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/21",
            Floor: 21,
            Ceiling: 21,
            Result: "Connected"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/22",
            Floor: 22,
            Ceiling: 22,
            Result: "Corrupted"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/23",
            Floor: 23,
            Ceiling: 23,
            Result: "Cowardly"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/24",
            Floor: 24,
            Ceiling: 24,
            Result: "Creative"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/25",
            Floor: 25,
            Ceiling: 25,
            Result: "Critical"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/26",
            Floor: 26,
            Ceiling: 26,
            Result: "Cruel"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/27",
            Floor: 27,
            Ceiling: 27,
            Result: "Cunning"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/28",
            Floor: 28,
            Ceiling: 28,
            Result: "Dangerous"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/29",
            Floor: 29,
            Ceiling: 29,
            Result: "Deceitful"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/30",
            Floor: 30,
            Ceiling: 30,
            Result: "Defiant"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/31",
            Floor: 31,
            Ceiling: 31,
            Result: "Determined"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/32",
            Floor: 32,
            Ceiling: 32,
            Result: "Disabled"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/33",
            Floor: 33,
            Ceiling: 33,
            Result: "Doomed"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/34",
            Floor: 34,
            Ceiling: 34,
            Result: "Driven"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/35",
            Floor: 35,
            Ceiling: 35,
            Result: "Dying"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/36",
            Floor: 36,
            Ceiling: 36,
            Result: "Envious"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/37",
            Floor: 37,
            Ceiling: 37,
            Result: "Experienced"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/38",
            Floor: 38,
            Ceiling: 38,
            Result: "Faithful"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/39",
            Floor: 39,
            Ceiling: 39,
            Result: "Generous"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/40",
            Floor: 40,
            Ceiling: 40,
            Result: "Gifted"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/41",
            Floor: 41,
            Ceiling: 41,
            Result: "Greedy"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/42",
            Floor: 42,
            Ceiling: 42,
            Result: "Grief-stricken"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/43",
            Floor: 43,
            Ceiling: 43,
            Result: "Handy"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/44",
            Floor: 44,
            Ceiling: 44,
            Result: "Hardhearted"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/45",
            Floor: 45,
            Ceiling: 45,
            Result: "Haunted"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/46",
            Floor: 46,
            Ceiling: 46,
            Result: "Honorable"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/47",
            Floor: 47,
            Ceiling: 47,
            Result: "Hot-tempered"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/48",
            Floor: 48,
            Ceiling: 48,
            Result: "Impulsive"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/49",
            Floor: 49,
            Ceiling: 49,
            Result: "Incompetent"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/50",
            Floor: 50,
            Ceiling: 50,
            Result: "Independent"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/51",
            Floor: 51,
            Ceiling: 51,
            Result: "Infamous"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/52",
            Floor: 52,
            Ceiling: 52,
            Result: "Influential"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/53",
            Floor: 53,
            Ceiling: 53,
            Result: "Insensitive"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/54",
            Floor: 54,
            Ceiling: 54,
            Result: "Insightful"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/55",
            Floor: 55,
            Ceiling: 55,
            Result: "Intelligent"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/56",
            Floor: 56,
            Ceiling: 56,
            Result: "Intolerant"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/57",
            Floor: 57,
            Ceiling: 57,
            Result: "Ironsworn"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/58",
            Floor: 58,
            Ceiling: 58,
            Result: "Kind"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/59",
            Floor: 59,
            Ceiling: 59,
            Result: "Law-abiding"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/60",
            Floor: 60,
            Ceiling: 60,
            Result: "Lonely"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/61",
            Floor: 61,
            Ceiling: 61,
            Result: "Loving"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/62",
            Floor: 62,
            Ceiling: 62,
            Result: "Loyal"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/63",
            Floor: 63,
            Ceiling: 63,
            Result: "Manipulative"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/64",
            Floor: 64,
            Ceiling: 64,
            Result: "Oblivious"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/65",
            Floor: 65,
            Ceiling: 65,
            Result: "Obsessed"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/66",
            Floor: 66,
            Ceiling: 66,
            Result: "Oppressed"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/67",
            Floor: 67,
            Ceiling: 67,
            Result: "Passive"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/68",
            Floor: 68,
            Ceiling: 68,
            Result: "Powerful"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/69",
            Floor: 69,
            Ceiling: 69,
            Result: "Proud"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/70",
            Floor: 70,
            Ceiling: 70,
            Result: "Quiet"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/71",
            Floor: 71,
            Ceiling: 71,
            Result: "Quirky"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/72",
            Floor: 72,
            Ceiling: 72,
            Result: "Rebellious"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/73",
            Floor: 73,
            Ceiling: 73,
            Result: "Reclusive"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/74",
            Floor: 74,
            Ceiling: 74,
            Result: "Relaxed"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/75",
            Floor: 75,
            Ceiling: 75,
            Result: "Remorseful"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/76",
            Floor: 76,
            Ceiling: 76,
            Result: "Resourceful"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/77",
            Floor: 77,
            Ceiling: 77,
            Result: "Secretive"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/78",
            Floor: 78,
            Ceiling: 78,
            Result: "Selfish"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/79",
            Floor: 79,
            Ceiling: 79,
            Result: "Sociable"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/80",
            Floor: 80,
            Ceiling: 80,
            Result: "Stealthy"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/81",
            Floor: 81,
            Ceiling: 81,
            Result: "Stern"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/82",
            Floor: 82,
            Ceiling: 82,
            Result: "Stingy"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/83",
            Floor: 83,
            Ceiling: 83,
            Result: "Stoic"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/84",
            Floor: 84,
            Ceiling: 84,
            Result: "Strong"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/85",
            Floor: 85,
            Ceiling: 85,
            Result: "Stubborn"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/86",
            Floor: 86,
            Ceiling: 86,
            Result: "Successful"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/87",
            Floor: 87,
            Ceiling: 87,
            Result: "Suspicious"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/88",
            Floor: 88,
            Ceiling: 88,
            Result: "Talented"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/89",
            Floor: 89,
            Ceiling: 89,
            Result: "Technical"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/90",
            Floor: 90,
            Ceiling: 90,
            Result: "Timid"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/91",
            Floor: 91,
            Ceiling: 91,
            Result: "Tolerant"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/92",
            Floor: 92,
            Ceiling: 92,
            Result: "Tough"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/93",
            Floor: 93,
            Ceiling: 93,
            Result: "Vengeful"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/94",
            Floor: 94,
            Ceiling: 94,
            Result: "Violent"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/95",
            Floor: 95,
            Ceiling: 95,
            Result: "Wary"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/96",
            Floor: 96,
            Ceiling: 96,
            Result: "Watchful"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/97",
            Floor: 97,
            Ceiling: 97,
            Result: "Weak"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/98",
            Floor: 98,
            Ceiling: 98,
            Result: "Weary"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/99",
            Floor: 99,
            Ceiling: 99,
            Result: "Wild"
          },
          {
            $id: "Starforged/Oracles/Characters/Revealed_Aspect/100",
            Floor: 100,
            Ceiling: 100,
            Result: "Wise"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 333
        },
        $id: "Starforged/Oracles/Characters/Name",
        Name: "Name",
        Category: "Starforged/Oracles/Characters",
        Description: "Given and family names are presented as a pair, so you may roll once for both or twice to mix-and-match. You can also try reversing given and family names, or use either independently as a standalone name. If you\u2019d like to give a character a callsign, which are the monikers used by spacers, you may roll separately or take the one provided for your rolled name.",
        Display: {
          Title: "Character Name",
          Table: {
            "Result columns": [
              {
                Label: "Given_Name",
                "Use content from": "Starforged/Oracles/Characters/Name/Given_Name",
                Key: "Result"
              },
              {
                Label: "Family_Name",
                "Use content from": "Starforged/Oracles/Characters/Name/Family_Name",
                Key: "Result"
              },
              {
                Label: "Callsign",
                "Use content from": "Starforged/Oracles/Characters/Name/Callsign",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Characters/Name/Given_Name"
              }
            ]
          }
        },
        Usage: { Initial: !0, "Allow duplicates": !1 },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 333
            },
            $id: "Starforged/Oracles/Characters/Name/Given_Name",
            Name: "Given Name",
            "Member of": "Starforged/Oracles/Characters/Name",
            Category: "Starforged/Oracles/Characters",
            Description: "Given and family names can be used independently as standalone names. In many cases you can reverse the order.",
            Display: {
              Title: "Given Name",
              "Column of": "Starforged/Oracles/Characters/Name",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Characters/Name/Given_Name",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Characters/Name/Given_Name"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Suggestions: {
                "Oracle rolls": [
                  "Starforged/Oracles/Characters/Name/Callsign",
                  "Starforged/Oracles/Characters/Name/Family_Name"
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["proper noun"] },
            Table: [
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/1",
                Floor: 1,
                Ceiling: 1,
                Result: "Akim"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/2",
                Floor: 2,
                Ceiling: 2,
                Result: "Alex"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/3",
                Floor: 3,
                Ceiling: 3,
                Result: "Alexis"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/4",
                Floor: 4,
                Ceiling: 4,
                Result: "Alisa"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/5",
                Floor: 5,
                Ceiling: 5,
                Result: "Althea"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/6",
                Floor: 6,
                Ceiling: 6,
                Result: "Amari"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/7",
                Floor: 7,
                Ceiling: 7,
                Result: "Aparna"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/8",
                Floor: 8,
                Ceiling: 8,
                Result: "Argus"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/9",
                Floor: 9,
                Ceiling: 9,
                Result: "Arnav"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/10",
                Floor: 10,
                Ceiling: 10,
                Result: "Ash"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/11",
                Floor: 11,
                Ceiling: 11,
                Result: "Asha"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/12",
                Floor: 12,
                Ceiling: 12,
                Result: "Astrid"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/13",
                Floor: 13,
                Ceiling: 13,
                Result: "Aurora"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/14",
                Floor: 14,
                Ceiling: 14,
                Result: "Ayako"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/15",
                Floor: 15,
                Ceiling: 15,
                Result: "Azriel"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/16",
                Floor: 16,
                Ceiling: 16,
                Result: "Blake"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/17",
                Floor: 17,
                Ceiling: 17,
                Result: "Brennan"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/18",
                Floor: 18,
                Ceiling: 18,
                Result: "Brianna"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/19",
                Floor: 19,
                Ceiling: 19,
                Result: "Bruna"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/20",
                Floor: 20,
                Ceiling: 20,
                Result: "Bruno"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/21",
                Floor: 21,
                Ceiling: 21,
                Result: "Cassidy"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/22",
                Floor: 22,
                Ceiling: 22,
                Result: "Christa"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/23",
                Floor: 23,
                Ceiling: 23,
                Result: "Cole"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/24",
                Floor: 24,
                Ceiling: 24,
                Result: "Corey"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/25",
                Floor: 25,
                Ceiling: 25,
                Result: "Creed"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/26",
                Floor: 26,
                Ceiling: 26,
                Result: "Derya"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/27",
                Floor: 27,
                Ceiling: 27,
                Result: "Dex"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/28",
                Floor: 28,
                Ceiling: 28,
                Result: "Doran"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/29",
                Floor: 29,
                Ceiling: 29,
                Result: "Echo"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/30",
                Floor: 30,
                Ceiling: 30,
                Result: "Eren"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/31",
                Floor: 31,
                Ceiling: 31,
                Result: "Erim"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/32",
                Floor: 32,
                Ceiling: 32,
                Result: "Esana"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/33",
                Floor: 33,
                Ceiling: 33,
                Result: "Eveline"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/34",
                Floor: 34,
                Ceiling: 34,
                Result: "Faye"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/35",
                Floor: 35,
                Ceiling: 35,
                Result: "Fletcher"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/36",
                Floor: 36,
                Ceiling: 36,
                Result: "Flint"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/37",
                Floor: 37,
                Ceiling: 37,
                Result: "Florian"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/38",
                Floor: 38,
                Ceiling: 38,
                Result: "Gavin"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/39",
                Floor: 39,
                Ceiling: 39,
                Result: "Halia"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/40",
                Floor: 40,
                Ceiling: 40,
                Result: "Ike"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/41",
                Floor: 41,
                Ceiling: 41,
                Result: "Isaac"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/42",
                Floor: 42,
                Ceiling: 42,
                Result: "James"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/43",
                Floor: 43,
                Ceiling: 43,
                Result: "Janya"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/44",
                Floor: 44,
                Ceiling: 44,
                Result: "Jihun"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/45",
                Floor: 45,
                Ceiling: 45,
                Result: "Jorunn"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/46",
                Floor: 46,
                Ceiling: 46,
                Result: "Juliana"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/47",
                Floor: 47,
                Ceiling: 47,
                Result: "Juro"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/48",
                Floor: 48,
                Ceiling: 48,
                Result: "Kaisa"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/49",
                Floor: 49,
                Ceiling: 49,
                Result: "Karthik"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/50",
                Floor: 50,
                Ceiling: 50,
                Result: "Kayla"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/51",
                Floor: 51,
                Ceiling: 51,
                Result: "Kei"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/52",
                Floor: 52,
                Ceiling: 52,
                Result: "Kiana"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/53",
                Floor: 53,
                Ceiling: 53,
                Result: "Kieran"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/54",
                Floor: 54,
                Ceiling: 54,
                Result: "Kierra"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/55",
                Floor: 55,
                Ceiling: 55,
                Result: "Kimora"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/56",
                Floor: 56,
                Ceiling: 56,
                Result: "Kiri"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/57",
                Floor: 57,
                Ceiling: 57,
                Result: "Kirsa"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/58",
                Floor: 58,
                Ceiling: 58,
                Result: "Kwan"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/59",
                Floor: 59,
                Ceiling: 59,
                Result: "Kylar"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/60",
                Floor: 60,
                Ceiling: 60,
                Result: "Landry"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/61",
                Floor: 61,
                Ceiling: 61,
                Result: "Logan"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/62",
                Floor: 62,
                Ceiling: 62,
                Result: "Lowell"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/63",
                Floor: 63,
                Ceiling: 63,
                Result: "Lucas"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/64",
                Floor: 64,
                Ceiling: 64,
                Result: "Curtis"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/65",
                Floor: 65,
                Ceiling: 65,
                Result: "Luna"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/66",
                Floor: 66,
                Ceiling: 66,
                Result: "Lux"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/67",
                Floor: 67,
                Ceiling: 67,
                Result: "Mae"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/68",
                Floor: 68,
                Ceiling: 68,
                Result: "Magnus"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/69",
                Floor: 69,
                Ceiling: 69,
                Result: "Mave"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/70",
                Floor: 70,
                Ceiling: 70,
                Result: "Merrick"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/71",
                Floor: 71,
                Ceiling: 71,
                Result: "Mina"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/72",
                Floor: 72,
                Ceiling: 72,
                Result: "Nashida"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/73",
                Floor: 73,
                Ceiling: 73,
                Result: "Nassar"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/74",
                Floor: 74,
                Ceiling: 74,
                Result: "Ostara"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/75",
                Floor: 75,
                Ceiling: 75,
                Result: "Qasira"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/76",
                Floor: 76,
                Ceiling: 76,
                Result: "Quinn"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/77",
                Floor: 77,
                Ceiling: 77,
                Result: "Ragnar"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/78",
                Floor: 78,
                Ceiling: 78,
                Result: "Raven"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/79",
                Floor: 79,
                Ceiling: 79,
                Result: "Ria"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/80",
                Floor: 80,
                Ceiling: 80,
                Result: "Rokuro"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/81",
                Floor: 81,
                Ceiling: 81,
                Result: "Roland"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/82",
                Floor: 82,
                Ceiling: 82,
                Result: "Rowena"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/83",
                Floor: 83,
                Ceiling: 83,
                Result: "Sage"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/84",
                Floor: 84,
                Ceiling: 84,
                Result: "Saren"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/85",
                Floor: 85,
                Ceiling: 85,
                Result: "Annora"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/86",
                Floor: 86,
                Ceiling: 86,
                Result: "Severinus"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/87",
                Floor: 87,
                Ceiling: 87,
                Result: "Shen"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/88",
                Floor: 88,
                Ceiling: 88,
                Result: "Talia"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/89",
                Floor: 89,
                Ceiling: 89,
                Result: "Tomiko"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/90",
                Floor: 90,
                Ceiling: 90,
                Result: "Ulan"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/91",
                Floor: 91,
                Ceiling: 91,
                Result: "Valda"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/92",
                Floor: 92,
                Ceiling: 92,
                Result: "Venri"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/93",
                Floor: 93,
                Ceiling: 93,
                Result: "Vesper"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/94",
                Floor: 94,
                Ceiling: 94,
                Result: "Vuldar"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/95",
                Floor: 95,
                Ceiling: 95,
                Result: "William"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/96",
                Floor: 96,
                Ceiling: 96,
                Result: "Yelena"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/97",
                Floor: 97,
                Ceiling: 97,
                Result: "Zakia"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/98",
                Floor: 98,
                Ceiling: 98,
                Result: "Zari"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/99",
                Floor: 99,
                Ceiling: 99,
                Result: "Zephyr"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Given_Name/100",
                Floor: 100,
                Ceiling: 100,
                Result: "Zoya"
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 333
            },
            $id: "Starforged/Oracles/Characters/Name/Callsign",
            Name: "Callsign",
            "Member of": "Starforged/Oracles/Characters/Name",
            Category: "Starforged/Oracles/Characters",
            Description: "Spacers are often known only by their callsigns, with their \u201Cdirtside names\u201D reserved for family and close friends.",
            Display: {
              Title: "Callsign",
              "Column of": "Starforged/Oracles/Characters/Name",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Characters/Name/Callsign",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Characters/Name/Callsign"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Suggestions: {
                "Oracle rolls": [
                  "Starforged/Oracles/Characters/Name/Given_Name",
                  "Starforged/Oracles/Characters/Name/Family_Name"
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["proper noun"] },
            Table: [
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/1",
                Floor: 1,
                Ceiling: 1,
                Result: "Albatross"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/2",
                Floor: 2,
                Ceiling: 2,
                Result: "Angler"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/3",
                Floor: 3,
                Ceiling: 3,
                Result: "Anvil"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/4",
                Floor: 4,
                Ceiling: 4,
                Result: "Badger"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/5",
                Floor: 5,
                Ceiling: 5,
                Result: "Bandit"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/6",
                Floor: 6,
                Ceiling: 6,
                Result: "Bash"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/7",
                Floor: 7,
                Ceiling: 7,
                Result: "Basilisk"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/8",
                Floor: 8,
                Ceiling: 8,
                Result: "Bingo"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/9",
                Floor: 9,
                Ceiling: 9,
                Result: "Blackbird"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/10",
                Floor: 10,
                Ceiling: 10,
                Result: "Blade"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/11",
                Floor: 11,
                Ceiling: 11,
                Result: "Bloodshot"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/12",
                Floor: 12,
                Ceiling: 12,
                Result: "Bluewing"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/13",
                Floor: 13,
                Ceiling: 13,
                Result: "Bonfire"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/14",
                Floor: 14,
                Ceiling: 14,
                Result: "Book"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/15",
                Floor: 15,
                Ceiling: 15,
                Result: "Breaker"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/16",
                Floor: 16,
                Ceiling: 16,
                Result: "Brick"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/17",
                Floor: 17,
                Ceiling: 17,
                Result: "Buzz"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/18",
                Floor: 18,
                Ceiling: 18,
                Result: "Buzzard"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/19",
                Floor: 19,
                Ceiling: 19,
                Result: "Centurion"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/20",
                Floor: 20,
                Ceiling: 20,
                Result: "Chimera"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/21",
                Floor: 21,
                Ceiling: 21,
                Result: "Circuit"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/22",
                Floor: 22,
                Ceiling: 22,
                Result: "Clank"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/23",
                Floor: 23,
                Ceiling: 23,
                Result: "Cleric"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/24",
                Floor: 24,
                Ceiling: 24,
                Result: "Crash"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/25",
                Floor: 25,
                Ceiling: 25,
                Result: "Cutter"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/26",
                Floor: 26,
                Ceiling: 26,
                Result: "Cutthroat"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/27",
                Floor: 27,
                Ceiling: 27,
                Result: "Cypher"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/28",
                Floor: 28,
                Ceiling: 28,
                Result: "Dagger"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/29",
                Floor: 29,
                Ceiling: 29,
                Result: "Dancer"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/30",
                Floor: 30,
                Ceiling: 30,
                Result: "Dash"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/31",
                Floor: 31,
                Ceiling: 31,
                Result: "Deadeye"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/32",
                Floor: 32,
                Ceiling: 32,
                Result: "Deuce"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/33",
                Floor: 33,
                Ceiling: 33,
                Result: "Failsafe"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/34",
                Floor: 34,
                Ceiling: 34,
                Result: "Farseer"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/35",
                Floor: 35,
                Ceiling: 35,
                Result: "Fidget"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/36",
                Floor: 36,
                Ceiling: 36,
                Result: "Firestarter"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/37",
                Floor: 37,
                Ceiling: 37,
                Result: "Fixer"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/38",
                Floor: 38,
                Ceiling: 38,
                Result: "Flatline"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/39",
                Floor: 39,
                Ceiling: 39,
                Result: "Ghost"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/40",
                Floor: 40,
                Ceiling: 40,
                Result: "Grudge"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/41",
                Floor: 41,
                Ceiling: 41,
                Result: "Gutshot"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/42",
                Floor: 42,
                Ceiling: 42,
                Result: "Harrow"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/43",
                Floor: 43,
                Ceiling: 43,
                Result: "Havoc"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/44",
                Floor: 44,
                Ceiling: 44,
                Result: "Hellhound"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/45",
                Floor: 45,
                Ceiling: 45,
                Result: "Hellion"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/46",
                Floor: 46,
                Ceiling: 46,
                Result: "Hex"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/47",
                Floor: 47,
                Ceiling: 47,
                Result: "Hush"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/48",
                Floor: 48,
                Ceiling: 48,
                Result: "Ironclad"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/49",
                Floor: 49,
                Ceiling: 49,
                Result: "Jackal"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/50",
                Floor: 50,
                Ceiling: 50,
                Result: "Jackpot"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/51",
                Floor: 51,
                Ceiling: 51,
                Result: "Jester"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/52",
                Floor: 52,
                Ceiling: 52,
                Result: "Link"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/53",
                Floor: 53,
                Ceiling: 53,
                Result: "Longshot"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/54",
                Floor: 54,
                Ceiling: 54,
                Result: "Mainframe"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/55",
                Floor: 55,
                Ceiling: 55,
                Result: "Mantis"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/56",
                Floor: 56,
                Ceiling: 56,
                Result: "Mimic"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/57",
                Floor: 57,
                Ceiling: 57,
                Result: "Mole"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/58",
                Floor: 58,
                Ceiling: 58,
                Result: "Monarch"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/59",
                Floor: 59,
                Ceiling: 59,
                Result: "Mongoose"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/60",
                Floor: 60,
                Ceiling: 60,
                Result: "Nails"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/61",
                Floor: 61,
                Ceiling: 61,
                Result: "Ogre"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/62",
                Floor: 62,
                Ceiling: 62,
                Result: "Omega"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/63",
                Floor: 63,
                Ceiling: 63,
                Result: "Overload"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/64",
                Floor: 64,
                Ceiling: 64,
                Result: "Packrat"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/65",
                Floor: 65,
                Ceiling: 65,
                Result: "Paladin"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/66",
                Floor: 66,
                Ceiling: 66,
                Result: "Phantom"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/67",
                Floor: 67,
                Ceiling: 67,
                Result: "Phoenix"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/68",
                Floor: 68,
                Ceiling: 68,
                Result: "Pyro"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/69",
                Floor: 69,
                Ceiling: 69,
                Result: "Quickdraw"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/70",
                Floor: 70,
                Ceiling: 70,
                Result: "Razor"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/71",
                Floor: 71,
                Ceiling: 71,
                Result: "Rogue"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/72",
                Floor: 72,
                Ceiling: 72,
                Result: "Rook"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/73",
                Floor: 73,
                Ceiling: 73,
                Result: "Rover"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/74",
                Floor: 74,
                Ceiling: 74,
                Result: "Scout"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/75",
                Floor: 75,
                Ceiling: 75,
                Result: "Shadow"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/76",
                Floor: 76,
                Ceiling: 76,
                Result: "Shark"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/77",
                Floor: 77,
                Ceiling: 77,
                Result: "Shutdown"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/78",
                Floor: 78,
                Ceiling: 78,
                Result: "Slack"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/79",
                Floor: 79,
                Ceiling: 79,
                Result: "Slash"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/80",
                Floor: 80,
                Ceiling: 80,
                Result: "Snipe"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/81",
                Floor: 81,
                Ceiling: 81,
                Result: "Spider"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/82",
                Floor: 82,
                Ceiling: 82,
                Result: "Splinter"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/83",
                Floor: 83,
                Ceiling: 83,
                Result: "Static"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/84",
                Floor: 84,
                Ceiling: 84,
                Result: "Stinger"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/85",
                Floor: 85,
                Ceiling: 85,
                Result: "Straggler"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/86",
                Floor: 86,
                Ceiling: 86,
                Result: "Swindle"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/87",
                Floor: 87,
                Ceiling: 87,
                Result: "Tinker"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/88",
                Floor: 88,
                Ceiling: 88,
                Result: "Touchdown"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/89",
                Floor: 89,
                Ceiling: 89,
                Result: "Tycoon"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/90",
                Floor: 90,
                Ceiling: 90,
                Result: "Vagabond"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/91",
                Floor: 91,
                Ceiling: 91,
                Result: "Valkyrie"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/92",
                Floor: 92,
                Ceiling: 92,
                Result: "Vanguard"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/93",
                Floor: 93,
                Ceiling: 93,
                Result: "Vertigo"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/94",
                Floor: 94,
                Ceiling: 94,
                Result: "Warden"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/95",
                Floor: 95,
                Ceiling: 95,
                Result: "Watchdog"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/96",
                Floor: 96,
                Ceiling: 96,
                Result: "Wayfinder"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/97",
                Floor: 97,
                Ceiling: 97,
                Result: "Whisper"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/98",
                Floor: 98,
                Ceiling: 98,
                Result: "Wraith"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/99",
                Floor: 99,
                Ceiling: 99,
                Result: "Wrongway"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Callsign/100",
                Floor: 100,
                Ceiling: 100,
                Result: "Zephyr"
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 333
            },
            $id: "Starforged/Oracles/Characters/Name/Family_Name",
            Name: "Family Name",
            "Member of": "Starforged/Oracles/Characters/Name",
            Category: "Starforged/Oracles/Characters",
            Description: "Given and family names can be used independently as standalone names. In many cases you can reverse the order.",
            Display: {
              Title: "Family Name",
              "Column of": "Starforged/Oracles/Characters/Name",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Characters/Name/Family_Name",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Characters/Name/Family_Name"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Suggestions: {
                "Oracle rolls": [
                  "Starforged/Oracles/Characters/Name/Given_Name",
                  "Starforged/Oracles/Characters/Name/Callsign"
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["proper noun"] },
            Table: [
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/1",
                Floor: 1,
                Ceiling: 1,
                Result: "Kuzmin"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/2",
                Floor: 2,
                Ceiling: 2,
                Result: "Durant"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/3",
                Floor: 3,
                Ceiling: 3,
                Result: "Jefferies"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/4",
                Floor: 4,
                Ceiling: 4,
                Result: "Velez"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/5",
                Floor: 5,
                Ceiling: 5,
                Result: "Lontoc"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/6",
                Floor: 6,
                Ceiling: 6,
                Result: "Wade"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/7",
                Floor: 7,
                Ceiling: 7,
                Result: "Kade"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/8",
                Floor: 8,
                Ceiling: 8,
                Result: "Thorn"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/9",
                Floor: 9,
                Ceiling: 9,
                Result: "Khosla"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/10",
                Floor: 10,
                Ceiling: 10,
                Result: "Hendrix"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/11",
                Floor: 11,
                Ceiling: 11,
                Result: "Okiro"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/12",
                Floor: 12,
                Ceiling: 12,
                Result: "Ripley"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/13",
                Floor: 13,
                Ceiling: 13,
                Result: "Talin"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/14",
                Floor: 14,
                Ceiling: 14,
                Result: "Jin"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/15",
                Floor: 15,
                Ceiling: 15,
                Result: "Finn"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/16",
                Floor: 16,
                Ceiling: 16,
                Result: "Solas"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/17",
                Floor: 17,
                Ceiling: 17,
                Result: "Quint"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/18",
                Floor: 18,
                Ceiling: 18,
                Result: "Keelan"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/19",
                Floor: 19,
                Ceiling: 19,
                Result: "Silva"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/20",
                Floor: 20,
                Ceiling: 20,
                Result: "Valk"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/21",
                Floor: 21,
                Ceiling: 21,
                Result: "O'Brien"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/22",
                Floor: 22,
                Ceiling: 22,
                Result: "Ruiz"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/23",
                Floor: 23,
                Ceiling: 23,
                Result: "Stallard"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/24",
                Floor: 24,
                Ceiling: 24,
                Result: "Mackenson"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/25",
                Floor: 25,
                Ceiling: 25,
                Result: "Jensen"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/26",
                Floor: 26,
                Ceiling: 26,
                Result: "Sakir"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/27",
                Floor: 27,
                Ceiling: 27,
                Result: "Tolari"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/28",
                Floor: 28,
                Ceiling: 28,
                Result: "Kain"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/29",
                Floor: 29,
                Ceiling: 29,
                Result: "Carr"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/30",
                Floor: 30,
                Ceiling: 30,
                Result: "Valenus"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/31",
                Floor: 31,
                Ceiling: 31,
                Result: "Kaan"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/32",
                Floor: 32,
                Ceiling: 32,
                Result: "Taylan"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/33",
                Floor: 33,
                Ceiling: 33,
                Result: "Legrand"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/34",
                Floor: 34,
                Ceiling: 34,
                Result: "Jemison"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/35",
                Floor: 35,
                Ceiling: 35,
                Result: "Arden"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/36",
                Floor: 36,
                Ceiling: 36,
                Result: "Sayer"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/37",
                Floor: 37,
                Ceiling: 37,
                Result: "Kai"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/38",
                Floor: 38,
                Ceiling: 38,
                Result: "Slater"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/39",
                Floor: 39,
                Ceiling: 39,
                Result: "Edris"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/40",
                Floor: 40,
                Ceiling: 40,
                Result: "Sutton"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/41",
                Floor: 41,
                Ceiling: 41,
                Result: "Savarin"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/42",
                Floor: 42,
                Ceiling: 42,
                Result: "Bridger"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/43",
                Floor: 43,
                Ceiling: 43,
                Result: "Mital"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/44",
                Floor: 44,
                Ceiling: 44,
                Result: "Shin"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/45",
                Floor: 45,
                Ceiling: 45,
                Result: "Nadir"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/46",
                Floor: 46,
                Ceiling: 46,
                Result: "Santos"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/47",
                Floor: 47,
                Ceiling: 47,
                Result: "Mihara"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/48",
                Floor: 48,
                Ceiling: 48,
                Result: "Buhari"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/49",
                Floor: 49,
                Ceiling: 49,
                Result: "Salvi"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/50",
                Floor: 50,
                Ceiling: 50,
                Result: "Adler"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/51",
                Floor: 51,
                Ceiling: 51,
                Result: "Takara"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/52",
                Floor: 52,
                Ceiling: 52,
                Result: "Shelton"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/53",
                Floor: 53,
                Ceiling: 53,
                Result: "Vandu"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/54",
                Floor: 54,
                Ceiling: 54,
                Result: "Vega"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/55",
                Floor: 55,
                Ceiling: 55,
                Result: "Zhang"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/56",
                Floor: 56,
                Ceiling: 56,
                Result: "Savela"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/57",
                Floor: 57,
                Ceiling: 57,
                Result: "Hawking"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/58",
                Floor: 58,
                Ceiling: 58,
                Result: "Jen"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/59",
                Floor: 59,
                Ceiling: 59,
                Result: "Hobbs"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/60",
                Floor: 60,
                Ceiling: 60,
                Result: "Holland"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/61",
                Floor: 61,
                Ceiling: 61,
                Result: "Silvius"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/62",
                Floor: 62,
                Ceiling: 62,
                Result: "Freeman"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/63",
                Floor: 63,
                Ceiling: 63,
                Result: "Barbosa"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/64",
                Floor: 64,
                Ceiling: 64,
                Result: "Winter"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/65",
                Floor: 65,
                Ceiling: 65,
                Result: "Hammond"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/66",
                Floor: 66,
                Ceiling: 66,
                Result: "Archer"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/67",
                Floor: 67,
                Ceiling: 67,
                Result: "Barlowe"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/68",
                Floor: 68,
                Ceiling: 68,
                Result: "Shepherd"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/69",
                Floor: 69,
                Ceiling: 69,
                Result: "Griffin"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/70",
                Floor: 70,
                Ceiling: 70,
                Result: "Frost"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/71",
                Floor: 71,
                Ceiling: 71,
                Result: "Quon"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/72",
                Floor: 72,
                Ceiling: 72,
                Result: "Malek"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/73",
                Floor: 73,
                Ceiling: 73,
                Result: "Murad"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/74",
                Floor: 74,
                Ceiling: 74,
                Result: "Becker"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/75",
                Floor: 75,
                Ceiling: 75,
                Result: "Ammar"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/76",
                Floor: 76,
                Ceiling: 76,
                Result: "Braddock"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/77",
                Floor: 77,
                Ceiling: 77,
                Result: "Blackstone"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/78",
                Floor: 78,
                Ceiling: 78,
                Result: "Hadley"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/79",
                Floor: 79,
                Ceiling: 79,
                Result: "Farin"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/80",
                Floor: 80,
                Ceiling: 80,
                Result: "Kobayashi"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/81",
                Floor: 81,
                Ceiling: 81,
                Result: "Duval"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/82",
                Floor: 82,
                Ceiling: 82,
                Result: "Hunter"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/83",
                Floor: 83,
                Ceiling: 83,
                Result: "Beckett"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/84",
                Floor: 84,
                Ceiling: 84,
                Result: "Dykstra"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/85",
                Floor: 85,
                Ceiling: 85,
                Result: "Gray"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/86",
                Floor: 86,
                Ceiling: 86,
                Result: "Sedano"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/87",
                Floor: 87,
                Ceiling: 87,
                Result: "Bai"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/88",
                Floor: 88,
                Ceiling: 88,
                Result: "Booker"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/89",
                Floor: 89,
                Ceiling: 89,
                Result: "Sato"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/90",
                Floor: 90,
                Ceiling: 90,
                Result: "Vayan"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/91",
                Floor: 91,
                Ceiling: 91,
                Result: "Bond"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/92",
                Floor: 92,
                Ceiling: 92,
                Result: "Stark"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/93",
                Floor: 93,
                Ceiling: 93,
                Result: "Stirling"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/94",
                Floor: 94,
                Ceiling: 94,
                Result: "Wolfe"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/95",
                Floor: 95,
                Ceiling: 95,
                Result: "O'Niel"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/96",
                Floor: 96,
                Ceiling: 96,
                Result: "Petrov"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/97",
                Floor: 97,
                Ceiling: 97,
                Result: "Nazari"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/98",
                Floor: 98,
                Ceiling: 98,
                Result: "Darwin"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/99",
                Floor: 99,
                Ceiling: 99,
                Result: "Pearson"
              },
              {
                $id: "Starforged/Oracles/Characters/Name/Family_Name/100",
                Floor: 100,
                Ceiling: 100,
                Result: "Volkov"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Oracles/Core",
    Name: "Core",
    Display: { Title: "Core Oracles" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 296
        },
        $id: "Starforged/Oracles/Core/Action",
        Name: "Action",
        Category: "Starforged/Oracles/Core",
        Description: "When you [Ask the Oracle](Starforged/Moves/Fate/Ask_the_Oracle) about a goal, situation, or event, roll for an Action and Theme. Together, these provide an interpretative verb/noun prompt.",
        Display: {
          Title: "Action",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Core/Action",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Core/Action"
              }
            ]
          }
        },
        Usage: {
          Suggestions: {
            "Oracle rolls": ["Starforged/Oracles/Core/Theme"]
          },
          "Allow duplicates": !1
        },
        Content: { "Part of speech": ["verb"] },
        Table: [
          {
            $id: "Starforged/Oracles/Core/Action/1",
            Floor: 1,
            Ceiling: 1,
            Result: "Abandon"
          },
          {
            $id: "Starforged/Oracles/Core/Action/2",
            Floor: 2,
            Ceiling: 2,
            Result: "Acquire"
          },
          {
            $id: "Starforged/Oracles/Core/Action/3",
            Floor: 3,
            Ceiling: 3,
            Result: "Advance"
          },
          {
            $id: "Starforged/Oracles/Core/Action/4",
            Floor: 4,
            Ceiling: 4,
            Result: "Affect"
          },
          {
            $id: "Starforged/Oracles/Core/Action/5",
            Floor: 5,
            Ceiling: 5,
            Result: "Aid"
          },
          {
            $id: "Starforged/Oracles/Core/Action/6",
            Floor: 6,
            Ceiling: 6,
            Result: "Arrive"
          },
          {
            $id: "Starforged/Oracles/Core/Action/7",
            Floor: 7,
            Ceiling: 7,
            Result: "Assault"
          },
          {
            $id: "Starforged/Oracles/Core/Action/8",
            Floor: 8,
            Ceiling: 8,
            Result: "Attack"
          },
          {
            $id: "Starforged/Oracles/Core/Action/9",
            Floor: 9,
            Ceiling: 9,
            Result: "Avenge"
          },
          {
            $id: "Starforged/Oracles/Core/Action/10",
            Floor: 10,
            Ceiling: 10,
            Result: "Avoid"
          },
          {
            $id: "Starforged/Oracles/Core/Action/11",
            Floor: 11,
            Ceiling: 11,
            Result: "Await"
          },
          {
            $id: "Starforged/Oracles/Core/Action/12",
            Floor: 12,
            Ceiling: 12,
            Result: "Begin"
          },
          {
            $id: "Starforged/Oracles/Core/Action/13",
            Floor: 13,
            Ceiling: 13,
            Result: "Betray"
          },
          {
            $id: "Starforged/Oracles/Core/Action/14",
            Floor: 14,
            Ceiling: 14,
            Result: "Bolster"
          },
          {
            $id: "Starforged/Oracles/Core/Action/15",
            Floor: 15,
            Ceiling: 15,
            Result: "Breach"
          },
          {
            $id: "Starforged/Oracles/Core/Action/16",
            Floor: 16,
            Ceiling: 16,
            Result: "Break"
          },
          {
            $id: "Starforged/Oracles/Core/Action/17",
            Floor: 17,
            Ceiling: 17,
            Result: "Capture"
          },
          {
            $id: "Starforged/Oracles/Core/Action/18",
            Floor: 18,
            Ceiling: 18,
            Result: "Challenge"
          },
          {
            $id: "Starforged/Oracles/Core/Action/19",
            Floor: 19,
            Ceiling: 19,
            Result: "Change"
          },
          {
            $id: "Starforged/Oracles/Core/Action/20",
            Floor: 20,
            Ceiling: 20,
            Result: "Charge"
          },
          {
            $id: "Starforged/Oracles/Core/Action/21",
            Floor: 21,
            Ceiling: 21,
            Result: "Clash"
          },
          {
            $id: "Starforged/Oracles/Core/Action/22",
            Floor: 22,
            Ceiling: 22,
            Result: "Command"
          },
          {
            $id: "Starforged/Oracles/Core/Action/23",
            Floor: 23,
            Ceiling: 23,
            Result: "Communicate"
          },
          {
            $id: "Starforged/Oracles/Core/Action/24",
            Floor: 24,
            Ceiling: 24,
            Result: "Construct"
          },
          {
            $id: "Starforged/Oracles/Core/Action/25",
            Floor: 25,
            Ceiling: 25,
            Result: "Control"
          },
          {
            $id: "Starforged/Oracles/Core/Action/26",
            Floor: 26,
            Ceiling: 26,
            Result: "Coordinate"
          },
          {
            $id: "Starforged/Oracles/Core/Action/27",
            Floor: 27,
            Ceiling: 27,
            Result: "Create"
          },
          {
            $id: "Starforged/Oracles/Core/Action/28",
            Floor: 28,
            Ceiling: 28,
            Result: "Debate"
          },
          {
            $id: "Starforged/Oracles/Core/Action/29",
            Floor: 29,
            Ceiling: 29,
            Result: "Defeat"
          },
          {
            $id: "Starforged/Oracles/Core/Action/30",
            Floor: 30,
            Ceiling: 30,
            Result: "Defend"
          },
          {
            $id: "Starforged/Oracles/Core/Action/31",
            Floor: 31,
            Ceiling: 31,
            Result: "Deflect"
          },
          {
            $id: "Starforged/Oracles/Core/Action/32",
            Floor: 32,
            Ceiling: 32,
            Result: "Defy"
          },
          {
            $id: "Starforged/Oracles/Core/Action/33",
            Floor: 33,
            Ceiling: 33,
            Result: "Deliver"
          },
          {
            $id: "Starforged/Oracles/Core/Action/34",
            Floor: 34,
            Ceiling: 34,
            Result: "Demand"
          },
          {
            $id: "Starforged/Oracles/Core/Action/35",
            Floor: 35,
            Ceiling: 35,
            Result: "Depart"
          },
          {
            $id: "Starforged/Oracles/Core/Action/36",
            Floor: 36,
            Ceiling: 36,
            Result: "Destroy"
          },
          {
            $id: "Starforged/Oracles/Core/Action/37",
            Floor: 37,
            Ceiling: 37,
            Result: "Distract"
          },
          {
            $id: "Starforged/Oracles/Core/Action/38",
            Floor: 38,
            Ceiling: 38,
            Result: "Eliminate"
          },
          {
            $id: "Starforged/Oracles/Core/Action/39",
            Floor: 39,
            Ceiling: 39,
            Result: "Endure"
          },
          {
            $id: "Starforged/Oracles/Core/Action/40",
            Floor: 40,
            Ceiling: 40,
            Result: "Escalate"
          },
          {
            $id: "Starforged/Oracles/Core/Action/41",
            Floor: 41,
            Ceiling: 41,
            Result: "Escort"
          },
          {
            $id: "Starforged/Oracles/Core/Action/42",
            Floor: 42,
            Ceiling: 42,
            Result: "Evade"
          },
          {
            $id: "Starforged/Oracles/Core/Action/43",
            Floor: 43,
            Ceiling: 43,
            Result: "Explore"
          },
          {
            $id: "Starforged/Oracles/Core/Action/44",
            Floor: 44,
            Ceiling: 44,
            Result: "Falter"
          },
          {
            $id: "Starforged/Oracles/Core/Action/45",
            Floor: 45,
            Ceiling: 45,
            Result: "Find"
          },
          {
            $id: "Starforged/Oracles/Core/Action/46",
            Floor: 46,
            Ceiling: 46,
            Result: "Finish"
          },
          {
            $id: "Starforged/Oracles/Core/Action/47",
            Floor: 47,
            Ceiling: 47,
            Result: "Focus"
          },
          {
            $id: "Starforged/Oracles/Core/Action/48",
            Floor: 48,
            Ceiling: 48,
            Result: "Follow"
          },
          {
            $id: "Starforged/Oracles/Core/Action/49",
            Floor: 49,
            Ceiling: 49,
            Result: "Fortify"
          },
          {
            $id: "Starforged/Oracles/Core/Action/50",
            Floor: 50,
            Ceiling: 50,
            Result: "Gather"
          },
          {
            $id: "Starforged/Oracles/Core/Action/51",
            Floor: 51,
            Ceiling: 51,
            Result: "Guard"
          },
          {
            $id: "Starforged/Oracles/Core/Action/52",
            Floor: 52,
            Ceiling: 52,
            Result: "Hide"
          },
          {
            $id: "Starforged/Oracles/Core/Action/53",
            Floor: 53,
            Ceiling: 53,
            Result: "Hold"
          },
          {
            $id: "Starforged/Oracles/Core/Action/54",
            Floor: 54,
            Ceiling: 54,
            Result: "Hunt"
          },
          {
            $id: "Starforged/Oracles/Core/Action/55",
            Floor: 55,
            Ceiling: 55,
            Result: "Impress"
          },
          {
            $id: "Starforged/Oracles/Core/Action/56",
            Floor: 56,
            Ceiling: 56,
            Result: "Initiate"
          },
          {
            $id: "Starforged/Oracles/Core/Action/57",
            Floor: 57,
            Ceiling: 57,
            Result: "Inspect"
          },
          {
            $id: "Starforged/Oracles/Core/Action/58",
            Floor: 58,
            Ceiling: 58,
            Result: "Investigate"
          },
          {
            $id: "Starforged/Oracles/Core/Action/59",
            Floor: 59,
            Ceiling: 59,
            Result: "Journey"
          },
          {
            $id: "Starforged/Oracles/Core/Action/60",
            Floor: 60,
            Ceiling: 60,
            Result: "Learn"
          },
          {
            $id: "Starforged/Oracles/Core/Action/61",
            Floor: 61,
            Ceiling: 61,
            Result: "Leave"
          },
          {
            $id: "Starforged/Oracles/Core/Action/62",
            Floor: 62,
            Ceiling: 62,
            Result: "Locate"
          },
          {
            $id: "Starforged/Oracles/Core/Action/63",
            Floor: 63,
            Ceiling: 63,
            Result: "Lose"
          },
          {
            $id: "Starforged/Oracles/Core/Action/64",
            Floor: 64,
            Ceiling: 64,
            Result: "Manipulate"
          },
          {
            $id: "Starforged/Oracles/Core/Action/65",
            Floor: 65,
            Ceiling: 65,
            Result: "Mourn"
          },
          {
            $id: "Starforged/Oracles/Core/Action/66",
            Floor: 66,
            Ceiling: 66,
            Result: "Move"
          },
          {
            $id: "Starforged/Oracles/Core/Action/67",
            Floor: 67,
            Ceiling: 67,
            Result: "Oppose"
          },
          {
            $id: "Starforged/Oracles/Core/Action/68",
            Floor: 68,
            Ceiling: 68,
            Result: "Overwhelm"
          },
          {
            $id: "Starforged/Oracles/Core/Action/69",
            Floor: 69,
            Ceiling: 69,
            Result: "Persevere"
          },
          {
            $id: "Starforged/Oracles/Core/Action/70",
            Floor: 70,
            Ceiling: 70,
            Result: "Preserve"
          },
          {
            $id: "Starforged/Oracles/Core/Action/71",
            Floor: 71,
            Ceiling: 71,
            Result: "Protect"
          },
          {
            $id: "Starforged/Oracles/Core/Action/72",
            Floor: 72,
            Ceiling: 72,
            Result: "Raid"
          },
          {
            $id: "Starforged/Oracles/Core/Action/73",
            Floor: 73,
            Ceiling: 73,
            Result: "Reduce"
          },
          {
            $id: "Starforged/Oracles/Core/Action/74",
            Floor: 74,
            Ceiling: 74,
            Result: "Refuse"
          },
          {
            $id: "Starforged/Oracles/Core/Action/75",
            Floor: 75,
            Ceiling: 75,
            Result: "Reject"
          },
          {
            $id: "Starforged/Oracles/Core/Action/76",
            Floor: 76,
            Ceiling: 76,
            Result: "Release"
          },
          {
            $id: "Starforged/Oracles/Core/Action/77",
            Floor: 77,
            Ceiling: 77,
            Result: "Remove"
          },
          {
            $id: "Starforged/Oracles/Core/Action/78",
            Floor: 78,
            Ceiling: 78,
            Result: "Research"
          },
          {
            $id: "Starforged/Oracles/Core/Action/79",
            Floor: 79,
            Ceiling: 79,
            Result: "Resist"
          },
          {
            $id: "Starforged/Oracles/Core/Action/80",
            Floor: 80,
            Ceiling: 80,
            Result: "Restore"
          },
          {
            $id: "Starforged/Oracles/Core/Action/81",
            Floor: 81,
            Ceiling: 81,
            Result: "Reveal"
          },
          {
            $id: "Starforged/Oracles/Core/Action/82",
            Floor: 82,
            Ceiling: 82,
            Result: "Risk"
          },
          {
            $id: "Starforged/Oracles/Core/Action/83",
            Floor: 83,
            Ceiling: 83,
            Result: "Scheme"
          },
          {
            $id: "Starforged/Oracles/Core/Action/84",
            Floor: 84,
            Ceiling: 84,
            Result: "Search"
          },
          {
            $id: "Starforged/Oracles/Core/Action/85",
            Floor: 85,
            Ceiling: 85,
            Result: "Secure"
          },
          {
            $id: "Starforged/Oracles/Core/Action/86",
            Floor: 86,
            Ceiling: 86,
            Result: "Seize"
          },
          {
            $id: "Starforged/Oracles/Core/Action/87",
            Floor: 87,
            Ceiling: 87,
            Result: "Serve"
          },
          {
            $id: "Starforged/Oracles/Core/Action/88",
            Floor: 88,
            Ceiling: 88,
            Result: "Share"
          },
          {
            $id: "Starforged/Oracles/Core/Action/89",
            Floor: 89,
            Ceiling: 89,
            Result: "Strengthen"
          },
          {
            $id: "Starforged/Oracles/Core/Action/90",
            Floor: 90,
            Ceiling: 90,
            Result: "Summon"
          },
          {
            $id: "Starforged/Oracles/Core/Action/91",
            Floor: 91,
            Ceiling: 91,
            Result: "Support"
          },
          {
            $id: "Starforged/Oracles/Core/Action/92",
            Floor: 92,
            Ceiling: 92,
            Result: "Suppress"
          },
          {
            $id: "Starforged/Oracles/Core/Action/93",
            Floor: 93,
            Ceiling: 93,
            Result: "Surrender"
          },
          {
            $id: "Starforged/Oracles/Core/Action/94",
            Floor: 94,
            Ceiling: 94,
            Result: "Swear"
          },
          {
            $id: "Starforged/Oracles/Core/Action/95",
            Floor: 95,
            Ceiling: 95,
            Result: "Threaten"
          },
          {
            $id: "Starforged/Oracles/Core/Action/96",
            Floor: 96,
            Ceiling: 96,
            Result: "Transform"
          },
          {
            $id: "Starforged/Oracles/Core/Action/97",
            Floor: 97,
            Ceiling: 97,
            Result: "Uncover"
          },
          {
            $id: "Starforged/Oracles/Core/Action/98",
            Floor: 98,
            Ceiling: 98,
            Result: "Uphold"
          },
          {
            $id: "Starforged/Oracles/Core/Action/99",
            Floor: 99,
            Ceiling: 99,
            Result: "Weaken"
          },
          {
            $id: "Starforged/Oracles/Core/Action/100",
            Floor: 100,
            Ceiling: 100,
            Result: "Withdraw"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 297
        },
        $id: "Starforged/Oracles/Core/Theme",
        Name: "Theme",
        Category: "Starforged/Oracles/Core",
        Description: "When you [Ask the Oracle](Starforged/Moves/Fate/Ask_the_Oracle) about a goal, situation, or event, roll for an Action and Theme. Together, these provide an interpretative verb/noun prompt.",
        Display: {
          Title: "Theme",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Core/Theme",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Core/Theme"
              }
            ]
          }
        },
        Usage: {
          Suggestions: {
            "Oracle rolls": ["Starforged/Oracles/Core/Action"]
          },
          "Allow duplicates": !1
        },
        Content: {
          "Part of speech": ["noun", "common noun"],
          Tags: ["abstract noun"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Core/Theme/1",
            Floor: 1,
            Ceiling: 1,
            Result: "Ability"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/2",
            Floor: 2,
            Ceiling: 2,
            Result: "Advantage"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/3",
            Floor: 3,
            Ceiling: 3,
            Result: "Alliance"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/4",
            Floor: 4,
            Ceiling: 4,
            Result: "Authority"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/5",
            Floor: 5,
            Ceiling: 5,
            Result: "Balance"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/6",
            Floor: 6,
            Ceiling: 6,
            Result: "Barrier"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/7",
            Floor: 7,
            Ceiling: 7,
            Result: "Belief"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/8",
            Floor: 8,
            Ceiling: 8,
            Result: "Blood"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/9",
            Floor: 9,
            Ceiling: 9,
            Result: "Bond"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/10",
            Floor: 10,
            Ceiling: 10,
            Result: "Burden"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/11",
            Floor: 11,
            Ceiling: 11,
            Result: "Commerce"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/12",
            Floor: 12,
            Ceiling: 12,
            Result: "Community"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/13",
            Floor: 13,
            Ceiling: 13,
            Result: "Corruption"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/14",
            Floor: 14,
            Ceiling: 14,
            Result: "Creation"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/15",
            Floor: 15,
            Ceiling: 15,
            Result: "Crime"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/16",
            Floor: 16,
            Ceiling: 16,
            Result: "Culture"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/17",
            Floor: 17,
            Ceiling: 17,
            Result: "Cure"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/18",
            Floor: 18,
            Ceiling: 18,
            Result: "Danger"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/19",
            Floor: 19,
            Ceiling: 19,
            Result: "Death"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/20",
            Floor: 20,
            Ceiling: 20,
            Result: "Debt"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/21",
            Floor: 21,
            Ceiling: 21,
            Result: "Decay"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/22",
            Floor: 22,
            Ceiling: 22,
            Result: "Deception"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/23",
            Floor: 23,
            Ceiling: 23,
            Result: "Defense"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/24",
            Floor: 24,
            Ceiling: 24,
            Result: "Destiny"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/25",
            Floor: 25,
            Ceiling: 25,
            Result: "Disaster"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/26",
            Floor: 26,
            Ceiling: 26,
            Result: "Discovery"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/27",
            Floor: 27,
            Ceiling: 27,
            Result: "Disease"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/28",
            Floor: 28,
            Ceiling: 28,
            Result: "Dominion"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/29",
            Floor: 29,
            Ceiling: 29,
            Result: "Dream"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/30",
            Floor: 30,
            Ceiling: 30,
            Result: "Duty"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/31",
            Floor: 31,
            Ceiling: 31,
            Result: "Enemy"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/32",
            Floor: 32,
            Ceiling: 32,
            Result: "Expedition"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/33",
            Floor: 33,
            Ceiling: 33,
            Result: "Faction"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/34",
            Floor: 34,
            Ceiling: 34,
            Result: "Fame"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/35",
            Floor: 35,
            Ceiling: 35,
            Result: "Family"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/36",
            Floor: 36,
            Ceiling: 36,
            Result: "Fear"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/37",
            Floor: 37,
            Ceiling: 37,
            Result: "Fellowship"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/38",
            Floor: 38,
            Ceiling: 38,
            Result: "Freedom"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/39",
            Floor: 39,
            Ceiling: 39,
            Result: "Greed"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/40",
            Floor: 40,
            Ceiling: 40,
            Result: "Hardship"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/41",
            Floor: 41,
            Ceiling: 41,
            Result: "Hate"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/42",
            Floor: 42,
            Ceiling: 42,
            Result: "Health"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/43",
            Floor: 43,
            Ceiling: 43,
            Result: "History"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/44",
            Floor: 44,
            Ceiling: 44,
            Result: "Home"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/45",
            Floor: 45,
            Ceiling: 45,
            Result: "Honor"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/46",
            Floor: 46,
            Ceiling: 46,
            Result: "Hope"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/47",
            Floor: 47,
            Ceiling: 47,
            Result: "Humanity"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/48",
            Floor: 48,
            Ceiling: 48,
            Result: "Innocence"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/49",
            Floor: 49,
            Ceiling: 49,
            Result: "Knowledge"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/50",
            Floor: 50,
            Ceiling: 50,
            Result: "Labor"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/51",
            Floor: 51,
            Ceiling: 51,
            Result: "Language"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/52",
            Floor: 52,
            Ceiling: 52,
            Result: "Law"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/53",
            Floor: 53,
            Ceiling: 53,
            Result: "Legacy"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/54",
            Floor: 54,
            Ceiling: 54,
            Result: "Life"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/55",
            Floor: 55,
            Ceiling: 55,
            Result: "Love"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/56",
            Floor: 56,
            Ceiling: 56,
            Result: "Memory"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/57",
            Floor: 57,
            Ceiling: 57,
            Result: "Nature"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/58",
            Floor: 58,
            Ceiling: 58,
            Result: "Opportunity"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/59",
            Floor: 59,
            Ceiling: 59,
            Result: "Passage"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/60",
            Floor: 60,
            Ceiling: 60,
            Result: "Peace"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/61",
            Floor: 61,
            Ceiling: 61,
            Result: "Phenomenon"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/62",
            Floor: 62,
            Ceiling: 62,
            Result: "Possession"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/63",
            Floor: 63,
            Ceiling: 63,
            Result: "Power"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/64",
            Floor: 64,
            Ceiling: 64,
            Result: "Price"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/65",
            Floor: 65,
            Ceiling: 65,
            Result: "Pride"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/66",
            Floor: 66,
            Ceiling: 66,
            Result: "Prize"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/67",
            Floor: 67,
            Ceiling: 67,
            Result: "Prophesy"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/68",
            Floor: 68,
            Ceiling: 68,
            Result: "Protection"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/69",
            Floor: 69,
            Ceiling: 69,
            Result: "Quest"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/70",
            Floor: 70,
            Ceiling: 70,
            Result: "Relationship"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/71",
            Floor: 71,
            Ceiling: 71,
            Result: "Religion"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/72",
            Floor: 72,
            Ceiling: 72,
            Result: "Reputation"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/73",
            Floor: 73,
            Ceiling: 73,
            Result: "Resource"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/74",
            Floor: 74,
            Ceiling: 74,
            Result: "Revenge"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/75",
            Floor: 75,
            Ceiling: 75,
            Result: "Rival"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/76",
            Floor: 76,
            Ceiling: 76,
            Result: "Rumor"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/77",
            Floor: 77,
            Ceiling: 77,
            Result: "Safety"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/78",
            Floor: 78,
            Ceiling: 78,
            Result: "Sanctuary"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/79",
            Floor: 79,
            Ceiling: 79,
            Result: "Secret"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/80",
            Floor: 80,
            Ceiling: 80,
            Result: "Solution"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/81",
            Floor: 81,
            Ceiling: 81,
            Result: "Spirit"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/82",
            Floor: 82,
            Ceiling: 82,
            Result: "Stranger"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/83",
            Floor: 83,
            Ceiling: 83,
            Result: "Strategy"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/84",
            Floor: 84,
            Ceiling: 84,
            Result: "Strength"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/85",
            Floor: 85,
            Ceiling: 85,
            Result: "Superstition"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/86",
            Floor: 86,
            Ceiling: 86,
            Result: "Supply"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/87",
            Floor: 87,
            Ceiling: 87,
            Result: "Survival"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/88",
            Floor: 88,
            Ceiling: 88,
            Result: "Technology"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/89",
            Floor: 89,
            Ceiling: 89,
            Result: "Time"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/90",
            Floor: 90,
            Ceiling: 90,
            Result: "Tool"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/91",
            Floor: 91,
            Ceiling: 91,
            Result: "Trade"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/92",
            Floor: 92,
            Ceiling: 92,
            Result: "Truth"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/93",
            Floor: 93,
            Ceiling: 93,
            Result: "Vengeance"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/94",
            Floor: 94,
            Ceiling: 94,
            Result: "Vow"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/95",
            Floor: 95,
            Ceiling: 95,
            Result: "War"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/96",
            Floor: 96,
            Ceiling: 96,
            Result: "Warning"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/97",
            Floor: 97,
            Ceiling: 97,
            Result: "Weakness"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/98",
            Floor: 98,
            Ceiling: 98,
            Result: "Wealth"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/99",
            Floor: 99,
            Ceiling: 99,
            Result: "Weapon"
          },
          {
            $id: "Starforged/Oracles/Core/Theme/100",
            Floor: 100,
            Ceiling: 100,
            Result: "World"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 298
        },
        $id: "Starforged/Oracles/Core/Descriptor",
        Name: "Descriptor",
        Category: "Starforged/Oracles/Core",
        Description: "When you [Ask the Oracle](Starforged/Moves/Fate/Ask_the_Oracle) to help define the nature of a location, discovery, or encounter, roll for a Descriptor and a Focus for an adjective/noun prompt.",
        Display: {
          Title: "Descriptor",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Core/Descriptor",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Core/Descriptor"
              }
            ]
          }
        },
        Usage: {
          Suggestions: {
            "Oracle rolls": ["Starforged/Oracles/Core/Focus"]
          },
          "Allow duplicates": !1
        },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Core/Descriptor/1",
            Floor: 1,
            Ceiling: 1,
            Result: "Abandoned"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/2",
            Floor: 2,
            Ceiling: 2,
            Result: "Abundant"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/3",
            Floor: 3,
            Ceiling: 3,
            Result: "Active"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/4",
            Floor: 4,
            Ceiling: 4,
            Result: "Advanced"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/5",
            Floor: 5,
            Ceiling: 5,
            Result: "Alien"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/6",
            Floor: 6,
            Ceiling: 6,
            Result: "Ancient"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/7",
            Floor: 7,
            Ceiling: 7,
            Result: "Archaic"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/8",
            Floor: 8,
            Ceiling: 8,
            Result: "Automated"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/9",
            Floor: 9,
            Ceiling: 9,
            Result: "Barren"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/10",
            Floor: 10,
            Ceiling: 10,
            Result: "Biological"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/11",
            Floor: 11,
            Ceiling: 11,
            Result: "Blighted"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/12",
            Floor: 12,
            Ceiling: 12,
            Result: "Blocked"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/13",
            Floor: 13,
            Ceiling: 13,
            Result: "Breached"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/14",
            Floor: 14,
            Ceiling: 14,
            Result: "Broken"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/15",
            Floor: 15,
            Ceiling: 15,
            Result: "Captured"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/16",
            Floor: 16,
            Ceiling: 16,
            Result: "Chaotic"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/17",
            Floor: 17,
            Ceiling: 17,
            Result: "Civilized"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/18",
            Floor: 18,
            Ceiling: 18,
            Result: "Collapsed"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/19",
            Floor: 19,
            Ceiling: 19,
            Result: "Colossal"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/20",
            Floor: 20,
            Ceiling: 20,
            Result: "Confined"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/21",
            Floor: 21,
            Ceiling: 21,
            Result: "Conspicuous"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/22",
            Floor: 22,
            Ceiling: 22,
            Result: "Constructed"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/23",
            Floor: 23,
            Ceiling: 23,
            Result: "Contested"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/24",
            Floor: 24,
            Ceiling: 24,
            Result: "Corrupted"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/25",
            Floor: 25,
            Ceiling: 25,
            Result: "Created"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/26",
            Floor: 26,
            Ceiling: 26,
            Result: "Damaged"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/27",
            Floor: 27,
            Ceiling: 27,
            Result: "Dead"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/28",
            Floor: 28,
            Ceiling: 28,
            Result: "Deadly"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/29",
            Floor: 29,
            Ceiling: 29,
            Result: "Decaying"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/30",
            Floor: 30,
            Ceiling: 30,
            Result: "Defended"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/31",
            Floor: 31,
            Ceiling: 31,
            Result: "Depleted"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/32",
            Floor: 32,
            Ceiling: 32,
            Result: "Desolate"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/33",
            Floor: 33,
            Ceiling: 33,
            Result: "Destroyed"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/34",
            Floor: 34,
            Ceiling: 34,
            Result: "Diverse"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/35",
            Floor: 35,
            Ceiling: 35,
            Result: "Empty"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/36",
            Floor: 36,
            Ceiling: 36,
            Result: "Engulfed"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/37",
            Floor: 37,
            Ceiling: 37,
            Result: "Ensnaring"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/38",
            Floor: 38,
            Ceiling: 38,
            Result: "Expansive"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/39",
            Floor: 39,
            Ceiling: 39,
            Result: "Exposed"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/40",
            Floor: 40,
            Ceiling: 40,
            Result: "Fiery"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/41",
            Floor: 41,
            Ceiling: 41,
            Result: "Foreboding"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/42",
            Floor: 42,
            Ceiling: 42,
            Result: "Forgotten"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/43",
            Floor: 43,
            Ceiling: 43,
            Result: "Forsaken"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/44",
            Floor: 44,
            Ceiling: 44,
            Result: "Fortified"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/45",
            Floor: 45,
            Ceiling: 45,
            Result: "Foul"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/46",
            Floor: 46,
            Ceiling: 46,
            Result: "Fragile"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/47",
            Floor: 47,
            Ceiling: 47,
            Result: "Frozen"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/48",
            Floor: 48,
            Ceiling: 48,
            Result: "Functional"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/49",
            Floor: 49,
            Ceiling: 49,
            Result: "Grim"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/50",
            Floor: 50,
            Ceiling: 50,
            Result: "Guarded"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/51",
            Floor: 51,
            Ceiling: 51,
            Result: "Haunted"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/52",
            Floor: 52,
            Ceiling: 52,
            Result: "Hidden"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/53",
            Floor: 53,
            Ceiling: 53,
            Result: "Hoarded"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/54",
            Floor: 54,
            Ceiling: 54,
            Result: "Hostile"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/55",
            Floor: 55,
            Ceiling: 55,
            Result: "Immersed"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/56",
            Floor: 56,
            Ceiling: 56,
            Result: "Inaccessible"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/57",
            Floor: 57,
            Ceiling: 57,
            Result: "Infested"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/58",
            Floor: 58,
            Ceiling: 58,
            Result: "Inhabited"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/59",
            Floor: 59,
            Ceiling: 59,
            Result: "Isolated"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/60",
            Floor: 60,
            Ceiling: 60,
            Result: "Living"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/61",
            Floor: 61,
            Ceiling: 61,
            Result: "Lost"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/62",
            Floor: 62,
            Ceiling: 62,
            Result: "Lush"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/63",
            Floor: 63,
            Ceiling: 63,
            Result: "Makeshift"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/64",
            Floor: 64,
            Ceiling: 64,
            Result: "Mechanical"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/65",
            Floor: 65,
            Ceiling: 65,
            Result: "Misleading"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/66",
            Floor: 66,
            Ceiling: 66,
            Result: "Moving"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/67",
            Floor: 67,
            Ceiling: 67,
            Result: "Mysterious"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/68",
            Floor: 68,
            Ceiling: 68,
            Result: "Natural"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/69",
            Floor: 69,
            Ceiling: 69,
            Result: "New"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/70",
            Floor: 70,
            Ceiling: 70,
            Result: "Obscured"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/71",
            Floor: 71,
            Ceiling: 71,
            Result: "Open"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/72",
            Floor: 72,
            Ceiling: 72,
            Result: "Peaceful"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/73",
            Floor: 73,
            Ceiling: 73,
            Result: "Perilous"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/74",
            Floor: 74,
            Ceiling: 74,
            Result: "Pillaged"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/75",
            Floor: 75,
            Ceiling: 75,
            Result: "Powerful"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/76",
            Floor: 76,
            Ceiling: 76,
            Result: "Preserved"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/77",
            Floor: 77,
            Ceiling: 77,
            Result: "Prominent"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/78",
            Floor: 78,
            Ceiling: 78,
            Result: "Protected"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/79",
            Floor: 79,
            Ceiling: 79,
            Result: "Radiant"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/80",
            Floor: 80,
            Ceiling: 80,
            Result: "Rare"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/81",
            Floor: 81,
            Ceiling: 81,
            Result: "Remote"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/82",
            Floor: 82,
            Ceiling: 82,
            Result: "Rich"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/83",
            Floor: 83,
            Ceiling: 83,
            Result: "Ruined"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/84",
            Floor: 84,
            Ceiling: 84,
            Result: "Sacred"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/85",
            Floor: 85,
            Ceiling: 85,
            Result: "Safe"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/86",
            Floor: 86,
            Ceiling: 86,
            Result: "Sealed"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/87",
            Floor: 87,
            Ceiling: 87,
            Result: "Secret"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/88",
            Floor: 88,
            Ceiling: 88,
            Result: "Settled"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/89",
            Floor: 89,
            Ceiling: 89,
            Result: "Shrouded"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/90",
            Floor: 90,
            Ceiling: 90,
            Result: "Stolen"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/91",
            Floor: 91,
            Ceiling: 91,
            Result: "Strange"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/92",
            Floor: 92,
            Ceiling: 92,
            Result: "Subsurface"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/93",
            Floor: 93,
            Ceiling: 93,
            Result: "Toxic"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/94",
            Floor: 94,
            Ceiling: 94,
            Result: "Trapped"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/95",
            Floor: 95,
            Ceiling: 95,
            Result: "Undiscovered"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/96",
            Floor: 96,
            Ceiling: 96,
            Result: "Unnatural"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/97",
            Floor: 97,
            Ceiling: 97,
            Result: "Unstable"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/98",
            Floor: 98,
            Ceiling: 98,
            Result: "Untamed"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/99",
            Floor: 99,
            Ceiling: 99,
            Result: "Valuable"
          },
          {
            $id: "Starforged/Oracles/Core/Descriptor/100",
            Floor: 100,
            Ceiling: 100,
            Result: "Violent"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 299
        },
        $id: "Starforged/Oracles/Core/Focus",
        Name: "Focus",
        Category: "Starforged/Oracles/Core",
        Description: "When you [Ask the Oracle](Starforged/Moves/Fate/Ask_the_Oracle) to help define the nature of a location, discovery, or encounter, roll for a Descriptor and a Focus for an adjective/noun prompt.",
        Display: {
          Title: "Focus",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Core/Focus",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Core/Focus"
              }
            ]
          }
        },
        Usage: {
          Suggestions: {
            "Oracle rolls": ["Starforged/Oracles/Core/Descriptor"]
          },
          "Allow duplicates": !1
        },
        Content: {
          "Part of speech": ["noun", "common noun"],
          Tags: ["concrete noun"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Core/Focus/1",
            Floor: 1,
            Ceiling: 1,
            Result: "Alarm"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/2",
            Floor: 2,
            Ceiling: 2,
            Result: "Anomaly"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/3",
            Floor: 3,
            Ceiling: 3,
            Result: "Apparition"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/4",
            Floor: 4,
            Ceiling: 4,
            Result: "Archive"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/5",
            Floor: 5,
            Ceiling: 5,
            Result: "Art"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/6",
            Floor: 6,
            Ceiling: 6,
            Result: "Artifact"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/7",
            Floor: 7,
            Ceiling: 7,
            Result: "Atmosphere"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/8",
            Floor: 8,
            Ceiling: 8,
            Result: "Battleground"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/9",
            Floor: 9,
            Ceiling: 9,
            Result: "Beacon"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/10",
            Floor: 10,
            Ceiling: 10,
            Result: "Being"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/11",
            Floor: 11,
            Ceiling: 11,
            Result: "Blockade"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/12",
            Floor: 12,
            Ceiling: 12,
            Result: "Boundary"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/13",
            Floor: 13,
            Ceiling: 13,
            Result: "Cache"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/14",
            Floor: 14,
            Ceiling: 14,
            Result: "Cargo"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/15",
            Floor: 15,
            Ceiling: 15,
            Result: "Commodity"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/16",
            Floor: 16,
            Ceiling: 16,
            Result: "Confinement"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/17",
            Floor: 17,
            Ceiling: 17,
            Result: "Connection"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/18",
            Floor: 18,
            Ceiling: 18,
            Result: "Container"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/19",
            Floor: 19,
            Ceiling: 19,
            Result: "Creation"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/20",
            Floor: 20,
            Ceiling: 20,
            Result: "Creature"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/21",
            Floor: 21,
            Ceiling: 21,
            Result: "Crossing"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/22",
            Floor: 22,
            Ceiling: 22,
            Result: "Data"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/23",
            Floor: 23,
            Ceiling: 23,
            Result: "Debris"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/24",
            Floor: 24,
            Ceiling: 24,
            Result: "Device"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/25",
            Floor: 25,
            Ceiling: 25,
            Result: "Dimension"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/26",
            Floor: 26,
            Ceiling: 26,
            Result: "Discovery"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/27",
            Floor: 27,
            Ceiling: 27,
            Result: "Ecosystem"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/28",
            Floor: 28,
            Ceiling: 28,
            Result: "Enclosure"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/29",
            Floor: 29,
            Ceiling: 29,
            Result: "Energy"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/30",
            Floor: 30,
            Ceiling: 30,
            Result: "Environment"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/31",
            Floor: 31,
            Ceiling: 31,
            Result: "Equipment"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/32",
            Floor: 32,
            Ceiling: 32,
            Result: "Experiment"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/33",
            Floor: 33,
            Ceiling: 33,
            Result: "Facility"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/34",
            Floor: 34,
            Ceiling: 34,
            Result: "Faction"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/35",
            Floor: 35,
            Ceiling: 35,
            Result: "Fleet"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/36",
            Floor: 36,
            Ceiling: 36,
            Result: "Force"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/37",
            Floor: 37,
            Ceiling: 37,
            Result: "Fortification"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/38",
            Floor: 38,
            Ceiling: 38,
            Result: "Gas"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/39",
            Floor: 39,
            Ceiling: 39,
            Result: "Grave"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/40",
            Floor: 40,
            Ceiling: 40,
            Result: "Habitat"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/41",
            Floor: 41,
            Ceiling: 41,
            Result: "Hazard"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/42",
            Floor: 42,
            Ceiling: 42,
            Result: "Hideaway"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/43",
            Floor: 43,
            Ceiling: 43,
            Result: "Home"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/44",
            Floor: 44,
            Ceiling: 44,
            Result: "Illusion"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/45",
            Floor: 45,
            Ceiling: 45,
            Result: "Industry"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/46",
            Floor: 46,
            Ceiling: 46,
            Result: "Intelligence"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/47",
            Floor: 47,
            Ceiling: 47,
            Result: "Lair"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/48",
            Floor: 48,
            Ceiling: 48,
            Result: "Lifeform"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/49",
            Floor: 49,
            Ceiling: 49,
            Result: "Liquid"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/50",
            Floor: 50,
            Ceiling: 50,
            Result: "Machine"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/51",
            Floor: 51,
            Ceiling: 51,
            Result: "Material"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/52",
            Floor: 52,
            Ceiling: 52,
            Result: "Mechanism"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/53",
            Floor: 53,
            Ceiling: 53,
            Result: "Message"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/54",
            Floor: 54,
            Ceiling: 54,
            Result: "Mineral"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/55",
            Floor: 55,
            Ceiling: 55,
            Result: "Monument"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/56",
            Floor: 56,
            Ceiling: 56,
            Result: "Obstacle"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/57",
            Floor: 57,
            Ceiling: 57,
            Result: "Organism"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/58",
            Floor: 58,
            Ceiling: 58,
            Result: "Outbreak"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/59",
            Floor: 59,
            Ceiling: 59,
            Result: "Outpost"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/60",
            Floor: 60,
            Ceiling: 60,
            Result: "Path"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/61",
            Floor: 61,
            Ceiling: 61,
            Result: "People"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/62",
            Floor: 62,
            Ceiling: 62,
            Result: "Person"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/63",
            Floor: 63,
            Ceiling: 63,
            Result: "Plant"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/64",
            Floor: 64,
            Ceiling: 64,
            Result: "Portal"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/65",
            Floor: 65,
            Ceiling: 65,
            Result: "Reality"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/66",
            Floor: 66,
            Ceiling: 66,
            Result: "Refuge"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/67",
            Floor: 67,
            Ceiling: 67,
            Result: "Relic"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/68",
            Floor: 68,
            Ceiling: 68,
            Result: "Remains"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/69",
            Floor: 69,
            Ceiling: 69,
            Result: "Rendezvous"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/70",
            Floor: 70,
            Ceiling: 70,
            Result: "Resource"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/71",
            Floor: 71,
            Ceiling: 71,
            Result: "Route"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/72",
            Floor: 72,
            Ceiling: 72,
            Result: "Ruins"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/73",
            Floor: 73,
            Ceiling: 73,
            Result: "Salvage"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/74",
            Floor: 74,
            Ceiling: 74,
            Result: "Settlement"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/75",
            Floor: 75,
            Ceiling: 75,
            Result: "Shelter"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/76",
            Floor: 76,
            Ceiling: 76,
            Result: "Ship"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/77",
            Floor: 77,
            Ceiling: 77,
            Result: "Shortcut"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/78",
            Floor: 78,
            Ceiling: 78,
            Result: "Signal"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/79",
            Floor: 79,
            Ceiling: 79,
            Result: "Sound"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/80",
            Floor: 80,
            Ceiling: 80,
            Result: "Storage"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/81",
            Floor: 81,
            Ceiling: 81,
            Result: "Storm"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/82",
            Floor: 82,
            Ceiling: 82,
            Result: "Structure"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/83",
            Floor: 83,
            Ceiling: 83,
            Result: "Supply"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/84",
            Floor: 84,
            Ceiling: 84,
            Result: "Symbol"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/85",
            Floor: 85,
            Ceiling: 85,
            Result: "System"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/86",
            Floor: 86,
            Ceiling: 86,
            Result: "Technology"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/87",
            Floor: 87,
            Ceiling: 87,
            Result: "Terrain"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/88",
            Floor: 88,
            Ceiling: 88,
            Result: "Territory"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/89",
            Floor: 89,
            Ceiling: 89,
            Result: "Threshold"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/90",
            Floor: 90,
            Ceiling: 90,
            Result: "Time"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/91",
            Floor: 91,
            Ceiling: 91,
            Result: "Transport"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/92",
            Floor: 92,
            Ceiling: 92,
            Result: "Trap"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/93",
            Floor: 93,
            Ceiling: 93,
            Result: "Treasure"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/94",
            Floor: 94,
            Ceiling: 94,
            Result: "Vault"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/95",
            Floor: 95,
            Ceiling: 95,
            Result: "Vehicle"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/96",
            Floor: 96,
            Ceiling: 96,
            Result: "Viewpoint"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/97",
            Floor: 97,
            Ceiling: 97,
            Result: "Void"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/98",
            Floor: 98,
            Ceiling: 98,
            Result: "Weapon"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/99",
            Floor: 99,
            Ceiling: 99,
            Result: "World"
          },
          {
            $id: "Starforged/Oracles/Core/Focus/100",
            Floor: 100,
            Ceiling: 100,
            Result: "Wreckage"
          }
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Oracles/Creatures",
    Name: "Creatures",
    Description: "Roll for a basic form, and flesh out the creature\u2019s appearance using this Creature First Look table. Then, roll on the Encountered Behavior table to envision this creature\u2019s motivation and frame how the encounter begins.",
    Display: { Title: "Creatures" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 336
        },
        $id: "Starforged/Oracles/Creatures/Environment",
        Name: "Environment",
        Category: "Starforged/Oracles/Creatures",
        Description: "Choose the closest match for your location. Or roll to identify the primary habitat of a creature.",
        Display: {
          Title: "Environment",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Creatures/Environment",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Creatures/Environment"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Allow duplicates": !1,
          Sets: [{ Key: "Environment" }]
        },
        Content: { "Part of speech": ["noun"] },
        Table: [
          {
            $id: "Starforged/Oracles/Creatures/Environment/1-5",
            Floor: 1,
            Ceiling: 5,
            Result: "Space",
            "Oracle rolls": ["Starforged/Oracles/Creatures/Basic_Form/Space"],
            Attributes: [{ Key: "Environment", Value: "Space" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Environment/6-15",
            Floor: 6,
            Ceiling: 15,
            Result: "Interior",
            "Oracle rolls": [
              "Starforged/Oracles/Creatures/Basic_Form/Interior"
            ],
            Attributes: [{ Key: "Environment", Value: "Interior" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Environment/16-55",
            Floor: 16,
            Ceiling: 55,
            Result: "Land",
            "Oracle rolls": ["Starforged/Oracles/Creatures/Basic_Form/Land"],
            Attributes: [{ Key: "Environment", Value: "Land" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Environment/56-80",
            Floor: 56,
            Ceiling: 80,
            Result: "Liquid",
            "Oracle rolls": [
              "Starforged/Oracles/Creatures/Basic_Form/Liquid"
            ],
            Attributes: [{ Key: "Environment", Value: "Liquid" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Environment/81-100",
            Floor: 81,
            Ceiling: 100,
            Result: "Air",
            "Oracle rolls": ["Starforged/Oracles/Creatures/Basic_Form/Air"],
            Attributes: [{ Key: "Environment", Value: "Air" }]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 336
        },
        $id: "Starforged/Oracles/Creatures/Scale",
        Name: "Scale",
        Category: "Starforged/Oracles/Creatures",
        Display: {
          Title: "Scale",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Creatures/Scale",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Creatures/Scale"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Allow duplicates": !1,
          Sets: [{ Key: "Creature Scale" }]
        },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Creatures/Scale/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Minuscule (bug-sized)",
            Attributes: [{ Key: "Creature Scale", Value: "Minuscule" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Scale/4-10",
            Floor: 4,
            Ceiling: 10,
            Result: "Tiny (rodent-sized)",
            Attributes: [{ Key: "Creature Scale", Value: "Tiny" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Scale/11-25",
            Floor: 11,
            Ceiling: 25,
            Result: "Small (dog-sized)",
            Attributes: [{ Key: "Creature Scale", Value: "Small" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Scale/26-60",
            Floor: 26,
            Ceiling: 60,
            Result: "Medium (person-sized)",
            Attributes: [{ Key: "Creature Scale", Value: "Medium" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Scale/61-90",
            Floor: 61,
            Ceiling: 90,
            Result: "Large (vehicle-sized)",
            Attributes: [{ Key: "Creature Scale", Value: "Large" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Scale/91-99",
            Floor: 91,
            Ceiling: 99,
            Result: "Huge (whale-sized)",
            Attributes: [{ Key: "Creature Scale", Value: "Huge" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Scale/100",
            Floor: 100,
            Ceiling: 100,
            Result: "[\u23F5Ultra-scale](Starforged/Oracles/Creatures/Ultra-scale)",
            "Oracle rolls": ["Starforged/Oracles/Creatures/Ultra-scale"]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 336
        },
        $id: "Starforged/Oracles/Creatures/Ultra-scale",
        Name: "Ultra-scale",
        Category: "Starforged/Oracles/Creatures",
        Display: {
          Title: "Ultra-scale",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Creatures/Ultra-scale",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Creatures/Ultra-scale"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Allow duplicates": !1,
          Sets: [{ Key: "Creature Scale" }]
        },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Creatures/Ultra-scale/1-89",
            Floor: 1,
            Ceiling: 89,
            Result: "Titanic (hill-sized)",
            Attributes: [{ Key: "Creature Scale", Value: "Titanic" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Ultra-scale/90-99",
            Floor: 90,
            Ceiling: 99,
            Result: "Colossal (mountain-sized)",
            Attributes: [{ Key: "Creature Scale", Value: "Colossal" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Ultra-scale/100",
            Floor: 100,
            Ceiling: 100,
            Result: "Vast (planet-sized)",
            Attributes: [{ Key: "Creature Scale", Value: "Vast" }]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 337
        },
        $id: "Starforged/Oracles/Creatures/Basic_Form",
        Name: "Basic Form",
        Category: "Starforged/Oracles/Creatures",
        Description: "Roll for a basic form, and flesh out the creature\u2019s appearance using the First Look table.",
        Display: {
          Title: "Basic Form",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Space",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Space",
                "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Space"
              },
              {
                Label: "Interior",
                "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Interior"
              },
              {
                Label: "Land",
                "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Land"
              },
              {
                Label: "Liquid",
                "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Liquid"
              },
              {
                Label: "Air",
                "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Air"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          Requires: { Attributes: [{ Key: "Environment" }] },
          "Allow duplicates": !1
        },
        Content: { "Part of speech": ["fragment"] },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 337
            },
            $id: "Starforged/Oracles/Creatures/Basic_Form/Space",
            Name: "Space",
            "Member of": "Starforged/Oracles/Creatures/Basic_Form",
            Category: "Starforged/Oracles/Creatures",
            Display: {
              Title: "Space",
              "Column of": "Starforged/Oracles/Creatures/Basic_Form",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Space"
                  }
                ]
              },
              Icon: "../../img/vector/Oracles/Creature/Environment/Space.svg"
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [{ Key: "Environment", Values: ["Space"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/1-5",
                Floor: 1,
                Ceiling: 5,
                Result: "Amoeba / pseudopods"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/6-20",
                Floor: 6,
                Ceiling: 20,
                Result: "Amorphous / elemental"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/21-30",
                Floor: 21,
                Ceiling: 30,
                Result: "Avian / winged"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/31-32",
                Floor: 31,
                Ceiling: 32,
                Result: "Beast / mammal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/33-34",
                Floor: 33,
                Ceiling: 34,
                Result: "Crustacean / shelled"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/35-37",
                Floor: 35,
                Ceiling: 37,
                Result: "Fish / torpedo-shaped"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/38-39",
                Floor: 38,
                Ceiling: 39,
                Result: "Humanoid / bipedal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/40-41",
                Floor: 40,
                Ceiling: 41,
                Result: "Insectoid / exoskeletal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/42-60",
                Floor: 42,
                Ceiling: 60,
                Result: "Jellyfish / gasbag"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/61-62",
                Floor: 61,
                Ceiling: 62,
                Result: "Lizard / reptilian"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/63-67",
                Floor: 63,
                Ceiling: 67,
                Result: "Octopoid / tentacled"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/68-72",
                Floor: 68,
                Ceiling: 72,
                Result: "Plant / fungus"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/73-82",
                Floor: 73,
                Ceiling: 82,
                Result: "Ray / flat-bodied"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/83-84",
                Floor: 83,
                Ceiling: 84,
                Result: "Snake / eel"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/85-86",
                Floor: 85,
                Ceiling: 86,
                Result: "Spider / web-weaver"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/87-88",
                Floor: 87,
                Ceiling: 88,
                Result: "Starfish / symmetrical"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/89-90",
                Floor: 89,
                Ceiling: 90,
                Result: "Worm / slug / larva"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Space/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 337
            },
            $id: "Starforged/Oracles/Creatures/Basic_Form/Interior",
            Name: "Interior",
            "Member of": "Starforged/Oracles/Creatures/Basic_Form",
            Category: "Starforged/Oracles/Creatures",
            Display: {
              Title: "Interior",
              "Column of": "Starforged/Oracles/Creatures/Basic_Form",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Interior",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Interior"
                  }
                ]
              },
              Icon: "../../img/vector/Oracles/Creature/Environment/Interior.svg"
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Environment", Values: ["Interior"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/1-3",
                Floor: 1,
                Ceiling: 3,
                Result: "Amoeba / pseudopods"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/4-6",
                Floor: 4,
                Ceiling: 6,
                Result: "Amorphous / elemental"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/7-12",
                Floor: 7,
                Ceiling: 12,
                Result: "Avian / winged"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/13-19",
                Floor: 13,
                Ceiling: 19,
                Result: "Beast / mammal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/20-22",
                Floor: 20,
                Ceiling: 22,
                Result: "Crustacean / shelled"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/23-24",
                Floor: 23,
                Ceiling: 24,
                Result: "Fish / torpedo-shaped"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/25-37",
                Floor: 25,
                Ceiling: 37,
                Result: "Humanoid / bipedal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/38-49",
                Floor: 38,
                Ceiling: 49,
                Result: "Insectoid / exoskeletal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/50-51",
                Floor: 50,
                Ceiling: 51,
                Result: "Jellyfish / gasbag"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/52-56",
                Floor: 52,
                Ceiling: 56,
                Result: "Lizard / reptilian"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/57-58",
                Floor: 57,
                Ceiling: 58,
                Result: "Octopoid / tentacled"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/59-63",
                Floor: 59,
                Ceiling: 63,
                Result: "Plant / fungus"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/64-65",
                Floor: 64,
                Ceiling: 65,
                Result: "Ray / flat-bodied"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/66-68",
                Floor: 66,
                Ceiling: 68,
                Result: "Snake / eel"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/69-83",
                Floor: 69,
                Ceiling: 83,
                Result: "Spider / web-weaver"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/84-85",
                Floor: 84,
                Ceiling: 85,
                Result: "Starfish / symmetrical"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "Worm / slug / larva"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Interior/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 337
            },
            $id: "Starforged/Oracles/Creatures/Basic_Form/Land",
            Name: "Land",
            "Member of": "Starforged/Oracles/Creatures/Basic_Form",
            Category: "Starforged/Oracles/Creatures",
            Display: {
              Title: "Land",
              "Column of": "Starforged/Oracles/Creatures/Basic_Form",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Land",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Land"
                  }
                ]
              },
              Icon: "../../img/vector/Oracles/Creature/Environment/Land.svg"
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [{ Key: "Environment", Values: ["Land"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/1-2",
                Floor: 1,
                Ceiling: 2,
                Result: "Amoeba / pseudopods"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/3-5",
                Floor: 3,
                Ceiling: 5,
                Result: "Amorphous / elemental"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/6-10",
                Floor: 6,
                Ceiling: 10,
                Result: "Avian / winged"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/11-25",
                Floor: 11,
                Ceiling: 25,
                Result: "Beast / mammal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/26-32",
                Floor: 26,
                Ceiling: 32,
                Result: "Crustacean / shelled"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/33-34",
                Floor: 33,
                Ceiling: 34,
                Result: "Fish / torpedo-shaped"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/35-39",
                Floor: 35,
                Ceiling: 39,
                Result: "Humanoid / bipedal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/40-49",
                Floor: 40,
                Ceiling: 49,
                Result: "Insectoid / exoskeletal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/50-51",
                Floor: 50,
                Ceiling: 51,
                Result: "Jellyfish / gasbag"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/52-58",
                Floor: 52,
                Ceiling: 58,
                Result: "Lizard / reptilian"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/59-60",
                Floor: 59,
                Ceiling: 60,
                Result: "Octopoid / tentacled"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/61-65",
                Floor: 61,
                Ceiling: 65,
                Result: "Plant / fungus"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/66-67",
                Floor: 66,
                Ceiling: 67,
                Result: "Ray / flat-bodied"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/68-74",
                Floor: 68,
                Ceiling: 74,
                Result: "Snake / eel"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/75-81",
                Floor: 75,
                Ceiling: 81,
                Result: "Spider / web-weaver"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/82-83",
                Floor: 82,
                Ceiling: 83,
                Result: "Starfish / symmetrical"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/84-90",
                Floor: 84,
                Ceiling: 90,
                Result: "Worm / slug / larva"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Land/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 337
            },
            $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid",
            Name: "Liquid",
            "Member of": "Starforged/Oracles/Creatures/Basic_Form",
            Category: "Starforged/Oracles/Creatures",
            Display: {
              Title: "Liquid",
              "Column of": "Starforged/Oracles/Creatures/Basic_Form",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Liquid",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Liquid"
                  }
                ]
              },
              Icon: "../../img/vector/Oracles/Creature/Environment/Liquid.svg"
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [{ Key: "Environment", Values: ["Liquid"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/1-5",
                Floor: 1,
                Ceiling: 5,
                Result: "Amoeba / pseudopods"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/6-8",
                Floor: 6,
                Ceiling: 8,
                Result: "Amorphous / elemental"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/9-11",
                Floor: 9,
                Ceiling: 11,
                Result: "Avian / winged"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/12-17",
                Floor: 12,
                Ceiling: 17,
                Result: "Beast / mammal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/18-24",
                Floor: 18,
                Ceiling: 24,
                Result: "Crustacean / shelled"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/25-39",
                Floor: 25,
                Ceiling: 39,
                Result: "Fish / torpedo-shaped"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/40-42",
                Floor: 40,
                Ceiling: 42,
                Result: "Humanoid / bipedal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/43-45",
                Floor: 43,
                Ceiling: 45,
                Result: "Insectoid / exoskeletal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/46-53",
                Floor: 46,
                Ceiling: 53,
                Result: "Jellyfish / gasbag"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/54-56",
                Floor: 54,
                Ceiling: 56,
                Result: "Lizard / reptilian"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/57-63",
                Floor: 57,
                Ceiling: 63,
                Result: "Octopoid / tentacled"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/64-68",
                Floor: 64,
                Ceiling: 68,
                Result: "Plant / fungus"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/69-75",
                Floor: 69,
                Ceiling: 75,
                Result: "Ray / flat-bodied"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/76-80",
                Floor: 76,
                Ceiling: 80,
                Result: "Snake / eel"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/81-82",
                Floor: 81,
                Ceiling: 82,
                Result: "Spider / web-weaver"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/83-87",
                Floor: 83,
                Ceiling: 87,
                Result: "Starfish / symmetrical"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/88-90",
                Floor: 88,
                Ceiling: 90,
                Result: "Worm / slug / larva"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Liquid/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 337
            },
            $id: "Starforged/Oracles/Creatures/Basic_Form/Air",
            Name: "Air",
            "Member of": "Starforged/Oracles/Creatures/Basic_Form",
            Category: "Starforged/Oracles/Creatures",
            Display: {
              Title: "Air",
              "Column of": "Starforged/Oracles/Creatures/Basic_Form",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Air",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Creatures/Basic_Form/Air"
                  }
                ]
              },
              Icon: "../../img/vector/Oracles/Creature/Environment/Air.svg"
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [{ Key: "Environment", Values: ["Air"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/1-2",
                Floor: 1,
                Ceiling: 2,
                Result: "Amoeba / pseudopods"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/3-12",
                Floor: 3,
                Ceiling: 12,
                Result: "Amorphous / elemental"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/13-37",
                Floor: 13,
                Ceiling: 37,
                Result: "Avian / winged"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/38-40",
                Floor: 38,
                Ceiling: 40,
                Result: "Beast / mammal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/41-42",
                Floor: 41,
                Ceiling: 42,
                Result: "Crustacean / shelled"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/43-47",
                Floor: 43,
                Ceiling: 47,
                Result: "Fish / torpedo-shaped"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/48-49",
                Floor: 48,
                Ceiling: 49,
                Result: "Humanoid / bipedal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/50-51",
                Floor: 50,
                Ceiling: 51,
                Result: "Insectoid / exoskeletal"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/52-66",
                Floor: 52,
                Ceiling: 66,
                Result: "Jellyfish / gasbag"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/67-68",
                Floor: 67,
                Ceiling: 68,
                Result: "Lizard / reptilian"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/69-70",
                Floor: 69,
                Ceiling: 70,
                Result: "Octopoid / tentacled"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/71-72",
                Floor: 71,
                Ceiling: 72,
                Result: "Plant / fungus"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/73-82",
                Floor: 73,
                Ceiling: 82,
                Result: "Ray / flat-bodied"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/83-84",
                Floor: 83,
                Ceiling: 84,
                Result: "Snake / eel"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/85-86",
                Floor: 85,
                Ceiling: 86,
                Result: "Spider / web-weaver"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/87-88",
                Floor: 87,
                Ceiling: 88,
                Result: "Starfish / symmetrical"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/89-90",
                Floor: 89,
                Ceiling: 90,
                Result: "Worm / slug / larva"
              },
              {
                $id: "Starforged/Oracles/Creatures/Basic_Form/Air/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 338
        },
        $id: "Starforged/Oracles/Creatures/First_Look",
        Name: "First Look",
        Category: "Starforged/Oracles/Creatures",
        Description: "Roll for a basic form, and flesh out the creature\u2019s appearance using the First Look table.",
        Display: {
          Title: "Creature First Look",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Creatures/First_Look",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Creatures/First_Look"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Max rolls": 2,
          "Allow duplicates": !1
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["description"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Creatures/First_Look/1-2",
            Floor: 1,
            Ceiling: 2,
            Result: "Antennae or sensory organs"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/3-4",
            Floor: 3,
            Ceiling: 4,
            Result: "Armored"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/5-6",
            Floor: 5,
            Ceiling: 6,
            Result: "Beautiful"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/7-8",
            Floor: 7,
            Ceiling: 8,
            Result: "Biotech"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/9-10",
            Floor: 9,
            Ceiling: 10,
            Result: "Bony or gaunt"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/11-12",
            Floor: 11,
            Ceiling: 12,
            Result: "Brutish or muscled"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/13-14",
            Floor: 13,
            Ceiling: 14,
            Result: "Camouflaged"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/15-16",
            Floor: 15,
            Ceiling: 16,
            Result: "Claws or talons"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/17-18",
            Floor: 17,
            Ceiling: 18,
            Result: "Compound eyes"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/19-20",
            Floor: 19,
            Ceiling: 20,
            Result: "Comprised of many creatures"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/21-22",
            Floor: 21,
            Ceiling: 22,
            Result: "Corrupted"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/23-24",
            Floor: 23,
            Ceiling: 24,
            Result: "Crystalline"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/25-26",
            Floor: 25,
            Ceiling: 26,
            Result: "Dead or undead"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/27-28",
            Floor: 27,
            Ceiling: 28,
            Result: "Distinctive markings"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/29-30",
            Floor: 29,
            Ceiling: 30,
            Result: "Distinctive smell"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/31-32",
            Floor: 31,
            Ceiling: 32,
            Result: "Distinctive sound"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/33-34",
            Floor: 33,
            Ceiling: 34,
            Result: "Dripping mucus"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/35-36",
            Floor: 35,
            Ceiling: 36,
            Result: "Elongated Neck"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/37-38",
            Floor: 37,
            Ceiling: 38,
            Result: "Energy emissions"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/39-40",
            Floor: 39,
            Ceiling: 40,
            Result: "Extra limbs"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/41-42",
            Floor: 41,
            Ceiling: 42,
            Result: "Faceless or inexpressive"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/43-44",
            Floor: 43,
            Ceiling: 44,
            Result: "Fangs or rows of teeth"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/45-46",
            Floor: 45,
            Ceiling: 46,
            Result: "Feathered"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/47-48",
            Floor: 47,
            Ceiling: 48,
            Result: "Fungal growth"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/49-50",
            Floor: 49,
            Ceiling: 50,
            Result: "Fur, hair, or filaments"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/51-52",
            Floor: 51,
            Ceiling: 52,
            Result: "Graceful"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/53-54",
            Floor: 53,
            Ceiling: 54,
            Result: "Hideous"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/55-56",
            Floor: 55,
            Ceiling: 56,
            Result: "Hooded or crested"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/57-58",
            Floor: 57,
            Ceiling: 58,
            Result: "Immobile or trapped"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/59-60",
            Floor: 59,
            Ceiling: 60,
            Result: "Injured or scarred"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/61-62",
            Floor: 61,
            Ceiling: 62,
            Result: "Iridescent"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/63-64",
            Floor: 63,
            Ceiling: 64,
            Result: "Long-limbed"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/65-66",
            Floor: 65,
            Ceiling: 66,
            Result: "Luminescent"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/67-68",
            Floor: 67,
            Ceiling: 68,
            Result: "Mandibles or pincers"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/69-70",
            Floor: 69,
            Ceiling: 70,
            Result: "Many-eyed"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/71-72",
            Floor: 71,
            Ceiling: 72,
            Result: "Mineral or metallic"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/73-74",
            Floor: 73,
            Ceiling: 74,
            Result: "Multi-jointed"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/75-76",
            Floor: 75,
            Ceiling: 76,
            Result: "Multi-segmented body"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/77-78",
            Floor: 77,
            Ceiling: 78,
            Result: "Ornamented or colorful"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/79-80",
            Floor: 79,
            Ceiling: 80,
            Result: "Oversized mouth"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/81-82",
            Floor: 81,
            Ceiling: 82,
            Result: "Prominent tail"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/83-84",
            Floor: 83,
            Ceiling: 84,
            Result: "Prominent wings or fins"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/85-86",
            Floor: 85,
            Ceiling: 86,
            Result: "Ridges or plates"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/87-88",
            Floor: 87,
            Ceiling: 88,
            Result: "Scaled"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/89-90",
            Floor: 89,
            Ceiling: 90,
            Result: "Single eye or oversized eyes"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/91-92",
            Floor: 91,
            Ceiling: 92,
            Result: "Spikes or spines"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/93-94",
            Floor: 93,
            Ceiling: 94,
            Result: "Stinger or barbs"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/95-96",
            Floor: 95,
            Ceiling: 96,
            Result: "Tentacles or tendrils"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/97-98",
            Floor: 97,
            Ceiling: 98,
            Result: "Translucent"
          },
          {
            $id: "Starforged/Oracles/Creatures/First_Look/99-100",
            Floor: 99,
            Ceiling: 100,
            Result: "Visible symbiote"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 338
        },
        $id: "Starforged/Oracles/Creatures/Encountered_Behavior",
        Name: "Encountered Behavior",
        Category: "Starforged/Oracles/Creatures",
        Description: "Roll once on the Encountered Behavior table to define this creature\u2019s motivation and frame how the encounter begins.",
        Display: {
          Title: "Encountered Behavior",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Creatures/Encountered_Behavior",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Creatures/Encountered_Behavior"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Allow duplicates": !1,
          Sets: [{ Key: "Encountered Behavior" }]
        },
        Content: { "Part of speech": ["noun", "common noun"] },
        Table: [
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/1-5",
            Floor: 1,
            Ceiling: 5,
            Result: "Ambusher",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Ambusher" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/6-10",
            Floor: 6,
            Ceiling: 10,
            Result: "Apex predator",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Apex predator" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/11-14",
            Floor: 11,
            Ceiling: 14,
            Result: "Builder",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Builder" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/15-19",
            Floor: 15,
            Ceiling: 19,
            Result: "Camouflager",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Camouflager" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/20-24",
            Floor: 20,
            Ceiling: 24,
            Result: "Forager",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Forager" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/25-29",
            Floor: 25,
            Ceiling: 29,
            Result: "Grazer",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Grazer" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/30-33",
            Floor: 30,
            Ceiling: 33,
            Result: "Herder",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Herder" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/34-37",
            Floor: 34,
            Ceiling: 37,
            Result: "Hibernator",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Hibernator" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/38-41",
            Floor: 38,
            Ceiling: 41,
            Result: "Hoarder",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Hoarder" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/42-46",
            Floor: 42,
            Ceiling: 46,
            Result: "Hunter",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Hunter" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/47-51",
            Floor: 47,
            Ceiling: 51,
            Result: "Lurer",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Lurer" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/52-55",
            Floor: 52,
            Ceiling: 55,
            Result: "Migratory",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Migratory" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/56-60",
            Floor: 56,
            Ceiling: 60,
            Result: "Mimic",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Mimic" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/61-65",
            Floor: 61,
            Ceiling: 65,
            Result: "Nester",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Nester" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/66-70",
            Floor: 66,
            Ceiling: 70,
            Result: "Pack hunter",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Pack hunter" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/71-75",
            Floor: 71,
            Ceiling: 75,
            Result: "Prey",
            Attributes: [{ Key: "Encountered Behavior", Value: "Prey" }]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/76-80",
            Floor: 76,
            Ceiling: 80,
            Result: "Protector",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Protector" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/81-85",
            Floor: 81,
            Ceiling: 85,
            Result: "Scavenger",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Scavenger" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/86-90",
            Floor: 86,
            Ceiling: 90,
            Result: "Tracker",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Tracker" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/91-95",
            Floor: 91,
            Ceiling: 95,
            Result: "Trapper",
            Attributes: [
              { Key: "Encountered Behavior", Value: "Trapper" }
            ]
          },
          {
            $id: "Starforged/Oracles/Creatures/Encountered_Behavior/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 339
        },
        $id: "Starforged/Oracles/Creatures/Revealed_Aspect",
        Name: "Revealed Aspect",
        Category: "Starforged/Oracles/Creatures",
        Description: "Roll on this table as you interact with the creature to introduce new features or behaviors. Some results may contradict the established nature of a creature. For example, an amorphous creature that you envisioned as a mass of pure energy would not have typical physical features. If a result doesn\u2019t fit, feel free to ignore, reroll, or adjust. Or envision how this contradiction signals a new understanding or unexpected transformation.",
        Display: {
          Title: "Revealed Creature Aspect",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Creatures/Revealed_Aspect",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Creatures/Revealed_Aspect"
              }
            ]
          }
        },
        Usage: { "Max rolls": 2, "Allow duplicates": !1 },
        Content: { "Part of speech": ["fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/1-2",
            Floor: 1,
            Ceiling: 2,
            Result: "Alternative environment"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/3-4",
            Floor: 3,
            Ceiling: 4,
            Result: "Alternative movement"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/5-6",
            Floor: 5,
            Ceiling: 6,
            Result: "Alternative senses"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/7-8",
            Floor: 7,
            Ceiling: 8,
            Result: "Burrower"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/9-10",
            Floor: 9,
            Ceiling: 10,
            Result: "Chameleon"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/11-12",
            Floor: 11,
            Ceiling: 12,
            Result: "Clever"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/13-14",
            Floor: 13,
            Ceiling: 14,
            Result: "Consumes energy"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/15-16",
            Floor: 15,
            Ceiling: 16,
            Result: "Consumes inorganic matter"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/17-18",
            Floor: 17,
            Ceiling: 18,
            Result: "Controlled or puppeteered"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/19-20",
            Floor: 19,
            Ceiling: 20,
            Result: "Controls lesser creatures"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/21-22",
            Floor: 21,
            Ceiling: 22,
            Result: "Corrosive excretion"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/23-24",
            Floor: 23,
            Ceiling: 24,
            Result: "Crusher or constrictor"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/25-26",
            Floor: 25,
            Ceiling: 26,
            Result: "Egg sac or carried offspring"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/27-28",
            Floor: 27,
            Ceiling: 28,
            Result: "Electric shock"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/29-30",
            Floor: 29,
            Ceiling: 30,
            Result: "Electromagnetic pulse"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/31-32",
            Floor: 31,
            Ceiling: 32,
            Result: "Energy breath"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/33-34",
            Floor: 33,
            Ceiling: 34,
            Result: "Energy manipulation"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/35-36",
            Floor: 35,
            Ceiling: 36,
            Result: "Engineered biology"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/37-38",
            Floor: 37,
            Ceiling: 38,
            Result: "Enhanced senses"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/39-40",
            Floor: 39,
            Ceiling: 40,
            Result: "Enhanced strength"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/41-42",
            Floor: 41,
            Ceiling: 42,
            Result: "Entangling secretion"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/43-44",
            Floor: 43,
            Ceiling: 44,
            Result: "Extradimensional"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/45-46",
            Floor: 45,
            Ceiling: 46,
            Result: "Hallucinogen secretion"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/47-48",
            Floor: 47,
            Ceiling: 48,
            Result: "Hidden symbiote"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/49-50",
            Floor: 49,
            Ceiling: 50,
            Result: "Hive mind"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/51-52",
            Floor: 51,
            Ceiling: 52,
            Result: "Illusionary"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/53-54",
            Floor: 53,
            Ceiling: 54,
            Result: "Infectious"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/55-56",
            Floor: 55,
            Ceiling: 56,
            Result: "Infested with parasites"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/57-58",
            Floor: 57,
            Ceiling: 58,
            Result: "Intimidating threat display"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/59-60",
            Floor: 59,
            Ceiling: 60,
            Result: "Limited sense"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/61-62",
            Floor: 61,
            Ceiling: 62,
            Result: "Magnetic"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/63-64",
            Floor: 63,
            Ceiling: 64,
            Result: "Mental influence or control"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/65-66",
            Floor: 65,
            Ceiling: 66,
            Result: "Metamorphic"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/67-68",
            Floor: 67,
            Ceiling: 68,
            Result: "Noxious cloud or spores"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/69-70",
            Floor: 69,
            Ceiling: 70,
            Result: "Paralytic toxin"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/71-72",
            Floor: 71,
            Ceiling: 72,
            Result: "Parasitic"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/73-74",
            Floor: 73,
            Ceiling: 74,
            Result: "Pheromones"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/75-76",
            Floor: 75,
            Ceiling: 76,
            Result: "Poisonous"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/77-78",
            Floor: 77,
            Ceiling: 78,
            Result: "Powerful bite"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/79-80",
            Floor: 79,
            Ceiling: 80,
            Result: "Proboscis or inner jaw"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/81-82",
            Floor: 81,
            Ceiling: 82,
            Result: "Projectile attack"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/83-84",
            Floor: 83,
            Ceiling: 84,
            Result: "Radioactive"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/85-86",
            Floor: 85,
            Ceiling: 86,
            Result: "Regeneration"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/87-88",
            Floor: 87,
            Ceiling: 88,
            Result: "Replication"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/89-90",
            Floor: 89,
            Ceiling: 90,
            Result: "Sacrificial defense"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/91-92",
            Floor: 91,
            Ceiling: 92,
            Result: "Shapechanger"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/93-94",
            Floor: 93,
            Ceiling: 94,
            Result: "Telekinetic"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/95-96",
            Floor: 95,
            Ceiling: 96,
            Result: "Teleportation"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/97-98",
            Floor: 97,
            Ceiling: 98,
            Result: "Territorial"
          },
          {
            $id: "Starforged/Oracles/Creatures/Revealed_Aspect/99-100",
            Floor: 99,
            Ceiling: 100,
            Result: "Toxic spew"
          }
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Oracles/Derelicts",
    Name: "Derelicts",
    Description: "Derelicts are the forsaken relics of human endeavors. Use these First Look tables for your initial survey of the derelict. To reveal more about the look and original function or nature of the site, roll on appropriate tables in the Starship or Settlement oracles. If you explore the depths of a derelict, you may use the zone oracles on the following pages to help envision what you find.",
    Display: { Title: "Derelicts" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 348
        },
        $id: "Starforged/Oracles/Derelicts/Location",
        Name: "Location",
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Location",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Derelicts/Location",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Derelicts/Location"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Allow duplicates": !1,
          Sets: [{ Key: "Location" }]
        },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Derelicts/Location/1-40",
            Floor: 1,
            Ceiling: 40,
            Result: "Planetside",
            Attributes: [{ Key: "Location", Value: "Planetside" }]
          },
          {
            $id: "Starforged/Oracles/Derelicts/Location/41-60",
            Floor: 41,
            Ceiling: 60,
            Result: "Orbital",
            Attributes: [{ Key: "Location", Value: "Orbital" }]
          },
          {
            $id: "Starforged/Oracles/Derelicts/Location/61-100",
            Floor: 61,
            Ceiling: 100,
            Result: "Deep Space",
            Attributes: [{ Key: "Location", Value: "Deep Space" }]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 348
        },
        $id: "Starforged/Oracles/Derelicts/Type",
        Name: "Type",
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Type (by Location)",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Derelicts/Type/Planetside",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Planetside",
                "Use content from": "Starforged/Oracles/Derelicts/Type/Planetside"
              },
              {
                Label: "Orbital",
                "Use content from": "Starforged/Oracles/Derelicts/Type/Orbital"
              },
              {
                Label: "Deep_Space",
                "Use content from": "Starforged/Oracles/Derelicts/Type/Deep_Space"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          Requires: { Attributes: [{ Key: "Location" }] },
          "Allow duplicates": !1,
          Sets: [{ Key: "Derelict Type" }]
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 348
            },
            $id: "Starforged/Oracles/Derelicts/Type/Planetside",
            Name: "Planetside",
            "Member of": "Starforged/Oracles/Derelicts/Type",
            Category: "Starforged/Oracles/Derelicts",
            Display: {
              Title: "Planetside",
              "Column of": "Starforged/Oracles/Derelicts/Type",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Type/Planetside",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Type/Planetside"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Location", Values: ["Planetside"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Derelict Type" }]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Type/Planetside/1-25",
                Floor: 1,
                Ceiling: 25,
                Result: "Starship",
                Attributes: [
                  { Key: "Derelict Type", Value: "Starship" }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Type/Planetside/26-100",
                Floor: 26,
                Ceiling: 100,
                Result: "Settlement",
                Attributes: [
                  { Key: "Derelict Type", Value: "Settlement" }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 348
            },
            $id: "Starforged/Oracles/Derelicts/Type/Orbital",
            Name: "Orbital",
            "Member of": "Starforged/Oracles/Derelicts/Type",
            Category: "Starforged/Oracles/Derelicts",
            Display: {
              Title: "Orbital",
              "Column of": "Starforged/Oracles/Derelicts/Type",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Type/Orbital",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Type/Orbital"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [{ Key: "Location", Values: ["Orbital"] }]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Derelict Type" }]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Type/Orbital/1-40",
                Floor: 1,
                Ceiling: 40,
                Result: "Starship",
                Attributes: [
                  { Key: "Derelict Type", Value: "Starship" }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Type/Orbital/41-100",
                Floor: 41,
                Ceiling: 100,
                Result: "Settlement",
                Attributes: [
                  { Key: "Derelict Type", Value: "Settlement" }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 348
            },
            $id: "Starforged/Oracles/Derelicts/Type/Deep_Space",
            Name: "Deep Space",
            "Member of": "Starforged/Oracles/Derelicts/Type",
            Category: "Starforged/Oracles/Derelicts",
            Display: {
              Title: "Deep Space",
              "Column of": "Starforged/Oracles/Derelicts/Type",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Type/Deep_Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Type/Deep_Space"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Location", Values: ["Deep Space"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Derelict Type" }]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Type/Deep_Space/1-75",
                Floor: 1,
                Ceiling: 75,
                Result: "Starship",
                Attributes: [
                  { Key: "Derelict Type", Value: "Starship" }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Type/Deep_Space/76-100",
                Floor: 76,
                Ceiling: 100,
                Result: "Settlement",
                Attributes: [
                  { Key: "Derelict Type", Value: "Settlement" }
                ]
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 348
        },
        $id: "Starforged/Oracles/Derelicts/Condition",
        Name: "Condition",
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Condition",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Derelicts/Condition",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Derelicts/Condition"
              }
            ]
          }
        },
        Usage: { Initial: !0, "Allow duplicates": !1 },
        Content: { "Part of speech": ["fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Derelicts/Condition/1-10",
            Floor: 1,
            Ceiling: 10,
            Result: "Functional"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Condition/11-30",
            Floor: 11,
            Ceiling: 30,
            Result: "Limited power"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Condition/31-60",
            Floor: 31,
            Ceiling: 60,
            Result: "Cold and dark"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Condition/61-90",
            Floor: 61,
            Ceiling: 90,
            Result: "Damaged or breached"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Condition/91-98",
            Floor: 91,
            Ceiling: 98,
            Result: "Heavily damaged"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Condition/99-100",
            Floor: 99,
            Ceiling: 100,
            Result: "Impending destruction"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 349
        },
        $id: "Starforged/Oracles/Derelicts/Outer_First_Look",
        Name: "Outer First Look",
        Aliases: ["First Look"],
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Outer First Look",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Derelicts/Outer_First_Look",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Derelicts/Outer_First_Look"
              }
            ]
          }
        },
        Usage: { Initial: !0, "Allow duplicates": !1 },
        Content: { "Part of speech": ["fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Derelicts/Outer_First_Look/1-15",
            Floor: 1,
            Ceiling: 15,
            Result: "Blocked access"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Outer_First_Look/16-30",
            Floor: 16,
            Ceiling: 30,
            Result: "Corpses"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Outer_First_Look/31-45",
            Floor: 31,
            Ceiling: 45,
            Result: "Hazardous readings"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Outer_First_Look/46-50",
            Floor: 46,
            Ceiling: 50,
            Result: "Mutated structure"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Outer_First_Look/51-60",
            Floor: 51,
            Ceiling: 60,
            Result: "Odd orientation"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Outer_First_Look/61-65",
            Floor: 61,
            Ceiling: 65,
            Result: "Overgrown or entangled"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Outer_First_Look/66-80",
            Floor: 66,
            Ceiling: 80,
            Result: "Sending a signal or message"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Outer_First_Look/81-85",
            Floor: 81,
            Ceiling: 85,
            Result: "Signs that others are here"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Outer_First_Look/86-95",
            Floor: 86,
            Ceiling: 95,
            Result: "Stripped exterior"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Outer_First_Look/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Time or reality distortions"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 349
        },
        $id: "Starforged/Oracles/Derelicts/Inner_First_Look",
        Name: "Inner First Look",
        Aliases: ["First Look"],
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Inner First Look",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Derelicts/Inner_First_Look",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Derelicts/Inner_First_Look"
              }
            ]
          }
        },
        Usage: { "Max rolls": 2, "Allow duplicates": !1 },
        Content: { "Part of speech": ["fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Abnormal gravity"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/4-6",
            Floor: 4,
            Ceiling: 6,
            Result: "Active bots"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/7-9",
            Floor: 7,
            Ceiling: 9,
            Result: "Archaic equipment"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/10-12",
            Floor: 10,
            Ceiling: 12,
            Result: "Automated announcements"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/13-15",
            Floor: 13,
            Ceiling: 15,
            Result: "Biological infestation"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/16-18",
            Floor: 16,
            Ceiling: 18,
            Result: "Charred surfaces"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/19-21",
            Floor: 19,
            Ceiling: 21,
            Result: "Claw marks"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/22-24",
            Floor: 22,
            Ceiling: 24,
            Result: "Cluttered with debris"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/25-27",
            Floor: 25,
            Ceiling: 27,
            Result: "Corroded surfaces"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/28-30",
            Floor: 28,
            Ceiling: 30,
            Result: "Cramped spaces"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/31-33",
            Floor: 31,
            Ceiling: 33,
            Result: "Creaking hull"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/34-36",
            Floor: 34,
            Ceiling: 36,
            Result: "Esoteric writing or symbols"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/37-39",
            Floor: 37,
            Ceiling: 39,
            Result: "Evidence of new inhabitants"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/40-42",
            Floor: 40,
            Ceiling: 42,
            Result: "Exposed wiring or conduits"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/43-45",
            Floor: 43,
            Ceiling: 45,
            Result: "Flashing strobe lights"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/46-48",
            Floor: 46,
            Ceiling: 48,
            Result: "Fluctuating power"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/49-51",
            Floor: 49,
            Ceiling: 51,
            Result: "Haunting visions of the dead"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/52-54",
            Floor: 52,
            Ceiling: 54,
            Result: "Hazardous temperature"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/55-57",
            Floor: 55,
            Ceiling: 57,
            Result: "Heavy steam or moisture"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/58-60",
            Floor: 58,
            Ceiling: 60,
            Result: "Littered with corpses"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/61-63",
            Floor: 61,
            Ceiling: 63,
            Result: "Nesting or feeding creatures"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/64-66",
            Floor: 64,
            Ceiling: 66,
            Result: "Ornate furnishings"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/67-69",
            Floor: 67,
            Ceiling: 69,
            Result: "Scarred by gunfire"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/70-72",
            Floor: 70,
            Ceiling: 72,
            Result: "Sealed against intruders"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/73-75",
            Floor: 73,
            Ceiling: 75,
            Result: "Signs of looting or scavenging"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/76-78",
            Floor: 76,
            Ceiling: 78,
            Result: "Smell of decay"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/79-81",
            Floor: 79,
            Ceiling: 81,
            Result: "Splattered with blood"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/82-84",
            Floor: 82,
            Ceiling: 84,
            Result: "Temporal distortions"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/85-87",
            Floor: 85,
            Ceiling: 87,
            Result: "Thick haze or smoke"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/88-90",
            Floor: 88,
            Ceiling: 90,
            Result: "Unstable energy surges"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/91-93",
            Floor: 91,
            Ceiling: 93,
            Result: "Watchful AI"
          },
          {
            $id: "Starforged/Oracles/Derelicts/Inner_First_Look/94-100",
            Floor: 94,
            Ceiling: 100,
            Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Descriptor",
              "Starforged/Oracles/Core/Focus"
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 351
        },
        $id: "Starforged/Oracles/Derelicts/Zones",
        Name: "Zones",
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Derelict Zones",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Derelicts/Zones/Starship",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Starship",
                "Use content from": "Starforged/Oracles/Derelicts/Zones/Starship"
              },
              {
                Label: "Settlement",
                "Use content from": "Starforged/Oracles/Derelicts/Zones/Settlement"
              }
            ]
          }
        },
        Usage: {
          Repeatable: !0,
          Requires: { Attributes: [{ Key: "Derelict Type" }] },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 351
            },
            $id: "Starforged/Oracles/Derelicts/Zones/Starship",
            Name: "Starship",
            "Member of": "Starforged/Oracles/Derelicts/Zones",
            Category: "Starforged/Oracles/Derelicts",
            Display: {
              Title: "Starship",
              "Column of": "Starforged/Oracles/Derelicts/Zone",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Zones/Starship",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Zones/Starship"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Derelict Type", Values: ["Starship"] }
                ]
              },
              "Allow duplicates": !1
            },
            Table: [
              {
                Floor: null,
                Ceiling: null,
                Result: "[\u23F5Access](Starforged/Oracles/Derelicts/Access)"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Starship/1-5",
                Floor: 1,
                Ceiling: 5,
                Result: "[\u23F5Community](Starforged/Oracles/Derelicts/Community)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [
                        { Key: "Zone", Values: ["Community"] }
                      ]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Starship/6-30",
                Floor: 6,
                Ceiling: 30,
                Result: "[\u23F5Engineering](Starforged/Oracles/Derelicts/Engineering)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [
                        { Key: "Zone", Values: ["Engineering"] }
                      ]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Starship/31-55",
                Floor: 31,
                Ceiling: 55,
                Result: "[\u23F5Living](Starforged/Oracles/Derelicts/Living)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [{ Key: "Zone", Values: ["Living"] }]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Starship/56-65",
                Floor: 56,
                Ceiling: 65,
                Result: "[\u23F5Medical](Starforged/Oracles/Derelicts/Medical)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [{ Key: "Zone", Values: ["Medical"] }]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Starship/66-85",
                Floor: 66,
                Ceiling: 85,
                Result: "[\u23F5Operations](Starforged/Oracles/Derelicts/Operations)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [
                        { Key: "Zone", Values: ["Operations"] }
                      ]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Starship/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "[\u23F5Production](Starforged/Oracles/Derelicts/Production)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [
                        { Key: "Zone", Values: ["Production"] }
                      ]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Starship/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "[\u23F5Research](Starforged/Oracles/Derelicts/Research)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [
                        { Key: "Zone", Values: ["Research"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 351
            },
            $id: "Starforged/Oracles/Derelicts/Zones/Settlement",
            Name: "Settlement",
            "Member of": "Starforged/Oracles/Derelicts/Zones",
            Category: "Starforged/Oracles/Derelicts",
            Display: {
              Title: "Settlement",
              "Column of": "Starforged/Oracles/Derelicts/Zone",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Zones/Settlement",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Zones/Settlement"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Derelict Type", Values: ["Settlement"] }
                ]
              },
              "Allow duplicates": !1
            },
            Table: [
              {
                Floor: null,
                Ceiling: null,
                Result: "[\u23F5Access](Starforged/Oracles/Derelicts/Access)"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Settlement/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "[\u23F5Community](Starforged/Oracles/Derelicts/Community)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [
                        { Key: "Zone", Values: ["Community"] }
                      ]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Settlement/21-30",
                Floor: 21,
                Ceiling: 30,
                Result: "[\u23F5Engineering](Starforged/Oracles/Derelicts/Engineering)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [
                        { Key: "Zone", Values: ["Engineering"] }
                      ]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Settlement/31-50",
                Floor: 31,
                Ceiling: 50,
                Result: "[\u23F5Living](Starforged/Oracles/Derelicts/Living)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [{ Key: "Zone", Values: ["Living"] }]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Settlement/51-60",
                Floor: 51,
                Ceiling: 60,
                Result: "[\u23F5Medical](Starforged/Oracles/Derelicts/Medical)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [{ Key: "Zone", Values: ["Medical"] }]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Settlement/61-70",
                Floor: 61,
                Ceiling: 70,
                Result: "[\u23F5Operations](Starforged/Oracles/Derelicts/Operations)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [
                        { Key: "Zone", Values: ["Operations"] }
                      ]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Settlement/71-90",
                Floor: 71,
                Ceiling: 90,
                Result: "[\u23F5Production](Starforged/Oracles/Derelicts/Production)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [
                        { Key: "Zone", Values: ["Production"] }
                      ]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Zones/Settlement/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "[\u23F5Research](Starforged/Oracles/Derelicts/Research)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [
                        { Key: "Zone", Values: ["Research"] }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    Categories: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 352
        },
        $id: "Starforged/Oracles/Derelicts/Access",
        Name: "Access",
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Access",
          Icon: "../../img/vector/Derelicts/Access.svg"
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Zone", Values: ["Access"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 352
            },
            $id: "Starforged/Oracles/Derelicts/Access/Area",
            Name: "Area",
            Category: "Starforged/Oracles/Derelicts/Access",
            Description: "Roll on this table to help envision the spaces you encounter in that segment of your exploration. Each zone may consist of one or more areas as appropriate to what you envision for the overall complexity of the derelict. If you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), an area can serve as a waypoint in your survey of the derelict.",
            Display: {
              Title: "Area",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Access/Area",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Access/Area"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Access"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Access/Area/1-50",
                Floor: 1,
                Ceiling: 50,
                Result: "Corridor"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Area/51-60",
                Floor: 51,
                Ceiling: 60,
                Result: "Stairs"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Area/61-70",
                Floor: 61,
                Ceiling: 70,
                Result: "Lift or elevator"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Area/71-80",
                Floor: 71,
                Ceiling: 80,
                Result: "Catwalk or bridge"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Area/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "Vertical shaft or ladder"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Area/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "Hub or intersection"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Area/91-95",
                Floor: 91,
                Ceiling: 95,
                Result: "Crawl space or duct"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Area/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "Airlock or external"
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 352
            },
            $id: "Starforged/Oracles/Derelicts/Access/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Derelicts/Access",
            Description: "Roll on this table when you want to reveal new aspects of your current surroundings. This is best used sparingly\u2014a bit of occasional extra detail or ambiance\u2014rather than rolling for every segment of your exploration.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Access/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Access/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Access"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/1-5",
                Floor: 1,
                Ceiling: 5,
                Result: "Abandoned gear"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/6-10",
                Floor: 6,
                Ceiling: 10,
                Result: "Blood trail"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/11-15",
                Floor: 11,
                Ceiling: 15,
                Result: "Breached door or hatch"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/16-20",
                Floor: 16,
                Ceiling: 20,
                Result: "Control or terminal station"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/21-25",
                Floor: 21,
                Ceiling: 25,
                Result: "Corpse"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/26-30",
                Floor: 26,
                Ceiling: 30,
                Result: "Dismantled equipment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/31-35",
                Floor: 31,
                Ceiling: 35,
                Result: "Flashing strobes"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/36-40",
                Floor: 36,
                Ceiling: 40,
                Result: "Leaking pipes"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/41-45",
                Floor: 41,
                Ceiling: 45,
                Result: "Makeshift barricade"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/46-50",
                Floor: 46,
                Ceiling: 50,
                Result: "Opened or missing panels"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/51-55",
                Floor: 51,
                Ceiling: 55,
                Result: "Organic growths"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/56-60",
                Floor: 56,
                Ceiling: 60,
                Result: "Ruined bot"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/61-65",
                Floor: 61,
                Ceiling: 65,
                Result: "Scrawled warning"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/66-70",
                Floor: 66,
                Ceiling: 70,
                Result: "Sealed breach"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/71-75",
                Floor: 71,
                Ceiling: 75,
                Result: "Sounds of movement"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/76-80",
                Floor: 76,
                Ceiling: 80,
                Result: "Steam or smoke"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "Wandering bot"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "Windows or viewports"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/91-95",
                Floor: 91,
                Ceiling: 95,
                Result: "Wrecked passage or debris"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Feature/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 352
            },
            $id: "Starforged/Oracles/Derelicts/Access/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Derelicts/Access",
            Description: "Roll on this table when you want help envisioning a complication or danger within a zone, such as when suffering a cost as an outcome of your exploration.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Access/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Access/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Access"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Access/Peril/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Alarm or failsafe is triggered"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Peril/11-20",
                Floor: 11,
                Ceiling: 20,
                Result: "Automated defenses"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Peril/21-30",
                Floor: 21,
                Ceiling: 30,
                Result: "Blocked or sealed path"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Peril/31-40",
                Floor: 31,
                Ceiling: 40,
                Result: "Dreadful scene of death or violence"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Peril/41-50",
                Floor: 41,
                Ceiling: 50,
                Result: "Foe closes in"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Peril/51-60",
                Floor: 51,
                Ceiling: 60,
                Result: "Gear is failing or broken"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Peril/61-70",
                Floor: 61,
                Ceiling: 70,
                Result: "Hazardous environmental change"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Peril/71-80",
                Floor: 71,
                Ceiling: 80,
                Result: "Path is trapped"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Peril/81-90",
                Floor: 81,
                Ceiling: 90,
                Result: "Unsettling sound or disturbance"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 352
            },
            $id: "Starforged/Oracles/Derelicts/Access/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Derelicts/Access",
            Description: "Roll on this table when you want inspiration for a beneficial encounter or event within a derelict, such as when you roll a strong hit with a match as you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), or if you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint) and find an opportunity.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Access/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Access/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Access"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Access/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Directions, shortcut, or alternate path"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Encounter with a friendly survivor, explorer, or denizen"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Hopeful signs of life"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Opening to outmaneuver or escape a threat or foe"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Access/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Useful equipment"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 353
        },
        $id: "Starforged/Oracles/Derelicts/Community",
        Name: "Community",
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Community",
          Icon: "../../img/vector/Derelicts/Community.svg"
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Zone", Values: ["Community"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 353
            },
            $id: "Starforged/Oracles/Derelicts/Community/Area",
            Name: "Area",
            Category: "Starforged/Oracles/Derelicts/Community",
            Description: "Roll on this table to help envision the spaces you encounter in that segment of your exploration. Each zone may consist of one or more areas as appropriate to what you envision for the overall complexity of the derelict. If you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), an area can serve as a waypoint in your survey of the derelict.",
            Display: {
              Title: "Area",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Community/Area",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Community/Area"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Community"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Community/Area/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Bar or club"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Area/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Classroom or education"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Area/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Concourse or hub"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Area/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Entertainment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Area/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Gym or fitness"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Area/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Market or trade"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Area/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Park or garden"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Area/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Promenade or overlook"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Area/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Restaurant or dining"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Area/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Temple or chapel"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Area/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "New zone",
                "Game objects": [{ "Object type": "Derelict Zone" }]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Area/86-100",
                Floor: 86,
                Ceiling: 100,
                Result: "New zone via [\u23F5Access](Starforged/Oracles/Derelicts/Access)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [{ Key: "Zone", Values: ["Access"] }]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 353
            },
            $id: "Starforged/Oracles/Derelicts/Community/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Derelicts/Community",
            Description: "Roll on this table when you want to reveal new aspects of your current surroundings. This is best used sparingly\u2014a bit of occasional extra detail or ambiance\u2014rather than rolling for every segment of your exploration.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Community/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Community/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Community"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Community/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Ad-hoc memorials"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Art depicting historic event"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Artificial environment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Automated announcements"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Barricaded area"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Gaming devices or interfaces"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Graffiti or vandalization"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Guard post or surveillance"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Mass grave or corpses"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Panoramic viewport"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Rubble or debris"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Feature/89-100",
                Floor: 89,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 353
            },
            $id: "Starforged/Oracles/Derelicts/Community/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Derelicts/Community",
            Description: "Roll on this table when you want help envisioning a complication or danger within a zone, such as when suffering a cost as an outcome of your exploration.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Community/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Community/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Community"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Community/Peril/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Biological infestation"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Peril/11-20",
                Floor: 11,
                Ceiling: 20,
                Result: "Breached or broken structure"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Peril/21-30",
                Floor: 21,
                Ceiling: 30,
                Result: "Distressing signs of mass violence or death"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Peril/31-40",
                Floor: 31,
                Ceiling: 40,
                Result: "Flooded environment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Peril/41-50",
                Floor: 41,
                Ceiling: 50,
                Result: "Foe lurks within concealment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Peril/51-60",
                Floor: 51,
                Ceiling: 60,
                Result: "Fragile structural integrity"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Peril/61-70",
                Floor: 61,
                Ceiling: 70,
                Result: "Haunting vision of life here before the fall"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Peril/71-80",
                Floor: 71,
                Ceiling: 80,
                Result: "Hazardous environmental change"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Peril/81-90",
                Floor: 81,
                Ceiling: 90,
                Result: "Heartbreaking memento of lost lives"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 353
            },
            $id: "Starforged/Oracles/Derelicts/Community/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Derelicts/Community",
            Description: "Roll on this table when you want inspiration for a beneficial encounter or event within a derelict, such as when you roll a strong hit with a match as you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), or if you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint) and find an opportunity.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Community/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Community/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Community"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Community/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Culturally significant object or artifact"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Salvageable goods or resources"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Secure area offers a moment of peace"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Terminal with access to site details"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Community/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Valuable item"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 354
        },
        $id: "Starforged/Oracles/Derelicts/Engineering",
        Name: "Engineering",
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Engineering",
          Icon: "../../img/vector/Derelicts/Engineering.svg"
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Zone", Values: ["Engineering"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 354
            },
            $id: "Starforged/Oracles/Derelicts/Engineering/Area",
            Name: "Area",
            Category: "Starforged/Oracles/Derelicts/Engineering",
            Description: "Roll on this table to help envision the spaces you encounter in that segment of your exploration. Each zone may consist of one or more areas as appropriate to what you envision for the overall complexity of the derelict. If you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), an area can serve as a waypoint in your survey of the derelict.",
            Display: {
              Title: "Area",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Engineering/Area",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Engineering/Area"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Engineering"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Area/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Control room"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Area/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Engine room or power core"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Area/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Engineering offices"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Area/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Equipment storage"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Area/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Fuel or coolant tanks"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Area/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Life support"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Area/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Maintenance tube"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Area/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Vehicle bay or garage"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Area/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Water processing"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Area/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Workshop"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Area/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "New zone",
                "Game objects": [{ "Object type": "Derelict Zone" }]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Area/86-100",
                Floor: 86,
                Ceiling: 100,
                Result: "New zone via [\u23F5Access](Starforged/Oracles/Derelicts/Access)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [{ Key: "Zone", Values: ["Access"] }]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 354
            },
            $id: "Starforged/Oracles/Derelicts/Engineering/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Derelicts/Engineering",
            Description: "Roll on this table when you want to reveal new aspects of your current surroundings. This is best used sparingly\u2014a bit of occasional extra detail or ambiance\u2014rather than rolling for every segment of your exploration.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Engineering/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Engineering/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Engineering"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Cluttered workbench"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Control terminal"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Crane or lift"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Disassembled equipment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Flickering status monitors"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Jury-rigged equipment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Multilevel layout"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Pipes and valves"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Sharp ozone smell"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Unfinished project"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Utility bots"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Feature/89-100",
                Floor: 89,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 354
            },
            $id: "Starforged/Oracles/Derelicts/Engineering/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Derelicts/Engineering",
            Description: "Roll on this table when you want help envisioning a complication or danger within a zone, such as when suffering a cost as an outcome of your exploration.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Engineering/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Engineering/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Engineering"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Peril/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Corrosive leak"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Peril/11-20",
                Floor: 11,
                Ceiling: 20,
                Result: "Erratic utility bots"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Peril/21-30",
                Floor: 21,
                Ceiling: 30,
                Result: "Failing equipment requires a specific part or skill"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Peril/31-40",
                Floor: 31,
                Ceiling: 40,
                Result: "Fire or energy surge"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Peril/41-50",
                Floor: 41,
                Ceiling: 50,
                Result: "Precarious or broken path"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Peril/51-60",
                Floor: 51,
                Ceiling: 60,
                Result: "Radioactive hotspot"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Peril/61-70",
                Floor: 61,
                Ceiling: 70,
                Result: "Sabotaged equipment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Peril/71-80",
                Floor: 71,
                Ceiling: 80,
                Result: "Shrouded atmosphere conceals a lurking foe"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Peril/81-90",
                Floor: 81,
                Ceiling: 90,
                Result: "Unstable or failing power core"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 354
            },
            $id: "Starforged/Oracles/Derelicts/Engineering/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Derelicts/Engineering",
            Description: "Roll on this table when you want inspiration for a beneficial encounter or event within a derelict, such as when you roll a strong hit with a match as you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), or if you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint) and find an opportunity.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Engineering/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Engineering/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Engineering"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Advanced or experimental equipment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Chance to restore power or function"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Helpful plans or schematics"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Helpful utility bot"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Engineering/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Useful tool or device"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 355
        },
        $id: "Starforged/Oracles/Derelicts/Living",
        Name: "Living",
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Living",
          Icon: "../../img/vector/Derelicts/Living.svg"
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Zone", Values: ["Living"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 355
            },
            $id: "Starforged/Oracles/Derelicts/Living/Area",
            Name: "Area",
            Category: "Starforged/Oracles/Derelicts/Living",
            Description: "Roll on this table to help envision the spaces you encounter in that segment of your exploration. Each zone may consist of one or more areas as appropriate to what you envision for the overall complexity of the derelict. If you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), an area can serve as a waypoint in your survey of the derelict.",
            Display: {
              Title: "Area",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Living/Area",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Living/Area"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Living"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Living/Area/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Food storage"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Area/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Galley or kitchen"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Area/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Laundry"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Area/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Locker room or storage"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Area/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Mess hall or dining"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Area/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Observation lounge"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Area/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Quarters (communal)"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Area/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Quarters (individual)"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Area/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Restroom or showers"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Area/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Sleeping pods"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Area/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "New zone",
                "Game objects": [{ "Object type": "Derelict Zone" }]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Area/86-100",
                Floor: 86,
                Ceiling: 100,
                Result: "New zone via [\u23F5Access](Starforged/Oracles/Derelicts/Access)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [{ Key: "Zone", Values: ["Access"] }]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 355
            },
            $id: "Starforged/Oracles/Derelicts/Living/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Derelicts/Living",
            Description: "Roll on this table when you want to reveal new aspects of your current surroundings. This is best used sparingly\u2014a bit of occasional extra detail or ambiance\u2014rather than rolling for every segment of your exploration.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Living/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Living/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Living"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Living/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Abandoned pet"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Audible music"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Cherished personal item"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Failed barricade"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Half-eaten food"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Messages from loved ones"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Ransacked belongings"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Remains of the dead"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Scuttling vermin"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Shrine or altar"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Unusual art"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Feature/89-100",
                Floor: 89,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 355
            },
            $id: "Starforged/Oracles/Derelicts/Living/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Derelicts/Living",
            Description: "Roll on this table when you want help envisioning a complication or danger within a zone, such as when suffering a cost as an outcome of your exploration.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Living/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Living/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Living"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Living/Peril/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Booby trap"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Peril/11-20",
                Floor: 11,
                Ceiling: 20,
                Result: "Distressing written message"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Peril/21-30",
                Floor: 21,
                Ceiling: 30,
                Result: "Disturbing evidence of exploitive living conditions"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Peril/31-40",
                Floor: 31,
                Ceiling: 40,
                Result: "Dreadful scene of death or violence"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Peril/41-50",
                Floor: 41,
                Ceiling: 50,
                Result: "Lured into danger by signs of life"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Peril/51-60",
                Floor: 51,
                Ceiling: 60,
                Result: "Recorded message reveals a threat or complication"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Peril/61-70",
                Floor: 61,
                Ceiling: 70,
                Result: "Sealed door or hatch blocks access"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Peril/71-80",
                Floor: 71,
                Ceiling: 80,
                Result: "Signs of unwelcome invaders"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Peril/81-90",
                Floor: 81,
                Ceiling: 90,
                Result: "Unsettling sound or disturbance"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 355
            },
            $id: "Starforged/Oracles/Derelicts/Living/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Derelicts/Living",
            Description: "Roll on this table when you want inspiration for a beneficial encounter or event within a derelict, such as when you roll a strong hit with a match as you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), or if you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint) and find an opportunity.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Living/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Living/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Living"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Living/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Culturally significant object or artifact"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Hidden stash of valuable contraband"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Intact barricade or protected area"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Recorded message reveals helpful aspects of this site"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Living/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Useful personal gear"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 356
        },
        $id: "Starforged/Oracles/Derelicts/Medical",
        Name: "Medical",
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Medical",
          Icon: "../../img/vector/Derelicts/Medical.svg"
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Zone", Values: ["Medical"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 356
            },
            $id: "Starforged/Oracles/Derelicts/Medical/Area",
            Name: "Area",
            Category: "Starforged/Oracles/Derelicts/Medical",
            Description: "Roll on this table to help envision the spaces you encounter in that segment of your exploration. Each zone may consist of one or more areas as appropriate to what you envision for the overall complexity of the derelict. If you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), an area can serve as a waypoint in your survey of the derelict.",
            Display: {
              Title: "Area",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Medical/Area",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Medical/Area"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Medical"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Area/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Crematorium"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Area/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Emergency or triage"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Area/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Isolation or containment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Area/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Medical lab"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Area/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Medical offices"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Area/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Morgue"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Area/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Operating room"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Area/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Pharmacy or drug locker"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Area/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Prosthetics workshop"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Area/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Ward or clinic"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Area/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "New zone",
                "Game objects": [{ "Object type": "Derelict Zone" }]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Area/86-100",
                Floor: 86,
                Ceiling: 100,
                Result: "New zone via [\u23F5Access](Starforged/Oracles/Derelicts/Access)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [{ Key: "Zone", Values: ["Access"] }]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 356
            },
            $id: "Starforged/Oracles/Derelicts/Medical/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Derelicts/Medical",
            Description: "Roll on this table when you want to reveal new aspects of your current surroundings. This is best used sparingly\u2014a bit of occasional extra detail or ambiance\u2014rather than rolling for every segment of your exploration.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Medical/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Medical/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Medical"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Autopsied corpse"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Biological specimens"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Blood spatter or pools"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Bloody medical supplies"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Broken prosthetics"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Corpse of a healer"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Dissected specimen"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Improvised overflow beds"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Medical monitors"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Medical records or scans"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Stacks of body bags"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Feature/89-100",
                Floor: 89,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 356
            },
            $id: "Starforged/Oracles/Derelicts/Medical/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Derelicts/Medical",
            Description: "Roll on this table when you want help envisioning a complication or danger within a zone, such as when suffering a cost as an outcome of your exploration.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Medical/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Medical/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Medical"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Peril/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Disgusting sight / smell"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Peril/11-20",
                Floor: 11,
                Ceiling: 20,
                Result: "Disturbing evidence of medical misconduct"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Peril/21-30",
                Floor: 21,
                Ceiling: 30,
                Result: "Erratic medical bots"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Peril/31-40",
                Floor: 31,
                Ceiling: 40,
                Result: "Evidence of a virulent disease"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Peril/41-50",
                Floor: 41,
                Ceiling: 50,
                Result: "Malfunctioning medical equipment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Peril/51-60",
                Floor: 51,
                Ceiling: 60,
                Result: "Repercussions of a medical experiment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Peril/61-70",
                Floor: 61,
                Ceiling: 70,
                Result: "Restless dead"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Peril/71-80",
                Floor: 71,
                Ceiling: 80,
                Result: "Signs of a horrific death"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Peril/81-90",
                Floor: 81,
                Ceiling: 90,
                Result: "Signs of broken quarantine"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 356
            },
            $id: "Starforged/Oracles/Derelicts/Medical/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Derelicts/Medical",
            Description: "Roll on this table when you want inspiration for a beneficial encounter or event within a derelict, such as when you roll a strong hit with a match as you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), or if you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint) and find an opportunity.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Medical/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Medical/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Medical"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Cache of medicine"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Clues to a medical mystery"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Helpful medical bot"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Unusual or rare specimen"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Medical/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Useful medical equipment"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 357
        },
        $id: "Starforged/Oracles/Derelicts/Operations",
        Name: "Operations",
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Operations",
          Icon: "../../img/vector/Derelicts/Operations.svg"
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Zone", Values: ["Operations"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 357
            },
            $id: "Starforged/Oracles/Derelicts/Operations/Area",
            Name: "Area",
            Category: "Starforged/Oracles/Derelicts/Operations",
            Description: "Roll on this table to help envision the spaces you encounter in that segment of your exploration. Each zone may consist of one or more areas as appropriate to what you envision for the overall complexity of the derelict. If you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), an area can serve as a waypoint in your survey of the derelict.",
            Display: {
              Title: "Area",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Operations/Area",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Operations/Area"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Operations"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Area/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Admin or command offices"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Area/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Armory"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Area/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Bridge or command center"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Area/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Brig or cells"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Area/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Comms center"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Area/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Computer core"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Area/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Conference or briefing room"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Area/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Landing bay or hangar"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Area/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Lounge"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Area/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Security"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Area/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "New zone",
                "Game objects": [{ "Object type": "Derelict Zone" }]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Area/86-100",
                Floor: 86,
                Ceiling: 100,
                Result: "New zone via [\u23F5Access](Starforged/Oracles/Derelicts/Access)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [{ Key: "Zone", Values: ["Access"] }]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 357
            },
            $id: "Starforged/Oracles/Derelicts/Operations/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Derelicts/Operations",
            Description: "Roll on this table when you want to reveal new aspects of your current surroundings. This is best used sparingly\u2014a bit of occasional extra detail or ambiance\u2014rather than rolling for every segment of your exploration.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Operations/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Operations/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Operations"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Automated warning"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Buckled blast doors"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Control terminal"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Emergency lighting"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "EV suit storage"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Hissing comms channel"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Intricate control panels"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Map of the site"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Recorded message"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Video surveillance monitors"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Written logs"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Feature/89-100",
                Floor: 89,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 357
            },
            $id: "Starforged/Oracles/Derelicts/Operations/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Derelicts/Operations",
            Description: "Roll on this table when you want help envisioning a complication or danger within a zone, such as when suffering a cost as an outcome of your exploration.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Operations/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Operations/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Operations"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Peril/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Automated defenses target you"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Peril/11-20",
                Floor: 11,
                Ceiling: 20,
                Result: "Broken equipment limits control"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Peril/21-30",
                Floor: 21,
                Ceiling: 30,
                Result: "Coded message or puzzling security device"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Peril/31-40",
                Floor: 31,
                Ceiling: 40,
                Result: "Discouraging evidence of failed plans or defenses"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Peril/41-50",
                Floor: 41,
                Ceiling: 50,
                Result: "Displays reveal a new threat elsewhere in this site"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Peril/51-60",
                Floor: 51,
                Ceiling: 60,
                Result: "Failing power"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Peril/61-70",
                Floor: 61,
                Ceiling: 70,
                Result: "Hostile AI"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Peril/71-80",
                Floor: 71,
                Ceiling: 80,
                Result: "Sealed blast doors block access"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Peril/81-90",
                Floor: 81,
                Ceiling: 90,
                Result: "Sensors indicate the arrival of an external threat"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 357
            },
            $id: "Starforged/Oracles/Derelicts/Operations/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Derelicts/Operations",
            Description: "Roll on this table when you want inspiration for a beneficial encounter or event within a derelict, such as when you roll a strong hit with a match as you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), or if you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint) and find an opportunity.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Operations/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Operations/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Operations"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Cache of weapons or ammo"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Helpful AI"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Keycard or access code"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Log offers insight into this site's downfall"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Operations/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Secure area offers a moment of peace"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 358
        },
        $id: "Starforged/Oracles/Derelicts/Production",
        Name: "Production",
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Production",
          Icon: "../../img/vector/Derelicts/Production.svg"
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Zone", Values: ["Production"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 358
            },
            $id: "Starforged/Oracles/Derelicts/Production/Area",
            Name: "Area",
            Category: "Starforged/Oracles/Derelicts/Production",
            Description: "Roll on this table to help envision the spaces you encounter in that segment of your exploration. Each zone may consist of one or more areas as appropriate to what you envision for the overall complexity of the derelict. If you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), an area can serve as a waypoint in your survey of the derelict.",
            Display: {
              Title: "Area",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Production/Area",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Production/Area"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Production"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Production/Area/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Airlock or staging area"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Area/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Assembly or processing"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Area/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Cargo bay"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Area/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Equipment storage"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Area/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Exosuit bay"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Area/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Harvesting or mining platform"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Area/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Monitoring or control room"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Area/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Processed goods storage"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Area/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Raw materials storage"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Area/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Scrapyard"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Area/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "New zone",
                "Game objects": [{ "Object type": "Derelict Zone" }]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Area/86-100",
                Floor: 86,
                Ceiling: 100,
                Result: "New zone via [\u23F5Access](Starforged/Oracles/Derelicts/Access)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [{ Key: "Zone", Values: ["Access"] }]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 358
            },
            $id: "Starforged/Oracles/Derelicts/Production/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Derelicts/Production",
            Description: "Roll on this table when you want to reveal new aspects of your current surroundings. This is best used sparingly\u2014a bit of occasional extra detail or ambiance\u2014rather than rolling for every segment of your exploration.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Production/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Production/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Production"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Production/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Cargo lifts"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Control panels"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Disassembled machinery"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Elevated walkways"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Environment suits"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Ill-fated workers"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Immense machinery"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Sealed or locked containers"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Tools"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Vats of chemicals or gas"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Written manifest"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Feature/89-100",
                Floor: 89,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 358
            },
            $id: "Starforged/Oracles/Derelicts/Production/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Derelicts/Production",
            Description: "Roll on this table when you want help envisioning a complication or danger within a zone, such as when suffering a cost as an outcome of your exploration.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Production/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Production/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Production"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Production/Peril/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Claustrophobic spaces"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Peril/11-20",
                Floor: 11,
                Ceiling: 20,
                Result: "Dangerous machinery"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Peril/21-30",
                Floor: 21,
                Ceiling: 30,
                Result: "Disturbing evidence of exploited labor"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Peril/31-40",
                Floor: 31,
                Ceiling: 40,
                Result: "Extreme temperatures"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Peril/41-50",
                Floor: 41,
                Ceiling: 50,
                Result: "Hazardous materials"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Peril/51-60",
                Floor: 51,
                Ceiling: 60,
                Result: "Impending industrial disaster"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Peril/61-70",
                Floor: 61,
                Ceiling: 70,
                Result: "Malfunctioning automation"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Peril/71-80",
                Floor: 71,
                Ceiling: 80,
                Result: "Rivals seek to secure these resources"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Peril/81-90",
                Floor: 81,
                Ceiling: 90,
                Result: "Signs of an unearthed or manufactured threat"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 358
            },
            $id: "Starforged/Oracles/Derelicts/Production/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Derelicts/Production",
            Description: "Roll on this table when you want inspiration for a beneficial encounter or event within a derelict, such as when you roll a strong hit with a match as you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), or if you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint) and find an opportunity.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Production/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Production/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Production"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Production/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Helpful vehicle or transport"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Rare or valuable resource"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Salvageable materials"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Useful equipment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Production/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Valuable cargo"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 359
        },
        $id: "Starforged/Oracles/Derelicts/Research",
        Name: "Research",
        Category: "Starforged/Oracles/Derelicts",
        Display: {
          Title: "Research",
          Icon: "../../img/vector/Derelicts/Research.svg"
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Zone", Values: ["Research"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 359
            },
            $id: "Starforged/Oracles/Derelicts/Research/Area",
            Name: "Area",
            Category: "Starforged/Oracles/Derelicts/Research",
            Description: "Roll on this table to help envision the spaces you encounter in that segment of your exploration. Each zone may consist of one or more areas as appropriate to what you envision for the overall complexity of the derelict. If you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), an area can serve as a waypoint in your survey of the derelict.",
            Display: {
              Title: "Area",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Research/Area",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Research/Area"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Research"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Research/Area/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Clean room"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Area/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Cold storage"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Area/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Creature or animal pens"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Area/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Decontamination room"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Area/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Hazardous material storage"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Area/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Hydroponics or agriculture"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Area/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Isolation or containment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Area/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Lab"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Area/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Library or records"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Area/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Secure vault"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Area/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "New zone",
                "Game objects": [{ "Object type": "Derelict Zone" }]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Area/86-100",
                Floor: 86,
                Ceiling: 100,
                Result: "New zone via [\u23F5Access](Starforged/Oracles/Derelicts/Access)",
                "Game objects": [
                  {
                    "Object type": "Derelict Zone",
                    Requires: {
                      Attributes: [{ Key: "Zone", Values: ["Access"] }]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 359
            },
            $id: "Starforged/Oracles/Derelicts/Research/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Derelicts/Research",
            Description: "Roll on this table when you want to reveal new aspects of your current surroundings. This is best used sparingly\u2014a bit of occasional extra detail or ambiance\u2014rather than rolling for every segment of your exploration.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Research/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Research/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Research"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Research/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Aquarium or tank"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Biological specimens"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Bones or fossils"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Broken equipment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Cryptic research notes"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Hastily destroyed data"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Hazmat suits"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Inscrutable artifact"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Invasive plant growth"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Recorded research log"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Spilled chemicals"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Feature/89-100",
                Floor: 89,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 359
            },
            $id: "Starforged/Oracles/Derelicts/Research/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Derelicts/Research",
            Description: "Roll on this table when you want help envisioning a complication or danger within a zone, such as when suffering a cost as an outcome of your exploration.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Research/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Research/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Research"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Research/Peril/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Automated containment protocols are activated"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Peril/11-20",
                Floor: 11,
                Ceiling: 20,
                Result: "Biological infestation"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Peril/21-30",
                Floor: 21,
                Ceiling: 30,
                Result: "Dangerous specimen"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Peril/31-40",
                Floor: 31,
                Ceiling: 40,
                Result: "Disturbing outcome of a failed experiment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Peril/41-50",
                Floor: 41,
                Ceiling: 50,
                Result: "Evidence of sinister experiments"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Peril/51-60",
                Floor: 51,
                Ceiling: 60,
                Result: "Fragile vault holds a dire threat"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Peril/61-70",
                Floor: 61,
                Ceiling: 70,
                Result: "Signs of broken containment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Peril/71-80",
                Floor: 71,
                Ceiling: 80,
                Result: "Toxic environment"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Peril/81-90",
                Floor: 81,
                Ceiling: 90,
                Result: "Unstable technology"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 359
            },
            $id: "Starforged/Oracles/Derelicts/Research/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Derelicts/Research",
            Description: "Roll on this table when you want inspiration for a beneficial encounter or event within a derelict, such as when you roll a strong hit with a match as you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), or if you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint) and find an opportunity.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Derelicts/Research/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Derelicts/Research/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Zone", Values: ["Research"] }]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Derelicts/Research/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Helpful research data"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Records of a notable discovery"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Specialized research tools"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Unique prototype"
              },
              {
                $id: "Starforged/Oracles/Derelicts/Research/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Useful navigational data"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Oracles/Factions",
    Name: "Factions",
    Display: { Title: "Factions" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 340
        },
        $id: "Starforged/Oracles/Factions/Type",
        Name: "Type",
        Category: "Starforged/Oracles/Factions",
        Display: {
          Title: "Faction Type",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Type",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Type"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Allow duplicates": !1,
          Sets: [{ Key: "Faction Type" }]
        },
        Content: { "Part of speech": ["noun"] },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Type/1-40",
            Floor: 1,
            Ceiling: 40,
            Result: "[\u23F5Dominion](Starforged/Oracles/Factions/Dominion)",
            Summary: "Governing power",
            "Oracle rolls": [
              "Starforged/Oracles/Factions/Dominion",
              "Starforged/Oracles/Factions/Leadership"
            ],
            Attributes: [{ Key: "Faction Type", Value: "Dominion" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Type/41-70",
            Floor: 41,
            Ceiling: 70,
            Result: "[\u23F5Guild](Starforged/Oracles/Factions/Guild)",
            Summary: "Organization of specialists",
            "Oracle rolls": ["Starforged/Oracles/Factions/Guild"],
            Attributes: [{ Key: "Faction Type", Value: "Guild" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Type/71-100",
            Floor: 71,
            Ceiling: 100,
            Result: "[\u23F5Fringe Group](Starforged/Oracles/Factions/Fringe_Group)",
            Summary: "Band of outlaws, outcasts, or rogues",
            "Oracle rolls": ["Starforged/Oracles/Factions/Fringe_Group"],
            Attributes: [{ Key: "Faction Type", Value: "Fringe Group" }]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 340
        },
        $id: "Starforged/Oracles/Factions/Influence",
        Name: "Influence",
        Category: "Starforged/Oracles/Factions",
        Display: {
          Title: "Influence",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Influence",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Influence"
              }
            ]
          }
        },
        Usage: { Sets: [{ Key: "Influence" }] },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Influence/1-10",
            Floor: 1,
            Ceiling: 10,
            Result: "Forsaken",
            Summary: "Banished or forgotten",
            Attributes: [{ Key: "Influence", Value: "Forsaken" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Influence/11-30",
            Floor: 11,
            Ceiling: 30,
            Result: "Isolated",
            Summary: "Limited influence in a remote location",
            Attributes: [{ Key: "Influence", Value: "Isolated" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Influence/31-50",
            Floor: 31,
            Ceiling: 50,
            Result: "Localized",
            Summary: "Marginal influence in a single sector",
            Attributes: [{ Key: "Influence", Value: "Localized" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Influence/51-70",
            Floor: 51,
            Ceiling: 70,
            Result: "Established",
            Summary: "Strong influence in a single sector",
            Attributes: [{ Key: "Influence", Value: "Established" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Influence/71-85",
            Floor: 71,
            Ceiling: 85,
            Result: "Notable",
            Summary: "Dispersed influence across a few sectors",
            Attributes: [{ Key: "Influence", Value: "Notable" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Influence/86-95",
            Floor: 86,
            Ceiling: 95,
            Result: "Dominant",
            Summary: "Far-reaching influence across many sectors",
            Attributes: [{ Key: "Influence", Value: "Dominant" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Influence/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Inescapable",
            Summary: "Pervasive influence across inhabited space",
            Attributes: [{ Key: "Influence", Value: "Inescapable" }]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 341
        },
        $id: "Starforged/Oracles/Factions/Dominion",
        Name: "Dominion",
        Category: "Starforged/Oracles/Factions",
        Display: {
          Title: "Dominion",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Dominion",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Dominion"
              }
            ]
          },
          Icon: "../../img/vector/Oracles/Factions/Dominion.svg"
        },
        Usage: {
          Initial: !0,
          "Max rolls": 3,
          Requires: {
            Attributes: [{ Key: "Faction Type", Values: ["Dominion"] }]
          },
          "Allow duplicates": !1,
          Sets: [{ Key: "Dominion" }]
        },
        Content: { "Part of speech": ["noun"], Tags: ["abstract noun"] },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Dominion/1-5",
            Floor: 1,
            Ceiling: 5,
            Result: "Agriculture",
            Attributes: [{ Key: "Dominion", Value: "Agriculture" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/6-9",
            Floor: 6,
            Ceiling: 9,
            Result: "Artistry",
            Attributes: [{ Key: "Dominion", Value: "Artistry" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/10-14",
            Floor: 10,
            Ceiling: 14,
            Result: "Commerce",
            Attributes: [{ Key: "Dominion", Value: "Commerce" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/15-18",
            Floor: 15,
            Ceiling: 18,
            Result: "Conquest",
            Attributes: [{ Key: "Dominion", Value: "Conquest" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/19-22",
            Floor: 19,
            Ceiling: 22,
            Result: "Construction",
            Attributes: [{ Key: "Dominion", Value: "Construction" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/23-26",
            Floor: 23,
            Ceiling: 26,
            Result: "Diplomacy",
            Attributes: [{ Key: "Dominion", Value: "Diplomacy" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/27-30",
            Floor: 27,
            Ceiling: 30,
            Result: "Education",
            Attributes: [{ Key: "Dominion", Value: "Education" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/31-34",
            Floor: 31,
            Ceiling: 34,
            Result: "Environmentalism",
            Attributes: [{ Key: "Dominion", Value: "Environmentalism" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/35-38",
            Floor: 35,
            Ceiling: 38,
            Result: "Exploration",
            Attributes: [{ Key: "Dominion", Value: "Exploration" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/39-42",
            Floor: 39,
            Ceiling: 42,
            Result: "Faith",
            Attributes: [{ Key: "Dominion", Value: "Faith" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/43-46",
            Floor: 43,
            Ceiling: 46,
            Result: "History",
            Attributes: [{ Key: "Dominion", Value: "History" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/47-50",
            Floor: 47,
            Ceiling: 50,
            Result: "Honor",
            Attributes: [{ Key: "Dominion", Value: "Honor" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/51-55",
            Floor: 51,
            Ceiling: 55,
            Result: "Industry",
            Attributes: [{ Key: "Dominion", Value: "Industry" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/56-59",
            Floor: 56,
            Ceiling: 59,
            Result: "Isolationism",
            Attributes: [{ Key: "Dominion", Value: "Isolationism" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/60-63",
            Floor: 60,
            Ceiling: 63,
            Result: "Law",
            Attributes: [{ Key: "Dominion", Value: "Law" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/64-67",
            Floor: 64,
            Ceiling: 67,
            Result: "Mysticism",
            Attributes: [{ Key: "Dominion", Value: "Mysticism" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/68-71",
            Floor: 68,
            Ceiling: 71,
            Result: "Pacifism",
            Attributes: [{ Key: "Dominion", Value: "Pacifism" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/72-75",
            Floor: 72,
            Ceiling: 75,
            Result: "Prophecy",
            Attributes: [{ Key: "Dominion", Value: "Prophecy" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/76-79",
            Floor: 76,
            Ceiling: 79,
            Result: "Science",
            Attributes: [{ Key: "Dominion", Value: "Science" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/80-83",
            Floor: 80,
            Ceiling: 83,
            Result: "Secrecy",
            Attributes: [{ Key: "Dominion", Value: "Secrecy" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/84-87",
            Floor: 84,
            Ceiling: 87,
            Result: "Technology",
            Attributes: [{ Key: "Dominion", Value: "Technology" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/88-91",
            Floor: 88,
            Ceiling: 91,
            Result: "Treachery",
            Attributes: [{ Key: "Dominion", Value: "Treachery" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/92-96",
            Floor: 92,
            Ceiling: 96,
            Result: "Warfare",
            Attributes: [{ Key: "Dominion", Value: "Warfare" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Dominion/97-100",
            Floor: 97,
            Ceiling: 100,
            Result: "Wealth",
            Attributes: [{ Key: "Dominion", Value: "Wealth" }]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 341
        },
        $id: "Starforged/Oracles/Factions/Leadership",
        Name: "Leadership",
        Category: "Starforged/Oracles/Factions",
        Display: {
          Title: "Dominion: Leadership",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Leadership",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Leadership"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          Requires: {
            Attributes: [{ Key: "Faction Type", Values: ["Dominion"] }]
          },
          "Allow duplicates": !1,
          Sets: [{ Key: "Leadership" }]
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["description"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Leadership/1-5",
            Floor: 1,
            Ceiling: 5,
            Result: "Anarchist",
            Attributes: [{ Key: "Leadership", Value: "Anarchist" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Leadership/6-15",
            Floor: 6,
            Ceiling: 15,
            Result: "Disputed leadership",
            Attributes: [
              { Key: "Leadership", Value: "Disputed leadership" }
            ]
          },
          {
            $id: "Starforged/Oracles/Factions/Leadership/16-30",
            Floor: 16,
            Ceiling: 30,
            Result: "Authoritarian dictatorship",
            Attributes: [
              { Key: "Leadership", Value: "Authoritarian dictatorship" }
            ]
          },
          {
            $id: "Starforged/Oracles/Factions/Leadership/31-45",
            Floor: 31,
            Ceiling: 45,
            Result: "Oligarchical elite",
            Attributes: [
              { Key: "Leadership", Value: "Oligarchical elite" }
            ]
          },
          {
            $id: "Starforged/Oracles/Factions/Leadership/46-60",
            Floor: 46,
            Ceiling: 60,
            Result: "Dynastic lineage",
            Attributes: [
              { Key: "Leadership", Value: "Dynastic lineage" }
            ]
          },
          {
            $id: "Starforged/Oracles/Factions/Leadership/61-70",
            Floor: 61,
            Ceiling: 70,
            Result: "Fated or prophesied leader",
            Attributes: [
              { Key: "Leadership", Value: "Fated or prophesied leader" }
            ]
          },
          {
            $id: "Starforged/Oracles/Factions/Leadership/71-80",
            Floor: 71,
            Ceiling: 80,
            Result: "Clan chiefs or elders",
            Attributes: [
              { Key: "Leadership", Value: "Clan chiefs or elders" }
            ]
          },
          {
            $id: "Starforged/Oracles/Factions/Leadership/81-90",
            Floor: 81,
            Ceiling: 90,
            Result: "Elected representatives",
            Attributes: [
              { Key: "Leadership", Value: "Elected representatives" }
            ]
          },
          {
            $id: "Starforged/Oracles/Factions/Leadership/91-95",
            Floor: 91,
            Ceiling: 95,
            Result: "Machine intelligence",
            Attributes: [
              { Key: "Leadership", Value: "Machine intelligence" }
            ]
          },
          {
            $id: "Starforged/Oracles/Factions/Leadership/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Varied / decentralized",
            Attributes: [
              { Key: "Leadership", Value: "Varied / decentralized" }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 341
        },
        $id: "Starforged/Oracles/Factions/Guild",
        Name: "Guild",
        Category: "Starforged/Oracles/Factions",
        Display: {
          Title: "Guild",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Guild",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Guild"
              }
            ]
          },
          Icon: "../../img/vector/Oracles/Factions/Guild.svg"
        },
        Usage: {
          Initial: !0,
          Requires: {
            Attributes: [{ Key: "Faction Type", Values: ["Guild"] }]
          },
          "Allow duplicates": !1,
          Sets: [{ Key: "Guild" }]
        },
        Content: {
          "Part of speech": ["noun", "plural"],
          Tags: ["actor"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Guild/1-5",
            Floor: 1,
            Ceiling: 5,
            Result: "Assassins",
            Attributes: [{ Key: "Guild", Value: "Assassins" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/6-10",
            Floor: 6,
            Ceiling: 10,
            Result: "Bounty Hunters",
            Attributes: [{ Key: "Guild", Value: "Bounty Hunters" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/11-15",
            Floor: 11,
            Ceiling: 15,
            Result: "Couriers",
            Attributes: [{ Key: "Guild", Value: "Couriers" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/16-20",
            Floor: 16,
            Ceiling: 20,
            Result: "Courtesans",
            Attributes: [{ Key: "Guild", Value: "Courtesans" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/21-25",
            Floor: 21,
            Ceiling: 25,
            Result: "Engineers",
            Attributes: [{ Key: "Guild", Value: "Engineers" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/26-30",
            Floor: 26,
            Ceiling: 30,
            Result: "Healers",
            Attributes: [{ Key: "Guild", Value: "Healers" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/31-40",
            Floor: 31,
            Ceiling: 40,
            Result: "Industrialists",
            Attributes: [{ Key: "Guild", Value: "Industrialists" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/41-50",
            Floor: 41,
            Ceiling: 50,
            Result: "Mercenaries",
            Attributes: [{ Key: "Guild", Value: "Mercenaries" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/51-60",
            Floor: 51,
            Ceiling: 60,
            Result: "Merchants",
            Attributes: [{ Key: "Guild", Value: "Merchants" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/61-65",
            Floor: 61,
            Ceiling: 65,
            Result: "Mystics",
            Attributes: [{ Key: "Guild", Value: "Mystics" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/66-75",
            Floor: 66,
            Ceiling: 75,
            Result: "Navigators",
            Attributes: [{ Key: "Guild", Value: "Navigators" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/76-80",
            Floor: 76,
            Ceiling: 80,
            Result: "Peacekeepers",
            Attributes: [{ Key: "Guild", Value: "Peacekeepers" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/81-85",
            Floor: 81,
            Ceiling: 85,
            Result: "Researchers",
            Attributes: [{ Key: "Guild", Value: "Researchers" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/86-90",
            Floor: 86,
            Ceiling: 90,
            Result: "Spies",
            Attributes: [{ Key: "Guild", Value: "Spies" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Guild/91-100",
            Floor: 91,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 341
        },
        $id: "Starforged/Oracles/Factions/Fringe_Group",
        Name: "Fringe Group",
        Category: "Starforged/Oracles/Factions",
        Display: {
          Title: "Fringe Group",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Fringe_Group",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Fringe_Group"
              }
            ]
          },
          Icon: "../../img/vector/Oracles/Factions/Fringe_Group.svg"
        },
        Usage: {
          Requires: {
            Attributes: [
              { Key: "Faction Type", Values: ["Fringe Group"] }
            ]
          },
          "Allow duplicates": !1,
          Sets: [{ Key: "Fringe Group" }]
        },
        Content: {
          "Part of speech": ["noun", "plural"],
          Tags: ["actor"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Fringe_Group/1-5",
            Floor: 1,
            Ceiling: 5,
            Result: "Cultists",
            Attributes: [{ Key: "Fringe Group", Value: "Cultists" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Fringe_Group/6-15",
            Floor: 6,
            Ceiling: 15,
            Result: "Exiles",
            Attributes: [{ Key: "Fringe Group", Value: "Exiles" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Fringe_Group/16-25",
            Floor: 16,
            Ceiling: 25,
            Result: "Gangsters",
            Attributes: [{ Key: "Fringe Group", Value: "Gangsters" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Fringe_Group/26-35",
            Floor: 26,
            Ceiling: 35,
            Result: "Hackers",
            Attributes: [{ Key: "Fringe Group", Value: "Hackers" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Fringe_Group/36-40",
            Floor: 36,
            Ceiling: 40,
            Result: "Monster hunters",
            Attributes: [
              { Key: "Fringe Group", Value: "Monster hunters" }
            ]
          },
          {
            $id: "Starforged/Oracles/Factions/Fringe_Group/41-50",
            Floor: 41,
            Ceiling: 50,
            Result: "Pirates",
            Attributes: [{ Key: "Fringe Group", Value: "Pirates" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Fringe_Group/51-60",
            Floor: 51,
            Ceiling: 60,
            Result: "Raiders",
            Attributes: [{ Key: "Fringe Group", Value: "Raiders" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Fringe_Group/61-70",
            Floor: 61,
            Ceiling: 70,
            Result: "Rebels",
            Attributes: [{ Key: "Fringe Group", Value: "Rebels" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Fringe_Group/71-75",
            Floor: 71,
            Ceiling: 75,
            Result: "Rogue AI",
            Attributes: [{ Key: "Fringe Group", Value: "Rogue AI" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Fringe_Group/76-85",
            Floor: 76,
            Ceiling: 85,
            Result: "Scavengers",
            Attributes: [{ Key: "Fringe Group", Value: "Scavengers" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Fringe_Group/86-95",
            Floor: 86,
            Ceiling: 95,
            Result: "Smugglers",
            Attributes: [{ Key: "Fringe Group", Value: "Smugglers" }]
          },
          {
            $id: "Starforged/Oracles/Factions/Fringe_Group/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 342
        },
        $id: "Starforged/Oracles/Factions/Projects",
        Name: "Projects",
        Category: "Starforged/Oracles/Factions",
        Description: "Pick or roll on this table to reveal the current focus of a faction. Then, use the nature of the organization to help envision the meaning of the project. The result may introduce events that motivate your character to aid or resist the project, or can serve as background detail for your setting. If you would like to track the faction\u2019s progress, set a clock for the project using the campaign clock guidelines on page 235.",
        Display: {
          Title: "Faction Projects",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Projects",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Projects"
              }
            ]
          }
        },
        Usage: { "Max rolls": 2, "Allow duplicates": !1 },
        Content: { "Part of speech": ["fragment"], Tags: ["objective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Projects/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Broaden scope of the faction to include a new focus"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/4-6",
            Floor: 4,
            Ceiling: 6,
            Result: "Build or secure a powerful device"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/7-9",
            Floor: 7,
            Ceiling: 9,
            Result: "Consolidate control of a valuable commodity"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/10-12",
            Floor: 10,
            Ceiling: 12,
            Result: "Destroy or defeat a rival"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/13-15",
            Floor: 13,
            Ceiling: 15,
            Result: "Disrupt the operations of a rival"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/16-18",
            Floor: 16,
            Ceiling: 18,
            Result: "Escape the control of another faction or power"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/19-21",
            Floor: 19,
            Ceiling: 21,
            Result: "Establish a monument or memorial"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/22-24",
            Floor: 22,
            Ceiling: 24,
            Result: "Establish a safe refuge or headquarters"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/25-27",
            Floor: 25,
            Ceiling: 27,
            Result: "Expand operations to a new location or sector"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/28-30",
            Floor: 28,
            Ceiling: 30,
            Result: "Form an alliance"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/31-33",
            Floor: 31,
            Ceiling: 33,
            Result: "Fulfill a prophecy"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/34-36",
            Floor: 34,
            Ceiling: 36,
            Result: "Give aid to a faction"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/37-39",
            Floor: 37,
            Ceiling: 39,
            Result: "Harness unnatural or forbidden power"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/40-42",
            Floor: 40,
            Ceiling: 42,
            Result: "Hunt down a rogue asset"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/43-45",
            Floor: 43,
            Ceiling: 45,
            Result: "Incite conflict among rivals"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/46-48",
            Floor: 46,
            Ceiling: 48,
            Result: "Negotiate an agreement"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/49-51",
            Floor: 49,
            Ceiling: 51,
            Result: "Obtain a needed commodity"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/52-54",
            Floor: 52,
            Ceiling: 54,
            Result: "Obtain an important cultural artifact"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/55-57",
            Floor: 55,
            Ceiling: 57,
            Result: "Obtain crucial data or information"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/58-60",
            Floor: 58,
            Ceiling: 60,
            Result: "Obtain incriminating information about a rival"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/61-63",
            Floor: 61,
            Ceiling: 63,
            Result: "Prevent a prophecy"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/64-66",
            Floor: 64,
            Ceiling: 66,
            Result: "Put down an internal revolt or rebellion"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/67-69",
            Floor: 67,
            Ceiling: 69,
            Result: "Repay a debt"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/70-72",
            Floor: 70,
            Ceiling: 72,
            Result: "Rescue or recover a group or asset"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/73-75",
            Floor: 73,
            Ceiling: 75,
            Result: "Research an innovation"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/76-78",
            Floor: 76,
            Ceiling: 78,
            Result: "Resolve a conflict with another faction"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/79-81",
            Floor: 79,
            Ceiling: 81,
            Result: "Reunite splintered elements of the faction"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/82-84",
            Floor: 82,
            Ceiling: 84,
            Result: "Seize a powerful artifact or valuable treasure"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/85-87",
            Floor: 85,
            Ceiling: 87,
            Result: "Seize rival territory or operations"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/88-90",
            Floor: 88,
            Ceiling: 90,
            Result: "Subsume another faction"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/91-93",
            Floor: 91,
            Ceiling: 93,
            Result: "Transport a valued asset"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/94-96",
            Floor: 94,
            Ceiling: 96,
            Result: "Usurp leadership within a rival faction"
          },
          {
            $id: "Starforged/Oracles/Factions/Projects/97-100",
            Floor: 97,
            Ceiling: 100,
            Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Action",
              "Starforged/Oracles/Core/Theme"
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 343
        },
        $id: "Starforged/Oracles/Factions/Relationships",
        Name: "Relationships",
        Category: "Starforged/Oracles/Factions",
        Description: "Factions add scale and narrative opportunities to your setting. But keep it manageable. Don\u2019t overload your campaign with factions. Instead, focus on your interactions and entanglements with members of a few interesting factions. Then, when you have a question about the relationship of one faction to another, use this table. The result is the commonly understood connection between those factions. Further investigations or events may reveal a deeper or alternate truth.",
        Display: {
          Title: "Faction Relationships",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Relationships",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Relationships"
              }
            ]
          }
        },
        Content: { "Part of speech": ["fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Relationships/1-4",
            Floor: 1,
            Ceiling: 4,
            Result: "Antagonistic towards"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/5-8",
            Floor: 5,
            Ceiling: 8,
            Result: "Apathetic or unaware of"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/9-11",
            Floor: 9,
            Ceiling: 11,
            Result: "Betrayed by"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/12-14",
            Floor: 12,
            Ceiling: 14,
            Result: "Broke faith with"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/15-18",
            Floor: 15,
            Ceiling: 18,
            Result: "Distrustful of"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/19-22",
            Floor: 19,
            Ceiling: 22,
            Result: "Does business with"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/23-25",
            Floor: 23,
            Ceiling: 25,
            Result: "Extorted by"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/26-29",
            Floor: 26,
            Ceiling: 29,
            Result: "Holds contempt for"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/30-33",
            Floor: 30,
            Ceiling: 33,
            Result: "Holds leverage over"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/34-36",
            Floor: 34,
            Ceiling: 36,
            Result: "In control of"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/37-40",
            Floor: 37,
            Ceiling: 40,
            Result: "Maneuvering against"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/41-44",
            Floor: 41,
            Ceiling: 44,
            Result: "Needs aid from"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/45-47",
            Floor: 45,
            Ceiling: 47,
            Result: "Negotiating with"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/48-51",
            Floor: 48,
            Ceiling: 51,
            Result: "Open alliance with"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/52-54",
            Floor: 52,
            Ceiling: 54,
            Result: "Owes a debt to"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/55-58",
            Floor: 55,
            Ceiling: 58,
            Result: "Shares a rivalry with"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/59-61",
            Floor: 59,
            Ceiling: 61,
            Result: "Shares power with"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/62-64",
            Floor: 62,
            Ceiling: 64,
            Result: "Shows respect for"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/65-67",
            Floor: 65,
            Ceiling: 67,
            Result: "Splintered from"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/68-70",
            Floor: 68,
            Ceiling: 70,
            Result: "Subordinate to"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/71-74",
            Floor: 71,
            Ceiling: 74,
            Result: "Supplied with resources by"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/75-78",
            Floor: 75,
            Ceiling: 78,
            Result: "Supplies resources to"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/79-81",
            Floor: 79,
            Ceiling: 81,
            Result: "Temporary alliance with"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/82-85",
            Floor: 82,
            Ceiling: 85,
            Result: "Tolerates"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/86-89",
            Floor: 86,
            Ceiling: 89,
            Result: "Trades favors with"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/90-92",
            Floor: 90,
            Ceiling: 92,
            Result: "Unjustly accused by"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/93-96",
            Floor: 93,
            Ceiling: 96,
            Result: "Warring with"
          },
          {
            $id: "Starforged/Oracles/Factions/Relationships/97-100",
            Floor: 97,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 344
        },
        $id: "Starforged/Oracles/Factions/Name_Template",
        Name: "Name Template",
        Category: "Starforged/Oracles/Factions",
        Description: `To generate a faction name, first roll or choose the name template. Then, follow the structure of the template to build the name from individual tables. If you\u2019ve already set the faction type, picking from the tables (instead of rolling) will likely provide a more appropriate result. For example, \u201CSilver Jackals\u201D is a fitting name for a criminal organization. The \u201CEmpire of the Undying Suns\u201D is a less apt name for that gang\u2014unless their leader is prone to delusions of grandeur. In short, choosing a name will give you more control. Rolling might give you a result that doesn\u2019t square with known aspects, but those contradictions may prove inspiring.

An alternative approach to generating a faction from scratch is to start with a random name. Then, consider what the name evokes and choose an appropriate faction type instead of rolling on those tables. For example, \u201CBloody Ravens\u201D might suggest a mercenary guild, while the \u201CRepublic of the Radiant Servants\u201D brings to mind a dominion built upon a religion, or one that idolizes a prophesied leader. If a result doesn\u2019t inspire anything interesting, roll again or pick.`,
        Display: {
          Title: "Faction Name Template",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Name_Template",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Name_Template"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["name", "proper noun"],
          Tags: ["template"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Name_Template/1-40",
            Floor: 1,
            Ceiling: 40,
            Result: "[[\u23F5Legacy](Starforged/Oracles/Factions/Legacy)] [[\u23F5Affiliation](Starforged/Oracles/Factions/Affiliation)]",
            "Roll template": {
              Result: "${{Starforged/Oracles/Factions/Legacy}} ${{Starforged/Oracles/Factions/Affiliation}}"
            }
          },
          {
            $id: "Starforged/Oracles/Factions/Name_Template/41-55",
            Floor: 41,
            Ceiling: 55,
            Result: "[[\u23F5Legacy](Starforged/Oracles/Factions/Legacy)] [[\u23F5Identity](Starforged/Oracles/Factions/Identity)]",
            "Roll template": {
              Result: "${{Starforged/Oracles/Factions/Legacy}} ${{Starforged/Oracles/Factions/Identity}}"
            }
          },
          {
            $id: "Starforged/Oracles/Factions/Name_Template/56-70",
            Floor: 56,
            Ceiling: 70,
            Result: "[[\u23F5Identity](Starforged/Oracles/Factions/Identity)] *of the* [[\u23F5Legacy](Starforged/Oracles/Factions/Legacy)] [[\u23F5Affiliation](Starforged/Oracles/Factions/Affiliation)]",
            "Roll template": {
              Result: "${{Starforged/Oracles/Factions/Identity}} of the ${{Starforged/Oracles/Factions/Legacy}} ${{Starforged/Oracles/Factions/Affiliation}}"
            }
          },
          {
            $id: "Starforged/Oracles/Factions/Name_Template/71-100",
            Floor: 71,
            Ceiling: 100,
            Result: "[[\u23F5Affiliation](Starforged/Oracles/Factions/Affiliation)] *of the* [[\u23F5Legacy](Starforged/Oracles/Factions/Legacy)] [[\u23F5Identity](Starforged/Oracles/Factions/Identity)]",
            "Roll template": {
              Result: "${{Starforged/Oracles/Factions/Affiliation}} of the ${{Starforged/Oracles/Factions/Legacy}} ${{Starforged/Oracles/Factions/Identity}}"
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622"
        },
        $id: "Starforged/Oracles/Factions/Legacy",
        Name: "Legacy",
        Category: "Starforged/Oracles/Factions",
        Display: {
          Title: "Legacy",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Legacy",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Legacy"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["adjective", "proper noun fragment"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Legacy/1-2",
            Floor: 1,
            Ceiling: 2,
            Result: "Ancient"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/3-4",
            Floor: 3,
            Ceiling: 4,
            Result: "Ashen"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/5-6",
            Floor: 5,
            Ceiling: 6,
            Result: "Awakened"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/7-8",
            Floor: 7,
            Ceiling: 8,
            Result: "Azure"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/9-10",
            Floor: 9,
            Ceiling: 10,
            Result: "Blessed"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/11-12",
            Floor: 11,
            Ceiling: 12,
            Result: "Bloody"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/13-14",
            Floor: 13,
            Ceiling: 14,
            Result: "Broken"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/15-16",
            Floor: 15,
            Ceiling: 16,
            Result: "Ceaseless"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/17-18",
            Floor: 17,
            Ceiling: 18,
            Result: "Crimson"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/19-20",
            Floor: 19,
            Ceiling: 20,
            Result: "Cursed"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/21-22",
            Floor: 21,
            Ceiling: 22,
            Result: "Dawning"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/23-24",
            Floor: 23,
            Ceiling: 24,
            Result: "Dissident"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/25-26",
            Floor: 25,
            Ceiling: 26,
            Result: "Ebon"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/27-28",
            Floor: 27,
            Ceiling: 28,
            Result: "Elder"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/29-30",
            Floor: 29,
            Ceiling: 30,
            Result: "Enduring"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/31-32",
            Floor: 31,
            Ceiling: 32,
            Result: "Enlightened"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/33-34",
            Floor: 33,
            Ceiling: 34,
            Result: "Exalted"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/35-36",
            Floor: 35,
            Ceiling: 36,
            Result: "Fallen"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/37-38",
            Floor: 37,
            Ceiling: 38,
            Result: "Fated"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/39-40",
            Floor: 39,
            Ceiling: 40,
            Result: "First"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/41-42",
            Floor: 41,
            Ceiling: 42,
            Result: "Forgotten"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/43-44",
            Floor: 43,
            Ceiling: 44,
            Result: "Forsaken"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/45-46",
            Floor: 45,
            Ceiling: 46,
            Result: "Gloaming"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/47-48",
            Floor: 47,
            Ceiling: 48,
            Result: "Golden"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/49-50",
            Floor: 49,
            Ceiling: 50,
            Result: "Hidden"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/51-52",
            Floor: 51,
            Ceiling: 52,
            Result: "Infernal"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/53-54",
            Floor: 53,
            Ceiling: 54,
            Result: "Infinite"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/55-56",
            Floor: 55,
            Ceiling: 56,
            Result: "Iron"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/57-58",
            Floor: 57,
            Ceiling: 58,
            Result: "Kindred"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/59-60",
            Floor: 59,
            Ceiling: 60,
            Result: "Obsidian"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/61-62",
            Floor: 61,
            Ceiling: 62,
            Result: "Radiant"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/63-64",
            Floor: 63,
            Ceiling: 64,
            Result: "Risen"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/65-66",
            Floor: 65,
            Ceiling: 66,
            Result: "Sacred"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/67-68",
            Floor: 67,
            Ceiling: 68,
            Result: "Sapphire"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/69-70",
            Floor: 69,
            Ceiling: 70,
            Result: "Scarlet"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/71-72",
            Floor: 71,
            Ceiling: 72,
            Result: "Serene"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/73-74",
            Floor: 73,
            Ceiling: 74,
            Result: "Shattered"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/75-76",
            Floor: 75,
            Ceiling: 76,
            Result: "Shining"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/77-78",
            Floor: 77,
            Ceiling: 78,
            Result: "Silent"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/79-80",
            Floor: 79,
            Ceiling: 80,
            Result: "Silver"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/81-82",
            Floor: 81,
            Ceiling: 82,
            Result: "Sovereign"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/83-84",
            Floor: 83,
            Ceiling: 84,
            Result: "Stellar"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/85-86",
            Floor: 85,
            Ceiling: 86,
            Result: "Sundered"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/87-88",
            Floor: 87,
            Ceiling: 88,
            Result: "Supreme"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/89-90",
            Floor: 89,
            Ceiling: 90,
            Result: "Undying"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/91-92",
            Floor: 91,
            Ceiling: 92,
            Result: "Unified"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/93-94",
            Floor: 93,
            Ceiling: 94,
            Result: "United"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/95-96",
            Floor: 95,
            Ceiling: 96,
            Result: "Universal"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/97-98",
            Floor: 97,
            Ceiling: 98,
            Result: "Veiled"
          },
          {
            $id: "Starforged/Oracles/Factions/Legacy/99-100",
            Floor: 99,
            Ceiling: 100,
            Result: "Wandering"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 345
        },
        $id: "Starforged/Oracles/Factions/Affiliation",
        Name: "Affiliation",
        Category: "Starforged/Oracles/Factions",
        Display: {
          Title: "Affiliation",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Affiliation",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Affiliation"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["noun", "proper noun fragment"],
          Tags: ["organization", "actor"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Affiliation/1-4",
            Floor: 1,
            Ceiling: 4,
            Result: "Accord"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/5-8",
            Floor: 5,
            Ceiling: 8,
            Result: "Alliance"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/9-12",
            Floor: 9,
            Ceiling: 12,
            Result: "Ascendancy"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/13-16",
            Floor: 13,
            Ceiling: 16,
            Result: "Circle"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/17-20",
            Floor: 17,
            Ceiling: 20,
            Result: "Coalition"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/21-24",
            Floor: 21,
            Ceiling: 24,
            Result: "Collective"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/25-28",
            Floor: 25,
            Ceiling: 28,
            Result: "Commonwealth"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/29-32",
            Floor: 29,
            Ceiling: 32,
            Result: "Confederation"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/33-36",
            Floor: 33,
            Ceiling: 36,
            Result: "Consortium"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/37-40",
            Floor: 37,
            Ceiling: 40,
            Result: "Council"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/41-44",
            Floor: 41,
            Ceiling: 44,
            Result: "Court"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/45-48",
            Floor: 45,
            Ceiling: 48,
            Result: "Covenant"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/49-52",
            Floor: 49,
            Ceiling: 52,
            Result: "Dominion"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/53-56",
            Floor: 53,
            Ceiling: 56,
            Result: "Empire"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/57-60",
            Floor: 57,
            Ceiling: 60,
            Result: "Federation"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/61-64",
            Floor: 61,
            Ceiling: 64,
            Result: "Imperium"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/65-68",
            Floor: 65,
            Ceiling: 68,
            Result: "League"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/69-72",
            Floor: 69,
            Ceiling: 72,
            Result: "Legion"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/73-76",
            Floor: 73,
            Ceiling: 76,
            Result: "Order"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/77-80",
            Floor: 77,
            Ceiling: 80,
            Result: "Pact"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/81-84",
            Floor: 81,
            Ceiling: 84,
            Result: "Regiment"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/85-88",
            Floor: 85,
            Ceiling: 88,
            Result: "Republic"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/89-92",
            Floor: 89,
            Ceiling: 92,
            Result: "Sphere"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/93-96",
            Floor: 93,
            Ceiling: 96,
            Result: "Syndicate"
          },
          {
            $id: "Starforged/Oracles/Factions/Affiliation/97-100",
            Floor: 97,
            Ceiling: 100,
            Result: "Union"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 345
        },
        $id: "Starforged/Oracles/Factions/Identity",
        Name: "Identity",
        Category: "Starforged/Oracles/Factions",
        Display: {
          Title: "Identity",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Identity",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Identity"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["common noun", "plural", "proper noun fragment"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Identity/1-2",
            Floor: 1,
            Ceiling: 2,
            Result: "Blades"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/3-4",
            Floor: 3,
            Ceiling: 4,
            Result: "Builders"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/5-6",
            Floor: 5,
            Ceiling: 6,
            Result: "Daggers"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/7-8",
            Floor: 7,
            Ceiling: 8,
            Result: "Defenders"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/9-10",
            Floor: 9,
            Ceiling: 10,
            Result: "Disciples"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/11-12",
            Floor: 11,
            Ceiling: 12,
            Result: "Domains"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/13-14",
            Floor: 13,
            Ceiling: 14,
            Result: "Drifters"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/15-16",
            Floor: 15,
            Ceiling: 16,
            Result: "Embers"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/17-18",
            Floor: 17,
            Ceiling: 18,
            Result: "Flames"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/19-20",
            Floor: 19,
            Ceiling: 20,
            Result: "Fleet"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/21-22",
            Floor: 21,
            Ceiling: 22,
            Result: "Guardians"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/23-24",
            Floor: 23,
            Ceiling: 24,
            Result: "Hammers"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/25-26",
            Floor: 25,
            Ceiling: 26,
            Result: "Harbingers"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/27-28",
            Floor: 27,
            Ceiling: 28,
            Result: "Heralds"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/29-30",
            Floor: 29,
            Ceiling: 30,
            Result: "Hounds"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/31-32",
            Floor: 31,
            Ceiling: 32,
            Result: "Hunters"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/33-34",
            Floor: 33,
            Ceiling: 34,
            Result: "Jackals"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/35-36",
            Floor: 35,
            Ceiling: 36,
            Result: "Keepers"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/37-38",
            Floor: 37,
            Ceiling: 38,
            Result: "Knights"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/39-40",
            Floor: 39,
            Ceiling: 40,
            Result: "Menders"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/41-42",
            Floor: 41,
            Ceiling: 42,
            Result: "Outcasts"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/43-44",
            Floor: 43,
            Ceiling: 44,
            Result: "Phantoms"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/45-46",
            Floor: 45,
            Ceiling: 46,
            Result: "Planets"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/47-48",
            Floor: 47,
            Ceiling: 48,
            Result: "Raiders"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/49-50",
            Floor: 49,
            Ceiling: 50,
            Result: "Ravens"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/51-52",
            Floor: 51,
            Ceiling: 52,
            Result: "Realms"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/53-54",
            Floor: 53,
            Ceiling: 54,
            Result: "Reavers"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/55-56",
            Floor: 55,
            Ceiling: 56,
            Result: "Relics"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/57-58",
            Floor: 57,
            Ceiling: 58,
            Result: "Seekers"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/59-60",
            Floor: 59,
            Ceiling: 60,
            Result: "Sentinels"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/61-62",
            Floor: 61,
            Ceiling: 62,
            Result: "Serpents"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/63-64",
            Floor: 63,
            Ceiling: 64,
            Result: "Servants"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/65-66",
            Floor: 65,
            Ceiling: 66,
            Result: "Shadows"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/67-68",
            Floor: 67,
            Ceiling: 68,
            Result: "Shards"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/69-70",
            Floor: 69,
            Ceiling: 70,
            Result: "Skulls"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/71-72",
            Floor: 71,
            Ceiling: 72,
            Result: "Souls"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/73-74",
            Floor: 73,
            Ceiling: 74,
            Result: "Specters"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/75-76",
            Floor: 75,
            Ceiling: 76,
            Result: "Stars"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/77-78",
            Floor: 77,
            Ceiling: 78,
            Result: "Suns"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/79-80",
            Floor: 79,
            Ceiling: 80,
            Result: "Swarm"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/81-82",
            Floor: 81,
            Ceiling: 82,
            Result: "Swords"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/83-84",
            Floor: 83,
            Ceiling: 84,
            Result: "Talons"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/85-86",
            Floor: 85,
            Ceiling: 86,
            Result: "Vanguards"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/87-88",
            Floor: 87,
            Ceiling: 88,
            Result: "Wardens"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/89-90",
            Floor: 89,
            Ceiling: 90,
            Result: "Watchers"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/91-92",
            Floor: 91,
            Ceiling: 92,
            Result: "Wolves"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/93-94",
            Floor: 93,
            Ceiling: 94,
            Result: "Worlds"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/95-96",
            Floor: 95,
            Ceiling: 96,
            Result: "Wraiths"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/97-98",
            Floor: 97,
            Ceiling: 98,
            Result: "Wreckers"
          },
          {
            $id: "Starforged/Oracles/Factions/Identity/99-100",
            Floor: 99,
            Ceiling: 100,
            Result: "Wrights"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 346
        },
        $id: "Starforged/Oracles/Factions/Quirks",
        Name: "Quirks",
        Category: "Starforged/Oracles/Factions",
        Description: "Roll or pick known characteristics of the faction and its members using this table. But keep in mind that even within a small or specialized faction, there are no absolutes. These quirks represent common attitudes, practices, or approaches, but are not universal to every member of that faction. Leave room in your portrayal for diversity and contradictions.",
        Display: {
          Title: "Faction Quirks",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Quirks",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Quirks"
              }
            ]
          }
        },
        Usage: { "Max rolls": 2, "Allow duplicates": !1 },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["description"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Quirks/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Ancient or coded language"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/4-6",
            Floor: 4,
            Ceiling: 6,
            Result: "Animal or creature motif used as a faction symbol"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/7-9",
            Floor: 7,
            Ceiling: 9,
            Result: "Banishes the disloyal"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/10-12",
            Floor: 10,
            Ceiling: 12,
            Result: "Body augmentations are respected and valued"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/13-15",
            Floor: 13,
            Ceiling: 15,
            Result: "Body ornamentations signify castes or roles"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/16-18",
            Floor: 16,
            Ceiling: 18,
            Result: "Conceals individual identity"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/19-21",
            Floor: 19,
            Ceiling: 21,
            Result: "Dependent on an addictive substance"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/22-24",
            Floor: 22,
            Ceiling: 24,
            Result: "Distinctive or elaborate clothing"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/25-27",
            Floor: 25,
            Ceiling: 27,
            Result: "Elite soldiers provide defense or serve as bodyguards"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/28-30",
            Floor: 28,
            Ceiling: 30,
            Result: "Favors a signature weapon"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/31-33",
            Floor: 31,
            Ceiling: 33,
            Result: "Guided by superstition or prophecy"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/34-36",
            Floor: 34,
            Ceiling: 36,
            Result: "Heavily stratified social structure"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/37-39",
            Floor: 37,
            Ceiling: 39,
            Result: "Hoards precursor artifacts"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/40-42",
            Floor: 40,
            Ceiling: 42,
            Result: "Honors the fallen through unusual death rites"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/43-45",
            Floor: 43,
            Ceiling: 45,
            Result: "Idolizes a long-dead founder or martyr"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/46-48",
            Floor: 46,
            Ceiling: 48,
            Result: "Keeps exhaustive records or archives"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/49-51",
            Floor: 49,
            Ceiling: 51,
            Result: "Lives off-planet in spaceborne fleets"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/52-54",
            Floor: 52,
            Ceiling: 54,
            Result: "Members take a new name when joining the faction"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/55-57",
            Floor: 55,
            Ceiling: 57,
            Result: "Nomadic people and mobile operations"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/58-60",
            Floor: 58,
            Ceiling: 60,
            Result: "Operates under strict codes or laws"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/61-63",
            Floor: 61,
            Ceiling: 63,
            Result: "Recognizes others through a distinctive greeting or gesture"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/64-66",
            Floor: 64,
            Ceiling: 66,
            Result: "Reliant on machine intelligence"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/67-69",
            Floor: 67,
            Ceiling: 69,
            Result: "Resolves disputes through formal duels"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/70-72",
            Floor: 70,
            Ceiling: 72,
            Result: "Rites of adulthood or ascension"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/73-75",
            Floor: 73,
            Ceiling: 75,
            Result: "Shuns or distrusts machine intelligence"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/76-78",
            Floor: 76,
            Ceiling: 78,
            Result: "Starships share a distinctive and recognizable profile"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/79-81",
            Floor: 79,
            Ceiling: 81,
            Result: "Suspicious of outsiders"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/82-84",
            Floor: 82,
            Ceiling: 84,
            Result: "Symbiotic relationship with a specific type of creature"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/85-87",
            Floor: 85,
            Ceiling: 87,
            Result: "Trades in a unique currency or commodity"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/88-90",
            Floor: 88,
            Ceiling: 90,
            Result: "Trains in a demanding physical discipline or martial art"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/91-93",
            Floor: 91,
            Ceiling: 93,
            Result: "Wields unnatural abilities or strange technologies"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/94-96",
            Floor: 94,
            Ceiling: 96,
            Result: "Work or environment causes mutations"
          },
          {
            $id: "Starforged/Oracles/Factions/Quirks/97-100",
            Floor: 97,
            Ceiling: 100,
            Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Action",
              "Starforged/Oracles/Core/Theme"
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 347
        },
        $id: "Starforged/Oracles/Factions/Rumors",
        Name: "Rumors",
        Category: "Starforged/Oracles/Factions",
        Description: "Use this table when you are in a position to investigate a faction by uncovering secrets or fishing for gossip.",
        Display: {
          Title: "Faction Rumors",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Factions/Rumors",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Factions/Rumors"
              }
            ]
          }
        },
        Usage: { "Max rolls": 2, "Allow duplicates": !1 },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["event", "present"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Factions/Rumors/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Caught in the crossfire of feuding factions"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/4-6",
            Floor: 4,
            Ceiling: 6,
            Result: "Colluding with a criminal enterprise"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/7-9",
            Floor: 7,
            Ceiling: 9,
            Result: "Corrupted by a dangerous power"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/10-12",
            Floor: 10,
            Ceiling: 12,
            Result: "Critical resource is in short supply"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/13-15",
            Floor: 13,
            Ceiling: 15,
            Result: "Defenses are overextended"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/16-18",
            Floor: 16,
            Ceiling: 18,
            Result: "Developing revolutionary technology"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/19-21",
            Floor: 19,
            Ceiling: 21,
            Result: "Digital systems are corrupted or infiltrated"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/22-24",
            Floor: 22,
            Ceiling: 24,
            Result: "Heavily in debt"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/25-27",
            Floor: 25,
            Ceiling: 27,
            Result: "Hit hard by a recent attack or calamity"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/28-30",
            Floor: 28,
            Ceiling: 30,
            Result: "Holds a powerful artifact"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/31-33",
            Floor: 31,
            Ceiling: 33,
            Result: "Holds incriminating information against a leader or faction"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/34-36",
            Floor: 34,
            Ceiling: 36,
            Result: "Hoarding a valuable commodity"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/37-39",
            Floor: 37,
            Ceiling: 39,
            Result: "Infiltrated by a rival faction"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/40-42",
            Floor: 40,
            Ceiling: 42,
            Result: "Knows the location of a fabled treasure or lost technology"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/43-45",
            Floor: 43,
            Ceiling: 45,
            Result: "Leaders are haunted by a dark prophecy"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/46-48",
            Floor: 46,
            Ceiling: 48,
            Result: "Leaders are incompetent"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/49-51",
            Floor: 49,
            Ceiling: 51,
            Result: "Leaders are puppets of another power or faction"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/52-54",
            Floor: 52,
            Ceiling: 54,
            Result: "Lesser members of the leadership are plotting a coup"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/55-57",
            Floor: 55,
            Ceiling: 57,
            Result: "New belief or religion is creating a schism among members"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/58-60",
            Floor: 58,
            Ceiling: 60,
            Result: "Operations are a false front for their true purpose"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/61-63",
            Floor: 61,
            Ceiling: 63,
            Result: "Overdependence on a failing or vulnerable technology"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/64-66",
            Floor: 64,
            Ceiling: 66,
            Result: "Plagued by infighting and low morale"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/67-69",
            Floor: 67,
            Ceiling: 69,
            Result: "Plotting to betray an allied faction"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/70-72",
            Floor: 70,
            Ceiling: 72,
            Result: "Preparing a major offensive or operation"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/73-75",
            Floor: 73,
            Ceiling: 75,
            Result: "Pulling the strings of a leader or faction"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/76-78",
            Floor: 76,
            Ceiling: 78,
            Result: "Recently acquired an unexpected fortune"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/79-81",
            Floor: 79,
            Ceiling: 81,
            Result: "Secretly supporting a reviled faction"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/82-84",
            Floor: 82,
            Ceiling: 84,
            Result: "Sheltering an infamous or dangerous fugitive"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/85-87",
            Floor: 85,
            Ceiling: 87,
            Result: "Suffered destructive sabotage from within"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/88-90",
            Floor: 88,
            Ceiling: 90,
            Result: "Suffering a shortage of key workers or personnel"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/91-93",
            Floor: 91,
            Ceiling: 93,
            Result: "Uprising or revolt is brewing from within"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/94-96",
            Floor: 94,
            Ceiling: 96,
            Result: "Vulnerable to attack or aggression"
          },
          {
            $id: "Starforged/Oracles/Factions/Rumors/97-100",
            Floor: 97,
            Ceiling: 100,
            Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Action",
              "Starforged/Oracles/Core/Theme"
            ]
          }
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 370
    },
    $id: "Starforged/Oracles/Location_Themes",
    Name: "Location Themes",
    Description: `Themes help you envision atmosphere, features, and encounters within an unusual, aberrant, or important location.

Each theme on the following pages includes a set of oracles.

  * **Feature:** Use this table to reveal a new aspect of the location.
  * **Peril:** Use this table to help envision a complication or hazard.
  * **Opportunity:** Use this table to help envision a beneficial encounter or event, such as when rolling a strong hit with a match in a location.

You can answer questions about a place using only the tables provided for a theme, such as when delving into an **Infested** cave. Or pair a theme with other location oracles for more flavor and variety; for example, you might explore a **Haunted Grave World**, a **Ruined Derelict**, a **Sacred Precursor Vault**, or an **Inhabited Settlement**.

When mixing-and-matching a theme with another set of tables, use the techniques described for an **oracle array** (page 384) to determine which oracle you reference for that question or phase of your exploration.`,
    Display: { Title: "Location Themes" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 370
        },
        $id: "Starforged/Oracles/Location_Themes/Theme_Type",
        Name: "Theme Type",
        Category: "Starforged/Oracles/Location_Themes",
        Description: "Choose a theme that supports what you know of that location\u2019s nature. For a random theme, roll on the table above.",
        Display: {
          Title: "Theme Type",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Location_Themes/Theme_Type",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Location_Themes/Theme_Type"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Allow duplicates": !1,
          Sets: [{ Key: "Location Theme" }]
        },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Location_Themes/Theme_Type/1-15",
            Floor: 1,
            Ceiling: 15,
            Result: "[\u23F5Chaotic](Starforged/Oracles/Location_Themes/Chaotic)",
            Summary: "Reality is corrupted or warped in this place.",
            Attributes: [{ Key: "Location Theme", Value: "Chaotic" }]
          },
          {
            $id: "Starforged/Oracles/Location_Themes/Theme_Type/16-25",
            Floor: 16,
            Ceiling: 25,
            Result: "[\u23F5Fortified](Starforged/Oracles/Location_Themes/Fortified)",
            Summary: "Enemies defend this place against intruders.",
            Attributes: [{ Key: "Location Theme", Value: "Fortified" }]
          },
          {
            $id: "Starforged/Oracles/Location_Themes/Theme_Type/26-35",
            Floor: 26,
            Ceiling: 35,
            Result: "[\u23F5Haunted](Starforged/Oracles/Location_Themes/Haunted)",
            Summary: "Restless spirits are bound to this place.",
            Attributes: [{ Key: "Location Theme", Value: "Haunted" }]
          },
          {
            $id: "Starforged/Oracles/Location_Themes/Theme_Type/36-50",
            Floor: 36,
            Ceiling: 50,
            Result: "[\u23F5Infested](Starforged/Oracles/Location_Themes/Infested)",
            Summary: "Foul creatures have overrun this place.",
            Attributes: [{ Key: "Location Theme", Value: "Infested" }]
          },
          {
            $id: "Starforged/Oracles/Location_Themes/Theme_Type/51-60",
            Floor: 51,
            Ceiling: 60,
            Result: "[\u23F5Inhabited](Starforged/Oracles/Location_Themes/Inhabited)",
            Summary: "People have built a community in this place.",
            Attributes: [{ Key: "Location Theme", Value: "Inhabited" }]
          },
          {
            $id: "Starforged/Oracles/Location_Themes/Theme_Type/61-75",
            Floor: 61,
            Ceiling: 75,
            Result: "[\u23F5Mechanical](Starforged/Oracles/Location_Themes/Mechanical)",
            Summary: "Machines and technology hold sway in this place.",
            Attributes: [{ Key: "Location Theme", Value: "Mechanical" }]
          },
          {
            $id: "Starforged/Oracles/Location_Themes/Theme_Type/76-90",
            Floor: 76,
            Ceiling: 90,
            Result: "[\u23F5Ruined](Starforged/Oracles/Location_Themes/Ruined)",
            Summary: "Time, disaster, or war have ravaged this place.",
            Attributes: [{ Key: "Location Theme", Value: "Ruined" }]
          },
          {
            $id: "Starforged/Oracles/Location_Themes/Theme_Type/91-100",
            Floor: 91,
            Ceiling: 100,
            Result: "[\u23F5Sacred](Starforged/Oracles/Location_Themes/Sacred)",
            Summary: "Worshipers glorify strange powers in this place.",
            Attributes: [{ Key: "Location Theme", Value: "Sacred" }]
          }
        ]
      }
    ],
    Categories: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 372
        },
        $id: "Starforged/Oracles/Location_Themes/Chaotic",
        Name: "Chaotic",
        Category: "Starforged/Oracles/Location_Themes",
        Description: "Reality is corrupted or warped in this place.",
        Display: {
          Title: "Chaotic",
          Icon: "../../img/vector/Location_Theme/Chaotic.svg"
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Location Theme", Values: ["Chaotic"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 372
            },
            $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Location_Themes/Chaotic",
            Description: "Use this table to reveal a new aspect of the location.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Chaotic/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Chaotic/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Chaotic"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Alterations in the flow of time"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Chaotic portal, focus, or conduit"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Corrupted or warped architecture or terrain"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Corrupted or warped environment or ecosystem"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Corrupted or warped technology"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Cryptic device harnesses or powers chaos"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Distortions of gravity or other natural forces"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Energy field or barrier"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Glimpses of alternate realities"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Lifeforms mutated or altered by chaos"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Lifeforms spawned from chaos"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/89-96",
                Floor: 89,
                Ceiling: 96,
                Result: "Visions of your past or future"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Feature/97-100",
                Floor: 97,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 372
            },
            $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Location_Themes/Chaotic",
            Description: "Use this table to help envision a complication or hazard.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Chaotic/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Chaotic/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Chaotic"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril/1-9",
                Floor: 1,
                Ceiling: 9,
                Result: "Chaos makes its mark upon you"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril/10-18",
                Floor: 10,
                Ceiling: 18,
                Result: "Chaos spreads or intensifies"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril/19-27",
                Floor: 19,
                Ceiling: 27,
                Result: "Chaos tempts or lures you"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril/28-36",
                Floor: 28,
                Ceiling: 36,
                Result: "Chaotic energies block the path or assail you"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril/37-45",
                Floor: 37,
                Ceiling: 45,
                Result: "Disorienting changes in time or location"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril/46-54",
                Floor: 46,
                Ceiling: 54,
                Result: "Dreadful scene of those who fell prey to chaos"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril/55-63",
                Floor: 55,
                Ceiling: 63,
                Result: "Equipment is made unstable or dangerous"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril/64-72",
                Floor: 64,
                Ceiling: 72,
                Result: "Foes harness or wield chaos"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril/73-81",
                Floor: 73,
                Ceiling: 81,
                Result: "Hazardous environmental changes"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril/82-90",
                Floor: 82,
                Ceiling: 90,
                Result: "Lifeforms made hostile by chaos"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 372
            },
            $id: "Starforged/Oracles/Location_Themes/Chaotic/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Location_Themes/Chaotic",
            Description: "Use this table to help envision a beneficial encounter or event, such as when rolling a strong hit with a match in a location.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Chaotic/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Chaotic/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Chaotic"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Chaos ebbs or withdraws for a time"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Chaos empowers you with strange but useful abilities"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Chaos manifests as comforting or inspiring visions"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Chaotic changes hamper your foes"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Chaotic/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Insight into the source or nature of the chaos"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 373
        },
        $id: "Starforged/Oracles/Location_Themes/Fortified",
        Name: "Fortified",
        Category: "Starforged/Oracles/Location_Themes",
        Description: "Enemies defend this place against intruders.",
        Display: {
          Title: "Fortified",
          Icon: "../../img/vector/Location_Theme/Fortified.svg"
        },
        Usage: {
          Requires: {
            Attributes: [
              { Key: "Location Theme", Values: ["Fortified"] }
            ]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 373
            },
            $id: "Starforged/Oracles/Location_Themes/Fortified/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Location_Themes/Fortified",
            Description: "Use this table to reveal a new aspect of the location.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Fortified/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Fortified/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Fortified"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Captives or prisoners"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Control area or terminal"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Empty or inactive area"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Enemy forces assembled for an event"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Enemy forces off-duty or at leisure"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Enemy forces on guard"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Enemy forces on patrol"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Enemy forces transporting supplies or equipment"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Enemy leader makes an inspection"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Prototype technology or equipment"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Robotic assistant or watchful AI"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/89-96",
                Floor: 89,
                Ceiling: 96,
                Result: "Support personnel at work"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Feature/97-100",
                Floor: 97,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 373
            },
            $id: "Starforged/Oracles/Location_Themes/Fortified/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Location_Themes/Fortified",
            Description: "Use this table to help envision a complication or hazard.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Fortified/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Fortified/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Fortified"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Peril/1-9",
                Floor: 1,
                Ceiling: 9,
                Result: "Alarm is triggered"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Peril/10-18",
                Floor: 10,
                Ceiling: 18,
                Result: "Automated security or weapons target you"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Peril/19-27",
                Floor: 19,
                Ceiling: 27,
                Result: "Checkpoint or path with restricted access"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Peril/28-36",
                Floor: 28,
                Ceiling: 36,
                Result: "Enemies converge on this area"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Peril/37-45",
                Floor: 37,
                Ceiling: 45,
                Result: "Enemies reveal new capabilities or technology"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Peril/46-54",
                Floor: 46,
                Ceiling: 54,
                Result: "Enemies trick you or lure you into a trap"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Peril/55-63",
                Floor: 55,
                Ceiling: 63,
                Result: "Powerful enemy appears"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Peril/64-72",
                Floor: 64,
                Ceiling: 72,
                Result: "Problematic alliance or affiliation is revealed"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Peril/73-81",
                Floor: 73,
                Ceiling: 81,
                Result: "Revealed schemes of an enemy leader create new urgency"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Peril/82-90",
                Floor: 82,
                Ceiling: 90,
                Result: "Your plan is undone by an unexpected complication"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 373
            },
            $id: "Starforged/Oracles/Location_Themes/Fortified/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Location_Themes/Fortified",
            Description: "Use this table to help envision a beneficial encounter or event, such as when rolling a strong hit with a match in a location.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Fortified/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Fortified/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Fortified"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Insight into the plans or methods of the enemy force"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Opening to get the drop on an enemy"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Opening to outmaneuver or escape enemies"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Potential collaborator or informant reveals themselves"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Fortified/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Access to useful equipment or weapons"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 374
        },
        $id: "Starforged/Oracles/Location_Themes/Haunted",
        Name: "Haunted",
        Category: "Starforged/Oracles/Location_Themes",
        Description: "Restless spirits are bound to this place.",
        Display: {
          Title: "Haunted",
          Icon: "../../img/vector/Location_Theme/Haunted.svg"
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Location Theme", Values: ["Haunted"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 374
            },
            $id: "Starforged/Oracles/Location_Themes/Haunted/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Location_Themes/Haunted",
            Description: "Use this table to reveal a new aspect of the location.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Haunted/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Haunted/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Haunted"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Disembodied voices"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Eerie cold"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Foreboding omen or message"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Ghostly visions of this place in another time"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Glimpses of shadowy movement"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Objects move of their own accord"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Sensation of being watched"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Signs of death or violence"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Spectral sounds"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Twisted or altered architecture or terrain"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Unnatural blight, decay, or ruin"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/89-96",
                Floor: 89,
                Ceiling: 96,
                Result: "Unnatural mists or darkness"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Feature/97-100",
                Floor: 97,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 374
            },
            $id: "Starforged/Oracles/Location_Themes/Haunted/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Location_Themes/Haunted",
            Description: "Use this table to help envision a complication or hazard.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Haunted/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Haunted/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Haunted"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Peril/1-9",
                Floor: 1,
                Ceiling: 9,
                Result: "Assailed by an angry or vengeful being"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Peril/10-18",
                Floor: 10,
                Ceiling: 18,
                Result: "Beguiling illusions tempt you to linger or stay"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Peril/19-27",
                Floor: 19,
                Ceiling: 27,
                Result: "Besieged by frightening sensations"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Peril/28-36",
                Floor: 28,
                Ceiling: 36,
                Result: "Equipment is plagued by unexplainable malfunctions"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Peril/37-45",
                Floor: 37,
                Ceiling: 45,
                Result: "Plunged into disorienting darkness or illusionary surroundings"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Peril/46-54",
                Floor: 46,
                Ceiling: 54,
                Result: "Spectral manifestations of your fears"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Peril/55-63",
                Floor: 55,
                Ceiling: 63,
                Result: "Spirits or undead reveal surprising abilities or motivations"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Peril/64-72",
                Floor: 64,
                Ceiling: 72,
                Result: "Sudden, shocking reveal of a ghostly manifestation or undead form"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Peril/73-81",
                Floor: 73,
                Ceiling: 81,
                Result: "Trickery leads you into danger"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Peril/82-90",
                Floor: 82,
                Ceiling: 90,
                Result: "Visions reveal a horrifying aspect of this place"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 374
            },
            $id: "Starforged/Oracles/Location_Themes/Haunted/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Location_Themes/Haunted",
            Description: "Use this table to help envision a beneficial encounter or event, such as when rolling a strong hit with a match in a location.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Haunted/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Haunted/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Haunted"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Encounter with a benign spirit or being"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Helpful vision of past events"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Message or clue offers insight into the nature of this haunting",
                Suggestions: {
                  "Oracle rolls": ["Starforged/Oracles/Misc/Story_Clue"]
                }
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Secret area or path is revealed"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Haunted/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Useful or interesting artifact or device"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 375
        },
        $id: "Starforged/Oracles/Location_Themes/Infested",
        Name: "Infested",
        Category: "Starforged/Oracles/Location_Themes",
        Description: "Foul creatures have overrun this place.",
        Display: {
          Title: "Infested",
          Icon: "../../img/vector/Location_Theme/Infested.svg"
        },
        Usage: {
          Requires: {
            Attributes: [
              { Key: "Location Theme", Values: ["Infested"] }
            ]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 375
            },
            $id: "Starforged/Oracles/Location_Themes/Infested/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Location_Themes/Infested",
            Description: "Use this table to reveal a new aspect of the location.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Infested/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Infested/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Infested"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Corpse of an unfortunate victim"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Eggs, cocoons, or nest"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Environment corrupted by the infestation"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Evidence of a lurking creature"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Evidence of an ill-fated victim"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Hoarded food"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Indistinct movement or sounds"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Lair of lesser creatures"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Ravaged supplies or equipment"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Remains of a creature or remnants of a previous form"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Territorial markings"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/89-96",
                Floor: 89,
                Ceiling: 96,
                Result: "Trail or evidence of a creature's passage"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Feature/97-100",
                Floor: 97,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 375
            },
            $id: "Starforged/Oracles/Location_Themes/Infested/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Location_Themes/Infested",
            Description: "Use this table to help envision a complication or hazard.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Infested/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Infested/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Infested"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Peril/1-9",
                Floor: 1,
                Ceiling: 9,
                Result: "Creatures attack without warning"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Peril/10-18",
                Floor: 10,
                Ceiling: 18,
                Result: "Creatures guided or controlled by a greater threat"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Peril/19-27",
                Floor: 19,
                Ceiling: 27,
                Result: "Creatures reveal new aspects or abilities"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Peril/28-36",
                Floor: 28,
                Ceiling: 36,
                Result: "Creatures reveal surprising cleverness"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Peril/37-45",
                Floor: 37,
                Ceiling: 45,
                Result: "Creatures take or destroy something important"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Peril/46-54",
                Floor: 46,
                Ceiling: 54,
                Result: "Discovery of a live but threatened victim"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Peril/55-63",
                Floor: 55,
                Ceiling: 63,
                Result: "Hazardous architecture or terrain"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Peril/64-72",
                Floor: 64,
                Ceiling: 72,
                Result: "Lured or driven into a trap or dead-end"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Peril/73-81",
                Floor: 73,
                Ceiling: 81,
                Result: "Powerful or dominant creature reveals itself"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Peril/82-90",
                Floor: 82,
                Ceiling: 90,
                Result: "Toxic or sickening environment"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 375
            },
            $id: "Starforged/Oracles/Location_Themes/Infested/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Location_Themes/Infested",
            Description: "Use this table to help envision a beneficial encounter or event, such as when rolling a strong hit with a match in a location.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Infested/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Infested/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Infested"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Clue to the nature or vulnerabilities of these creatures"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Creatures turn on each other"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Early warning of an attack or ambush"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "External event provides a helpful distraction"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Infested/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Helpful resource or equipment"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 376
        },
        $id: "Starforged/Oracles/Location_Themes/Inhabited",
        Name: "Inhabited",
        Category: "Starforged/Oracles/Location_Themes",
        Description: "People have built a community in this place.",
        Display: {
          Title: "Inhabited",
          Icon: "../../img/vector/Location_Theme/Inhabited.svg"
        },
        Usage: {
          Requires: {
            Attributes: [
              { Key: "Location Theme", Values: ["Inhabited"] }
            ]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 376
            },
            $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Location_Themes/Inhabited",
            Description: "Use this table to reveal a new aspect of the location.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Inhabited/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Inhabited/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Inhabited"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Conspicuous patrols or surveillance"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Crews at work"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Display or monument honors a notable cultural event"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Emergency teams responding to an incident or crisis"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Families gathering or children playing"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Festival, celebration, or observance"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Fight breaks out"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Notable figure stands out from the crowd"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Protest or strike"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Unrepaired damage"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Unusually empty or quiet area"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/89-96",
                Floor: 89,
                Ceiling: 96,
                Result: "Vendor or merchant hawking their wares"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Feature/97-100",
                Floor: 97,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 376
            },
            $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Location_Themes/Inhabited",
            Description: "Use this table to help envision a complication or hazard.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Inhabited/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Inhabited/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Inhabited"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril/1-9",
                Floor: 1,
                Ceiling: 9,
                Result: "Announcement or notification brings harrowing news"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril/10-18",
                Floor: 10,
                Ceiling: 18,
                Result: "Arrival of a foe or rival"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril/19-27",
                Floor: 19,
                Ceiling: 27,
                Result: "Blockade or security cordon cuts off needed access"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril/28-36",
                Floor: 28,
                Ceiling: 36,
                Result: "Caught in the crossfire of a dispute"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril/37-45",
                Floor: 37,
                Ceiling: 45,
                Result: "Disturbing evidence of exploitive conditions"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril/46-54",
                Floor: 46,
                Ceiling: 54,
                Result: "Lured into danger"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril/55-63",
                Floor: 55,
                Ceiling: 63,
                Result: "Signs of disease, infestation, or toxic environment"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril/64-72",
                Floor: 64,
                Ceiling: 72,
                Result: "Signs of unrest or rebellion"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril/73-81",
                Floor: 73,
                Ceiling: 81,
                Result: "Signs that you are being watched or followed"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril/82-90",
                Floor: 82,
                Ceiling: 90,
                Result: "Unwanted attention from authority or enemies"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 376
            },
            $id: "Starforged/Oracles/Location_Themes/Inhabited/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Location_Themes/Inhabited",
            Description: "Use this table to help envision a beneficial encounter or event, such as when rolling a strong hit with a match in a location.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Inhabited/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Inhabited/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Inhabited"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Intriguing offer from an unexpected source"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Lively festival or gathering place provides a chance to socialize"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Local gossip proves interesting or helpful"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Needed item, resource, or buyer is available"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Inhabited/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Old friend or connection resurfaces"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 377
        },
        $id: "Starforged/Oracles/Location_Themes/Mechanical",
        Name: "Mechanical",
        Category: "Starforged/Oracles/Location_Themes",
        Description: "Machines and technology hold sway in this place.",
        Display: {
          Title: "Mechanical",
          Icon: "../../img/vector/Location_Theme/Mechanical.svg"
        },
        Usage: {
          Requires: {
            Attributes: [
              { Key: "Location Theme", Values: ["Mechanical"] }
            ]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 377
            },
            $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Location_Themes/Mechanical",
            Description: "Use this table to reveal a new aspect of the location.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Mechanical/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Mechanical/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Mechanical"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Control station or terminal"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Device or technology with a mysterious function"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Disassembled machinery or parts"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Heavy machinery at work"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Machine fabrication or repair"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Machines emulating or fusing with biological life"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Machines in stasis or powered down"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Machines single-mindedly executing a function or program"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Major project under construction"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Mechanical environment in motion or transforming"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Mechanical wreckage or destruction"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/89-96",
                Floor: 89,
                Ceiling: 96,
                Result: "Power source for the machines"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Feature/97-100",
                Floor: 97,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 377
            },
            $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Location_Themes/Mechanical",
            Description: "Use this table to help envision a complication or hazard.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Mechanical/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Mechanical/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Mechanical"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril/1-9",
                Floor: 1,
                Ceiling: 9,
                Result: "Alarm or warning is triggered"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril/10-18",
                Floor: 10,
                Ceiling: 18,
                Result: "Automated weapon or trap is activated"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril/19-27",
                Floor: 19,
                Ceiling: 27,
                Result: "Environment made unsuitable for life"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril/28-36",
                Floor: 28,
                Ceiling: 36,
                Result: "Hostile machines on patrol"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril/37-45",
                Floor: 37,
                Ceiling: 45,
                Result: "Machines transform to reveal new capabilities"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril/46-54",
                Floor: 46,
                Ceiling: 54,
                Result: "Machines with corrupted or hacked programming"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril/55-63",
                Floor: 55,
                Ceiling: 63,
                Result: "Malfunctioning machines or technology"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril/64-72",
                Floor: 64,
                Ceiling: 72,
                Result: "Moving machinery creates a danger or obstacle"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril/73-81",
                Floor: 73,
                Ceiling: 81,
                Result: "Under surveillance by a central machine intelligence"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril/82-90",
                Floor: 82,
                Ceiling: 90,
                Result: "Volatile technology"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 377
            },
            $id: "Starforged/Oracles/Location_Themes/Mechanical/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Location_Themes/Mechanical",
            Description: "Use this table to help envision a beneficial encounter or event, such as when rolling a strong hit with a match in a location.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Mechanical/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Mechanical/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Mechanical"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Helpful device"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Insight into the workings or purpose of the machines"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Intelligent machine offers aid"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Salvageable resource"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Mechanical/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Wondrous technology"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 378
        },
        $id: "Starforged/Oracles/Location_Themes/Ruined",
        Name: "Ruined",
        Category: "Starforged/Oracles/Location_Themes",
        Description: "Time, disaster, or war have ravaged this place.",
        Display: {
          Title: "Ruined",
          Icon: "../../img/vector/Location_Theme/Ruined.svg"
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Location Theme", Values: ["Ruined"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 378
            },
            $id: "Starforged/Oracles/Location_Themes/Ruined/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Location_Themes/Ruined",
            Description: "Use this table to reveal a new aspect of the location.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Ruined/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Ruined/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Ruined"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Collapsed or broken structures or terrain"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Device or artifact with residual power or function"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Focal point or nexus of the destruction"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Graves or corpses"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Innermost or hidden spaces laid bare by the destruction"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Message or recording from before the fall"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Overgrown or entombed spaces"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Rubble-strewn paths"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Sad memento of a lost life"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Sights or sounds of structural instability"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Signs of looting or scavenging"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/89-96",
                Floor: 89,
                Ceiling: 96,
                Result: "Survivors or guardians dwell among the ruins"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Feature/97-100",
                Floor: 97,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 378
            },
            $id: "Starforged/Oracles/Location_Themes/Ruined/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Location_Themes/Ruined",
            Description: "Use this table to help envision a complication or hazard.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Ruined/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Ruined/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Ruined"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Peril/1-9",
                Floor: 1,
                Ceiling: 9,
                Result: "Dreadful atmosphere of loss and destruction weighs upon you"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Peril/10-18",
                Floor: 10,
                Ceiling: 18,
                Result: "Evidence of a horrible fate for others who passed this way"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Peril/19-27",
                Floor: 19,
                Ceiling: 27,
                Result: "Hazardous atmosphere or environment"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Peril/28-36",
                Floor: 28,
                Ceiling: 36,
                Result: "Hostile creature has staked out their territory"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Peril/37-45",
                Floor: 37,
                Ceiling: 45,
                Result: "Imminent collapse or destruction"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Peril/46-54",
                Floor: 46,
                Ceiling: 54,
                Result: "Lured into a trap or targeted by automated defenses"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Peril/55-63",
                Floor: 55,
                Ceiling: 63,
                Result: "Source of the destruction persists or returns anew"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Peril/64-72",
                Floor: 64,
                Ceiling: 72,
                Result: "Unearthed secrets best left buried"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Peril/73-81",
                Floor: 73,
                Ceiling: 81,
                Result: "Unstable or broken path"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Peril/82-90",
                Floor: 82,
                Ceiling: 90,
                Result: "Volatile device or artifact"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 378
            },
            $id: "Starforged/Oracles/Location_Themes/Ruined/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Location_Themes/Ruined",
            Description: "Use this table to help envision a beneficial encounter or event, such as when rolling a strong hit with a match in a location.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Ruined/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Ruined/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Ruined"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Access to an untouched or preserved area"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Insight into what brought this place to ruin"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Interesting or useful device or artifact"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Salvageable equipment or resources"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Ruined/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Shortcut or passage through the destruction"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 379
        },
        $id: "Starforged/Oracles/Location_Themes/Sacred",
        Name: "Sacred",
        Category: "Starforged/Oracles/Location_Themes",
        Description: "Worshipers glorify strange powers in this place.",
        Display: {
          Title: "Sacred",
          Icon: "../../img/vector/Location_Theme/Sacred.svg"
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Location Theme", Values: ["Sacred"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 379
            },
            $id: "Starforged/Oracles/Location_Themes/Sacred/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Location_Themes/Sacred",
            Description: "Use this table to reveal a new aspect of the location.",
            Display: {
              Title: "Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Sacred/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Sacred/Feature"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Sacred"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/1-8",
                Floor: 1,
                Ceiling: 8,
                Result: "Adherents performing worship or enacting rituals"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/9-16",
                Floor: 9,
                Ceiling: 16,
                Result: "Altar or temple"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/17-24",
                Floor: 17,
                Ceiling: 24,
                Result: "Dwellings for the faithful"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/25-32",
                Floor: 25,
                Ceiling: 32,
                Result: "Enigmatic symbols"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/33-40",
                Floor: 33,
                Ceiling: 40,
                Result: "Graves or remains of glorified disciples"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/41-48",
                Floor: 41,
                Ceiling: 48,
                Result: "Holy text or archives"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/49-56",
                Floor: 49,
                Ceiling: 56,
                Result: "Offerings or atonements"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/57-64",
                Floor: 57,
                Ceiling: 64,
                Result: "Pilgrims arriving to pay homage"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/65-72",
                Floor: 65,
                Ceiling: 72,
                Result: "Protected reliquary of an artifact or token"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/73-80",
                Floor: 73,
                Ceiling: 80,
                Result: "Religious art or idols"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/81-88",
                Floor: 81,
                Ceiling: 88,
                Result: "Subtle manifestations of mystical power or visions"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/89-96",
                Floor: 89,
                Ceiling: 96,
                Result: "Tokens or motifs representing the faith's domain"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Feature/97-100",
                Floor: 97,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 379
            },
            $id: "Starforged/Oracles/Location_Themes/Sacred/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Location_Themes/Sacred",
            Description: "Use this table to help envision a complication or hazard.",
            Display: {
              Title: "Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Sacred/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Sacred/Peril"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Sacred"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Peril/1-9",
                Floor: 1,
                Ceiling: 9,
                Result: "An aspect of the faith beguiles you or lures you into danger"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Peril/10-18",
                Floor: 10,
                Ceiling: 18,
                Result: "Dreadful aspects or powers of the faith are revealed"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Peril/19-27",
                Floor: 19,
                Ceiling: 27,
                Result: "Embodiment of a god or power is given corrupted form or purpose"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Peril/28-36",
                Floor: 28,
                Ceiling: 36,
                Result: "Guardians seek martyrdom in defense of this place"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Peril/37-45",
                Floor: 37,
                Ceiling: 45,
                Result: "Leaders corrupt or exploit their followers to oppose you"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Peril/46-54",
                Floor: 46,
                Ceiling: 54,
                Result: "Prophecies portend a dire threat"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Peril/55-63",
                Floor: 55,
                Ceiling: 63,
                Result: "Protective ward or enigmatic puzzle blocks the way"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Peril/64-72",
                Floor: 64,
                Ceiling: 72,
                Result: "Religious artifact evokes unnerving power"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Peril/73-81",
                Floor: 73,
                Ceiling: 81,
                Result: "Unnatural corruption or decay fouls the environment"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Peril/82-90",
                Floor: 82,
                Ceiling: 90,
                Result: "Zealots enact a ceremony to unlock forbidden powers"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Peril/91-98",
                Floor: 91,
                Ceiling: 98,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Peril/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 379
            },
            $id: "Starforged/Oracles/Location_Themes/Sacred/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Location_Themes/Sacred",
            Description: "Use this table to help envision a beneficial encounter or event, such as when rolling a strong hit with a match in a location.",
            Display: {
              Title: "Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Location_Themes/Sacred/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Location_Themes/Sacred/Opportunity"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  { Key: "Location Theme", Values: ["Sacred"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Opportunity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Access to a hidden or sealed area"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Opportunity/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Encounter with a helpful adherent or heretic"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Opportunity/41-60",
                Floor: 41,
                Ceiling: 60,
                Result: "Insight into the nature or history of the faith"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Opportunity/61-80",
                Floor: 61,
                Ceiling: 80,
                Result: "Insight into the schemes or methods of religious zealots"
              },
              {
                $id: "Starforged/Oracles/Location_Themes/Sacred/Opportunity/81-100",
                Floor: 81,
                Ceiling: 100,
                Result: "Interesting or valuable artifact or device"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 380
    },
    $id: "Starforged/Oracles/Misc",
    Name: "Misc",
    Display: { Title: "Miscellaneous" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 380
        },
        $id: "Starforged/Oracles/Misc/Story_Complication",
        Name: "Story Complication",
        Aliases: ["Complication"],
        Category: "Starforged/Oracles/Misc",
        Description: "This oracle will introduce narrative turns, troubles, and revelations. It can be used as an alternative to the [Pay the Price](Starforged/Moves/Fate/Pay_the_Price) table when you encounter a negative outcome at a crucial moment. In particular, you might use this table after rolling matched 10s on the challenge dice.",
        Display: {
          Title: "Story Complication",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Misc/Story_Complication",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Misc/Story_Complication"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["peril", "event", "present"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/1-4",
            Floor: 1,
            Ceiling: 4,
            Result: "Crucial equipment or device fails",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/5-7",
            Floor: 5,
            Ceiling: 7,
            Result: "Crucial equipment or device is sabotaged",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/8-10",
            Floor: 8,
            Ceiling: 10,
            Result: "Debt or promise comes due"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/11-14",
            Floor: 11,
            Ceiling: 14,
            Result: "Enemy reveals unexpected powers, abilities, or influence"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/15-17",
            Floor: 15,
            Ceiling: 17,
            Result: "Enemy reveals their true agenda or nature"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/18-20",
            Floor: 18,
            Ceiling: 20,
            Result: "Enemy unexpectedly benefits from your actions"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/21-23",
            Floor: 21,
            Ceiling: 23,
            Result: "Key location is made inaccessible"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/24-26",
            Floor: 24,
            Ceiling: 26,
            Result: "Key location is threatened or made unsafe"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/27-29",
            Floor: 27,
            Ceiling: 29,
            Result: "Natural disaster is imminent"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/30-33",
            Floor: 30,
            Ceiling: 33,
            Result: "Needed item or resource is unavailable"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/34-36",
            Floor: 34,
            Ceiling: 36,
            Result: "Object of a quest is not what you assumed"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/37-39",
            Floor: 37,
            Ceiling: 39,
            Result: "Old enemy resurfaces"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/40-42",
            Floor: 40,
            Ceiling: 42,
            Result: "Simultaneous problems force a hard choice"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/43-45",
            Floor: 43,
            Ceiling: 45,
            Result: "Someone important betrays your trust"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/46-48",
            Floor: 46,
            Ceiling: 48,
            Result: "Someone important is threatened or endangered"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/49-51",
            Floor: 49,
            Ceiling: 51,
            Result: "Someone important reveals their problematic secret or history"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/52-54",
            Floor: 52,
            Ceiling: 54,
            Result: "Something important goes missing"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/55-57",
            Floor: 55,
            Ceiling: 57,
            Result: "Technology or device is shown to have unexpected effects"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/58-61",
            Floor: 58,
            Ceiling: 61,
            Result: "Time pressure suddenly increases"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/62-65",
            Floor: 62,
            Ceiling: 65,
            Result: "Trap is sprung"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/66-68",
            Floor: 66,
            Ceiling: 68,
            Result: "True agenda of a connection or patron is revealed"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/69-72",
            Floor: 69,
            Ceiling: 72,
            Result: "Trusted information is shown to be false",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/73-76",
            Floor: 73,
            Ceiling: 76,
            Result: "Two seemingly unrelated problems are shown to be connected",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/77-80",
            Floor: 77,
            Ceiling: 80,
            Result: "Undermined by self-doubt or vulnerabilities"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/81-84",
            Floor: 81,
            Ceiling: 84,
            Result: "Unexpected enemies appear"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/85-88",
            Floor: 85,
            Ceiling: 88,
            Result: "Urgent message distracts you from your quest",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/89-92",
            Floor: 89,
            Ceiling: 92,
            Result: "You are tracked or followed"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/93-95",
            Floor: 93,
            Ceiling: 95,
            Result: "You were diverted from the true crisis",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Complication/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 381
        },
        $id: "Starforged/Oracles/Misc/Story_Clue",
        Name: "Story Clue",
        Aliases: ["Clue"],
        Category: "Starforged/Oracles/Misc",
        Description: "When you [Gather Information](Starforged/Moves/Adventure/Gather_Information) to investigate a mystery, you might uncover clues in the form of messages, rumors, eyewitness reports, data, or physical evidence. You can use this oracle to help reveal what this evidence connects to or implicates. Then, use the outcome of the [Gather Information](Starforged/Moves/Adventure/Gather_Information) roll\u2014strong hit, weak hit, or miss\u2014to guide whether the clue brings clarity or complications.",
        Display: {
          Title: "Story Clue",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Misc/Story_Clue",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Misc/Story_Clue"
              }
            ]
          }
        },
        Usage: { "Max rolls": 2, "Allow duplicates": !1 },
        Table: [
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Affirms a previously understood fact or clue"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/4-6",
            Floor: 4,
            Ceiling: 6,
            Result: "Connects to a known rumor or scandal"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/7-9",
            Floor: 7,
            Ceiling: 9,
            Result: "Connects to a previously unrelated mystery or quest"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/10-12",
            Floor: 10,
            Ceiling: 12,
            Result: "Connects to your own expertise or interests"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/13-15",
            Floor: 13,
            Ceiling: 15,
            Result: "Contradicts a previously understood fact or clue"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/16-18",
            Floor: 16,
            Ceiling: 18,
            Result: "Evokes a personal memory"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/19-21",
            Floor: 19,
            Ceiling: 21,
            Result: "Evokes a remarkable anomaly or phenomenon"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/22-24",
            Floor: 22,
            Ceiling: 24,
            Result: "Evokes a vision or prophecy"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/25-27",
            Floor: 25,
            Ceiling: 27,
            Result: "Involves a cultural touchstone"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/28-30",
            Floor: 28,
            Ceiling: 30,
            Result: "Involves a hidden or mysterious faction"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/31-33",
            Floor: 31,
            Ceiling: 33,
            Result: "Involves a hidden or mysterious person"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/34-36",
            Floor: 34,
            Ceiling: 36,
            Result: "Involves a key or means of access"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/37-39",
            Floor: 37,
            Ceiling: 39,
            Result: "Involves a machine or technology"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/40-42",
            Floor: 40,
            Ceiling: 42,
            Result: "Involves a non-human being or creature"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/43-45",
            Floor: 43,
            Ceiling: 45,
            Result: "Involves a notable faction"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/46-48",
            Floor: 46,
            Ceiling: 48,
            Result: "Involves a notable person"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/49-51",
            Floor: 49,
            Ceiling: 51,
            Result: "Involves a person or faction from your background"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/52-54",
            Floor: 52,
            Ceiling: 54,
            Result: "Involves a personal item"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/55-57",
            Floor: 55,
            Ceiling: 57,
            Result: "Involves an enemy or rival"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/58-60",
            Floor: 58,
            Ceiling: 60,
            Result: "Involves an organism or biological evidence"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/61-63",
            Floor: 61,
            Ceiling: 63,
            Result: "Involves an unusual ability or power"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/64-66",
            Floor: 64,
            Ceiling: 66,
            Result: "Involves someone you trust"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/67-69",
            Floor: 67,
            Ceiling: 69,
            Result: "Involves something rare, expensive, or precious"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/70-72",
            Floor: 70,
            Ceiling: 72,
            Result: "Leads to a distant or unfamiliar place"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/73-75",
            Floor: 73,
            Ceiling: 75,
            Result: "Leads to a hidden or forgotten place"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/76-78",
            Floor: 76,
            Ceiling: 78,
            Result: "Leads to a nearby or familiar place"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/79-81",
            Floor: 79,
            Ceiling: 81,
            Result: "Leads to a notable or central place"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/82-84",
            Floor: 82,
            Ceiling: 84,
            Result: "Suggests a history of similar incidents"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/85-87",
            Floor: 85,
            Ceiling: 87,
            Result: "Suggests a looming event or deadline"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/88-90",
            Floor: 88,
            Ceiling: 90,
            Result: "Suggests an imposter or forgery"
          },
          {
            $id: "Starforged/Oracles/Misc/Story_Clue/91-100",
            Floor: 91,
            Ceiling: 100,
            Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Descriptor",
              "Starforged/Oracles/Core/Focus"
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 382
        },
        $id: "Starforged/Oracles/Misc/Anomaly_Effect",
        Name: "Anomaly Effect",
        Aliases: ["Anomaly"],
        Category: "Starforged/Oracles/Misc",
        Description: "Meddling with alien artifacts or forbidden magic may put you at the mercy of chaos. Use this table to resolve the effects of ancient tech, rituals, or other strange forces. Results on this table may have devastating implications, so use it only in rare and dramatic moments.",
        Display: {
          Title: "Anomaly Effect",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Misc/Anomaly_Effect",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Misc/Anomaly_Effect"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["peril", "event", "present"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Alters or focuses gravity"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/4-6",
            Floor: 4,
            Ceiling: 6,
            Result: "Alters or reshapes nonliving matter"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/7-9",
            Floor: 7,
            Ceiling: 9,
            Result: "Alters surrounding air or atmosphere"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/10-12",
            Floor: 10,
            Ceiling: 12,
            Result: "Alters surrounding ecosystems"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/13-15",
            Floor: 13,
            Ceiling: 15,
            Result: "Awakens the dead"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/16-18",
            Floor: 16,
            Ceiling: 18,
            Result: "Causes distressing visions or nightmares"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/19-21",
            Floor: 19,
            Ceiling: 21,
            Result: "Causes rapid biological growth or infestation"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/22-24",
            Floor: 22,
            Ceiling: 24,
            Result: "Causes sickness or weakness"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/25-27",
            Floor: 25,
            Ceiling: 27,
            Result: "Corrupts living matter"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/28-30",
            Floor: 28,
            Ceiling: 30,
            Result: "Corrupts or infects devices or computers"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/31-33",
            Floor: 31,
            Ceiling: 33,
            Result: "Creates manifestations or illusions"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/34-36",
            Floor: 34,
            Ceiling: 36,
            Result: "Decays or weakens surrounding terrain or structures"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/37-39",
            Floor: 37,
            Ceiling: 39,
            Result: "Drains energy from equipment or devices"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/40-42",
            Floor: 40,
            Ceiling: 42,
            Result: "Emits forceful or destructive energy"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/43-45",
            Floor: 43,
            Ceiling: 45,
            Result: "Emits radiation"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/46-48",
            Floor: 46,
            Ceiling: 48,
            Result: "Generates a barrier or ward"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/49-51",
            Floor: 49,
            Ceiling: 51,
            Result: "Generates intense lights and sounds"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/52-54",
            Floor: 52,
            Ceiling: 54,
            Result: "Generates tendrils of energy that slither or grasp"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/55-57",
            Floor: 55,
            Ceiling: 57,
            Result: "Harvests or destroys living matter"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/58-60",
            Floor: 58,
            Ceiling: 60,
            Result: "Harvests or destroys nonliving matter"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/61-63",
            Floor: 61,
            Ceiling: 63,
            Result: "Nullifies or destroys equipment or devices"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/64-66",
            Floor: 64,
            Ceiling: 66,
            Result: "Opens a path to another location"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/67-69",
            Floor: 67,
            Ceiling: 69,
            Result: "Replicates living matter"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/70-72",
            Floor: 70,
            Ceiling: 72,
            Result: "Replicates nonliving matter"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/73-75",
            Floor: 73,
            Ceiling: 75,
            Result: "Reveals glimpses of the distant past"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/76-78",
            Floor: 76,
            Ceiling: 78,
            Result: "Reveals glimpses of the far future"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/79-81",
            Floor: 79,
            Ceiling: 81,
            Result: "Reverses time by a few moments or minutes"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/82-84",
            Floor: 82,
            Ceiling: 84,
            Result: "Slows or stops time"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/85-87",
            Floor: 85,
            Ceiling: 87,
            Result: "Summons or manifests an ancient being or intelligence"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/88-90",
            Floor: 88,
            Ceiling: 90,
            Result: "Summons or manifests creatures"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/91-93",
            Floor: 91,
            Ceiling: 93,
            Result: "Transports to another location"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/94-96",
            Floor: 94,
            Ceiling: 96,
            Result: "Triggers an impending catastrophic explosion"
          },
          {
            $id: "Starforged/Oracles/Misc/Anomaly_Effect/97-100",
            Floor: 97,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 383
        },
        $id: "Starforged/Oracles/Misc/Combat_Action",
        Name: "Combat Action",
        Category: "Starforged/Oracles/Misc",
        Description: "Use this oracle to help inspire an action for a foe in a fight. When you\u2019re not sure what an enemy does next, particularly when they have you in a bad spot, roll on this table and interpret the result as appropriate to the nature of the enemy and your objective.",
        Display: {
          Title: "Combat Action",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Misc/Combat_Action",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Misc/Combat_Action"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["peril", "event", "present"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Block a path or cut off an objective"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/4-6",
            Floor: 4,
            Ceiling: 6,
            Result: "Cause reckless damage"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/7-9",
            Floor: 7,
            Ceiling: 9,
            Result: "Change weapons or tactics"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/10-12",
            Floor: 10,
            Ceiling: 12,
            Result: "Compel a surrender or concession"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/13-15",
            Floor: 13,
            Ceiling: 15,
            Result: "Coordinate with allies"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/16-18",
            Floor: 16,
            Ceiling: 18,
            Result: "Corner, trap, or entangle"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/19-21",
            Floor: 19,
            Ceiling: 21,
            Result: "Counter or reflect an attack"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/22-24",
            Floor: 22,
            Ceiling: 24,
            Result: "Create a distraction"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/25-27",
            Floor: 25,
            Ceiling: 27,
            Result: "Destroy something or render it useless"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/28-30",
            Floor: 28,
            Ceiling: 30,
            Result: "Fall back or stand off"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/31-33",
            Floor: 31,
            Ceiling: 33,
            Result: "Hide or sneak"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/34-36",
            Floor: 34,
            Ceiling: 36,
            Result: "Intimidate, taunt, or frighten"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/37-39",
            Floor: 37,
            Ceiling: 39,
            Result: "Leverage the advantage of a weapon or ability"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/40-42",
            Floor: 40,
            Ceiling: 42,
            Result: "Leverage the terrain or surroundings"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/43-45",
            Floor: 43,
            Ceiling: 45,
            Result: "Lure into a vulnerable position"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/46-48",
            Floor: 46,
            Ceiling: 48,
            Result: "Make a cautious or probing attack"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/49-51",
            Floor: 49,
            Ceiling: 51,
            Result: "Make a ferocious or powerful attack"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/52-54",
            Floor: 52,
            Ceiling: 54,
            Result: "Make a precise or careful attack"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/55-57",
            Floor: 55,
            Ceiling: 57,
            Result: "Make a sacrificial attack"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/58-60",
            Floor: 58,
            Ceiling: 60,
            Result: "Make an indirect attack"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/61-63",
            Floor: 61,
            Ceiling: 63,
            Result: "Move in close or grapple"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/64-66",
            Floor: 64,
            Ceiling: 66,
            Result: "Nullify a system, device, or weapon"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/67-69",
            Floor: 67,
            Ceiling: 69,
            Result: "Overrun a position"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/70-72",
            Floor: 70,
            Ceiling: 72,
            Result: "Perform a feint or trick"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/73-75",
            Floor: 73,
            Ceiling: 75,
            Result: "Press an advantage"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/76-78",
            Floor: 76,
            Ceiling: 78,
            Result: "Provoke a careless response"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/79-81",
            Floor: 79,
            Ceiling: 81,
            Result: "Ready a decisive action"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/82-84",
            Floor: 82,
            Ceiling: 84,
            Result: "Shift the fight to a new area"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/85-87",
            Floor: 85,
            Ceiling: 87,
            Result: "Summon aid or reinforcements"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/88-90",
            Floor: 88,
            Ceiling: 90,
            Result: "Take cover or bolster defenses"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/91-93",
            Floor: 91,
            Ceiling: 93,
            Result: "Use an unexpected weapon or ability"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/94-96",
            Floor: 94,
            Ceiling: 96,
            Result: "Weaken defenses"
          },
          {
            $id: "Starforged/Oracles/Misc/Combat_Action/97-100",
            Floor: 97,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Oracles/Moves",
    Name: "Moves",
    Display: { Title: "Moves" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 141
        },
        $id: "Starforged/Oracles/Moves/Begin_a_Session",
        Name: "Begin a Session",
        Category: "Starforged/Oracles/Moves",
        Display: {
          Title: "Begin a Session",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Moves/Begin_a_Session",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Moves/Begin_a_Session"
              }
            ]
          }
        },
        Content: { "Part of speech": ["fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Moves/Begin_a_Session/1-10",
            Floor: 1,
            Ceiling: 10,
            Result: "Flashback reveals an aspect of your background or nature",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Begin_a_Session/11-20",
            Floor: 11,
            Ceiling: 20,
            Result: "Flashback reveals an aspect of another character, place, or faction",
            Suggestions: {
              "Game objects": [{ "Object type": "Faction" }],
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Begin_a_Session/21-30",
            Floor: 21,
            Ceiling: 30,
            Result: "Influential character or faction is introduced or given new detail",
            Suggestions: { "Game objects": [{ "Object type": "Faction" }] }
          },
          {
            $id: "Starforged/Oracles/Moves/Begin_a_Session/31-40",
            Floor: 31,
            Ceiling: 40,
            Result: "Seemingly unrelated situations are shown to be connected"
          },
          {
            $id: "Starforged/Oracles/Moves/Begin_a_Session/41-50",
            Floor: 41,
            Ceiling: 50,
            Result: "External factors create new danger, urgency, or importance for a quest",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Begin_a_Session/51-60",
            Floor: 51,
            Ceiling: 60,
            Result: "Important character is put in danger or suffers a misadventure"
          },
          {
            $id: "Starforged/Oracles/Moves/Begin_a_Session/61-70",
            Floor: 61,
            Ceiling: 70,
            Result: "Key location is made unsafe or becomes mired in conflict"
          },
          {
            $id: "Starforged/Oracles/Moves/Begin_a_Session/71-80",
            Floor: 71,
            Ceiling: 80,
            Result: "Unexpected return of an enemy or threat"
          },
          {
            $id: "Starforged/Oracles/Moves/Begin_a_Session/81-90",
            Floor: 81,
            Ceiling: 90,
            Result: "Peril lies ahead or lurks just out of view"
          },
          {
            $id: "Starforged/Oracles/Moves/Begin_a_Session/91-100",
            Floor: 91,
            Ceiling: 100,
            Result: "Unforeseen aid is on the way or within reach"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 176
        },
        $id: "Starforged/Oracles/Moves/Make_a_Discovery",
        Name: "Make a Discovery",
        Category: "Starforged/Oracles/Moves",
        Display: {
          Title: "Make a Discovery",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Moves/Make_a_Discovery",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Moves/Make_a_Discovery"
              }
            ]
          }
        },
        Content: { "Part of speech": ["fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/1-4",
            Floor: 1,
            Ceiling: 4,
            Result: "Advanced technology waiting to be harnessed or salvaged",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/5-8",
            Floor: 5,
            Ceiling: 8,
            Result: "Ancient archive or message",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/9-10",
            Floor: 9,
            Ceiling: 10,
            Result: "Artificial consciousness evolved to a higher state"
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/11-12",
            Floor: 11,
            Ceiling: 12,
            Result: "Clues to a crucial resource or uncharted domain",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/13-14",
            Floor: 13,
            Ceiling: 14,
            Result: "Envoy from another time or reality"
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/15-22",
            Floor: 15,
            Ceiling: 22,
            Result: "Extraordinary natural phenomenon"
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/23-24",
            Floor: 23,
            Ceiling: 24,
            Result: "First contact with intelligent life",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/25-26",
            Floor: 25,
            Ceiling: 26,
            Result: "Gateway to another time or alternate reality",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/27-28",
            Floor: 27,
            Ceiling: 28,
            Result: "Key to unlocking a language or method of communication"
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/29-34",
            Floor: 29,
            Ceiling: 34,
            Result: "Lost or hidden people"
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/35-42",
            Floor: 35,
            Ceiling: 42,
            Result: "Majestic or unusual lifeforms",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/43-46",
            Floor: 43,
            Ceiling: 46,
            Result: "Marvel of ancient engineering",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/47-50",
            Floor: 47,
            Ceiling: 50,
            Result: "Miraculously preserved artifact or specimen",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/51-56",
            Floor: 51,
            Ceiling: 56,
            Result: "Monumental architecture or artistry of an ancient civilization",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/57-62",
            Floor: 57,
            Ceiling: 62,
            Result: "Mysterious device or artifact of potential value",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/63-66",
            Floor: 63,
            Ceiling: 66,
            Result: "New understanding of an enduring mystery",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/67-68",
            Floor: 67,
            Ceiling: 68,
            Result: "Pathway or means of travel to a distant location",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Space/Sighting/Terminus",
                "Starforged/Oracles/Space/Sighting/Outlands",
                "Starforged/Oracles/Space/Sighting/Expanse"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/69-70",
            Floor: 69,
            Ceiling: 70,
            Result: "Person or lifeform with phenomenal abilities",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/71-78",
            Floor: 71,
            Ceiling: 78,
            Result: "Place of awe-inspiring beauty"
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/79-86",
            Floor: 79,
            Ceiling: 86,
            Result: "Rare and valuable resource",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/87-88",
            Floor: 87,
            Ceiling: 88,
            Result: "Safeguarded or idyllic location"
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/89-90",
            Floor: 89,
            Ceiling: 90,
            Result: "Visions or prophesies of the future",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Make_a_Discovery/91-100",
            Floor: 91,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 177
        },
        $id: "Starforged/Oracles/Moves/Confront_Chaos",
        Name: "Confront Chaos",
        Category: "Starforged/Oracles/Moves",
        Display: {
          Title: "Confront Chaos",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Moves/Confront_Chaos",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Moves/Confront_Chaos"
              }
            ]
          }
        },
        Content: { "Part of speech": ["fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/1-4",
            Floor: 1,
            Ceiling: 4,
            Result: "Baneful weapon of mass destruction",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/5-9",
            Floor: 5,
            Ceiling: 9,
            Result: "Cataclysmic environmental effects"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/10-12",
            Floor: 10,
            Ceiling: 12,
            Result: "Dead given unnatural life"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/13-17",
            Floor: 13,
            Ceiling: 17,
            Result: "Destructive lifeform of monstrous proportion",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/18-20",
            Floor: 18,
            Ceiling: 20,
            Result: "Dread hallucinations or illusions"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/21-24",
            Floor: 21,
            Ceiling: 24,
            Result: "Harbingers of an imminent invasion"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/25-27",
            Floor: 25,
            Ceiling: 27,
            Result: "Horde of insatiable hunger or fury"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/28-32",
            Floor: 28,
            Ceiling: 32,
            Result: "Horrific lifeforms of inscrutable purpose",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/33-36",
            Floor: 33,
            Ceiling: 36,
            Result: "Impostors in human form"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/37-41",
            Floor: 37,
            Ceiling: 41,
            Result: "Machines made enemy",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/42-45",
            Floor: 42,
            Ceiling: 45,
            Result: "Malignant contagion or parasite"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/46-50",
            Floor: 46,
            Ceiling: 50,
            Result: "Messenger or signal with a dire warning",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/51-53",
            Floor: 51,
            Ceiling: 53,
            Result: "Passage to a grim alternate reality"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/54-58",
            Floor: 54,
            Ceiling: 58,
            Result: "People corrupted by chaos"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/59-63",
            Floor: 59,
            Ceiling: 63,
            Result: "Powerful distortions of time or space"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/64-68",
            Floor: 64,
            Ceiling: 68,
            Result: "Signs of an impending catastrophe"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/69-72",
            Floor: 69,
            Ceiling: 72,
            Result: "Site of a baffling disappearance"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/73-77",
            Floor: 73,
            Ceiling: 77,
            Result: "Site of a horrible disaster",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/78-82",
            Floor: 78,
            Ceiling: 82,
            Result: "Site of terrible carnage"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/83-87",
            Floor: 83,
            Ceiling: 87,
            Result: "Technology nullified or made unstable",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/88-92",
            Floor: 88,
            Ceiling: 92,
            Result: "Technology warped for dark purpose"
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/93-96",
            Floor: 93,
            Ceiling: 96,
            Result: "Vault of dread technology or power",
            Suggestions: {
              "Game objects": [{ "Object type": "Precursor Vault" }]
            }
          },
          {
            $id: "Starforged/Oracles/Moves/Confront_Chaos/97-100",
            Floor: 97,
            Ceiling: 100,
            Result: "Worshipers of great and malevolent powers"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 194
        },
        $id: "Starforged/Oracles/Moves/Take_Decisive_Action",
        Name: "Take Decisive Action",
        Category: "Starforged/Oracles/Moves",
        Display: {
          Title: "Take Decisive Action",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Moves/Take_Decisive_Action",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Moves/Take_Decisive_Action"
              }
            ]
          }
        },
        Content: { "Part of speech": ["sentences"] },
        Table: [
          {
            $id: "Starforged/Oracles/Moves/Take_Decisive_Action/1-40",
            Floor: 1,
            Ceiling: 40,
            Result: "It\u2019s worse than you thought: Make a suffer move (-2)"
          },
          {
            $id: "Starforged/Oracles/Moves/Take_Decisive_Action/41-52",
            Floor: 41,
            Ceiling: 52,
            Result: "Victory is short-lived: A new peril or foe appears"
          },
          {
            $id: "Starforged/Oracles/Moves/Take_Decisive_Action/53-64",
            Floor: 53,
            Ceiling: 64,
            Result: "You face collateral damage: Something is lost, damaged, or broken"
          },
          {
            $id: "Starforged/Oracles/Moves/Take_Decisive_Action/65-76",
            Floor: 65,
            Ceiling: 76,
            Result: "Others pay the price: Someone else suffers the cost"
          },
          {
            $id: "Starforged/Oracles/Moves/Take_Decisive_Action/77-88",
            Floor: 77,
            Ceiling: 88,
            Result: "Others won\u2019t forget: You are marked for vengeance"
          },
          {
            $id: "Starforged/Oracles/Moves/Take_Decisive_Action/89-100",
            Floor: 89,
            Ceiling: 100,
            Result: "It gets complicated: The true nature of a foe or objective is revealed"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 200
        },
        $id: "Starforged/Oracles/Moves/Endure_Harm",
        Name: "Endure Harm",
        Category: "Starforged/Oracles/Moves",
        Display: {
          Title: "Endure Harm",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Moves/Endure_Harm",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Moves/Endure_Harm"
              }
            ]
          }
        },
        Content: { "Part of speech": ["sentences"] },
        Table: [
          {
            $id: "Starforged/Oracles/Moves/Endure_Harm/1-10",
            Floor: 1,
            Ceiling: 10,
            Result: "You suffer mortal harm. [Face Death](Starforged/Moves/Threshold/Face_Death)."
          },
          {
            $id: "Starforged/Oracles/Moves/Endure_Harm/11-20",
            Floor: 11,
            Ceiling: 20,
            Result: "You are dying. Within an hour or two, you must [Heal](Starforged/Moves/Recover/Heal) and raise your health above 0, or [Face Death](Starforged/Moves/Threshold/Face_Death)."
          },
          {
            $id: "Starforged/Oracles/Moves/Endure_Harm/21-35",
            Floor: 21,
            Ceiling: 35,
            Result: "You are unconscious and out of action. If left alone, you come back to your senses in an hour or two. If you are vulnerable to ongoing harm, [Face Death](Starforged/Moves/Threshold/Face_Death)."
          },
          {
            $id: "Starforged/Oracles/Moves/Endure_Harm/36-50",
            Floor: 36,
            Ceiling: 50,
            Result: "You are reeling and fighting to stay conscious. If you engage in any vigorous activity before taking a breather for a few minutes, roll on this table again (before resolving the other move)."
          },
          {
            $id: "Starforged/Oracles/Moves/Endure_Harm/51-100",
            Floor: 51,
            Ceiling: 100,
            Result: "You are still standing."
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 202
        },
        $id: "Starforged/Oracles/Moves/Endure_Stress",
        Name: "Endure Stress",
        Category: "Starforged/Oracles/Moves",
        Display: {
          Title: "Endure Stress",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Moves/Endure_Stress",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Moves/Endure_Stress"
              }
            ]
          }
        },
        Content: { "Part of speech": ["sentences"] },
        Table: [
          {
            $id: "Starforged/Oracles/Moves/Endure_Stress/1-10",
            Floor: 1,
            Ceiling: 10,
            Result: "You are overwhelmed. [Face Desolation](Starforged/Moves/Threshold/Face_Desolation)."
          },
          {
            $id: "Starforged/Oracles/Moves/Endure_Stress/11-25",
            Floor: 11,
            Ceiling: 25,
            Result: "You give up. [Forsake Your Vow](Starforged/Moves/Quest/Forsake_Your_Vow)."
          },
          {
            $id: "Starforged/Oracles/Moves/Endure_Stress/26-50",
            Floor: 26,
            Ceiling: 50,
            Result: "You give in to fear or compulsion, and act against your better instincts."
          },
          {
            $id: "Starforged/Oracles/Moves/Endure_Stress/51-100",
            Floor: 51,
            Ceiling: 100,
            Result: "You persevere."
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 206
        },
        $id: "Starforged/Oracles/Moves/Withstand_Damage",
        Name: "Withstand Damage",
        Category: "Starforged/Oracles/Moves",
        Display: {
          Title: "Withstand Damage",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Moves/Withstand_Damage",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Moves/Withstand_Damage"
              }
            ]
          }
        },
        Content: { "Part of speech": ["sentences"] },
        Table: [
          {
            $id: "Starforged/Oracles/Moves/Withstand_Damage/1-10",
            Floor: 1,
            Ceiling: 10,
            Result: "Immediate catastrophic destruction. All aboard must [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) or [Face Death](Starforged/Moves/Threshold/Face_Death), as appropriate."
          },
          {
            $id: "Starforged/Oracles/Moves/Withstand_Damage/11-25",
            Floor: 11,
            Ceiling: 25,
            Result: "Destruction is imminent and unavoidable. If you do not have the means or intention to get clear, [Endure Harm](Starforged/Moves/Suffer/Endure_Harm) or [Face Death](Starforged/Moves/Threshold/Face_Death) as appropriate."
          },
          {
            $id: "Starforged/Oracles/Moves/Withstand_Damage/26-40",
            Floor: 26,
            Ceiling: 40,
            Result: "Destruction is imminent, but can be averted if you [Repair](Starforged/Moves/Recover/Repair) your vehicle and raise its integrity above 0. If you fail, see 11-25."
          },
          {
            $id: "Starforged/Oracles/Moves/Withstand_Damage/41-55",
            Floor: 41,
            Ceiling: 55,
            Result: "You cannot [Repair](Starforged/Moves/Recover/Repair) this vehicle until you [Resupply](Starforged/Moves/Recover/Resupply) and obtain a crucial replacement part. If you roll this result again prior to that, see 11-25."
          },
          {
            $id: "Starforged/Oracles/Moves/Withstand_Damage/56-70",
            Floor: 56,
            Ceiling: 70,
            Result: "The vehicle is crippled or out of your control. To get it back in action, you must [Repair](Starforged/Moves/Recover/Repair) and raise its integrity above 0."
          },
          {
            $id: "Starforged/Oracles/Moves/Withstand_Damage/71-85",
            Floor: 71,
            Ceiling: 85,
            Result: "It's a rough ride. All aboard must make the [Endure Harm](Starforged/Moves/Suffer/Endure_Harm), [Endure Stress](Starforged/Moves/Suffer/Endure_Stress), or [Companion Takes a Hit](Starforged/Moves/Suffer/Companion_Takes_a_Hit) move, suffering a serious (-2) cost."
          },
          {
            $id: "Starforged/Oracles/Moves/Withstand_Damage/86-95",
            Floor: 86,
            Ceiling: 95,
            Result: "You\u2019ve lost fuel, energy, or cargo. [Sacrifice Resources](Starforged/Moves/Suffer/Sacrifice_Resources) (-2)."
          },
          {
            $id: "Starforged/Oracles/Moves/Withstand_Damage/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Against all odds, the vehicle holds together."
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 229
        },
        $id: "Starforged/Oracles/Moves/Ask_the_Oracle",
        Name: "Ask the Oracle",
        Aliases: ["Ask"],
        Category: "Starforged/Oracles/Moves",
        Display: {
          Title: "Ask the Oracle",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Moves/Ask_the_Oracle",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Moves/Ask_the_Oracle"
              }
            ]
          }
        },
        Usage: {},
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 229
            },
            $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Almost_Certain",
            Name: "Almost Certain",
            Aliases: ["90"],
            "Member of": "Starforged/Oracles/Moves/Ask_the_Oracle",
            Category: "Starforged/Oracles/Moves",
            Display: {
              Title: "Ask the Oracle: Almost Certain",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Moves/Ask_the_Oracle/Almost_Certain",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Moves/Ask_the_Oracle/Almost_Certain"
                  }
                ]
              }
            },
            "On a Match": {
              $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Almost_Certain/On_a_Match",
              Text: "On a match, envision an extreme result or twist."
            },
            Table: [
              {
                $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Almost_Certain/1-90",
                Floor: 1,
                Ceiling: 90,
                Result: "Yes"
              },
              {
                $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Almost_Certain/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "No"
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 229
            },
            $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Likely",
            Name: "Likely",
            Aliases: ["75"],
            "Member of": "Starforged/Oracles/Moves/Ask_the_Oracle",
            Category: "Starforged/Oracles/Moves",
            Display: {
              Title: "Ask the Oracle: Likely",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Moves/Ask_the_Oracle/Likely",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Moves/Ask_the_Oracle/Likely"
                  }
                ]
              }
            },
            "On a Match": {
              $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Likely/On_a_Match",
              Text: "On a match, envision an extreme result or twist."
            },
            Table: [
              {
                $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Likely/1-75",
                Floor: 1,
                Ceiling: 75,
                Result: "Yes"
              },
              {
                $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Likely/76-100",
                Floor: 76,
                Ceiling: 100,
                Result: "No"
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 229
            },
            $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Fifty-fifty",
            Name: "Fifty-fifty",
            Aliases: ["50", "5050", "Fifty-fifty", "50/50", "50-50"],
            "Member of": "Starforged/Oracles/Moves/Ask_the_Oracle",
            Category: "Starforged/Oracles/Moves",
            Display: {
              Title: "Ask the Oracle: 50/50",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Moves/Ask_the_Oracle/Fifty-fifty",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Moves/Ask_the_Oracle/Fifty-fifty"
                  }
                ]
              }
            },
            "On a Match": {
              $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Fifty-fifty/On_a_Match",
              Text: "On a match, envision an extreme result or twist."
            },
            Table: [
              {
                $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Fifty-fifty/1-50",
                Floor: 1,
                Ceiling: 50,
                Result: "Yes"
              },
              {
                $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Fifty-fifty/51-100",
                Floor: 51,
                Ceiling: 100,
                Result: "No"
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 229
            },
            $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Unlikely",
            Name: "Unlikely",
            Aliases: ["25"],
            "Member of": "Starforged/Oracles/Moves/Ask_the_Oracle",
            Category: "Starforged/Oracles/Moves",
            Display: {
              Title: "Ask the Oracle: Unlikely",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Moves/Ask_the_Oracle/Unlikely",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Moves/Ask_the_Oracle/Unlikely"
                  }
                ]
              }
            },
            "On a Match": {
              $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Unlikely/On_a_Match",
              Text: "On a match, envision an extreme result or twist."
            },
            Table: [
              {
                $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Unlikely/1-25",
                Floor: 1,
                Ceiling: 25,
                Result: "Yes"
              },
              {
                $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Unlikely/26-100",
                Floor: 26,
                Ceiling: 100,
                Result: "No"
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 229
            },
            $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Small_Chance",
            Name: "Small Chance",
            Aliases: ["10"],
            "Member of": "Starforged/Oracles/Moves/Ask_the_Oracle",
            Category: "Starforged/Oracles/Moves",
            Display: {
              Title: "Ask the Oracle: Small Chance",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Moves/Ask_the_Oracle/Small_Chance",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Moves/Ask_the_Oracle/Small_Chance"
                  }
                ]
              }
            },
            "On a Match": {
              $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Small_Chance/On_a_Match",
              Text: "On a match, envision an extreme result or twist."
            },
            Table: [
              {
                $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Small_Chance/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Yes"
              },
              {
                $id: "Starforged/Oracles/Moves/Ask_the_Oracle/Small_Chance/11-100",
                Floor: 11,
                Ceiling: 100,
                Result: "No"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 232
        },
        $id: "Starforged/Oracles/Moves/Pay_the_Price",
        Name: "Pay the Price",
        Category: "Starforged/Oracles/Moves",
        Display: {
          Title: "Pay the Price",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Moves/Pay_the_Price",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Moves/Pay_the_Price"
              }
            ]
          }
        },
        Content: { "Part of speech": ["fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/1-2",
            Floor: 1,
            Ceiling: 2,
            Result: "A trusted individual or community acts against you"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/3-4",
            Floor: 3,
            Ceiling: 4,
            Result: "An individual or community you care about is exposed to danger"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/5-7",
            Floor: 5,
            Ceiling: 7,
            Result: "You encounter signs of a looming threat"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/8-10",
            Floor: 8,
            Ceiling: 10,
            Result: "You create an opportunity for an enemy"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/11-14",
            Floor: 11,
            Ceiling: 14,
            Result: "You face a tough choice"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/15-18",
            Floor: 15,
            Ceiling: 18,
            Result: "You face the consequences of an earlier choice"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/19-22",
            Floor: 19,
            Ceiling: 22,
            Result: "A surprising development complicates your quest"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/23-26",
            Floor: 23,
            Ceiling: 26,
            Result: "You are separated from something or someone"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/27-32",
            Floor: 27,
            Ceiling: 32,
            Result: "Your action causes collateral damage or has an unintended effect"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/33-38",
            Floor: 33,
            Ceiling: 38,
            Result: "Something of value is lost or destroyed"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/39-44",
            Floor: 39,
            Ceiling: 44,
            Result: "The environment or terrain introduces a new hazard"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/45-50",
            Floor: 45,
            Ceiling: 50,
            Result: "A new enemy is revealed"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/51-56",
            Floor: 51,
            Ceiling: 56,
            Result: "A friend, companion, or ally is in harm\u2019s way (or you are, if alone)"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/57-62",
            Floor: 57,
            Ceiling: 62,
            Result: "Your equipment or vehicle malfunctions"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/63-68",
            Floor: 63,
            Ceiling: 68,
            Result: "Your vehicle suffers damage"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/69-74",
            Floor: 69,
            Ceiling: 74,
            Result: "You waste resources"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/75-81",
            Floor: 75,
            Ceiling: 81,
            Result: "You are harmed"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/82-88",
            Floor: 82,
            Ceiling: 88,
            Result: "You are stressed"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/89-95",
            Floor: 89,
            Ceiling: 95,
            Result: "You are delayed or put at a disadvantage"
          },
          {
            $id: "Starforged/Oracles/Moves/Pay_the_Price/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Oracles/Planets",
    Name: "Planets",
    Aliases: ["World"],
    Display: { Title: "Planets" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 306
        },
        $id: "Starforged/Oracles/Planets/Class",
        Name: "Class",
        Category: "Starforged/Oracles/Planets",
        Description: "This oracle provides a simple method of generating a planetary class. If this is enough information, stop there and envision the world as appropriate to its type. For a bit more detail, make a roll on the Descriptor oracle and envision how that aspect defines the nature of the planet or a specific planetside location.",
        Display: {
          Title: "Planetary Class",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Planets/Class",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Planets/Class"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          Suggestions: {
            "Oracle rolls": ["Starforged/Oracles/Core/Descriptor"]
          },
          "Allow duplicates": !1
        },
        Content: { "Part of speech": ["noun"] },
        Table: [
          {
            $id: "Starforged/Oracles/Planets/Class/1-15",
            Floor: 1,
            Ceiling: 15,
            Result: "[\u23F5Desert World](Starforged/Oracles/Planets/Desert)",
            "Game objects": [
              {
                "Object type": "Planet",
                Requires: {
                  Attributes: [
                    { Key: "Planetary Class", Values: ["Desert"] }
                  ]
                }
              }
            ],
            Display: {
              Images: [
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Desert-01.webp",
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Desert-02.webp"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Planets/Class/16-30",
            Floor: 16,
            Ceiling: 30,
            Result: "[\u23F5Furnace World](Starforged/Oracles/Planets/Furnace)",
            "Game objects": [
              {
                "Object type": "Planet",
                Requires: {
                  Attributes: [
                    { Key: "Planetary Class", Values: ["Furnace"] }
                  ]
                }
              }
            ],
            Display: {
              Images: [
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Furnace-01.webp",
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Furnace-02.webp"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Planets/Class/31-35",
            Floor: 31,
            Ceiling: 35,
            Result: "[\u23F5Grave World](Starforged/Oracles/Planets/Grave)",
            "Game objects": [
              {
                "Object type": "Planet",
                Requires: {
                  Attributes: [
                    { Key: "Planetary Class", Values: ["Grave"] }
                  ]
                }
              }
            ],
            Display: {
              Images: [
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Grave-01.webp",
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Grave-02.webp"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Planets/Class/36-50",
            Floor: 36,
            Ceiling: 50,
            Result: "[\u23F5Ice World](Starforged/Oracles/Planets/Ice)",
            "Game objects": [
              {
                "Object type": "Planet",
                Requires: {
                  Attributes: [
                    { Key: "Planetary Class", Values: ["Ice"] }
                  ]
                }
              }
            ],
            Display: {
              Images: [
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Ice-01.webp",
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Ice-02.webp"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Planets/Class/51-65",
            Floor: 51,
            Ceiling: 65,
            Result: "[\u23F5Jovian World](Starforged/Oracles/Planets/Jovian)",
            "Game objects": [
              {
                "Object type": "Planet",
                Requires: {
                  Attributes: [
                    { Key: "Planetary Class", Values: ["Jovian"] }
                  ]
                }
              }
            ],
            Display: {
              Images: [
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Jovian-01.webp",
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Jovian-02.webp"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Planets/Class/66-70",
            Floor: 66,
            Ceiling: 70,
            Result: "[\u23F5Jungle World](Starforged/Oracles/Planets/Jungle)",
            "Game objects": [
              {
                "Object type": "Planet",
                Requires: {
                  Attributes: [
                    { Key: "Planetary Class", Values: ["Jungle"] }
                  ]
                }
              }
            ],
            Display: {
              Images: [
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Jungle-01.webp",
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Jungle-02.webp"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Planets/Class/71-75",
            Floor: 71,
            Ceiling: 75,
            Result: "[\u23F5Ocean World](Starforged/Oracles/Planets/Ocean)",
            "Game objects": [
              {
                "Object type": "Planet",
                Requires: {
                  Attributes: [
                    { Key: "Planetary Class", Values: ["Ocean"] }
                  ]
                }
              }
            ],
            Display: {
              Images: [
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Ocean-01.webp",
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Ocean-02.webp"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Planets/Class/76-90",
            Floor: 76,
            Ceiling: 90,
            Result: "[\u23F5Rocky World](Starforged/Oracles/Planets/Rocky)",
            "Game objects": [
              {
                "Object type": "Planet",
                Requires: {
                  Attributes: [
                    { Key: "Planetary Class", Values: ["Rocky"] }
                  ]
                }
              }
            ],
            Display: {
              Images: [
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Rocky-01.webp",
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Rocky-02.webp"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Planets/Class/91-92",
            Floor: 91,
            Ceiling: 92,
            Result: "[\u23F5Shattered World](Starforged/Oracles/Planets/Shattered)",
            "Game objects": [
              {
                "Object type": "Planet",
                Requires: {
                  Attributes: [
                    { Key: "Planetary Class", Values: ["Shattered"] }
                  ]
                }
              }
            ],
            Display: {
              Images: [
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Shattered-01.webp",
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Shattered-02.webp"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Planets/Class/93-98",
            Floor: 93,
            Ceiling: 98,
            Result: "[\u23F5Tainted World](Starforged/Oracles/Planets/Tainted)",
            "Game objects": [
              {
                "Object type": "Planet",
                Requires: {
                  Attributes: [
                    { Key: "Planetary Class", Values: ["Tainted"] }
                  ]
                }
              }
            ],
            Display: {
              Images: [
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Tainted-01.webp",
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Tainted-02.webp"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Planets/Class/99-100",
            Floor: 99,
            Ceiling: 100,
            Result: "[\u23F5Vital World](Starforged/Oracles/Planets/Vital)",
            "Game objects": [
              {
                "Object type": "Planet",
                Requires: {
                  Attributes: [
                    { Key: "Planetary Class", Values: ["Vital"] }
                  ]
                }
              }
            ],
            Display: {
              Images: [
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Vital-01.webp",
                "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Vital-02.webp"
              ]
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 320
        },
        $id: "Starforged/Oracles/Planets/Peril",
        Name: "Peril",
        Category: "Starforged/Oracles/Planets",
        Description: "Choose or roll on this table when you want inspiration for a trouble during planetside exploration or a planetside expedition.",
        Display: {
          Title: "Planetside Peril",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Planets/Peril/Lifebearing",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Lifebearing",
                "Use content from": "Starforged/Oracles/Planets/Peril/Lifebearing"
              },
              {
                Label: "Lifeless",
                "Use content from": "Starforged/Oracles/Planets/Peril/Lifeless"
              }
            ]
          }
        },
        Usage: {
          Repeatable: !0,
          Requires: { Attributes: [{ Key: "Life" }] },
          "Allow duplicates": !1
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["peril", "event", "present"]
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 320
            },
            $id: "Starforged/Oracles/Planets/Peril/Lifebearing",
            Name: "Lifebearing",
            "Member of": "Starforged/Oracles/Planets/Peril",
            Category: "Starforged/Oracles/Planets",
            Display: {
              Title: "Lifebearing",
              "Column of": "Starforged/Oracles/Planets/Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Peril/Lifebearing",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Peril/Lifebearing"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  {
                    Key: "Life",
                    Values: ["Scarce", "Diverse", "Bountiful", "Overrun"]
                  }
                ]
              },
              "Allow duplicates": !1
            },
            Content: {
              "Part of speech": ["fragment"],
              Tags: ["peril", "event", "present"]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/1-3",
                Floor: 1,
                Ceiling: 3,
                Result: "Corrupted or mutated lifeform",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/4-6",
                Floor: 4,
                Ceiling: 6,
                Result: "Signs of a lifeform's power or cunning",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/7-9",
                Floor: 7,
                Ceiling: 9,
                Result: "Hazardous plant life or malignant spores"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/10-12",
                Floor: 10,
                Ceiling: 12,
                Result: "Lifeform hunts for prey",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/13-15",
                Floor: 13,
                Ceiling: 15,
                Result: "Lifeform lairs here",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/16-18",
                Floor: 16,
                Ceiling: 18,
                Result: "Lifeforms guided by a greater threat",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/19-21",
                Floor: 19,
                Ceiling: 21,
                Result: "Lifeforms spooked or stampeding",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/22-24",
                Floor: 22,
                Ceiling: 24,
                Result: "Threatening lifeform draws near",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/25-27",
                Floor: 25,
                Ceiling: 27,
                Result: "Life is revealed or takes an unexpected form",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/28-30",
                Floor: 28,
                Ceiling: 30,
                Result: "Blocked or impassible path"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/31-33",
                Floor: 31,
                Ceiling: 33,
                Result: "Corrosive substance or environment"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/34-36",
                Floor: 34,
                Ceiling: 36,
                Result: "Disturbing remains or evidence of death"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/37-39",
                Floor: 37,
                Ceiling: 39,
                Result: "Drastic environmental change"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/40-42",
                Floor: 40,
                Ceiling: 42,
                Result: "Enemy holds this area",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Location_Themes/Fortified/Peril",
                    "Starforged/Oracles/Location_Themes/Fortified/Opportunity",
                    "Starforged/Oracles/Location_Themes/Fortified/Feature"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/43-45",
                Floor: 43,
                Ceiling: 45,
                Result: "Entangling or engulfing hazard"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/46-48",
                Floor: 46,
                Ceiling: 48,
                Result: "Equipment fails or malfunctions"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/49-51",
                Floor: 49,
                Ceiling: 51,
                Result: "Guarded or patrolled path",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Location_Themes/Fortified/Peril",
                    "Starforged/Oracles/Location_Themes/Fortified/Opportunity",
                    "Starforged/Oracles/Location_Themes/Fortified/Feature"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/52-54",
                Floor: 52,
                Ceiling: 54,
                Result: "Led astray"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/55-57",
                Floor: 55,
                Ceiling: 57,
                Result: "Lost the path"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/58-60",
                Floor: 58,
                Ceiling: 60,
                Result: "Meteorites fall from the sky"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/61-63",
                Floor: 61,
                Ceiling: 63,
                Result: "Irradiated area or object"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/64-66",
                Floor: 64,
                Ceiling: 66,
                Result: "Realization that something was left behind"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/67-69",
                Floor: 67,
                Ceiling: 69,
                Result: "Seismic or volcanic upheaval"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/70-72",
                Floor: 70,
                Ceiling: 72,
                Result: "Signs of a lurking or trailing foe"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/73-75",
                Floor: 73,
                Ceiling: 75,
                Result: "Storm or atmospheric disruption"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/76-78",
                Floor: 76,
                Ceiling: 78,
                Result: "Toxic or sickening environment"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/79-81",
                Floor: 79,
                Ceiling: 81,
                Result: "Trap or alarm"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/82-84",
                Floor: 82,
                Ceiling: 84,
                Result: "Treacherous or arduous path"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/85-87",
                Floor: 85,
                Ceiling: 87,
                Result: "Troubling visions or apparitions",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Location_Themes/Haunted/Peril",
                    "Starforged/Oracles/Location_Themes/Haunted/Opportunity",
                    "Starforged/Oracles/Location_Themes/Haunted/Feature"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/88-90",
                Floor: 88,
                Ceiling: 90,
                Result: "Visibility hindered by atmospheric effects"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/91-93",
                Floor: 91,
                Ceiling: 93,
                Result: "Worrying arrival of a ship or vehicle",
                Suggestions: {
                  "Game objects": [{ "Object type": "Starship" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/94-96",
                Floor: 94,
                Ceiling: 96,
                Result: "Wreckage or ruins portend a new threat"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/97-99",
                Floor: 97,
                Ceiling: 99,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifebearing/100",
                Floor: 100,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 320
            },
            $id: "Starforged/Oracles/Planets/Peril/Lifeless",
            Name: "Lifeless",
            "Member of": "Starforged/Oracles/Planets/Peril",
            Category: "Starforged/Oracles/Planets",
            Display: {
              Title: "Lifeless",
              "Column of": "Starforged/Oracles/Planets/Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Peril/Lifeless",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Peril/Lifeless"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  {
                    Key: "Life",
                    Values: ["None", "Extinct", "Bountiful", "Overrun"]
                  }
                ]
              },
              "Allow duplicates": !1
            },
            Content: {
              "Part of speech": ["fragment"],
              Tags: ["peril", "event", "present"]
            },
            Table: [
              {
                Floor: null,
                Ceiling: null,
                Result: "Corrupted or mutated lifeform"
              },
              {
                Floor: null,
                Ceiling: null,
                Result: "Signs of a lifeform's power or cunning"
              },
              {
                Floor: null,
                Ceiling: null,
                Result: "Hazardous plant life or malignant spores"
              },
              {
                Floor: null,
                Ceiling: null,
                Result: "Lifeform hunts for prey"
              },
              {
                Floor: null,
                Ceiling: null,
                Result: "Lifeform lairs here"
              },
              {
                Floor: null,
                Ceiling: null,
                Result: "Lifeforms guided by a greater threat"
              },
              {
                Floor: null,
                Ceiling: null,
                Result: "Lifeforms spooked or stampeding"
              },
              {
                Floor: null,
                Ceiling: null,
                Result: "Threatening lifeform draws near"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/1-3",
                Floor: 1,
                Ceiling: 3,
                Result: "Life is revealed or takes an unexpected form",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/4-7",
                Floor: 4,
                Ceiling: 7,
                Result: "Blocked or impassible path"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/8-11",
                Floor: 8,
                Ceiling: 11,
                Result: "Corrosive substance or environment"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/12-15",
                Floor: 12,
                Ceiling: 15,
                Result: "Disturbing remains or evidence of death"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/16-19",
                Floor: 16,
                Ceiling: 19,
                Result: "Drastic environmental change"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/20-23",
                Floor: 20,
                Ceiling: 23,
                Result: "Enemy holds this area",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Location_Themes/Fortified/Peril",
                    "Starforged/Oracles/Location_Themes/Fortified/Opportunity",
                    "Starforged/Oracles/Location_Themes/Fortified/Feature"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/24-27",
                Floor: 24,
                Ceiling: 27,
                Result: "Entangling or engulfing hazard"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/28-31",
                Floor: 28,
                Ceiling: 31,
                Result: "Equipment fails or malfunctions"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/32-35",
                Floor: 32,
                Ceiling: 35,
                Result: "Guarded or patrolled path",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Location_Themes/Fortified/Peril",
                    "Starforged/Oracles/Location_Themes/Fortified/Opportunity",
                    "Starforged/Oracles/Location_Themes/Fortified/Feature"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/36-39",
                Floor: 36,
                Ceiling: 39,
                Result: "Led astray"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/40-43",
                Floor: 40,
                Ceiling: 43,
                Result: "Lost the path"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/44-47",
                Floor: 44,
                Ceiling: 47,
                Result: "Meteorites fall from the sky"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/48-51",
                Floor: 48,
                Ceiling: 51,
                Result: "Irradiated area or object"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/52-55",
                Floor: 52,
                Ceiling: 55,
                Result: "Realization that something was left behind"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/56-59",
                Floor: 56,
                Ceiling: 59,
                Result: "Seismic or volcanic upheaval"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/60-63",
                Floor: 60,
                Ceiling: 63,
                Result: "Signs of a lurking or trailing foe"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/64-67",
                Floor: 64,
                Ceiling: 67,
                Result: "Storm or atmospheric disruption"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/68-71",
                Floor: 68,
                Ceiling: 71,
                Result: "Toxic or sickening environment"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/72-75",
                Floor: 72,
                Ceiling: 75,
                Result: "Trap or alarm"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/76-79",
                Floor: 76,
                Ceiling: 79,
                Result: "Treacherous or arduous path"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/80-83",
                Floor: 80,
                Ceiling: 83,
                Result: "Troubling visions or apparitions",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Location_Themes/Haunted/Peril",
                    "Starforged/Oracles/Location_Themes/Haunted/Opportunity",
                    "Starforged/Oracles/Location_Themes/Haunted/Feature"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/84-87",
                Floor: 84,
                Ceiling: 87,
                Result: "Visibility hindered by atmospheric effects"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/88-91",
                Floor: 88,
                Ceiling: 91,
                Result: "Worrying arrival of a ship or vehicle",
                Suggestions: {
                  "Game objects": [{ "Object type": "Starship" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/92-95",
                Floor: 92,
                Ceiling: 95,
                Result: "Wreckage or ruins portend a new threat"
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/96-99",
                Floor: 96,
                Ceiling: 99,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Peril/Lifeless/100",
                Floor: 100,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 321
        },
        $id: "Starforged/Oracles/Planets/Opportunity",
        Name: "Opportunity",
        Category: "Starforged/Oracles/Planets",
        Description: "Choose or roll on this table when you want inspiration for a beneficial encounter or event on a planetside journey, such as when you roll a strong hit with a match as you Undertake an Expedition, or if you Explore a Waypoint and find an opportunity.",
        Display: {
          Title: "Planetside Opportunity",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Planets/Opportunity/Lifebearing",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Lifebearing",
                "Use content from": "Starforged/Oracles/Planets/Opportunity/Lifebearing"
              },
              {
                Label: "Lifeless",
                "Use content from": "Starforged/Oracles/Planets/Opportunity/Lifeless"
              }
            ]
          }
        },
        Usage: {
          Repeatable: !0,
          Requires: { Attributes: [{ Key: "Life" }] },
          "Allow duplicates": !1
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["opportunity"]
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 321
            },
            $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing",
            Name: "Lifebearing",
            "Member of": "Starforged/Oracles/Planets/Opportunity",
            Category: "Starforged/Oracles/Planets",
            Display: {
              Title: "Lifebearing",
              "Column of": "Starforged/Oracles/Planets/Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Opportunity/Lifebearing",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Opportunity/Lifebearing"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  {
                    Key: "Life",
                    Values: ["Scarce", "Diverse", "Bountiful", "Overrun"]
                  }
                ]
              },
              "Allow duplicates": !1
            },
            Content: {
              "Part of speech": ["fragment"],
              Tags: ["opportunity"]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/1-4",
                Floor: 1,
                Ceiling: 4,
                Result: "Clue to a lifeform's nature or vulnerabilities",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/5-8",
                Floor: 5,
                Ceiling: 8,
                Result: "Friendly interaction with a benign lifeform",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/9-12",
                Floor: 9,
                Ceiling: 12,
                Result: "Hunting or foraging opportunities are plentiful"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/13-16",
                Floor: 13,
                Ceiling: 16,
                Result: "Interesting or helpful aspect of benign creatures",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/17-20",
                Floor: 17,
                Ceiling: 20,
                Result: "Interesting or helpful aspect of local plant life"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/21-24",
                Floor: 21,
                Ceiling: 24,
                Result: "Encounter reveals unexpected benign lifeforms",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/25-28",
                Floor: 25,
                Ceiling: 28,
                Result: "Abandoned camp or vehicle",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/29-32",
                Floor: 29,
                Ceiling: 32,
                Result: "Advance warning of an environmental threat"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/33-36",
                Floor: 33,
                Ceiling: 36,
                Result: "Clear path through otherwise perilous terrain"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/37-40",
                Floor: 37,
                Ceiling: 40,
                Result: "Clue offers insight into a current quest or mystery"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/41-44",
                Floor: 41,
                Ceiling: 44,
                Result: "Clue to the history or nature of this place"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/45-48",
                Floor: 45,
                Ceiling: 48,
                Result: "Evidence that others have passed this way"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/49-52",
                Floor: 49,
                Ceiling: 52,
                Result: "Foe reveals themselves or tips their hand"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/53-56",
                Floor: 53,
                Ceiling: 56,
                Result: "Fortuitous change in the weather or atmosphere"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/57-60",
                Floor: 57,
                Ceiling: 60,
                Result: "Friendly traveler crosses your path"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/61-64",
                Floor: 61,
                Ceiling: 64,
                Result: "Helpful resource is in ample supply",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/65-68",
                Floor: 65,
                Ceiling: 68,
                Result: "Impressive vista offers comfort or inspiration"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/69-72",
                Floor: 69,
                Ceiling: 72,
                Result: "Interesting artifact or device",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/73-76",
                Floor: 73,
                Ceiling: 76,
                Result: "Interesting site offers opportunities for exploration",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/77-80",
                Floor: 77,
                Ceiling: 80,
                Result: "Moment of fellowship or inner peace"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/81-84",
                Floor: 81,
                Ceiling: 84,
                Result: "Opening to distract, escape, or avoid foes"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/85-88",
                Floor: 85,
                Ceiling: 88,
                Result: "Opening to get the drop on a foe"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/89-92",
                Floor: 89,
                Ceiling: 92,
                Result: "Plea for help from a potential benefactor",
                Suggestions: {
                  "Game objects": [{ "Object type": "Character" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/93-96",
                Floor: 93,
                Ceiling: 96,
                Result: "Refuge offers a place to hide, plan, or recover",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifebearing/97-100",
                Floor: 97,
                Ceiling: 100,
                Result: "Vantage point reveals the lay of the land",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 321
            },
            $id: "Starforged/Oracles/Planets/Opportunity/Lifeless",
            Name: "Lifeless",
            "Member of": "Starforged/Oracles/Planets/Opportunity",
            Category: "Starforged/Oracles/Planets",
            Display: {
              Title: "Lifeless",
              "Column of": "Starforged/Oracles/Planets/Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Opportunity/Lifeless",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Opportunity/Lifeless"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [
                  {
                    Key: "Life",
                    Values: ["None", "Extinct", "Bountiful", "Overrun"]
                  }
                ]
              },
              "Allow duplicates": !1
            },
            Content: {
              "Part of speech": ["fragment"],
              Tags: ["opportunity"]
            },
            Table: [
              {
                Floor: null,
                Ceiling: null,
                Result: "Clue to a lifeform's nature or vulnerabilities"
              },
              {
                Floor: null,
                Ceiling: null,
                Result: "Friendly interaction with a benign lifeform"
              },
              {
                Floor: null,
                Ceiling: null,
                Result: "Hunting or foraging opportunities are plentiful"
              },
              {
                Floor: null,
                Ceiling: null,
                Result: "Interesting or helpful aspect of benign creatures"
              },
              {
                Floor: null,
                Ceiling: null,
                Result: "Interesting or helpful aspect of local plant life"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/1-5",
                Floor: 1,
                Ceiling: 5,
                Result: "Encounter reveals unexpected benign lifeforms",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/6-10",
                Floor: 6,
                Ceiling: 10,
                Result: "Abandoned camp or vehicle",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/11-15",
                Floor: 11,
                Ceiling: 15,
                Result: "Advance warning of an environmental threat"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/16-20",
                Floor: 16,
                Ceiling: 20,
                Result: "Clear path through otherwise perilous terrain"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/21-25",
                Floor: 21,
                Ceiling: 25,
                Result: "Clue offers insight into a current quest or mystery"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/26-30",
                Floor: 26,
                Ceiling: 30,
                Result: "Clue to the history or nature of this place"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/31-35",
                Floor: 31,
                Ceiling: 35,
                Result: "Evidence that others have passed this way"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/36-40",
                Floor: 36,
                Ceiling: 40,
                Result: "Foe reveals themselves or tips their hand"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/41-45",
                Floor: 41,
                Ceiling: 45,
                Result: "Fortuitous change in the weather or atmosphere"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/46-50",
                Floor: 46,
                Ceiling: 50,
                Result: "Friendly traveler crosses your path"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/51-55",
                Floor: 51,
                Ceiling: 55,
                Result: "Helpful resource is in ample supply",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/56-60",
                Floor: 56,
                Ceiling: 60,
                Result: "Impressive vista offers comfort or inspiration"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/61-65",
                Floor: 61,
                Ceiling: 65,
                Result: "Interesting artifact or device",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/66-70",
                Floor: 66,
                Ceiling: 70,
                Result: "Interesting site offers opportunities for exploration",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/71-75",
                Floor: 71,
                Ceiling: 75,
                Result: "Moment of fellowship or inner peace"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/76-80",
                Floor: 76,
                Ceiling: 80,
                Result: "Opening to distract, escape, or avoid foes"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "Opening to get the drop on a foe"
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "Plea for help from a potential benefactor",
                Suggestions: {
                  "Game objects": [{ "Object type": "Character" }]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/91-95",
                Floor: 91,
                Ceiling: 95,
                Result: "Refuge offers a place to hide, plan, or recover",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Planets/Opportunity/Lifeless/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "Vantage point reveals the lay of the land",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              }
            ]
          }
        ]
      }
    ],
    Categories: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 308
        },
        $id: "Starforged/Oracles/Planets/Desert",
        Name: "Desert",
        Aliases: ["Desert Planet"],
        Category: "Starforged/Oracles/Planets",
        Description: "A pitiless planet of searing heat, blowing sand, and sunbaked rock.",
        Display: {
          Title: "Desert World",
          Images: [
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Desert-01.webp",
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Desert-02.webp"
          ]
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Planetary Class", Values: ["Desert"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 308
            },
            $id: "Starforged/Oracles/Planets/Desert/Atmosphere",
            Name: "Atmosphere",
            Category: "Starforged/Oracles/Planets/Desert",
            Display: {
              Title: "Atmosphere",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Desert/Atmosphere",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Desert/Atmosphere"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Desert"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Atmosphere" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Desert/Atmosphere/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "None/thin",
                Attributes: [
                  { Key: "Atmosphere", Value: "None / thin" }
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Atmosphere/11-25",
                Floor: 11,
                Ceiling: 25,
                Result: "Toxic",
                Attributes: [{ Key: "Atmosphere", Value: "Toxic" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Atmosphere/26-40",
                Floor: 26,
                Ceiling: 40,
                Result: "Corrosive",
                Attributes: [{ Key: "Atmosphere", Value: "Corrosive" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Atmosphere/41-70",
                Floor: 41,
                Ceiling: 70,
                Result: "Marginal",
                Attributes: [{ Key: "Atmosphere", Value: "Marginal" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Atmosphere/71-95",
                Floor: 71,
                Ceiling: 95,
                Result: "Breathable",
                Attributes: [{ Key: "Atmosphere", Value: "Breathable" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Atmosphere/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "Ideal",
                Attributes: [{ Key: "Atmosphere", Value: "Ideal" }]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 308
            },
            $id: "Starforged/Oracles/Planets/Desert/Settlements",
            Name: "Settlements",
            Category: "Starforged/Oracles/Planets/Desert",
            Display: {
              Title: "Settlements",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Desert/Settlements/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Terminus",
                    "Use content from": "Starforged/Oracles/Planets/Desert/Settlements/Terminus"
                  },
                  {
                    Label: "Outlands",
                    "Use content from": "Starforged/Oracles/Planets/Desert/Settlements/Outlands"
                  },
                  {
                    Label: "Expanse",
                    "Use content from": "Starforged/Oracles/Planets/Desert/Settlements/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Region" },
                  { Key: "Planetary Class", Values: ["Desert"] }
                ]
              },
              "Allow duplicates": !1
            },
            Oracles: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 308
                },
                $id: "Starforged/Oracles/Planets/Desert/Settlements/Terminus",
                Name: "Terminus",
                "Member of": "Starforged/Oracles/Planets/Desert/Settlements",
                Category: "Starforged/Oracles/Planets/Desert",
                Display: {
                  Title: "Terminus",
                  "Column of": "Starforged/Oracles/Planets/Desert/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Desert/Settlements/Terminus",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Desert/Settlements/Terminus"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Desert"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Terminus/1-50",
                    Floor: 1,
                    Ceiling: 50,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Terminus/51-60",
                    Floor: 51,
                    Ceiling: 60,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Terminus/61-80",
                    Floor: 61,
                    Ceiling: 80,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Terminus/81-92",
                    Floor: 81,
                    Ceiling: 92,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Terminus/93-100",
                    Floor: 93,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 308
                },
                $id: "Starforged/Oracles/Planets/Desert/Settlements/Outlands",
                Name: "Outlands",
                "Member of": "Starforged/Oracles/Planets/Desert/Settlements",
                Category: "Starforged/Oracles/Planets/Desert",
                Display: {
                  Title: "Outlands",
                  "Column of": "Starforged/Oracles/Planets/Desert/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Desert/Settlements/Outlands",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Desert/Settlements/Outlands"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Desert"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Outlands/1-75",
                    Floor: 1,
                    Ceiling: 75,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Outlands/76-83",
                    Floor: 76,
                    Ceiling: 83,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Outlands/84-95",
                    Floor: 84,
                    Ceiling: 95,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Outlands/96-98",
                    Floor: 96,
                    Ceiling: 98,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Outlands/99-100",
                    Floor: 99,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 308
                },
                $id: "Starforged/Oracles/Planets/Desert/Settlements/Expanse",
                Name: "Expanse",
                "Member of": "Starforged/Oracles/Planets/Desert/Settlements",
                Category: "Starforged/Oracles/Planets/Desert",
                Display: {
                  Title: "Expanse",
                  "Column of": "Starforged/Oracles/Planets/Desert/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Desert/Settlements/Expanse",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Desert/Settlements/Expanse"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Desert"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Expanse/1-90",
                    Floor: 1,
                    Ceiling: 90,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Expanse/91-96",
                    Floor: 91,
                    Ceiling: 96,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Desert/Settlements/Expanse/97-100",
                    Floor: 97,
                    Ceiling: 100,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Multiple settlements"
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Settlements in conflict"
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 308
            },
            $id: "Starforged/Oracles/Planets/Desert/Observed_From_Space",
            Name: "Observed From Space",
            Category: "Starforged/Oracles/Planets/Desert",
            Display: {
              Title: "Observed From Space",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Desert/Observed_From_Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Desert/Observed_From_Space"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Desert"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Desert/Observed_From_Space/1-11",
                Floor: 1,
                Ceiling: 11,
                Result: "Dry seabeds"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Observed_From_Space/12-22",
                Floor: 12,
                Ceiling: 22,
                Result: "Expansive dune seas"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Observed_From_Space/23-33",
                Floor: 23,
                Ceiling: 33,
                Result: "Massive canyons"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Observed_From_Space/34-44",
                Floor: 34,
                Ceiling: 44,
                Result: "Perpetual daylight"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Observed_From_Space/45-55",
                Floor: 45,
                Ceiling: 55,
                Result: "Rugged mountains"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Observed_From_Space/56-66",
                Floor: 56,
                Ceiling: 66,
                Result: "Sprawling salt flats"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Observed_From_Space/67-77",
                Floor: 67,
                Ceiling: 77,
                Result: "Vast plateaus"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Observed_From_Space/78-88",
                Floor: 78,
                Ceiling: 88,
                Result: "Vibrant terrain colors"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Observed_From_Space/89-98",
                Floor: 89,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Observed_From_Space/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (orbital)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Orbital"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 308
            },
            $id: "Starforged/Oracles/Planets/Desert/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Planets/Desert",
            Display: {
              Title: "Planetside Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Desert/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Desert/Feature"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Desert"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/1-7",
                Floor: 1,
                Ceiling: 7,
                Result: "Cavernous sinkholes"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/8-14",
                Floor: 8,
                Ceiling: 14,
                Result: "Engulfing sandstorms"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/15-21",
                Floor: 15,
                Ceiling: 21,
                Result: "Fleeting rainstorms and flash floods"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/22-28",
                Floor: 22,
                Ceiling: 28,
                Result: "Flooded grottos"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/29-35",
                Floor: 29,
                Ceiling: 35,
                Result: "Petrified forest"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/36-42",
                Floor: 36,
                Ceiling: 42,
                Result: "Rampaging whirlwinds"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/43-49",
                Floor: 43,
                Ceiling: 49,
                Result: "Scorched glass plains"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/50-56",
                Floor: 50,
                Ceiling: 56,
                Result: "Severe temperature fluctuations"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/57-63",
                Floor: 57,
                Ceiling: 63,
                Result: "Sunbaked bones of titanic creatures"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/64-70",
                Floor: 64,
                Ceiling: 70,
                Result: "Timeworn cliffside caves"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/71-77",
                Floor: 71,
                Ceiling: 77,
                Result: "Towering rock formations"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/78-84",
                Floor: 78,
                Ceiling: 84,
                Result: "Violent electrical storms"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/85-91",
                Floor: 85,
                Ceiling: 91,
                Result: "Windborne metallic sand"
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/92-98",
                Floor: 92,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Feature/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (planetside)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Planetside"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 308
            },
            $id: "Starforged/Oracles/Planets/Desert/Life",
            Name: "Life",
            Category: "Starforged/Oracles/Planets/Desert",
            Display: {
              Title: "Life",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Desert/Life",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Desert/Life"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Desert"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Life" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Desert/Life/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "None",
                Attributes: [{ Key: "Life", Value: "None" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Life/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Extinct",
                Attributes: [{ Key: "Life", Value: "Extinct" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Life/41-70",
                Floor: 41,
                Ceiling: 70,
                Result: "Scarce",
                Attributes: [{ Key: "Life", Value: "Scarce" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Life/71-90",
                Floor: 71,
                Ceiling: 90,
                Result: "Diverse",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Diverse" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Life/91-97",
                Floor: 91,
                Ceiling: 97,
                Result: "Bountiful",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Bountiful" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Desert/Life/98-100",
                Floor: 98,
                Ceiling: 100,
                Result: "Overrun",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Overrun" }]
              }
            ]
          }
        ],
        "Sample Names": [
          "Abalos",
          "Audun",
          "Bishop",
          "Desolation",
          "Dykuma",
          "Fallow",
          "Helios",
          "Mirage",
          "Morricone",
          "Nux",
          "Ordos",
          "Petra",
          "Pyla",
          "Sabulo",
          "Saffron",
          "Sirocco",
          "Sulis",
          "Torrid",
          "Umber",
          "Vermillion"
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 309
        },
        $id: "Starforged/Oracles/Planets/Furnace",
        Name: "Furnace",
        Aliases: ["Furnace Planet"],
        Category: "Starforged/Oracles/Planets",
        Description: "A planet with relentless volcanic activity, wreathed in fire and ash.",
        Display: {
          Title: "Furnace World",
          Images: [
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Furnace-01.webp",
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Furnace-02.webp"
          ]
        },
        Usage: {
          Requires: {
            Attributes: [
              { Key: "Planetary Class", Values: ["Furnace"] }
            ]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 309
            },
            $id: "Starforged/Oracles/Planets/Furnace/Atmosphere",
            Name: "Atmosphere",
            Category: "Starforged/Oracles/Planets/Furnace",
            Display: {
              Title: "Atmosphere",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Furnace/Atmosphere",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Furnace/Atmosphere"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Furnace"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Atmosphere" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Furnace/Atmosphere/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "None/thin",
                Attributes: [
                  { Key: "Atmosphere", Value: "None / thin" }
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Atmosphere/11-50",
                Floor: 11,
                Ceiling: 50,
                Result: "Toxic",
                Attributes: [{ Key: "Atmosphere", Value: "Toxic" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Atmosphere/51-65",
                Floor: 51,
                Ceiling: 65,
                Result: "Corrosive",
                Attributes: [{ Key: "Atmosphere", Value: "Corrosive" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Atmosphere/66-90",
                Floor: 66,
                Ceiling: 90,
                Result: "Marginal",
                Attributes: [{ Key: "Atmosphere", Value: "Marginal" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Atmosphere/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Breathable",
                Attributes: [{ Key: "Atmosphere", Value: "Breathable" }]
              },
              { Floor: null, Ceiling: null, Result: "Ideal" }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 309
            },
            $id: "Starforged/Oracles/Planets/Furnace/Settlements",
            Name: "Settlements",
            Category: "Starforged/Oracles/Planets/Furnace",
            Display: {
              Title: "Settlements",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Furnace/Settlements/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Terminus",
                    "Use content from": "Starforged/Oracles/Planets/Furnace/Settlements/Terminus"
                  },
                  {
                    Label: "Outlands",
                    "Use content from": "Starforged/Oracles/Planets/Furnace/Settlements/Outlands"
                  },
                  {
                    Label: "Expanse",
                    "Use content from": "Starforged/Oracles/Planets/Furnace/Settlements/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Region" },
                  { Key: "Planetary Class", Values: ["Furnace"] }
                ]
              },
              "Allow duplicates": !1
            },
            Oracles: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 309
                },
                $id: "Starforged/Oracles/Planets/Furnace/Settlements/Terminus",
                Name: "Terminus",
                "Member of": "Starforged/Oracles/Planets/Furnace/Settlements",
                Category: "Starforged/Oracles/Planets/Furnace",
                Display: {
                  Title: "Terminus",
                  "Column of": "Starforged/Oracles/Planets/Furnace/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Furnace/Settlements/Terminus",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Furnace/Settlements/Terminus"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Furnace"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Terminus/1-60",
                    Floor: 1,
                    Ceiling: 60,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Terminus/61-75",
                    Floor: 61,
                    Ceiling: 75,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Terminus/76-87",
                    Floor: 76,
                    Ceiling: 87,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Terminus/88-96",
                    Floor: 88,
                    Ceiling: 96,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Terminus/97-100",
                    Floor: 97,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 309
                },
                $id: "Starforged/Oracles/Planets/Furnace/Settlements/Outlands",
                Name: "Outlands",
                "Member of": "Starforged/Oracles/Planets/Furnace/Settlements",
                Category: "Starforged/Oracles/Planets/Furnace",
                Display: {
                  Title: "Outlands",
                  "Column of": "Starforged/Oracles/Planets/Furnace/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Furnace/Settlements/Outlands",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Furnace/Settlements/Outlands"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Furnace"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Outlands/1-85",
                    Floor: 1,
                    Ceiling: 85,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Outlands/86-92",
                    Floor: 86,
                    Ceiling: 92,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Outlands/93-97",
                    Floor: 93,
                    Ceiling: 97,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Outlands/98-99",
                    Floor: 98,
                    Ceiling: 99,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Outlands/100",
                    Floor: 100,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 309
                },
                $id: "Starforged/Oracles/Planets/Furnace/Settlements/Expanse",
                Name: "Expanse",
                "Member of": "Starforged/Oracles/Planets/Furnace/Settlements",
                Category: "Starforged/Oracles/Planets/Furnace",
                Display: {
                  Title: "Expanse",
                  "Column of": "Starforged/Oracles/Planets/Furnace/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Furnace/Settlements/Expanse",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Furnace/Settlements/Expanse"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Furnace"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Expanse/1-95",
                    Floor: 1,
                    Ceiling: 95,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Expanse/96-98",
                    Floor: 96,
                    Ceiling: 98,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Furnace/Settlements/Expanse/99-100",
                    Floor: 99,
                    Ceiling: 100,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Multiple settlements"
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Settlements in conflict"
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 309
            },
            $id: "Starforged/Oracles/Planets/Furnace/Observed_From_Space",
            Name: "Observed From Space",
            Category: "Starforged/Oracles/Planets/Furnace",
            Display: {
              Title: "Observed From Space",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Furnace/Observed_From_Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Furnace/Observed_From_Space"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Furnace"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Furnace/Observed_From_Space/1-11",
                Floor: 1,
                Ceiling: 11,
                Result: "Fiery world-spanning chasms"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Observed_From_Space/12-22",
                Floor: 12,
                Ceiling: 22,
                Result: "Glowing rivers of lava"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Observed_From_Space/23-33",
                Floor: 23,
                Ceiling: 33,
                Result: "Lightning-wracked ash clouds"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Observed_From_Space/34-44",
                Floor: 34,
                Ceiling: 44,
                Result: "Magma seas"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Observed_From_Space/45-55",
                Floor: 45,
                Ceiling: 55,
                Result: "Massive supervolcano"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Observed_From_Space/56-66",
                Floor: 56,
                Ceiling: 66,
                Result: "Once verdant terrain"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Observed_From_Space/67-77",
                Floor: 67,
                Ceiling: 77,
                Result: "Towering mountain ranges"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Observed_From_Space/78-88",
                Floor: 78,
                Ceiling: 88,
                Result: "World-spanning fissures"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Observed_From_Space/89-98",
                Floor: 89,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Observed_From_Space/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (orbital)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Orbital"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 309
            },
            $id: "Starforged/Oracles/Planets/Furnace/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Planets/Furnace",
            Display: {
              Title: "Planetside Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Furnace/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Furnace/Feature"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Furnace"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/1-7",
                Floor: 1,
                Ceiling: 7,
                Result: "Blinding ash storms"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/8-14",
                Floor: 8,
                Ceiling: 14,
                Result: "Catastrophic earthquakes"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/15-21",
                Floor: 15,
                Ceiling: 21,
                Result: "Colorful geothermal springs"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/22-28",
                Floor: 22,
                Ceiling: 28,
                Result: "Intricate volcanic rock formations"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/29-35",
                Floor: 29,
                Ceiling: 35,
                Result: "Lava tube tunnel networks"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/36-42",
                Floor: 36,
                Ceiling: 42,
                Result: "Masses of scorched bones"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/43-49",
                Floor: 43,
                Ceiling: 49,
                Result: "Plains of volcanic glass"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/50-56",
                Floor: 50,
                Ceiling: 56,
                Result: "Pools of liquid metal"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/57-63",
                Floor: 57,
                Ceiling: 63,
                Result: "Rocky islands adrift on magma"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/64-70",
                Floor: 64,
                Ceiling: 70,
                Result: "Roiling clouds of superheated gas"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/71-77",
                Floor: 71,
                Ceiling: 77,
                Result: "Scalding geysers"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/78-84",
                Floor: 78,
                Ceiling: 84,
                Result: "Silica or metal storms"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/85-91",
                Floor: 85,
                Ceiling: 91,
                Result: "Steaming mudflats"
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/92-98",
                Floor: 92,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Feature/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (planetside)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Planetside"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 309
            },
            $id: "Starforged/Oracles/Planets/Furnace/Life",
            Name: "Life",
            Category: "Starforged/Oracles/Planets/Furnace",
            Display: {
              Title: "Life",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Furnace/Life",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Furnace/Life"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Furnace"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Life" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Furnace/Life/1-35",
                Floor: 1,
                Ceiling: 35,
                Result: "None",
                Attributes: [{ Key: "Life", Value: "None" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Life/36-60",
                Floor: 36,
                Ceiling: 60,
                Result: "Extinct",
                Attributes: [{ Key: "Life", Value: "Extinct" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Life/61-85",
                Floor: 61,
                Ceiling: 85,
                Result: "Scarce",
                Attributes: [{ Key: "Life", Value: "Scarce" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Life/86-95",
                Floor: 86,
                Ceiling: 95,
                Result: "Diverse",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Diverse" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Life/96-98",
                Floor: 96,
                Ceiling: 98,
                Result: "Bountiful",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Bountiful" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Furnace/Life/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Overrun",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Overrun" }]
              }
            ]
          }
        ],
        "Sample Names": [
          "Ash",
          "Azula",
          "Cinder",
          "Cyrus",
          "Draconus",
          "Effigy",
          "Ember",
          "Flint",
          "Hades",
          "Hera",
          "Ignis",
          "Inferno",
          "Ishum",
          "Kresnik",
          "Nemesis",
          "Obsidian",
          "Scorch",
          "Tana",
          "Vesta",
          "Vesuvius"
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 310
        },
        $id: "Starforged/Oracles/Planets/Grave",
        Name: "Grave",
        Aliases: ["Grave Planet"],
        Category: "Starforged/Oracles/Planets",
        Description: "A once-thriving world\u2014now a grim monument to a fallen civilization.",
        Display: {
          Title: "Grave World",
          Images: [
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Grave-01.webp",
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Grave-02.webp"
          ]
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Planetary Class", Values: ["Grave"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 310
            },
            $id: "Starforged/Oracles/Planets/Grave/Atmosphere",
            Name: "Atmosphere",
            Category: "Starforged/Oracles/Planets/Grave",
            Display: {
              Title: "Atmosphere",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Grave/Atmosphere",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Grave/Atmosphere"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Grave"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Atmosphere" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Grave/Atmosphere/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "None/thin",
                Attributes: [
                  { Key: "Atmosphere", Value: "None / thin" }
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Atmosphere/11-45",
                Floor: 11,
                Ceiling: 45,
                Result: "Toxic",
                Attributes: [{ Key: "Atmosphere", Value: "Toxic" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Atmosphere/46-70",
                Floor: 46,
                Ceiling: 70,
                Result: "Corrosive",
                Attributes: [{ Key: "Atmosphere", Value: "Corrosive" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Atmosphere/71-90",
                Floor: 71,
                Ceiling: 90,
                Result: "Marginal",
                Attributes: [{ Key: "Atmosphere", Value: "Marginal" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Atmosphere/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Breathable",
                Attributes: [{ Key: "Atmosphere", Value: "Breathable" }]
              },
              { Floor: null, Ceiling: null, Result: "Ideal" }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 310
            },
            $id: "Starforged/Oracles/Planets/Grave/Settlements",
            Name: "Settlements",
            Category: "Starforged/Oracles/Planets/Grave",
            Display: {
              Title: "Settlements",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Grave/Settlements/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Terminus",
                    "Use content from": "Starforged/Oracles/Planets/Grave/Settlements/Terminus"
                  },
                  {
                    Label: "Outlands",
                    "Use content from": "Starforged/Oracles/Planets/Grave/Settlements/Outlands"
                  },
                  {
                    Label: "Expanse",
                    "Use content from": "Starforged/Oracles/Planets/Grave/Settlements/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Region" },
                  { Key: "Planetary Class", Values: ["Grave"] }
                ]
              },
              "Allow duplicates": !1
            },
            Oracles: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 310
                },
                $id: "Starforged/Oracles/Planets/Grave/Settlements/Terminus",
                Name: "Terminus",
                "Member of": "Starforged/Oracles/Planets/Grave/Settlements",
                Category: "Starforged/Oracles/Planets/Grave",
                Display: {
                  Title: "Terminus",
                  "Column of": "Starforged/Oracles/Planets/Grave/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Grave/Settlements/Terminus",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Grave/Settlements/Terminus"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Grave"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Grave/Settlements/Terminus/1-80",
                    Floor: 1,
                    Ceiling: 80,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Grave/Settlements/Terminus/81-90",
                    Floor: 81,
                    Ceiling: 90,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Grave/Settlements/Terminus/91-95",
                    Floor: 91,
                    Ceiling: 95,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Grave/Settlements/Terminus/96-98",
                    Floor: 96,
                    Ceiling: 98,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Grave/Settlements/Terminus/99-100",
                    Floor: 99,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 310
                },
                $id: "Starforged/Oracles/Planets/Grave/Settlements/Outlands",
                Name: "Outlands",
                "Member of": "Starforged/Oracles/Planets/Grave/Settlements",
                Category: "Starforged/Oracles/Planets/Grave",
                Display: {
                  Title: "Outlands",
                  "Column of": "Starforged/Oracles/Planets/Grave/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Grave/Settlements/Outlands",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Grave/Settlements/Outlands"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Grave"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Grave/Settlements/Outlands/1-90",
                    Floor: 1,
                    Ceiling: 90,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Grave/Settlements/Outlands/91-97",
                    Floor: 91,
                    Ceiling: 97,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Grave/Settlements/Outlands/98-100",
                    Floor: 98,
                    Ceiling: 100,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Multiple settlements"
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Settlements in conflict"
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 310
                },
                $id: "Starforged/Oracles/Planets/Grave/Settlements/Expanse",
                Name: "Expanse",
                "Member of": "Starforged/Oracles/Planets/Grave/Settlements",
                Category: "Starforged/Oracles/Planets/Grave",
                Display: {
                  Title: "Expanse",
                  "Column of": "Starforged/Oracles/Planets/Grave/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Grave/Settlements/Expanse",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Grave/Settlements/Expanse"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Grave"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Grave/Settlements/Expanse/1-95",
                    Floor: 1,
                    Ceiling: 95,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Grave/Settlements/Expanse/96-98",
                    Floor: 96,
                    Ceiling: 98,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Grave/Settlements/Expanse/99-100",
                    Floor: 99,
                    Ceiling: 100,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Multiple settlements"
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Settlements in conflict"
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 310
            },
            $id: "Starforged/Oracles/Planets/Grave/Observed_From_Space",
            Name: "Observed From Space",
            Category: "Starforged/Oracles/Planets/Grave",
            Display: {
              Title: "Observed From Space",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Grave/Observed_From_Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Grave/Observed_From_Space"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Grave"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Grave/Observed_From_Space/1-11",
                Floor: 1,
                Ceiling: 11,
                Result: "Broken moon"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Observed_From_Space/12-22",
                Floor: 12,
                Ceiling: 22,
                Result: "Perpetual overcast"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Observed_From_Space/23-33",
                Floor: 23,
                Ceiling: 33,
                Result: "Cratered surface"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Observed_From_Space/34-44",
                Floor: 34,
                Ceiling: 44,
                Result: "Sky-breaching ruins"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Observed_From_Space/45-55",
                Floor: 45,
                Ceiling: 55,
                Result: "Dry seabeds"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Observed_From_Space/56-66",
                Floor: 56,
                Ceiling: 66,
                Result: "Vast wastelands"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Observed_From_Space/67-77",
                Floor: 67,
                Ceiling: 77,
                Result: "Irradiated atmosphere"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Observed_From_Space/78-88",
                Floor: 78,
                Ceiling: 88,
                Result: "Orbiting ship graveyard"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Observed_From_Space/89-98",
                Floor: 89,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Observed_From_Space/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (orbital)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Orbital"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 310
            },
            $id: "Starforged/Oracles/Planets/Grave/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Planets/Grave",
            Display: {
              Title: "Planetside Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Grave/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Grave/Feature"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Grave"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/1-7",
                Floor: 1,
                Ceiling: 7,
                Result: "Acid pools"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/8-14",
                Floor: 8,
                Ceiling: 14,
                Result: "Ash dunes"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/15-21",
                Floor: 15,
                Ceiling: 21,
                Result: "Corrosive rains"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/22-28",
                Floor: 22,
                Ceiling: 28,
                Result: "Dead forests"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/29-35",
                Floor: 29,
                Ceiling: 35,
                Result: "Fetid mudflats"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/36-42",
                Floor: 36,
                Ceiling: 42,
                Result: "Mass graves"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/43-49",
                Floor: 43,
                Ceiling: 49,
                Result: "Moldering bones"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/50-56",
                Floor: 50,
                Ceiling: 56,
                Result: "Noxious fog"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/57-63",
                Floor: 57,
                Ceiling: 63,
                Result: "Radioactive hotspots"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/64-70",
                Floor: 64,
                Ceiling: 70,
                Result: "Ravaged cities"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/71-77",
                Floor: 71,
                Ceiling: 77,
                Result: "Scarred battlefields"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/78-84",
                Floor: 78,
                Ceiling: 84,
                Result: "Ship graveyards"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/85-91",
                Floor: 85,
                Ceiling: 91,
                Result: "Whispers of the dead"
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/92-98",
                Floor: 92,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Feature/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (planetside)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Planetside"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 310
            },
            $id: "Starforged/Oracles/Planets/Grave/Life",
            Name: "Life",
            Category: "Starforged/Oracles/Planets/Grave",
            Display: {
              Title: "Life",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Grave/Life",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Grave/Life"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Grave"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Life" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Grave/Life/1-25",
                Floor: 1,
                Ceiling: 25,
                Result: "None",
                Attributes: [{ Key: "Life", Value: "None" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Life/26-75",
                Floor: 26,
                Ceiling: 75,
                Result: "Extinct",
                Attributes: [{ Key: "Life", Value: "Extinct" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Life/76-95",
                Floor: 76,
                Ceiling: 95,
                Result: "Scarce",
                Attributes: [{ Key: "Life", Value: "Scarce" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Grave/Life/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "Diverse",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Diverse" }]
              },
              { Floor: null, Ceiling: null, Result: "Bountiful" },
              { Floor: null, Ceiling: null, Result: "Overrun" }
            ]
          }
        ],
        "Sample Names": [
          "Anubis",
          "Banshee",
          "Barrow",
          "Cairn",
          "Cerberus",
          "Charon",
          "Elysia",
          "Keen",
          "Kur",
          "Lament",
          "Mantus",
          "Morrigan",
          "Mourn",
          "Necropolis",
          "Orcus",
          "Osiris",
          "Requiem",
          "Stygia",
          "Tartarus",
          "Thrace"
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 311
        },
        $id: "Starforged/Oracles/Planets/Ice",
        Name: "Ice",
        Aliases: ["Ice Planet"],
        Category: "Starforged/Oracles/Planets",
        Description: "A rugged, frozen world\u2014locked in an unending winter.",
        Display: {
          Title: "Ice World",
          Images: [
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Ice-01.webp",
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Ice-02.webp"
          ]
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Planetary Class", Values: ["Ice"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 311
            },
            $id: "Starforged/Oracles/Planets/Ice/Atmosphere",
            Name: "Atmosphere",
            Category: "Starforged/Oracles/Planets/Ice",
            Display: {
              Title: "Atmosphere",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Ice/Atmosphere",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Ice/Atmosphere"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Ice"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Atmosphere" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Ice/Atmosphere/1-15",
                Floor: 1,
                Ceiling: 15,
                Result: "None/thin",
                Attributes: [
                  { Key: "Atmosphere", Value: "None / thin" }
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Atmosphere/16-35",
                Floor: 16,
                Ceiling: 35,
                Result: "Toxic",
                Attributes: [{ Key: "Atmosphere", Value: "Toxic" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Atmosphere/36-40",
                Floor: 36,
                Ceiling: 40,
                Result: "Corrosive",
                Attributes: [{ Key: "Atmosphere", Value: "Corrosive" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Atmosphere/41-70",
                Floor: 41,
                Ceiling: 70,
                Result: "Marginal",
                Attributes: [{ Key: "Atmosphere", Value: "Marginal" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Atmosphere/71-95",
                Floor: 71,
                Ceiling: 95,
                Result: "Breathable",
                Attributes: [{ Key: "Atmosphere", Value: "Breathable" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Atmosphere/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "Ideal",
                Attributes: [{ Key: "Atmosphere", Value: "Ideal" }]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 311
            },
            $id: "Starforged/Oracles/Planets/Ice/Settlements",
            Name: "Settlements",
            Category: "Starforged/Oracles/Planets/Ice",
            Display: {
              Title: "Settlements",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Ice/Settlements/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Terminus",
                    "Use content from": "Starforged/Oracles/Planets/Ice/Settlements/Terminus"
                  },
                  {
                    Label: "Outlands",
                    "Use content from": "Starforged/Oracles/Planets/Ice/Settlements/Outlands"
                  },
                  {
                    Label: "Expanse",
                    "Use content from": "Starforged/Oracles/Planets/Ice/Settlements/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Region" },
                  { Key: "Planetary Class", Values: ["Ice"] }
                ]
              },
              "Allow duplicates": !1
            },
            Oracles: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 311
                },
                $id: "Starforged/Oracles/Planets/Ice/Settlements/Terminus",
                Name: "Terminus",
                "Member of": "Starforged/Oracles/Planets/Ice/Settlements",
                Category: "Starforged/Oracles/Planets/Ice",
                Display: {
                  Title: "Terminus",
                  "Column of": "Starforged/Oracles/Planets/Ice/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Ice/Settlements/Terminus",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Ice/Settlements/Terminus"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Ice"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Terminus/1-50",
                    Floor: 1,
                    Ceiling: 50,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Terminus/51-60",
                    Floor: 51,
                    Ceiling: 60,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Terminus/61-80",
                    Floor: 61,
                    Ceiling: 80,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Terminus/81-92",
                    Floor: 81,
                    Ceiling: 92,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Terminus/93-100",
                    Floor: 93,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 311
                },
                $id: "Starforged/Oracles/Planets/Ice/Settlements/Outlands",
                Name: "Outlands",
                "Member of": "Starforged/Oracles/Planets/Ice/Settlements",
                Category: "Starforged/Oracles/Planets/Ice",
                Display: {
                  Title: "Outlands",
                  "Column of": "Starforged/Oracles/Planets/Ice/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Ice/Settlements/Outlands",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Ice/Settlements/Outlands"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Ice"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Outlands/1-75",
                    Floor: 1,
                    Ceiling: 75,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Outlands/76-83",
                    Floor: 76,
                    Ceiling: 83,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Outlands/84-95",
                    Floor: 84,
                    Ceiling: 95,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Outlands/96-98",
                    Floor: 96,
                    Ceiling: 98,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Outlands/99-100",
                    Floor: 99,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 311
                },
                $id: "Starforged/Oracles/Planets/Ice/Settlements/Expanse",
                Name: "Expanse",
                "Member of": "Starforged/Oracles/Planets/Ice/Settlements",
                Category: "Starforged/Oracles/Planets/Ice",
                Display: {
                  Title: "Expanse",
                  "Column of": "Starforged/Oracles/Planets/Ice/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Ice/Settlements/Expanse",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Ice/Settlements/Expanse"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Ice"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Expanse/1-90",
                    Floor: 1,
                    Ceiling: 90,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Expanse/91-96",
                    Floor: 91,
                    Ceiling: 96,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ice/Settlements/Expanse/97-100",
                    Floor: 97,
                    Ceiling: 100,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Multiple settlements"
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Settlements in conflict"
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 311
            },
            $id: "Starforged/Oracles/Planets/Ice/Observed_From_Space",
            Name: "Observed From Space",
            Category: "Starforged/Oracles/Planets/Ice",
            Display: {
              Title: "Observed From Space",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Ice/Observed_From_Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Ice/Observed_From_Space"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Ice"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Ice/Observed_From_Space/1-11",
                Floor: 1,
                Ceiling: 11,
                Result: "Feeble sunlight"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Observed_From_Space/12-22",
                Floor: 12,
                Ceiling: 22,
                Result: "Supersized ice volcano"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Observed_From_Space/23-33",
                Floor: 23,
                Ceiling: 33,
                Result: "Frozen oceans"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Observed_From_Space/34-44",
                Floor: 34,
                Ceiling: 44,
                Result: "Vibrantly colored ice"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Observed_From_Space/45-55",
                Floor: 45,
                Ceiling: 55,
                Result: "Rocky glacial islands"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Observed_From_Space/56-66",
                Floor: 56,
                Ceiling: 66,
                Result: "World-spanning ice canyon"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Observed_From_Space/67-77",
                Floor: 67,
                Ceiling: 77,
                Result: "Snowbound mountains"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Observed_From_Space/78-88",
                Floor: 78,
                Ceiling: 88,
                Result: "Sky-breaching geysers"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Observed_From_Space/89-98",
                Floor: 89,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Observed_From_Space/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (orbital)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Orbital"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 311
            },
            $id: "Starforged/Oracles/Planets/Ice/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Planets/Ice",
            Display: {
              Title: "Planetside Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Ice/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Ice/Feature"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Ice"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/1-7",
                Floor: 1,
                Ceiling: 7,
                Result: "Abyssal ice fissures"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/8-14",
                Floor: 8,
                Ceiling: 14,
                Result: "Blinding snow storms"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/15-21",
                Floor: 15,
                Ceiling: 21,
                Result: "Clusters of ice spikes"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/22-28",
                Floor: 22,
                Ceiling: 28,
                Result: "Colossal ice caves"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/29-35",
                Floor: 29,
                Ceiling: 35,
                Result: "Glistening ice spires"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/36-42",
                Floor: 36,
                Ceiling: 42,
                Result: "Massive snow drifts"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/43-49",
                Floor: 43,
                Ceiling: 49,
                Result: "Preserved carcasses"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/50-56",
                Floor: 50,
                Ceiling: 56,
                Result: "Rocky islands amid icy wastes"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/57-63",
                Floor: 57,
                Ceiling: 63,
                Result: "Shattered plains of pack ice"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/64-70",
                Floor: 64,
                Ceiling: 70,
                Result: "Steaming hot springs"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/71-77",
                Floor: 71,
                Ceiling: 77,
                Result: "Subsurface liquid oceans"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/78-84",
                Floor: 78,
                Ceiling: 84,
                Result: "Vibrant auroras"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/85-91",
                Floor: 85,
                Ceiling: 91,
                Result: "Wind-carved ice formations"
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/92-98",
                Floor: 92,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Feature/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (planetside)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Planetside"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 311
            },
            $id: "Starforged/Oracles/Planets/Ice/Life",
            Name: "Life",
            Category: "Starforged/Oracles/Planets/Ice",
            Display: {
              Title: "Life",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Ice/Life",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Ice/Life"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Ice"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Life" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Ice/Life/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "None",
                Attributes: [{ Key: "Life", Value: "None" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Life/21-40",
                Floor: 21,
                Ceiling: 40,
                Result: "Extinct",
                Attributes: [{ Key: "Life", Value: "Extinct" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Life/41-70",
                Floor: 41,
                Ceiling: 70,
                Result: "Scarce",
                Attributes: [{ Key: "Life", Value: "Scarce" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Life/71-90",
                Floor: 71,
                Ceiling: 90,
                Result: "Diverse",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Diverse" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Life/91-97",
                Floor: 91,
                Ceiling: 97,
                Result: "Bountiful",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Bountiful" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ice/Life/98-100",
                Floor: 98,
                Ceiling: 100,
                Result: "Overrun",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Overrun" }]
              }
            ]
          }
        ],
        "Sample Names": [
          "Beira",
          "Boreas",
          "Caradhras",
          "Cicero",
          "Demetria",
          "Enten",
          "Fissure",
          "Frost",
          "Gelida",
          "Jotunn",
          "Kanna",
          "Karn",
          "Kheimon",
          "Moroz",
          "Nix",
          "Olwen",
          "Osolok",
          "Taiga",
          "Thule",
          "Varnholme"
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 312
        },
        $id: "Starforged/Oracles/Planets/Jovian",
        Name: "Jovian",
        Aliases: ["Jovian Planet"],
        Category: "Starforged/Oracles/Planets",
        Description: "A massive planet with vast layers of dense gases surrounding a rocky core.",
        Display: {
          Title: "Jovian World",
          Images: [
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Jovian-01.webp",
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Jovian-02.webp"
          ]
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Planetary Class", Values: ["Jovian"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 312
            },
            $id: "Starforged/Oracles/Planets/Jovian/Atmosphere",
            Name: "Atmosphere",
            Category: "Starforged/Oracles/Planets/Jovian",
            Display: {
              Title: "Atmosphere",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Jovian/Atmosphere",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Jovian/Atmosphere"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Jovian"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Atmosphere" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              { Floor: null, Ceiling: null, Result: "None/thin" },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Atmosphere/1-50",
                Floor: 1,
                Ceiling: 50,
                Result: "Toxic",
                Attributes: [{ Key: "Atmosphere", Value: "Toxic" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Atmosphere/51-65",
                Floor: 51,
                Ceiling: 65,
                Result: "Corrosive",
                Attributes: [{ Key: "Atmosphere", Value: "Corrosive" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Atmosphere/66-85",
                Floor: 66,
                Ceiling: 85,
                Result: "Marginal",
                Attributes: [{ Key: "Atmosphere", Value: "Marginal" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Atmosphere/86-100",
                Floor: 86,
                Ceiling: 100,
                Result: "Breathable",
                Attributes: [{ Key: "Atmosphere", Value: "Breathable" }]
              },
              { Floor: null, Ceiling: null, Result: "Ideal" }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 312
            },
            $id: "Starforged/Oracles/Planets/Jovian/Settlements",
            Name: "Settlements",
            Category: "Starforged/Oracles/Planets/Jovian",
            Display: {
              Title: "Settlements",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Jovian/Settlements/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Terminus",
                    "Use content from": "Starforged/Oracles/Planets/Jovian/Settlements/Terminus"
                  },
                  {
                    Label: "Outlands",
                    "Use content from": "Starforged/Oracles/Planets/Jovian/Settlements/Outlands"
                  },
                  {
                    Label: "Expanse",
                    "Use content from": "Starforged/Oracles/Planets/Jovian/Settlements/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Region" },
                  { Key: "Planetary Class", Values: ["Jovian"] }
                ]
              },
              "Allow duplicates": !1
            },
            Oracles: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 312
                },
                $id: "Starforged/Oracles/Planets/Jovian/Settlements/Terminus",
                Name: "Terminus",
                "Member of": "Starforged/Oracles/Planets/Jovian/Settlements",
                Category: "Starforged/Oracles/Planets/Jovian",
                Display: {
                  Title: "Terminus",
                  "Column of": "Starforged/Oracles/Planets/Jovian/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Jovian/Settlements/Terminus",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Jovian/Settlements/Terminus"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Jovian"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Terminus/1-50",
                    Floor: 1,
                    Ceiling: 50,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Terminus/51-70",
                    Floor: 51,
                    Ceiling: 70,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Terminus/71-85",
                    Floor: 71,
                    Ceiling: 85,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Terminus/86-95",
                    Floor: 86,
                    Ceiling: 95,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Terminus/96-100",
                    Floor: 96,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 312
                },
                $id: "Starforged/Oracles/Planets/Jovian/Settlements/Outlands",
                Name: "Outlands",
                "Member of": "Starforged/Oracles/Planets/Jovian/Settlements",
                Category: "Starforged/Oracles/Planets/Jovian",
                Display: {
                  Title: "Outlands",
                  "Column of": "Starforged/Oracles/Planets/Jovian/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Jovian/Settlements/Outlands",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Jovian/Settlements/Outlands"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Jovian"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Outlands/1-75",
                    Floor: 1,
                    Ceiling: 75,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Outlands/76-87",
                    Floor: 76,
                    Ceiling: 87,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Outlands/88-95",
                    Floor: 88,
                    Ceiling: 95,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Outlands/96-98",
                    Floor: 96,
                    Ceiling: 98,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Outlands/99-100",
                    Floor: 99,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 312
                },
                $id: "Starforged/Oracles/Planets/Jovian/Settlements/Expanse",
                Name: "Expanse",
                "Member of": "Starforged/Oracles/Planets/Jovian/Settlements",
                Category: "Starforged/Oracles/Planets/Jovian",
                Display: {
                  Title: "Expanse",
                  "Column of": "Starforged/Oracles/Planets/Jovian/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Jovian/Settlements/Expanse",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Jovian/Settlements/Expanse"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Jovian"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Expanse/1-90",
                    Floor: 1,
                    Ceiling: 90,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Expanse/91-96",
                    Floor: 91,
                    Ceiling: 96,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jovian/Settlements/Expanse/97-100",
                    Floor: 97,
                    Ceiling: 100,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Multiple settlements"
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Settlements in conflict"
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 312
            },
            $id: "Starforged/Oracles/Planets/Jovian/Observed_From_Space",
            Name: "Observed From Space",
            Category: "Starforged/Oracles/Planets/Jovian",
            Display: {
              Title: "Observed From Space",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Jovian/Observed_From_Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Jovian/Observed_From_Space"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Jovian"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Jovian/Observed_From_Space/1-11",
                Floor: 1,
                Ceiling: 11,
                Result: "Complex ring system"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Observed_From_Space/12-22",
                Floor: 12,
                Ceiling: 22,
                Result: "Intense gravity well"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Observed_From_Space/23-33",
                Floor: 23,
                Ceiling: 33,
                Result: "Numerous moons"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Observed_From_Space/34-44",
                Floor: 34,
                Ceiling: 44,
                Result: "Perpetual superstorm"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Observed_From_Space/45-55",
                Floor: 45,
                Ceiling: 55,
                Result: "Powerful magnetic field"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Observed_From_Space/56-66",
                Floor: 56,
                Ceiling: 66,
                Result: "Severe electrical storms"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Observed_From_Space/67-77",
                Floor: 67,
                Ceiling: 77,
                Result: "Superheated atmosphere"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Observed_From_Space/78-88",
                Floor: 78,
                Ceiling: 88,
                Result: "Unusual atmospheric colors"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Observed_From_Space/89-98",
                Floor: 89,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Observed_From_Space/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (orbital)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Orbital"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 312
            },
            $id: "Starforged/Oracles/Planets/Jovian/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Planets/Jovian",
            Display: {
              Title: "Planetside Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Jovian/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Jovian/Feature"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Jovian"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/1-7",
                Floor: 1,
                Ceiling: 7,
                Result: "Clouds of metal particles"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/8-14",
                Floor: 8,
                Ceiling: 14,
                Result: "Crystalline rains"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/15-21",
                Floor: 15,
                Ceiling: 21,
                Result: "Floating glaciers"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/22-28",
                Floor: 22,
                Ceiling: 28,
                Result: "Floating islands"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/29-35",
                Floor: 29,
                Ceiling: 35,
                Result: "Layer of suspended liquid"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/36-42",
                Floor: 36,
                Ceiling: 42,
                Result: "Pockets of explosive gases"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/43-49",
                Floor: 43,
                Ceiling: 49,
                Result: "Powerful vortexes"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/50-56",
                Floor: 50,
                Ceiling: 56,
                Result: "Radiation fields"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/57-63",
                Floor: 57,
                Ceiling: 63,
                Result: "Storm-swept rocky debris"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/64-70",
                Floor: 64,
                Ceiling: 70,
                Result: "Torrential rain"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/71-77",
                Floor: 71,
                Ceiling: 77,
                Result: "Towering thunderheads"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/78-84",
                Floor: 78,
                Ceiling: 84,
                Result: "Violent turbulence"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/85-91",
                Floor: 85,
                Ceiling: 91,
                Result: "Zones of localized atmosphere"
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/92-98",
                Floor: 92,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Feature/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (planetside)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Planetside"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 312
            },
            $id: "Starforged/Oracles/Planets/Jovian/Life",
            Name: "Life",
            Category: "Starforged/Oracles/Planets/Jovian",
            Display: {
              Title: "Life",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Jovian/Life",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Jovian/Life"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Jovian"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Life" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Jovian/Life/1-35",
                Floor: 1,
                Ceiling: 35,
                Result: "None",
                Attributes: [{ Key: "Life", Value: "None" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Life/36-60",
                Floor: 36,
                Ceiling: 60,
                Result: "Extinct",
                Attributes: [{ Key: "Life", Value: "Extinct" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Life/61-85",
                Floor: 61,
                Ceiling: 85,
                Result: "Scarce",
                Attributes: [{ Key: "Life", Value: "Scarce" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Life/86-95",
                Floor: 86,
                Ceiling: 95,
                Result: "Diverse",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Diverse" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Life/96-98",
                Floor: 96,
                Ceiling: 98,
                Result: "Bountiful",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Bountiful" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jovian/Life/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Overrun",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Overrun" }]
              }
            ]
          }
        ],
        "Sample Names": [
          "Aether",
          "Arrokoth",
          "Esen",
          "Hanish",
          "Magnus",
          "Magonia",
          "Mistral",
          "Nephele",
          "Nimbus",
          "Nuada",
          "Nubium",
          "Serein",
          "Stratus",
          "Taranis",
          "Tempest",
          "Tenzin",
          "Tyr",
          "Veil",
          "Velum",
          "Zephyr"
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 313
        },
        $id: "Starforged/Oracles/Planets/Jungle",
        Name: "Jungle",
        Aliases: ["Jungle Planet"],
        Category: "Starforged/Oracles/Planets",
        Description: "A humid, rain-soaked planet that keeps its secrets under a thick canopy of vegetation.",
        Display: {
          Title: "Jungle World",
          Images: [
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Jungle-01.webp",
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Jungle-02.webp"
          ]
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Planetary Class", Values: ["Jungle"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 313
            },
            $id: "Starforged/Oracles/Planets/Jungle/Atmosphere",
            Name: "Atmosphere",
            Category: "Starforged/Oracles/Planets/Jungle",
            Display: {
              Title: "Atmosphere",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Jungle/Atmosphere",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Jungle/Atmosphere"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Jungle"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Atmosphere" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              { Floor: null, Ceiling: null, Result: "None/thin" },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Atmosphere/1-25",
                Floor: 1,
                Ceiling: 25,
                Result: "Toxic",
                Attributes: [{ Key: "Atmosphere", Value: "Toxic" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Atmosphere/26-30",
                Floor: 26,
                Ceiling: 30,
                Result: "Corrosive",
                Attributes: [{ Key: "Atmosphere", Value: "Corrosive" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Atmosphere/31-60",
                Floor: 31,
                Ceiling: 60,
                Result: "Marginal",
                Attributes: [{ Key: "Atmosphere", Value: "Marginal" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Atmosphere/61-90",
                Floor: 61,
                Ceiling: 90,
                Result: "Breathable",
                Attributes: [{ Key: "Atmosphere", Value: "Breathable" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Atmosphere/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Ideal",
                Attributes: [{ Key: "Atmosphere", Value: "Ideal" }]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 313
            },
            $id: "Starforged/Oracles/Planets/Jungle/Settlements",
            Name: "Settlements",
            Category: "Starforged/Oracles/Planets/Jungle",
            Display: {
              Title: "Settlements",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Jungle/Settlements/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Terminus",
                    "Use content from": "Starforged/Oracles/Planets/Jungle/Settlements/Terminus"
                  },
                  {
                    Label: "Outlands",
                    "Use content from": "Starforged/Oracles/Planets/Jungle/Settlements/Outlands"
                  },
                  {
                    Label: "Expanse",
                    "Use content from": "Starforged/Oracles/Planets/Jungle/Settlements/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Region" },
                  { Key: "Planetary Class", Values: ["Jungle"] }
                ]
              },
              "Allow duplicates": !1
            },
            Oracles: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 313
                },
                $id: "Starforged/Oracles/Planets/Jungle/Settlements/Terminus",
                Name: "Terminus",
                "Member of": "Starforged/Oracles/Planets/Jungle/Settlements",
                Category: "Starforged/Oracles/Planets/Jungle",
                Display: {
                  Title: "Terminus",
                  "Column of": "Starforged/Oracles/Planets/Jungle/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Jungle/Settlements/Terminus",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Jungle/Settlements/Terminus"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Jungle"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Terminus/1-40",
                    Floor: 1,
                    Ceiling: 40,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Terminus/41-55",
                    Floor: 41,
                    Ceiling: 55,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Terminus/56-80",
                    Floor: 56,
                    Ceiling: 80,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Terminus/81-92",
                    Floor: 81,
                    Ceiling: 92,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Terminus/93-100",
                    Floor: 93,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 313
                },
                $id: "Starforged/Oracles/Planets/Jungle/Settlements/Outlands",
                Name: "Outlands",
                "Member of": "Starforged/Oracles/Planets/Jungle/Settlements",
                Category: "Starforged/Oracles/Planets/Jungle",
                Display: {
                  Title: "Outlands",
                  "Column of": "Starforged/Oracles/Planets/Jungle/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Jungle/Settlements/Outlands",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Jungle/Settlements/Outlands"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Jungle"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Outlands/1-65",
                    Floor: 1,
                    Ceiling: 65,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Outlands/66-75",
                    Floor: 66,
                    Ceiling: 75,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Outlands/76-92",
                    Floor: 76,
                    Ceiling: 92,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Outlands/93-97",
                    Floor: 93,
                    Ceiling: 97,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Outlands/98-100",
                    Floor: 98,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 313
                },
                $id: "Starforged/Oracles/Planets/Jungle/Settlements/Expanse",
                Name: "Expanse",
                "Member of": "Starforged/Oracles/Planets/Jungle/Settlements",
                Category: "Starforged/Oracles/Planets/Jungle",
                Display: {
                  Title: "Expanse",
                  "Column of": "Starforged/Oracles/Planets/Jungle/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Jungle/Settlements/Expanse",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Jungle/Settlements/Expanse"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Jungle"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Expanse/1-85",
                    Floor: 1,
                    Ceiling: 85,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Expanse/86-90",
                    Floor: 86,
                    Ceiling: 90,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Expanse/91-97",
                    Floor: 91,
                    Ceiling: 97,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Expanse/98-99",
                    Floor: 98,
                    Ceiling: 99,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Jungle/Settlements/Expanse/100",
                    Floor: 100,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 313
            },
            $id: "Starforged/Oracles/Planets/Jungle/Observed_From_Space",
            Name: "Observed From Space",
            Category: "Starforged/Oracles/Planets/Jungle",
            Display: {
              Title: "Observed From Space",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Jungle/Observed_From_Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Jungle/Observed_From_Space"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Jungle"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Jungle/Observed_From_Space/1-11",
                Floor: 1,
                Ceiling: 11,
                Result: "Cloud-breaching trees"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Observed_From_Space/12-22",
                Floor: 12,
                Ceiling: 22,
                Result: "Towering mountains"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Observed_From_Space/23-33",
                Floor: 23,
                Ceiling: 33,
                Result: "Expansive rivers or wetlands"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Observed_From_Space/34-44",
                Floor: 34,
                Ceiling: 44,
                Result: "Unbroken canopy"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Observed_From_Space/45-55",
                Floor: 45,
                Ceiling: 55,
                Result: "Inland seas"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Observed_From_Space/56-66",
                Floor: 56,
                Ceiling: 66,
                Result: "Unusual vegetation color"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Observed_From_Space/67-77",
                Floor: 67,
                Ceiling: 77,
                Result: "Massive canyons"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Observed_From_Space/78-88",
                Floor: 78,
                Ceiling: 88,
                Result: "Persistent cloud cover"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Observed_From_Space/89-98",
                Floor: 89,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Observed_From_Space/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (orbital)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Orbital"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 313
            },
            $id: "Starforged/Oracles/Planets/Jungle/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Planets/Jungle",
            Display: {
              Title: "Planetside Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Jungle/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Jungle/Feature"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Jungle"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/1-7",
                Floor: 1,
                Ceiling: 7,
                Result: "Bioluminescent flora"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/8-14",
                Floor: 8,
                Ceiling: 14,
                Result: "Deep river gorges"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/15-21",
                Floor: 15,
                Ceiling: 21,
                Result: "Extensive exposed root systems"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/22-28",
                Floor: 22,
                Ceiling: 28,
                Result: "Immense tiered waterfalls"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/29-35",
                Floor: 29,
                Ceiling: 35,
                Result: "Languid rivers"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/36-42",
                Floor: 36,
                Ceiling: 42,
                Result: "Low-lying fog"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/43-49",
                Floor: 43,
                Ceiling: 49,
                Result: "Plunging sinkholes"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/50-56",
                Floor: 50,
                Ceiling: 56,
                Result: "Scarred clearings"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/57-63",
                Floor: 57,
                Ceiling: 63,
                Result: "Sinking quagmires"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/64-70",
                Floor: 64,
                Ceiling: 70,
                Result: "Surging rivers"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/71-77",
                Floor: 71,
                Ceiling: 77,
                Result: "Torrential rainstorms"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/78-84",
                Floor: 78,
                Ceiling: 84,
                Result: "Violent electrical storms"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/85-91",
                Floor: 85,
                Ceiling: 91,
                Result: "Waterlogged caves"
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/92-98",
                Floor: 92,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Feature/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (planetside)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Planetside"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 313
            },
            $id: "Starforged/Oracles/Planets/Jungle/Life",
            Name: "Life",
            Category: "Starforged/Oracles/Planets/Jungle",
            Display: {
              Title: "Life",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Jungle/Life",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Jungle/Life"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Jungle"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Life" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              { Floor: null, Ceiling: null, Result: "None" },
              { Floor: null, Ceiling: null, Result: "Extinct" },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Life/1-5",
                Floor: 1,
                Ceiling: 5,
                Result: "Scarce",
                Attributes: [{ Key: "Life", Value: "Scarce" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Life/6-35",
                Floor: 6,
                Ceiling: 35,
                Result: "Diverse",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Diverse" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Life/36-75",
                Floor: 36,
                Ceiling: 75,
                Result: "Bountiful",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Bountiful" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Jungle/Life/76-100",
                Floor: 76,
                Ceiling: 100,
                Result: "Overrun",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Overrun" }]
              }
            ]
          }
        ],
        "Sample Names": [
          "Acacia",
          "Aster",
          "Beryl",
          "Celadon",
          "Ceres",
          "Damu",
          "Dryad",
          "Flora",
          "Iridum",
          "Iris",
          "Kishar",
          "Penumbra",
          "Roris",
          "Sylva",
          "Tangle",
          "Thorn",
          "Venom",
          "Verdure",
          "Veris",
          "Viridian"
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 314
        },
        $id: "Starforged/Oracles/Planets/Ocean",
        Name: "Ocean",
        Aliases: ["Ocean Planet"],
        Category: "Starforged/Oracles/Planets",
        Description: "A planet completely or almost entirely covered by a boundless ocean.",
        Display: {
          Title: "Ocean World",
          Images: [
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Ocean-01.webp",
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Ocean-02.webp"
          ]
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Planetary Class", Values: ["Ocean"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 314
            },
            $id: "Starforged/Oracles/Planets/Ocean/Atmosphere",
            Name: "Atmosphere",
            Category: "Starforged/Oracles/Planets/Ocean",
            Display: {
              Title: "Atmosphere",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Ocean/Atmosphere",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Ocean/Atmosphere"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Ocean"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Atmosphere" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Ocean/Atmosphere/1-5",
                Floor: 1,
                Ceiling: 5,
                Result: "None/thin",
                Attributes: [
                  { Key: "Atmosphere", Value: "None / thin" }
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Atmosphere/6-20",
                Floor: 6,
                Ceiling: 20,
                Result: "Toxic",
                Attributes: [{ Key: "Atmosphere", Value: "Toxic" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Atmosphere/21-25",
                Floor: 21,
                Ceiling: 25,
                Result: "Corrosive",
                Attributes: [{ Key: "Atmosphere", Value: "Corrosive" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Atmosphere/26-60",
                Floor: 26,
                Ceiling: 60,
                Result: "Marginal",
                Attributes: [{ Key: "Atmosphere", Value: "Marginal" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Atmosphere/61-90",
                Floor: 61,
                Ceiling: 90,
                Result: "Breathable",
                Attributes: [{ Key: "Atmosphere", Value: "Breathable" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Atmosphere/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Ideal",
                Attributes: [{ Key: "Atmosphere", Value: "Ideal" }]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 314
            },
            $id: "Starforged/Oracles/Planets/Ocean/Settlements",
            Name: "Settlements",
            Category: "Starforged/Oracles/Planets/Ocean",
            Display: {
              Title: "Settlements",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Ocean/Settlements/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Terminus",
                    "Use content from": "Starforged/Oracles/Planets/Ocean/Settlements/Terminus"
                  },
                  {
                    Label: "Outlands",
                    "Use content from": "Starforged/Oracles/Planets/Ocean/Settlements/Outlands"
                  },
                  {
                    Label: "Expanse",
                    "Use content from": "Starforged/Oracles/Planets/Ocean/Settlements/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Region" },
                  { Key: "Planetary Class", Values: ["Ocean"] }
                ]
              },
              "Allow duplicates": !1
            },
            Oracles: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 314
                },
                $id: "Starforged/Oracles/Planets/Ocean/Settlements/Terminus",
                Name: "Terminus",
                "Member of": "Starforged/Oracles/Planets/Ocean/Settlements",
                Category: "Starforged/Oracles/Planets/Ocean",
                Display: {
                  Title: "Terminus",
                  "Column of": "Starforged/Oracles/Planets/Ocean/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Ocean/Settlements/Terminus",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Ocean/Settlements/Terminus"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Ocean"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Terminus/1-40",
                    Floor: 1,
                    Ceiling: 40,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Terminus/41-55",
                    Floor: 41,
                    Ceiling: 55,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Terminus/56-80",
                    Floor: 56,
                    Ceiling: 80,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Terminus/81-92",
                    Floor: 81,
                    Ceiling: 92,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Terminus/93-100",
                    Floor: 93,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 314
                },
                $id: "Starforged/Oracles/Planets/Ocean/Settlements/Outlands",
                Name: "Outlands",
                "Member of": "Starforged/Oracles/Planets/Ocean/Settlements",
                Category: "Starforged/Oracles/Planets/Ocean",
                Display: {
                  Title: "Outlands",
                  "Column of": "Starforged/Oracles/Planets/Ocean/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Ocean/Settlements/Outlands",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Ocean/Settlements/Outlands"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Ocean"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Outlands/1-65",
                    Floor: 1,
                    Ceiling: 65,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Outlands/66-75",
                    Floor: 66,
                    Ceiling: 75,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Outlands/76-92",
                    Floor: 76,
                    Ceiling: 92,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Outlands/93-97",
                    Floor: 93,
                    Ceiling: 97,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Outlands/98-100",
                    Floor: 98,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 314
                },
                $id: "Starforged/Oracles/Planets/Ocean/Settlements/Expanse",
                Name: "Expanse",
                "Member of": "Starforged/Oracles/Planets/Ocean/Settlements",
                Category: "Starforged/Oracles/Planets/Ocean",
                Display: {
                  Title: "Expanse",
                  "Column of": "Starforged/Oracles/Planets/Ocean/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Ocean/Settlements/Expanse",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Ocean/Settlements/Expanse"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Ocean"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Expanse/1-85",
                    Floor: 1,
                    Ceiling: 85,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Expanse/86-90",
                    Floor: 86,
                    Ceiling: 90,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Expanse/91-97",
                    Floor: 91,
                    Ceiling: 97,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Expanse/98-99",
                    Floor: 98,
                    Ceiling: 99,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Ocean/Settlements/Expanse/100",
                    Floor: 100,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 314
            },
            $id: "Starforged/Oracles/Planets/Ocean/Observed_From_Space",
            Name: "Observed From Space",
            Category: "Starforged/Oracles/Planets/Ocean",
            Display: {
              Title: "Observed From Space",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Ocean/Observed_From_Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Ocean/Observed_From_Space"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Ocean"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Ocean/Observed_From_Space/1-11",
                Floor: 1,
                Ceiling: 11,
                Result: "Complex reef systems"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Observed_From_Space/12-22",
                Floor: 12,
                Ceiling: 22,
                Result: "Emerging volcanoes"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Observed_From_Space/23-33",
                Floor: 23,
                Ceiling: 33,
                Result: "Floating forests"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Observed_From_Space/34-44",
                Floor: 34,
                Ceiling: 44,
                Result: "Global hurricanes"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Observed_From_Space/45-55",
                Floor: 45,
                Ceiling: 55,
                Result: "Large moon and strong tides"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Observed_From_Space/56-66",
                Floor: 56,
                Ceiling: 66,
                Result: "Scattered islands"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Observed_From_Space/67-77",
                Floor: 67,
                Ceiling: 77,
                Result: "Semi-frozen oceans"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Observed_From_Space/78-88",
                Floor: 78,
                Ceiling: 88,
                Result: "Unusual water color"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Observed_From_Space/89-98",
                Floor: 89,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Observed_From_Space/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (orbital)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Orbital"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 314
            },
            $id: "Starforged/Oracles/Planets/Ocean/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Planets/Ocean",
            Display: {
              Title: "Planetside Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Ocean/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Ocean/Feature"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Ocean"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/1-7",
                Floor: 1,
                Ceiling: 7,
                Result: "Abyssal trenches"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/8-14",
                Floor: 8,
                Ceiling: 14,
                Result: "Living islands"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/15-21",
                Floor: 15,
                Ceiling: 21,
                Result: "Luminescent seas"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/22-28",
                Floor: 22,
                Ceiling: 28,
                Result: "Roaming icebergs"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/29-35",
                Floor: 29,
                Ceiling: 35,
                Result: "Shallow-water plains"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/36-42",
                Floor: 36,
                Ceiling: 42,
                Result: "Subsurface volcanoes"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/43-49",
                Floor: 43,
                Ceiling: 49,
                Result: "Titanic waves"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/50-56",
                Floor: 50,
                Ceiling: 56,
                Result: "Undersea air pockets"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/57-63",
                Floor: 57,
                Ceiling: 63,
                Result: "Undersea caves"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/64-70",
                Floor: 64,
                Ceiling: 70,
                Result: "Undersea forests"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/71-77",
                Floor: 71,
                Ceiling: 77,
                Result: "Unrelenting rainfall"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/78-84",
                Floor: 78,
                Ceiling: 84,
                Result: "Violent currents"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/85-91",
                Floor: 85,
                Ceiling: 91,
                Result: "Windborne waterspouts"
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/92-98",
                Floor: 92,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Feature/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (planetside)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Planetside"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 314
            },
            $id: "Starforged/Oracles/Planets/Ocean/Life",
            Name: "Life",
            Category: "Starforged/Oracles/Planets/Ocean",
            Display: {
              Title: "Life",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Ocean/Life",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Ocean/Life"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Ocean"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Life" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Ocean/Life/1-5",
                Floor: 1,
                Ceiling: 5,
                Result: "None",
                Attributes: [{ Key: "Life", Value: "None" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Life/6-15",
                Floor: 6,
                Ceiling: 15,
                Result: "Extinct",
                Attributes: [{ Key: "Life", Value: "Extinct" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Life/16-30",
                Floor: 16,
                Ceiling: 30,
                Result: "Scarce",
                Attributes: [{ Key: "Life", Value: "Scarce" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Life/31-60",
                Floor: 31,
                Ceiling: 60,
                Result: "Diverse",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Diverse" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Life/61-90",
                Floor: 61,
                Ceiling: 90,
                Result: "Bountiful",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Bountiful" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Ocean/Life/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Overrun",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Overrun" }]
              }
            ]
          }
        ],
        "Sample Names": [
          "Aegir",
          "Alon",
          "Clarion",
          "Darya",
          "Eldoris",
          "Horizon",
          "Hydra",
          "Kai",
          "Larimar",
          "Lotan",
          "Mira",
          "Navini",
          "Nerida",
          "Oceanus",
          "Pelagic",
          "Proteus",
          "Russalka",
          "Siren",
          "Thalassa",
          "Triton"
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 315
        },
        $id: "Starforged/Oracles/Planets/Rocky",
        Name: "Rocky",
        Aliases: ["Rocky Planet"],
        Category: "Starforged/Oracles/Planets",
        Description: "A rugged planet scarred by eons of destructive asteroid impacts.",
        Display: {
          Title: "Rocky World",
          Images: [
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Rocky-01.webp",
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Rocky-02.webp"
          ]
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Planetary Class", Values: ["Rocky"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 315
            },
            $id: "Starforged/Oracles/Planets/Rocky/Atmosphere",
            Name: "Atmosphere",
            Category: "Starforged/Oracles/Planets/Rocky",
            Display: {
              Title: "Atmosphere",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Rocky/Atmosphere",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Rocky/Atmosphere"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Rocky"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Atmosphere" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Rocky/Atmosphere/1-65",
                Floor: 1,
                Ceiling: 65,
                Result: "None/thin",
                Attributes: [
                  { Key: "Atmosphere", Value: "None / thin" }
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Atmosphere/66-85",
                Floor: 66,
                Ceiling: 85,
                Result: "Toxic",
                Attributes: [{ Key: "Atmosphere", Value: "Toxic" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Atmosphere/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "Corrosive",
                Attributes: [{ Key: "Atmosphere", Value: "Corrosive" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Atmosphere/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Marginal",
                Attributes: [{ Key: "Atmosphere", Value: "Marginal" }]
              },
              { Floor: null, Ceiling: null, Result: "Breathable" },
              { Floor: null, Ceiling: null, Result: "Ideal" }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 315
            },
            $id: "Starforged/Oracles/Planets/Rocky/Settlements",
            Name: "Settlements",
            Category: "Starforged/Oracles/Planets/Rocky",
            Display: {
              Title: "Settlements",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Rocky/Settlements/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Terminus",
                    "Use content from": "Starforged/Oracles/Planets/Rocky/Settlements/Terminus"
                  },
                  {
                    Label: "Outlands",
                    "Use content from": "Starforged/Oracles/Planets/Rocky/Settlements/Outlands"
                  },
                  {
                    Label: "Expanse",
                    "Use content from": "Starforged/Oracles/Planets/Rocky/Settlements/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Region" },
                  { Key: "Planetary Class", Values: ["Rocky"] }
                ]
              },
              "Allow duplicates": !1
            },
            Oracles: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 315
                },
                $id: "Starforged/Oracles/Planets/Rocky/Settlements/Terminus",
                Name: "Terminus",
                "Member of": "Starforged/Oracles/Planets/Rocky/Settlements",
                Category: "Starforged/Oracles/Planets/Rocky",
                Display: {
                  Title: "Terminus",
                  "Column of": "Starforged/Oracles/Planets/Rocky/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Rocky/Settlements/Terminus",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Rocky/Settlements/Terminus"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Rocky"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Terminus/1-50",
                    Floor: 1,
                    Ceiling: 50,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Terminus/51-70",
                    Floor: 51,
                    Ceiling: 70,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Terminus/71-85",
                    Floor: 71,
                    Ceiling: 85,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Terminus/86-95",
                    Floor: 86,
                    Ceiling: 95,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Terminus/96-100",
                    Floor: 96,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 315
                },
                $id: "Starforged/Oracles/Planets/Rocky/Settlements/Outlands",
                Name: "Outlands",
                "Member of": "Starforged/Oracles/Planets/Rocky/Settlements",
                Category: "Starforged/Oracles/Planets/Rocky",
                Display: {
                  Title: "Outlands",
                  "Column of": "Starforged/Oracles/Planets/Rocky/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Rocky/Settlements/Outlands",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Rocky/Settlements/Outlands"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Rocky"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Outlands/1-75",
                    Floor: 1,
                    Ceiling: 75,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Outlands/76-87",
                    Floor: 76,
                    Ceiling: 87,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Outlands/88-95",
                    Floor: 88,
                    Ceiling: 95,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Outlands/96-98",
                    Floor: 96,
                    Ceiling: 98,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Outlands/99-100",
                    Floor: 99,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 315
                },
                $id: "Starforged/Oracles/Planets/Rocky/Settlements/Expanse",
                Name: "Expanse",
                "Member of": "Starforged/Oracles/Planets/Rocky/Settlements",
                Category: "Starforged/Oracles/Planets/Rocky",
                Display: {
                  Title: "Expanse",
                  "Column of": "Starforged/Oracles/Planets/Rocky/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Rocky/Settlements/Expanse",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Rocky/Settlements/Expanse"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Rocky"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Expanse/1-90",
                    Floor: 1,
                    Ceiling: 90,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Expanse/91-96",
                    Floor: 91,
                    Ceiling: 96,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Rocky/Settlements/Expanse/97-100",
                    Floor: 97,
                    Ceiling: 100,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Multiple settlements"
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Settlements in conflict"
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 315
            },
            $id: "Starforged/Oracles/Planets/Rocky/Observed_From_Space",
            Name: "Observed From Space",
            Category: "Starforged/Oracles/Planets/Rocky",
            Display: {
              Title: "Observed From Space",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Rocky/Observed_From_Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Rocky/Observed_From_Space"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Rocky"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Rocky/Observed_From_Space/1-11",
                Floor: 1,
                Ceiling: 11,
                Result: "Barren plains"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Observed_From_Space/12-22",
                Floor: 12,
                Ceiling: 22,
                Result: "Constant asteroid strikes"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Observed_From_Space/23-33",
                Floor: 23,
                Ceiling: 33,
                Result: "Dense ring system"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Observed_From_Space/34-44",
                Floor: 34,
                Ceiling: 44,
                Result: "Jagged mountains"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Observed_From_Space/45-55",
                Floor: 45,
                Ceiling: 55,
                Result: "Massive impact crater"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Observed_From_Space/56-66",
                Floor: 56,
                Ceiling: 66,
                Result: "Misshapen form (low gravity)"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Observed_From_Space/67-77",
                Floor: 67,
                Ceiling: 77,
                Result: "Perpetual night"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Observed_From_Space/78-88",
                Floor: 78,
                Ceiling: 88,
                Result: "Towering plateaus"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Observed_From_Space/89-98",
                Floor: 89,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Observed_From_Space/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (orbital)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Orbital"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 315
            },
            $id: "Starforged/Oracles/Planets/Rocky/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Planets/Rocky",
            Display: {
              Title: "Planetside Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Rocky/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Rocky/Feature"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Rocky"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/1-7",
                Floor: 1,
                Ceiling: 7,
                Result: "Crystalline formations"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/8-14",
                Floor: 8,
                Ceiling: 14,
                Result: "Crystalline caves"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/15-21",
                Floor: 15,
                Ceiling: 21,
                Result: "Exposed mineral deposits"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/22-28",
                Floor: 22,
                Ceiling: 28,
                Result: "Geometric terrain features"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/29-35",
                Floor: 29,
                Ceiling: 35,
                Result: "Geothermal vents"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/36-42",
                Floor: 36,
                Ceiling: 42,
                Result: "Glassy impact craters"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/43-49",
                Floor: 43,
                Ceiling: 49,
                Result: "Massive dust dunes"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/50-56",
                Floor: 50,
                Ceiling: 56,
                Result: "Powerful magnetic fields"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/57-63",
                Floor: 57,
                Ceiling: 63,
                Result: "Rubble-strewn lava fields"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/64-70",
                Floor: 64,
                Ceiling: 70,
                Result: "Steam-heated caves"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/71-77",
                Floor: 71,
                Ceiling: 77,
                Result: "Subsurface magma flows"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/78-84",
                Floor: 78,
                Ceiling: 84,
                Result: "Swirling low-lying gases"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/85-91",
                Floor: 85,
                Ceiling: 91,
                Result: "Towering rocky spires"
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/92-98",
                Floor: 92,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Feature/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (planetside)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Planetside"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 315
            },
            $id: "Starforged/Oracles/Planets/Rocky/Life",
            Name: "Life",
            Category: "Starforged/Oracles/Planets/Rocky",
            Display: {
              Title: "Life",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Rocky/Life",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Rocky/Life"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Rocky"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Life" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Rocky/Life/1-65",
                Floor: 1,
                Ceiling: 65,
                Result: "None",
                Attributes: [{ Key: "Life", Value: "None" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Life/66-80",
                Floor: 66,
                Ceiling: 80,
                Result: "Extinct",
                Attributes: [{ Key: "Life", Value: "Extinct" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Life/81-90",
                Floor: 81,
                Ceiling: 90,
                Result: "Scarce",
                Attributes: [{ Key: "Life", Value: "Scarce" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Life/91-95",
                Floor: 91,
                Ceiling: 95,
                Result: "Diverse",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Diverse" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Life/96-98",
                Floor: 96,
                Ceiling: 98,
                Result: "Bountiful",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Bountiful" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Rocky/Life/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Overrun",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Overrun" }]
              }
            ]
          }
        ],
        "Sample Names": [
          "Aphelion",
          "Artemis",
          "Capella",
          "Cobalt",
          "Crag",
          "Dusk",
          "Eos",
          "Hecate",
          "Imbrium",
          "Latona",
          "Losna",
          "Orpheus",
          "Ory",
          "Quietus",
          "Selene",
          "Silas",
          "Silex",
          "Slate",
          "Themis",
          "Umbra"
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 316
        },
        $id: "Starforged/Oracles/Planets/Shattered",
        Name: "Shattered",
        Aliases: ["Shattered Planet"],
        Category: "Starforged/Oracles/Planets",
        Description: "A planet sundered by cataclysmic destruction.",
        Display: {
          Title: "Shattered World",
          Images: [
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Shattered-01.webp",
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Shattered-02.webp"
          ]
        },
        Usage: {
          Requires: {
            Attributes: [
              { Key: "Planetary Class", Values: ["Shattered"] }
            ]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 316
            },
            $id: "Starforged/Oracles/Planets/Shattered/Atmosphere",
            Name: "Atmosphere",
            Category: "Starforged/Oracles/Planets/Shattered",
            Display: {
              Title: "Atmosphere",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Shattered/Atmosphere",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Shattered/Atmosphere"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Shattered"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Atmosphere" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Shattered/Atmosphere/1-93",
                Floor: 1,
                Ceiling: 93,
                Result: "None/thin",
                Attributes: [
                  { Key: "Atmosphere", Value: "None / thin" }
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Atmosphere/94-95",
                Floor: 94,
                Ceiling: 95,
                Result: "Toxic",
                Attributes: [{ Key: "Atmosphere", Value: "Toxic" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Atmosphere/96-97",
                Floor: 96,
                Ceiling: 97,
                Result: "Corrosive",
                Attributes: [{ Key: "Atmosphere", Value: "Corrosive" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Atmosphere/98-99",
                Floor: 98,
                Ceiling: 99,
                Result: "Marginal",
                Attributes: [{ Key: "Atmosphere", Value: "Marginal" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Atmosphere/100",
                Floor: 100,
                Ceiling: 100,
                Result: "Breathable",
                Attributes: [{ Key: "Atmosphere", Value: "Breathable" }]
              },
              { Floor: null, Ceiling: null, Result: "Ideal" }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 316
            },
            $id: "Starforged/Oracles/Planets/Shattered/Settlements",
            Name: "Settlements",
            Category: "Starforged/Oracles/Planets/Shattered",
            Display: {
              Title: "Settlements",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Shattered/Settlements/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Terminus",
                    "Use content from": "Starforged/Oracles/Planets/Shattered/Settlements/Terminus"
                  },
                  {
                    Label: "Outlands",
                    "Use content from": "Starforged/Oracles/Planets/Shattered/Settlements/Outlands"
                  },
                  {
                    Label: "Expanse",
                    "Use content from": "Starforged/Oracles/Planets/Shattered/Settlements/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Region" },
                  { Key: "Planetary Class", Values: ["Shattered"] }
                ]
              },
              "Allow duplicates": !1
            },
            Oracles: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 316
                },
                $id: "Starforged/Oracles/Planets/Shattered/Settlements/Terminus",
                Name: "Terminus",
                "Member of": "Starforged/Oracles/Planets/Shattered/Settlements",
                Category: "Starforged/Oracles/Planets/Shattered",
                Display: {
                  Title: "Terminus",
                  "Column of": "Starforged/Oracles/Planets/Shattered/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Shattered/Settlements/Terminus",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Shattered/Settlements/Terminus"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Shattered"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Shattered/Settlements/Terminus/1-70",
                    Floor: 1,
                    Ceiling: 70,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Shattered/Settlements/Terminus/71-90",
                    Floor: 71,
                    Ceiling: 90,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Shattered/Settlements/Terminus/91-95",
                    Floor: 91,
                    Ceiling: 95,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Shattered/Settlements/Terminus/96-98",
                    Floor: 96,
                    Ceiling: 98,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Shattered/Settlements/Terminus/99-100",
                    Floor: 99,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 316
                },
                $id: "Starforged/Oracles/Planets/Shattered/Settlements/Outlands",
                Name: "Outlands",
                "Member of": "Starforged/Oracles/Planets/Shattered/Settlements",
                Category: "Starforged/Oracles/Planets/Shattered",
                Display: {
                  Title: "Outlands",
                  "Column of": "Starforged/Oracles/Planets/Shattered/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Shattered/Settlements/Outlands",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Shattered/Settlements/Outlands"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Shattered"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Shattered/Settlements/Outlands/1-85",
                    Floor: 1,
                    Ceiling: 85,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Shattered/Settlements/Outlands/86-96",
                    Floor: 86,
                    Ceiling: 96,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Shattered/Settlements/Outlands/97-99",
                    Floor: 97,
                    Ceiling: 99,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Shattered/Settlements/Outlands/100",
                    Floor: 100,
                    Ceiling: 100,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Settlements in conflict"
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 316
                },
                $id: "Starforged/Oracles/Planets/Shattered/Settlements/Expanse",
                Name: "Expanse",
                "Member of": "Starforged/Oracles/Planets/Shattered/Settlements",
                Category: "Starforged/Oracles/Planets/Shattered",
                Display: {
                  Title: "Expanse",
                  "Column of": "Starforged/Oracles/Planets/Shattered/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Shattered/Settlements/Expanse",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Shattered/Settlements/Expanse"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Shattered"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Shattered/Settlements/Expanse/1-95",
                    Floor: 1,
                    Ceiling: 95,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Shattered/Settlements/Expanse/96-99",
                    Floor: 96,
                    Ceiling: 99,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Shattered/Settlements/Expanse/100",
                    Floor: 100,
                    Ceiling: 100,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Multiple settlements"
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Settlements in conflict"
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 316
            },
            $id: "Starforged/Oracles/Planets/Shattered/Observed_From_Space",
            Name: "Observed From Space",
            Category: "Starforged/Oracles/Planets/Shattered",
            Display: {
              Title: "Observed From Space",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Shattered/Observed_From_Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Shattered/Observed_From_Space"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Shattered"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Shattered/Observed_From_Space/1-11",
                Floor: 1,
                Ceiling: 11,
                Result: "Demolished space fleet"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Observed_From_Space/12-22",
                Floor: 12,
                Ceiling: 22,
                Result: "Preserved planetary fragment"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Observed_From_Space/23-33",
                Floor: 23,
                Ceiling: 33,
                Result: "Dense ring system"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Observed_From_Space/34-44",
                Floor: 34,
                Ceiling: 44,
                Result: "Swirling debris field"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Observed_From_Space/45-55",
                Floor: 45,
                Ceiling: 55,
                Result: "Fiery planetary core"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Observed_From_Space/56-66",
                Floor: 56,
                Ceiling: 66,
                Result: "Unbroken moon"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Observed_From_Space/67-77",
                Floor: 67,
                Ceiling: 77,
                Result: "Geomagnetic storms"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Observed_From_Space/78-88",
                Floor: 78,
                Ceiling: 88,
                Result: "Intense solar radiation"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Observed_From_Space/89-98",
                Floor: 89,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Observed_From_Space/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (orbital)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Orbital"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 316
            },
            $id: "Starforged/Oracles/Planets/Shattered/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Planets/Shattered",
            Display: {
              Title: "Planetside Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Shattered/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Shattered/Feature"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Shattered"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/1-7",
                Floor: 1,
                Ceiling: 7,
                Result: "Broken cities"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/8-14",
                Floor: 8,
                Ceiling: 14,
                Result: "Colliding fragments"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/15-21",
                Floor: 15,
                Ceiling: 21,
                Result: "Energy storms"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/22-28",
                Floor: 22,
                Ceiling: 28,
                Result: "Exposed caverns"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/29-35",
                Floor: 29,
                Ceiling: 35,
                Result: "Fluctuating gravity"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/36-42",
                Floor: 36,
                Ceiling: 42,
                Result: "Magnetic disturbances"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/43-49",
                Floor: 43,
                Ceiling: 49,
                Result: "Molten fissures"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/50-56",
                Floor: 50,
                Ceiling: 56,
                Result: "Phantom visions of the past"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/57-63",
                Floor: 57,
                Ceiling: 63,
                Result: "Pocket atmosphere"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/64-70",
                Floor: 64,
                Ceiling: 70,
                Result: "Residual energy storms"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/71-77",
                Floor: 71,
                Ceiling: 77,
                Result: "Swirling corrosive gases"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/78-84",
                Floor: 78,
                Ceiling: 84,
                Result: "Unstable and fracturing terrain"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/85-91",
                Floor: 85,
                Ceiling: 91,
                Result: "Venting magma"
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/92-98",
                Floor: 92,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Feature/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (planetside)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Planetside"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 316
            },
            $id: "Starforged/Oracles/Planets/Shattered/Life",
            Name: "Life",
            Category: "Starforged/Oracles/Planets/Shattered",
            Display: {
              Title: "Life",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Shattered/Life",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Shattered/Life"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Shattered"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Life" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Shattered/Life/1-30",
                Floor: 1,
                Ceiling: 30,
                Result: "None",
                Attributes: [{ Key: "Life", Value: "None" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Life/31-85",
                Floor: 31,
                Ceiling: 85,
                Result: "Extinct",
                Attributes: [{ Key: "Life", Value: "Extinct" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Life/86-95",
                Floor: 86,
                Ceiling: 95,
                Result: "Scarce",
                Attributes: [{ Key: "Life", Value: "Scarce" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Shattered/Life/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "Diverse",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Diverse" }]
              },
              { Floor: null, Ceiling: null, Result: "Bountiful" },
              { Floor: null, Ceiling: null, Result: "Overrun" }
            ]
          }
        ],
        "Sample Names": [
          "Cavus",
          "Chrysalis",
          "Fragment",
          "Havoc",
          "Keres",
          "Lux",
          "Nemain",
          "Praxis",
          "Riven",
          "Schism",
          "Shell",
          "Slag",
          "Sliver",
          "Sunder",
          "Torment",
          "Vestige",
          "Vigrid",
          "Vortex",
          "Wrath",
          "Zix"
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 317
        },
        $id: "Starforged/Oracles/Planets/Tainted",
        Name: "Tainted",
        Aliases: ["Tainted Planet"],
        Category: "Starforged/Oracles/Planets",
        Description: "A foul planet wracked by a poisonous climate and virulent growths.",
        Display: {
          Title: "Tainted World",
          Images: [
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Tainted-01.webp",
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Tainted-02.webp"
          ]
        },
        Usage: {
          Requires: {
            Attributes: [
              { Key: "Planetary Class", Values: ["Tainted"] }
            ]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 317
            },
            $id: "Starforged/Oracles/Planets/Tainted/Atmosphere",
            Name: "Atmosphere",
            Category: "Starforged/Oracles/Planets/Tainted",
            Display: {
              Title: "Atmosphere",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Tainted/Atmosphere",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Tainted/Atmosphere"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Tainted"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Atmosphere" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              { Floor: null, Ceiling: null, Result: "None/thin" },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Atmosphere/1-65",
                Floor: 1,
                Ceiling: 65,
                Result: "Toxic",
                Attributes: [{ Key: "Atmosphere", Value: "Toxic" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Atmosphere/66-85",
                Floor: 66,
                Ceiling: 85,
                Result: "Corrosive",
                Attributes: [{ Key: "Atmosphere", Value: "Corrosive" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Atmosphere/86-95",
                Floor: 86,
                Ceiling: 95,
                Result: "Marginal",
                Attributes: [{ Key: "Atmosphere", Value: "Marginal" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Atmosphere/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "Breathable",
                Attributes: [{ Key: "Atmosphere", Value: "Breathable" }]
              },
              { Floor: null, Ceiling: null, Result: "Ideal" }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 317
            },
            $id: "Starforged/Oracles/Planets/Tainted/Settlements",
            Name: "Settlements",
            Category: "Starforged/Oracles/Planets/Tainted",
            Display: {
              Title: "Settlements",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Tainted/Settlements/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Terminus",
                    "Use content from": "Starforged/Oracles/Planets/Tainted/Settlements/Terminus"
                  },
                  {
                    Label: "Outlands",
                    "Use content from": "Starforged/Oracles/Planets/Tainted/Settlements/Outlands"
                  },
                  {
                    Label: "Expanse",
                    "Use content from": "Starforged/Oracles/Planets/Tainted/Settlements/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Region" },
                  { Key: "Planetary Class", Values: ["Tainted"] }
                ]
              },
              "Allow duplicates": !1
            },
            Oracles: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 317
                },
                $id: "Starforged/Oracles/Planets/Tainted/Settlements/Terminus",
                Name: "Terminus",
                "Member of": "Starforged/Oracles/Planets/Tainted/Settlements",
                Category: "Starforged/Oracles/Planets/Tainted",
                Display: {
                  Title: "Terminus",
                  "Column of": "Starforged/Oracles/Planets/Tainted/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Tainted/Settlements/Terminus",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Tainted/Settlements/Terminus"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Tainted"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Tainted/Settlements/Terminus/1-80",
                    Floor: 1,
                    Ceiling: 80,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Tainted/Settlements/Terminus/81-90",
                    Floor: 81,
                    Ceiling: 90,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Tainted/Settlements/Terminus/91-95",
                    Floor: 91,
                    Ceiling: 95,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Tainted/Settlements/Terminus/96-98",
                    Floor: 96,
                    Ceiling: 98,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Tainted/Settlements/Terminus/99-100",
                    Floor: 99,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 317
                },
                $id: "Starforged/Oracles/Planets/Tainted/Settlements/Outlands",
                Name: "Outlands",
                "Member of": "Starforged/Oracles/Planets/Tainted/Settlements",
                Category: "Starforged/Oracles/Planets/Tainted",
                Display: {
                  Title: "Outlands",
                  "Column of": "Starforged/Oracles/Planets/Tainted/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Tainted/Settlements/Outlands",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Tainted/Settlements/Outlands"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Tainted"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Tainted/Settlements/Outlands/1-90",
                    Floor: 1,
                    Ceiling: 90,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Tainted/Settlements/Outlands/91-97",
                    Floor: 91,
                    Ceiling: 97,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Tainted/Settlements/Outlands/98-100",
                    Floor: 98,
                    Ceiling: 100,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Multiple settlements"
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Settlements in conflict"
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 317
                },
                $id: "Starforged/Oracles/Planets/Tainted/Settlements/Expanse",
                Name: "Expanse",
                "Member of": "Starforged/Oracles/Planets/Tainted/Settlements",
                Category: "Starforged/Oracles/Planets/Tainted",
                Display: {
                  Title: "Expanse",
                  "Column of": "Starforged/Oracles/Planets/Tainted/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Tainted/Settlements/Expanse",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Tainted/Settlements/Expanse"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Tainted"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Tainted/Settlements/Expanse/1-95",
                    Floor: 1,
                    Ceiling: 95,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Tainted/Settlements/Expanse/96-98",
                    Floor: 96,
                    Ceiling: 98,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Tainted/Settlements/Expanse/99-100",
                    Floor: 99,
                    Ceiling: 100,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Multiple settlements"
                  },
                  {
                    Floor: null,
                    Ceiling: null,
                    Result: "Settlements in conflict"
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 317
            },
            $id: "Starforged/Oracles/Planets/Tainted/Observed_From_Space",
            Name: "Observed From Space",
            Category: "Starforged/Oracles/Planets/Tainted",
            Display: {
              Title: "Observed From Space",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Tainted/Observed_From_Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Tainted/Observed_From_Space"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Tainted"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Tainted/Observed_From_Space/1-11",
                Floor: 1,
                Ceiling: 11,
                Result: "Expansive fungal plains"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Observed_From_Space/12-22",
                Floor: 12,
                Ceiling: 22,
                Result: "Stagnant cloud cover"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Observed_From_Space/23-33",
                Floor: 23,
                Ceiling: 33,
                Result: "Fungal forests"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Observed_From_Space/34-44",
                Floor: 34,
                Ceiling: 44,
                Result: "Thick, murky atmosphere"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Observed_From_Space/45-55",
                Floor: 45,
                Ceiling: 55,
                Result: "Scabrous, infected terrain"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Observed_From_Space/56-66",
                Floor: 56,
                Ceiling: 66,
                Result: "Toxic seas"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Observed_From_Space/67-77",
                Floor: 67,
                Ceiling: 77,
                Result: "Sky-breaching fungus"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Observed_From_Space/78-88",
                Floor: 78,
                Ceiling: 88,
                Result: "Sludge-filled river networks"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Observed_From_Space/89-98",
                Floor: 89,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Observed_From_Space/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (orbital)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Orbital"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 317
            },
            $id: "Starforged/Oracles/Planets/Tainted/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Planets/Tainted",
            Display: {
              Title: "Planetside Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Tainted/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Tainted/Feature"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Tainted"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/1-7",
                Floor: 1,
                Ceiling: 7,
                Result: "Caustic gas storms"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/8-14",
                Floor: 8,
                Ceiling: 14,
                Result: "Corrosive, low-lying fog"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/15-21",
                Floor: 15,
                Ceiling: 21,
                Result: "Fungus-encrusted caves"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/22-28",
                Floor: 22,
                Ceiling: 28,
                Result: "Gelatinous ponds"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/29-35",
                Floor: 29,
                Ceiling: 35,
                Result: "Hallucinogenic toxins"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/36-42",
                Floor: 36,
                Ceiling: 42,
                Result: "Layers of fast-growing lichen"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/43-49",
                Floor: 43,
                Ceiling: 49,
                Result: "Moldering bones"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/50-56",
                Floor: 50,
                Ceiling: 56,
                Result: "Mutated flora"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/57-63",
                Floor: 57,
                Ceiling: 63,
                Result: "Poisonous gas vents"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/64-70",
                Floor: 64,
                Ceiling: 70,
                Result: "Spore clouds"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/71-77",
                Floor: 71,
                Ceiling: 77,
                Result: "Terrain marred by fleshy pustules"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/78-84",
                Floor: 78,
                Ceiling: 84,
                Result: "Toxic rain"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/85-91",
                Floor: 85,
                Ceiling: 91,
                Result: "Virulent fungal infestations"
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/92-98",
                Floor: 92,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Feature/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (planetside)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Planetside"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 317
            },
            $id: "Starforged/Oracles/Planets/Tainted/Life",
            Name: "Life",
            Category: "Starforged/Oracles/Planets/Tainted",
            Display: {
              Title: "Life",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Tainted/Life",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Tainted/Life"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Tainted"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Life" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              { Floor: null, Ceiling: null, Result: "None" },
              { Floor: null, Ceiling: null, Result: "Extinct" },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Life/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Scarce",
                Attributes: [{ Key: "Life", Value: "Scarce" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Life/11-35",
                Floor: 11,
                Ceiling: 35,
                Result: "Diverse",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Diverse" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Life/36-65",
                Floor: 36,
                Ceiling: 65,
                Result: "Bountiful",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Bountiful" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Tainted/Life/66-100",
                Floor: 66,
                Ceiling: 100,
                Result: "Overrun",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Overrun" }]
              }
            ]
          }
        ],
        "Sample Names": [
          "Achlys",
          "Animus",
          "Bane",
          "Blight",
          "Carrion",
          "Chitin",
          "Datura",
          "Dreck",
          "Erra",
          "Febris",
          "Malacia",
          "Miasma",
          "Morbus",
          "Pathosis",
          "Pestis",
          "Scourge",
          "Telium",
          "Timoris",
          "Verus",
          "Xanthous"
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 318
        },
        $id: "Starforged/Oracles/Planets/Vital",
        Name: "Vital",
        Aliases: ["Vital Planet"],
        Category: "Starforged/Oracles/Planets",
        Description: "This diverse, life-bearing planet might provide some small measure of hope.",
        Display: {
          Title: "Vital World",
          Images: [
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Vital-01.webp",
            "https://raw.githubusercontent.com/rsek/dataforged/main/img/raster/webp/planet/Starforged-Planet-Token-Vital-02.webp"
          ]
        },
        Usage: {
          Requires: {
            Attributes: [{ Key: "Planetary Class", Values: ["Vital"] }]
          },
          "Allow duplicates": !1
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 318
            },
            $id: "Starforged/Oracles/Planets/Vital/Atmosphere",
            Name: "Atmosphere",
            Category: "Starforged/Oracles/Planets/Vital",
            Display: {
              Title: "Atmosphere",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Atmosphere",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Atmosphere"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Vital"] }
                ]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Atmosphere" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              { Floor: null, Ceiling: null, Result: "None/thin" },
              { Floor: null, Ceiling: null, Result: "Toxic" },
              { Floor: null, Ceiling: null, Result: "Corrosive" },
              {
                $id: "Starforged/Oracles/Planets/Vital/Atmosphere/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Marginal",
                Attributes: [{ Key: "Atmosphere", Value: "Marginal" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Atmosphere/21-50",
                Floor: 21,
                Ceiling: 50,
                Result: "Breathable",
                Attributes: [{ Key: "Atmosphere", Value: "Breathable" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Atmosphere/51-100",
                Floor: 51,
                Ceiling: 100,
                Result: "Ideal",
                Attributes: [{ Key: "Atmosphere", Value: "Ideal" }]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 318
            },
            $id: "Starforged/Oracles/Planets/Vital/Settlements",
            Name: "Settlements",
            Category: "Starforged/Oracles/Planets/Vital",
            Display: {
              Title: "Settlements",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Settlements/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Terminus",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Settlements/Terminus"
                  },
                  {
                    Label: "Outlands",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Settlements/Outlands"
                  },
                  {
                    Label: "Expanse",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Settlements/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [
                  { Key: "Region" },
                  { Key: "Planetary Class", Values: ["Vital"] }
                ]
              },
              "Allow duplicates": !1
            },
            Oracles: [
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 318
                },
                $id: "Starforged/Oracles/Planets/Vital/Settlements/Terminus",
                Name: "Terminus",
                "Member of": "Starforged/Oracles/Planets/Vital/Settlements",
                Category: "Starforged/Oracles/Planets/Vital",
                Display: {
                  Title: "Terminus",
                  "Column of": "Starforged/Oracles/Planets/Vital/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Vital/Settlements/Terminus",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Vital/Settlements/Terminus"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Vital"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Terminus/1-20",
                    Floor: 1,
                    Ceiling: 20,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Terminus/21-30",
                    Floor: 21,
                    Ceiling: 30,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Terminus/31-70",
                    Floor: 31,
                    Ceiling: 70,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Terminus/71-90",
                    Floor: 71,
                    Ceiling: 90,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Terminus/91-100",
                    Floor: 91,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 318
                },
                $id: "Starforged/Oracles/Planets/Vital/Settlements/Outlands",
                Name: "Outlands",
                "Member of": "Starforged/Oracles/Planets/Vital/Settlements",
                Category: "Starforged/Oracles/Planets/Vital",
                Display: {
                  Title: "Outlands",
                  "Column of": "Starforged/Oracles/Planets/Vital/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Vital/Settlements/Outlands",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Vital/Settlements/Outlands"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Vital"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Outlands/1-50",
                    Floor: 1,
                    Ceiling: 50,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Outlands/51-55",
                    Floor: 51,
                    Ceiling: 55,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Outlands/56-85",
                    Floor: 56,
                    Ceiling: 85,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Outlands/86-95",
                    Floor: 86,
                    Ceiling: 95,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Outlands/96-100",
                    Floor: 96,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                Source: {
                  Title: "Ironsworn: Starforged Rulebook",
                  Authors: ["Shawn Tomkin"],
                  Date: "050622",
                  Page: 318
                },
                $id: "Starforged/Oracles/Planets/Vital/Settlements/Expanse",
                Name: "Expanse",
                "Member of": "Starforged/Oracles/Planets/Vital/Settlements",
                Category: "Starforged/Oracles/Planets/Vital",
                Display: {
                  Title: "Expanse",
                  "Column of": "Starforged/Oracles/Planets/Vital/Settlements",
                  Table: {
                    "Result columns": [
                      {
                        Label: "Result",
                        "Use content from": "Starforged/Oracles/Planets/Vital/Settlements/Expanse",
                        Key: "Result"
                      }
                    ],
                    "Roll columns": [
                      {
                        Label: "Roll",
                        "Use content from": "Starforged/Oracles/Planets/Vital/Settlements/Expanse"
                      }
                    ]
                  }
                },
                Usage: {
                  Initial: !0,
                  Requires: {
                    Attributes: [
                      { Key: "Region" },
                      { Key: "Planetary Class", Values: ["Vital"] }
                    ]
                  },
                  "Allow duplicates": !1
                },
                Table: [
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Expanse/1-80",
                    Floor: 1,
                    Ceiling: 80,
                    Result: "None"
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Expanse/81-83",
                    Floor: 81,
                    Ceiling: 83,
                    Result: "Orbital settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Orbital"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Expanse/84-93",
                    Floor: 84,
                    Ceiling: 93,
                    Result: "Planetside settlement",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            { Key: "Location", Values: ["Planetside"] }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Expanse/94-98",
                    Floor: 94,
                    Ceiling: 98,
                    Result: "Multiple settlements",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    $id: "Starforged/Oracles/Planets/Vital/Settlements/Expanse/99-100",
                    Floor: 99,
                    Ceiling: 100,
                    Result: "Settlements in conflict",
                    "Game objects": [
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      },
                      {
                        "Object type": "Settlement",
                        Requires: {
                          Attributes: [
                            {
                              Key: "Location",
                              Values: ["Planetside", "Orbital"]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 318
            },
            $id: "Starforged/Oracles/Planets/Vital/Observed_From_Space",
            Name: "Observed From Space",
            Category: "Starforged/Oracles/Planets/Vital",
            Display: {
              Title: "Observed From Space",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Observed_From_Space",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Observed_From_Space"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Vital"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Vital/Observed_From_Space/1-11",
                Floor: 1,
                Ceiling: 11,
                Result: "Complex ring system"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Observed_From_Space/12-22",
                Floor: 12,
                Ceiling: 22,
                Result: "Numerous small moons"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Observed_From_Space/23-33",
                Floor: 23,
                Ceiling: 33,
                Result: "Dramatic seasonal variation"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Observed_From_Space/34-44",
                Floor: 34,
                Ceiling: 44,
                Result: "Unusual day or night cycle"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Observed_From_Space/45-55",
                Floor: 45,
                Ceiling: 55,
                Result: "High gravity"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Observed_From_Space/56-66",
                Floor: 56,
                Ceiling: 66,
                Result: "Vibrantly colored landscapes"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Observed_From_Space/67-77",
                Floor: 67,
                Ceiling: 77,
                Result: "Large moon"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Observed_From_Space/78-88",
                Floor: 78,
                Ceiling: 88,
                Result: "Narrow livable band"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Observed_From_Space/89-98",
                Floor: 89,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Observed_From_Space/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (orbital)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Orbital"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 318
            },
            $id: "Starforged/Oracles/Planets/Vital/Diversity",
            Name: "Diversity",
            Category: "Starforged/Oracles/Planets/Vital",
            Description: "To learn the major terrain and environment types found on a Vital World, first roll on the diversity table. Then, roll the indicated number of times on the biomes table. If you get a duplicate result, roll again, or envision that landscape as more dominant, unusual, or dramatic.",
            Display: {
              Title: "Diversity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Diversity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Diversity"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Vital"] }
                ]
              },
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Vital/Diversity/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Simple (two biomes)",
                "Oracle rolls": [
                  "Starforged/Oracles/Planets/Vital/Biomes",
                  "Starforged/Oracles/Planets/Vital/Biomes"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Diversity/21-70",
                Floor: 21,
                Ceiling: 70,
                Result: "Diverse (three biomes)",
                "Oracle rolls": [
                  "Starforged/Oracles/Planets/Vital/Biomes",
                  "Starforged/Oracles/Planets/Vital/Biomes",
                  "Starforged/Oracles/Planets/Vital/Biomes"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Diversity/71-90",
                Floor: 71,
                Ceiling: 90,
                Result: "Complex (four biomes)",
                "Oracle rolls": [
                  "Starforged/Oracles/Planets/Vital/Biomes",
                  "Starforged/Oracles/Planets/Vital/Biomes",
                  "Starforged/Oracles/Planets/Vital/Biomes",
                  "Starforged/Oracles/Planets/Vital/Biomes"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Diversity/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Garden world (five or more biomes)",
                "Oracle rolls": [
                  "Starforged/Oracles/Planets/Vital/Biomes",
                  "Starforged/Oracles/Planets/Vital/Biomes",
                  "Starforged/Oracles/Planets/Vital/Biomes",
                  "Starforged/Oracles/Planets/Vital/Biomes",
                  "Starforged/Oracles/Planets/Vital/Biomes"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 318
            },
            $id: "Starforged/Oracles/Planets/Vital/Biomes",
            Name: "Biomes",
            Category: "Starforged/Oracles/Planets/Vital",
            Description: "To learn the major terrain and environment types found on a Vital World, first roll on the diversity table. Then, roll the indicated number of times on the biomes table. If you get a duplicate result, roll again, or envision that landscape as more dominant, unusual, or dramatic.",
            Display: {
              Title: "Biomes",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Biomes",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Biomes"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Vital"] }
                ]
              },
              "Allow duplicates": !0
            },
            Content: { "Part of speech": ["noun", "common noun"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/1-5",
                Floor: 1,
                Ceiling: 5,
                Result: "Caves"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/6-10",
                Floor: 6,
                Ceiling: 10,
                Result: "Cold forest"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/11-15",
                Floor: 11,
                Ceiling: 15,
                Result: "Fungal"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/16-20",
                Floor: 16,
                Ceiling: 20,
                Result: "Glacial or snow"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/21-25",
                Floor: 21,
                Ceiling: 25,
                Result: "Grassland"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/26-30",
                Floor: 26,
                Ceiling: 30,
                Result: "Islands"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/31-35",
                Floor: 31,
                Ceiling: 35,
                Result: "Jungle"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/36-40",
                Floor: 36,
                Ceiling: 40,
                Result: "Mountainous"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/41-45",
                Floor: 41,
                Ceiling: 45,
                Result: "Ocean"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/46-50",
                Floor: 46,
                Ceiling: 50,
                Result: "Rocky desert"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/51-55",
                Floor: 51,
                Ceiling: 55,
                Result: "Sandy desert"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/56-60",
                Floor: 56,
                Ceiling: 60,
                Result: "Savanna"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/61-65",
                Floor: 61,
                Ceiling: 65,
                Result: "Shallow seas"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/66-70",
                Floor: 66,
                Ceiling: 70,
                Result: "Shrubland"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/71-75",
                Floor: 71,
                Ceiling: 75,
                Result: "Temperate rainforest"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/76-80",
                Floor: 76,
                Ceiling: 80,
                Result: "Temperate forest"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "Tundra"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "Volcanic"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/91-95",
                Floor: 91,
                Ceiling: 95,
                Result: "Waterways"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Biomes/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "Wetland"
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 318
            },
            $id: "Starforged/Oracles/Planets/Vital/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Planets/Vital",
            Display: {
              Title: "Planetside Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Feature"
                  }
                ]
              }
            },
            Usage: {
              "Max rolls": 2,
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Vital"] }
                ]
              },
              "Allow duplicates": !0
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/1-7",
                Floor: 1,
                Ceiling: 7,
                Result: "Background radiation"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/8-14",
                Floor: 8,
                Ceiling: 14,
                Result: "Chaotically juxtaposed biomes"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/15-21",
                Floor: 15,
                Ceiling: 21,
                Result: "Creature boneyards"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/22-28",
                Floor: 22,
                Ceiling: 28,
                Result: "Creature lairs or watering holes"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/29-35",
                Floor: 29,
                Ceiling: 35,
                Result: "Crystalline formations"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/36-42",
                Floor: 36,
                Ceiling: 42,
                Result: "Fierce electrical storms"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/43-49",
                Floor: 43,
                Ceiling: 49,
                Result: "Floating terrain"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/50-56",
                Floor: 50,
                Ceiling: 56,
                Result: "Frequent seismic activity"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/57-63",
                Floor: 57,
                Ceiling: 63,
                Result: "Magnetic disturbances"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/64-70",
                Floor: 64,
                Ceiling: 70,
                Result: "Scarred or excavated terrain"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/71-77",
                Floor: 71,
                Ceiling: 77,
                Result: "Signs of an engineered biosphere"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/78-84",
                Floor: 78,
                Ceiling: 84,
                Result: "Sudden weather fluctuations"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/85-91",
                Floor: 85,
                Ceiling: 91,
                Result: "Towering geological formations"
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/92-98",
                Floor: 92,
                Ceiling: 98,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Feature/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "[\u23F5Precursor Vault (planetside)](Starforged/Oracles/Vaults)",
                "Game objects": [
                  {
                    "Object type": "Precursor Vault",
                    Requires: {
                      Attributes: [
                        { Key: "Location", Values: ["Planetside"] }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 318
            },
            $id: "Starforged/Oracles/Planets/Vital/Life",
            Name: "Life",
            Category: "Starforged/Oracles/Planets/Vital",
            Display: {
              Title: "Life",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Life",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Planets/Vital/Life"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [
                  { Key: "Planetary Class", Values: ["Vital"] }
                ]
              },
              "Allow duplicates": !0,
              Sets: [{ Key: "Life" }]
            },
            Content: { "Part of speech": ["adjective"] },
            Table: [
              { Floor: null, Ceiling: null, Result: "None" },
              { Floor: null, Ceiling: null, Result: "Extinct" },
              {
                $id: "Starforged/Oracles/Planets/Vital/Life/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Scarce",
                Attributes: [{ Key: "Life", Value: "Scarce" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Life/11-45",
                Floor: 11,
                Ceiling: 45,
                Result: "Diverse",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Diverse" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Life/46-85",
                Floor: 46,
                Ceiling: 85,
                Result: "Bountiful",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Bountiful" }]
              },
              {
                $id: "Starforged/Oracles/Planets/Vital/Life/86-100",
                Floor: 86,
                Ceiling: 100,
                Result: "Overrun",
                Suggestions: {
                  "Game objects": [{ "Object type": "Creature" }]
                },
                Attributes: [{ Key: "Life", Value: "Overrun" }]
              }
            ]
          }
        ],
        "Sample Names": [
          "Chiron",
          "Demeter",
          "Erebos",
          "Erembour",
          "Feronia",
          "Fortuna",
          "Gaia",
          "Harbinger",
          "Haven",
          "Hope",
          "Morpheus",
          "Nemus",
          "Sapphire",
          "Serenity",
          "Sif",
          "Silva",
          "Sirona",
          "Solstice",
          "Vale",
          "Valinor"
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Oracles/Settlements",
    Name: "Settlements",
    Display: { Title: "Settlements" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 322
        },
        $id: "Starforged/Oracles/Settlements/Location",
        Name: "Location",
        Category: "Starforged/Oracles/Settlements",
        Display: {
          Title: "Location",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Settlements/Location",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Settlements/Location"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Allow duplicates": !1,
          Sets: [{ Key: "Location" }]
        },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Settlements/Location/1-40",
            Floor: 1,
            Ceiling: 40,
            Result: "Planetside",
            Attributes: [{ Key: "Location", Value: "Planetside" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Location/41-75",
            Floor: 41,
            Ceiling: 75,
            Result: "Orbital",
            Attributes: [{ Key: "Location", Value: "Orbital" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Location/76-100",
            Floor: 76,
            Ceiling: 100,
            Result: "Deep Space",
            Attributes: [{ Key: "Location", Value: "Deep Space" }]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 322
        },
        $id: "Starforged/Oracles/Settlements/Population",
        Name: "Population",
        Category: "Starforged/Oracles/Settlements",
        Display: {
          Title: "Population",
          Table: {
            "Result columns": [
              {
                Label: "Number",
                "Use content from": "Starforged/Oracles/Settlements/Population/Terminus",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Terminus",
                "Use content from": "Starforged/Oracles/Settlements/Population/Terminus"
              },
              {
                Label: "Outlands",
                "Use content from": "Starforged/Oracles/Settlements/Population/Outlands"
              },
              {
                Label: "Expanse",
                "Use content from": "Starforged/Oracles/Settlements/Population/Expanse"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          Requires: { Attributes: [{ Key: "Region" }] },
          "Allow duplicates": !1,
          Sets: [{ Key: "Population" }]
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 322
            },
            $id: "Starforged/Oracles/Settlements/Population/Terminus",
            Name: "Terminus",
            "Member of": "Starforged/Oracles/Settlements/Population",
            Category: "Starforged/Oracles/Settlements",
            Display: {
              Title: "Terminus",
              "Column of": "Starforged/Oracles/Settlements/Population",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Settlements/Population/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Settlements/Population/Terminus"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [{ Key: "Region", Values: ["Terminus"] }]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Population" }]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Settlements/Population/Terminus/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Few",
                Attributes: [{ Key: "Population", Value: "Few" }]
              },
              {
                $id: "Starforged/Oracles/Settlements/Population/Terminus/11-25",
                Floor: 11,
                Ceiling: 25,
                Result: "Dozens",
                Attributes: [{ Key: "Population", Value: "Dozens" }]
              },
              {
                $id: "Starforged/Oracles/Settlements/Population/Terminus/26-55",
                Floor: 26,
                Ceiling: 55,
                Result: "Hundreds",
                Attributes: [{ Key: "Population", Value: "Hundreds" }]
              },
              {
                $id: "Starforged/Oracles/Settlements/Population/Terminus/56-85",
                Floor: 56,
                Ceiling: 85,
                Result: "Thousands",
                Attributes: [{ Key: "Population", Value: "Thousands" }]
              },
              {
                $id: "Starforged/Oracles/Settlements/Population/Terminus/86-100",
                Floor: 86,
                Ceiling: 100,
                Result: "Tens of thousands",
                Attributes: [
                  { Key: "Population", Value: "Tens of thousands" }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 322
            },
            $id: "Starforged/Oracles/Settlements/Population/Outlands",
            Name: "Outlands",
            "Member of": "Starforged/Oracles/Settlements/Population",
            Category: "Starforged/Oracles/Settlements",
            Display: {
              Title: "Outlands",
              "Column of": "Starforged/Oracles/Settlements/Population",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Settlements/Population/Outlands",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Settlements/Population/Outlands"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [{ Key: "Region", Values: ["Outlands"] }]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Population" }]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Settlements/Population/Outlands/1-15",
                Floor: 1,
                Ceiling: 15,
                Result: "Few",
                Attributes: [{ Key: "Population", Value: "Few" }]
              },
              {
                $id: "Starforged/Oracles/Settlements/Population/Outlands/16-35",
                Floor: 16,
                Ceiling: 35,
                Result: "Dozens",
                Attributes: [{ Key: "Population", Value: "Dozens" }]
              },
              {
                $id: "Starforged/Oracles/Settlements/Population/Outlands/36-65",
                Floor: 36,
                Ceiling: 65,
                Result: "Hundreds",
                Attributes: [{ Key: "Population", Value: "Hundreds" }]
              },
              {
                $id: "Starforged/Oracles/Settlements/Population/Outlands/66-90",
                Floor: 66,
                Ceiling: 90,
                Result: "Thousands",
                Attributes: [{ Key: "Population", Value: "Thousands" }]
              },
              {
                $id: "Starforged/Oracles/Settlements/Population/Outlands/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Tens of thousands",
                Attributes: [
                  { Key: "Population", Value: "Tens of thousands" }
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 322
            },
            $id: "Starforged/Oracles/Settlements/Population/Expanse",
            Name: "Expanse",
            "Member of": "Starforged/Oracles/Settlements/Population",
            Category: "Starforged/Oracles/Settlements",
            Display: {
              Title: "Expanse",
              "Column of": "Starforged/Oracles/Settlements/Population",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Settlements/Population/Expanse",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Settlements/Population/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Requires: {
                Attributes: [{ Key: "Region", Values: ["Expanse"] }]
              },
              "Allow duplicates": !1,
              Sets: [{ Key: "Population" }]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Settlements/Population/Expanse/1-20",
                Floor: 1,
                Ceiling: 20,
                Result: "Few",
                Attributes: [{ Key: "Population", Value: "Few" }]
              },
              {
                $id: "Starforged/Oracles/Settlements/Population/Expanse/21-50",
                Floor: 21,
                Ceiling: 50,
                Result: "Dozens",
                Attributes: [{ Key: "Population", Value: "Dozens" }]
              },
              {
                $id: "Starforged/Oracles/Settlements/Population/Expanse/51-80",
                Floor: 51,
                Ceiling: 80,
                Result: "Hundreds",
                Attributes: [{ Key: "Population", Value: "Hundreds" }]
              },
              {
                $id: "Starforged/Oracles/Settlements/Population/Expanse/81-95",
                Floor: 81,
                Ceiling: 95,
                Result: "Thousands",
                Attributes: [{ Key: "Population", Value: "Thousands" }]
              },
              {
                $id: "Starforged/Oracles/Settlements/Population/Expanse/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "Tens of thousands",
                Attributes: [
                  { Key: "Population", Value: "Tens of thousands" }
                ]
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 323
        },
        $id: "Starforged/Oracles/Settlements/First_Look",
        Name: "First Look",
        Category: "Starforged/Oracles/Settlements",
        Display: {
          Title: "First Look",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Settlements/First_Look",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Settlements/First_Look"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Max rolls": 2,
          "Allow duplicates": !1
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["description"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Settlements/First_Look/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Beautiful architecture"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/4-9",
            Floor: 4,
            Ceiling: 9,
            Result: "Built from organic materials"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/10-15",
            Floor: 10,
            Ceiling: 15,
            Result: "Built from random scrap"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/16-21",
            Floor: 16,
            Ceiling: 21,
            Result: "Built within repurposed ship"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/22-26",
            Floor: 22,
            Ceiling: 26,
            Result: "Built within terrain or asteroid"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/27-31",
            Floor: 27,
            Ceiling: 31,
            Result: "Defensible location"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/32-35",
            Floor: 32,
            Ceiling: 35,
            Result: "Elevated or multi-level construction"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/36-40",
            Floor: 36,
            Ceiling: 40,
            Result: "Hidden or subsurface location"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/41-43",
            Floor: 41,
            Ceiling: 43,
            Result: "High-tech construction"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/44-49",
            Floor: 44,
            Ceiling: 49,
            Result: "Industrial architecture"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/50-53",
            Floor: 50,
            Ceiling: 53,
            Result: "Intimidating defenses"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/54-56",
            Floor: 54,
            Ceiling: 56,
            Result: "Moving or transforming"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/57-61",
            Floor: 57,
            Ceiling: 61,
            Result: "Obvious social stratification"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/62-66",
            Floor: 62,
            Ceiling: 66,
            Result: "Precarious location"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/67-72",
            Floor: 67,
            Ceiling: 72,
            Result: "Rustic architecture"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/73-76",
            Floor: 73,
            Ceiling: 76,
            Result: "Significant structural damage"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/77-80",
            Floor: 77,
            Ceiling: 80,
            Result: "Sprawling or dispersed structures"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/81-83",
            Floor: 81,
            Ceiling: 83,
            Result: "Temporary or seasonal location"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/84-87",
            Floor: 84,
            Ceiling: 87,
            Result: "Toxic or polluted habitat"
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/88-90",
            Floor: 88,
            Ceiling: 90,
            Result: "Within or near [\u23F5Precursor Vault](Starforged/Oracles/Vaults)",
            "Game objects": [{ "Object type": "Precursor Vault" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/First_Look/91-100",
            Floor: 91,
            Ceiling: 100,
            Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Descriptor",
              "Starforged/Oracles/Core/Focus"
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 323
        },
        $id: "Starforged/Oracles/Settlements/Initial_Contact",
        Name: "Initial Contact",
        Category: "Starforged/Oracles/Settlements",
        Display: {
          Title: "Initial Contact",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Settlements/Initial_Contact",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Settlements/Initial_Contact"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Allow duplicates": !1,
          Sets: [{ Key: "Initial Contact" }]
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["description"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Settlements/Initial_Contact/1-20",
            Floor: 1,
            Ceiling: 20,
            Result: "Welcoming",
            Attributes: [{ Key: "Initial Contact", Value: "Welcoming" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Initial_Contact/21-30",
            Floor: 21,
            Ceiling: 30,
            Result: "Neutral / automated",
            Attributes: [
              { Key: "Initial Contact", Value: "Neutral / automated" }
            ]
          },
          {
            $id: "Starforged/Oracles/Settlements/Initial_Contact/31-50",
            Floor: 31,
            Ceiling: 50,
            Result: "Wary",
            Attributes: [{ Key: "Initial Contact", Value: "Wary" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Initial_Contact/51-60",
            Floor: 51,
            Ceiling: 60,
            Result: "Uncooperative",
            Attributes: [
              { Key: "Initial Contact", Value: "Uncooperative" }
            ]
          },
          {
            $id: "Starforged/Oracles/Settlements/Initial_Contact/61-70",
            Floor: 61,
            Ceiling: 70,
            Result: "Hostile",
            Attributes: [{ Key: "Initial Contact", Value: "Hostile" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Initial_Contact/71-83",
            Floor: 71,
            Ceiling: 83,
            Result: "Asking for help",
            Attributes: [
              { Key: "Initial Contact", Value: "Asking for help" }
            ]
          },
          {
            $id: "Starforged/Oracles/Settlements/Initial_Contact/84-86",
            Floor: 84,
            Ceiling: 86,
            Result: "In battle",
            Attributes: [{ Key: "Initial Contact", Value: "In battle" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Initial_Contact/87-89",
            Floor: 87,
            Ceiling: 89,
            Result: "Captured",
            Attributes: [{ Key: "Initial Contact", Value: "Captured" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Initial_Contact/90-92",
            Floor: 90,
            Ceiling: 92,
            Result: "Unresponsive",
            Attributes: [
              { Key: "Initial Contact", Value: "Unresponsive" }
            ]
          },
          {
            $id: "Starforged/Oracles/Settlements/Initial_Contact/93-95",
            Floor: 93,
            Ceiling: 95,
            Result: "Destroyed",
            Attributes: [{ Key: "Initial Contact", Value: "Destroyed" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Initial_Contact/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "[\u23F5Derelict](Starforged/Oracles/Derelicts)",
            "Game objects": [
              {
                "Object type": "Derelict",
                Requires: {
                  Attributes: [
                    { Key: "Derelict Type", Values: ["Settlement"] },
                    { Key: "Initial Contact", Values: ["Derelict"] }
                  ]
                }
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 323
        },
        $id: "Starforged/Oracles/Settlements/Authority",
        Name: "Authority",
        Category: "Starforged/Oracles/Settlements",
        Display: {
          Title: "Authority",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Settlements/Authority",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Settlements/Authority"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Allow duplicates": !1,
          Sets: [{ Key: "Authority" }]
        },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Settlements/Authority/1-15",
            Floor: 1,
            Ceiling: 15,
            Result: "None / lawless",
            Attributes: [{ Key: "Authority", Value: "None / lawless" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Authority/16-30",
            Floor: 16,
            Ceiling: 30,
            Result: "Ineffectual",
            Attributes: [{ Key: "Authority", Value: "Ineffectual" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Authority/31-45",
            Floor: 31,
            Ceiling: 45,
            Result: "Tolerant",
            Attributes: [{ Key: "Authority", Value: "Tolerant" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Authority/46-55",
            Floor: 46,
            Ceiling: 55,
            Result: "Fair",
            Attributes: [{ Key: "Authority", Value: "Fair" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Authority/56-70",
            Floor: 56,
            Ceiling: 70,
            Result: "Unyielding",
            Attributes: [{ Key: "Authority", Value: "Unyielding" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Authority/71-85",
            Floor: 71,
            Ceiling: 85,
            Result: "Corrupt",
            Attributes: [{ Key: "Authority", Value: "Corrupt" }]
          },
          {
            $id: "Starforged/Oracles/Settlements/Authority/86-100",
            Floor: 86,
            Ceiling: 100,
            Result: "Oppressive",
            Attributes: [{ Key: "Authority", Value: "Oppressive" }]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 324
        },
        $id: "Starforged/Oracles/Settlements/Projects",
        Name: "Projects",
        Category: "Starforged/Oracles/Settlements",
        Description: "Check the Settlement Projects table when it\u2019s appropriate for your character to know or uncover these details. Projects are the main industry, function, or focus of a settlement. They do not necessarily represent every activity at the site\u2014particularly at a large settlement\u2014but are the most visible or noteworthy aspects.",
        Display: {
          Title: "Settlement Projects",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Settlements/Projects",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Settlements/Projects"
              }
            ]
          }
        },
        Usage: { "Max rolls": 2, "Allow duplicates": !1 },
        Content: {
          "Part of speech": ["noun", "common noun"],
          Tags: ["abstract noun"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Settlements/Projects/1-5",
            Floor: 1,
            Ceiling: 5,
            Result: "Agriculture"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/6-7",
            Floor: 6,
            Ceiling: 7,
            Result: "Archeology"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/8-9",
            Floor: 8,
            Ceiling: 9,
            Result: "Automation"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/10-11",
            Floor: 10,
            Ceiling: 11,
            Result: "Black market"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/12-13",
            Floor: 12,
            Ceiling: 13,
            Result: "Command"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/14-17",
            Floor: 14,
            Ceiling: 17,
            Result: "Defense"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/18-22",
            Floor: 18,
            Ceiling: 22,
            Result: "Energy"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/23-25",
            Floor: 23,
            Ceiling: 25,
            Result: "Engineering"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/26-27",
            Floor: 26,
            Ceiling: 27,
            Result: "Entertainment"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/28-29",
            Floor: 28,
            Ceiling: 29,
            Result: "Environmentalism"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/30-31",
            Floor: 30,
            Ceiling: 31,
            Result: "Evacuation"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/32-33",
            Floor: 32,
            Ceiling: 33,
            Result: "Expansion"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/34-37",
            Floor: 34,
            Ceiling: 37,
            Result: "Exploration"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/38-39",
            Floor: 38,
            Ceiling: 39,
            Result: "Festival"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/40-41",
            Floor: 40,
            Ceiling: 41,
            Result: "History"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/42-43",
            Floor: 42,
            Ceiling: 43,
            Result: "Hunting"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/44-46",
            Floor: 44,
            Ceiling: 46,
            Result: "Manufacturing"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/47-49",
            Floor: 47,
            Ceiling: 49,
            Result: "Medical"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/50-51",
            Floor: 50,
            Ceiling: 51,
            Result: "Migration"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/52-57",
            Floor: 52,
            Ceiling: 57,
            Result: "Mining"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/58-59",
            Floor: 58,
            Ceiling: 59,
            Result: "Pacifism"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/60-62",
            Floor: 60,
            Ceiling: 62,
            Result: "Raiding"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/63-65",
            Floor: 63,
            Ceiling: 65,
            Result: "Research"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/66-69",
            Floor: 66,
            Ceiling: 69,
            Result: "Salvage"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/70-72",
            Floor: 70,
            Ceiling: 72,
            Result: "Secrecy"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/73-75",
            Floor: 73,
            Ceiling: 75,
            Result: "Shipbuilding"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/76-78",
            Floor: 76,
            Ceiling: 78,
            Result: "Spirituality"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/79-84",
            Floor: 79,
            Ceiling: 84,
            Result: "Subsistence"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/85-86",
            Floor: 85,
            Ceiling: 86,
            Result: "Surveillance"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/87-88",
            Floor: 87,
            Ceiling: 88,
            Result: "Terraforming"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/89-92",
            Floor: 89,
            Ceiling: 92,
            Result: "Trade"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/93-95",
            Floor: 93,
            Ceiling: 95,
            Result: "Warfare"
          },
          {
            $id: "Starforged/Oracles/Settlements/Projects/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Action",
              "Starforged/Oracles/Core/Theme"
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 324
        },
        $id: "Starforged/Oracles/Settlements/Trouble",
        Name: "Trouble",
        Category: "Starforged/Oracles/Settlements",
        Description: "Check the Settlement Trouble table when it\u2019s appropriate for your character to know or uncover these details. The Settlement Trouble table provides a broad description of the site\u2019s most dramatic current issue.",
        Display: {
          Title: "Settlement Trouble",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Settlements/Trouble",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Settlements/Trouble"
              }
            ]
          }
        },
        Usage: { "Max rolls": 2, "Allow duplicates": !1 },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["peril", "event", "present"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Settlements/Trouble/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Battle for leadership",
            Suggestions: { "Game objects": [{ "Object type": "Faction" }] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/4-6",
            Floor: 4,
            Ceiling: 6,
            Result: "Betrayal from within"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/7-8",
            Floor: 7,
            Ceiling: 8,
            Result: "Caught in the crossfire"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/9-11",
            Floor: 9,
            Ceiling: 11,
            Result: "Changing environment"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/12-13",
            Floor: 12,
            Ceiling: 13,
            Result: "Clash of cultures",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/14-17",
            Floor: 14,
            Ceiling: 17,
            Result: "Dangerous discovery",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/18-21",
            Floor: 18,
            Ceiling: 21,
            Result: "Depleted supplies",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/22-24",
            Floor: 22,
            Ceiling: 24,
            Result: "Deprived of a resource",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/25-28",
            Floor: 25,
            Ceiling: 28,
            Result: "Failing technology",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/29-32",
            Floor: 29,
            Ceiling: 32,
            Result: "Feuding factions"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/33-34",
            Floor: 33,
            Ceiling: 34,
            Result: "Ghostly visitations"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/35-38",
            Floor: 35,
            Ceiling: 38,
            Result: "Hazardous environment",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/39-42",
            Floor: 39,
            Ceiling: 42,
            Result: "Hostile lifeforms",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/43-45",
            Floor: 43,
            Ceiling: 45,
            Result: "Impassable route"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/46-48",
            Floor: 46,
            Ceiling: 48,
            Result: "Impending attack"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/49-51",
            Floor: 49,
            Ceiling: 51,
            Result: "Impending natural disaster",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/52-53",
            Floor: 52,
            Ceiling: 53,
            Result: "Invasive organisms"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/54-55",
            Floor: 54,
            Ceiling: 55,
            Result: "Mounting debt"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/56-57",
            Floor: 56,
            Ceiling: 57,
            Result: "Mysterious deaths"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/58-60",
            Floor: 58,
            Ceiling: 60,
            Result: "Overdue delivery"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/61-62",
            Floor: 61,
            Ceiling: 62,
            Result: "Plagued by sickness"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/63-65",
            Floor: 63,
            Ceiling: 65,
            Result: "Preyed upon by raiders"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/66-67",
            Floor: 66,
            Ceiling: 67,
            Result: "Revolt against leadership",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/68-69",
            Floor: 68,
            Ceiling: 69,
            Result: "Sabotaged technology",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/70-71",
            Floor: 70,
            Ceiling: 71,
            Result: "Shunned by others"
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/72-74",
            Floor: 72,
            Ceiling: 74,
            Result: "Social strife",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/75-76",
            Floor: 75,
            Ceiling: 76,
            Result: "Someone is ill or injured",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/77-78",
            Floor: 77,
            Ceiling: 78,
            Result: "Someone is missing",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/79-80",
            Floor: 79,
            Ceiling: 80,
            Result: "Stolen technology or object",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/81-83",
            Floor: 81,
            Ceiling: 83,
            Result: "Strange phenomenon",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Action",
                "Starforged/Oracles/Core/Theme"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/84-86",
            Floor: 84,
            Ceiling: 86,
            Result: "Toxic waste or pollution",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/87-88",
            Floor: 87,
            Ceiling: 88,
            Result: "Volatile energy source",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/89-90",
            Floor: 89,
            Ceiling: 90,
            Result: "Vulnerable lifeforms",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Trouble/91-100",
            Floor: 91,
            Ceiling: 100,
            Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Action",
              "Starforged/Oracles/Core/Theme"
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 325
        },
        $id: "Starforged/Oracles/Settlements/Name",
        Name: "Name",
        Category: "Starforged/Oracles/Settlements",
        Description: "Choose a name appropriate to the nature of the settlement, or roll for a random result. You can let the name stand alone, or pair it with one of the following tags: Base, Citadel, Depot, Fortress, Hold, Landing, Outpost, Port, Station, Terminal.",
        Display: {
          Title: "Settlement Name",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Settlements/Name",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Settlements/Name"
              }
            ]
          }
        },
        Usage: { Initial: !0, "Allow duplicates": !1 },
        Content: { "Part of speech": ["proper noun"], Tags: ["name"] },
        Table: [
          {
            $id: "Starforged/Oracles/Settlements/Name/1",
            Floor: 1,
            Ceiling: 1,
            Result: "Aegis"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/2",
            Floor: 2,
            Ceiling: 2,
            Result: "Altair",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/3",
            Floor: 3,
            Ceiling: 3,
            Result: "Altura",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/4",
            Floor: 4,
            Ceiling: 4,
            Result: "Amity"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/5",
            Floor: 5,
            Ceiling: 5,
            Result: "Apex"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/6",
            Floor: 6,
            Ceiling: 6,
            Result: "Apogee"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/7",
            Floor: 7,
            Ceiling: 7,
            Result: "Argosy"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/8",
            Floor: 8,
            Ceiling: 8,
            Result: "Astra",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/9",
            Floor: 9,
            Ceiling: 9,
            Result: "Aurora"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/10",
            Floor: 10,
            Ceiling: 10,
            Result: "Beacon"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/11",
            Floor: 11,
            Ceiling: 11,
            Result: "Brink"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/12",
            Floor: 12,
            Ceiling: 12,
            Result: "Bulwark"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/13",
            Floor: 13,
            Ceiling: 13,
            Result: "Burnell",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/14",
            Floor: 14,
            Ceiling: 14,
            Result: "Burrow"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/15",
            Floor: 15,
            Ceiling: 15,
            Result: "Concord"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/16",
            Floor: 16,
            Ceiling: 16,
            Result: "Crux"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/17",
            Floor: 17,
            Ceiling: 17,
            Result: "Deadrock",
            Content: { "Part of speech": ["compound noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/18",
            Floor: 18,
            Ceiling: 18,
            Result: "Deception"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/19",
            Floor: 19,
            Ceiling: 19,
            Result: "Elysium"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/20",
            Floor: 20,
            Ceiling: 20,
            Result: "Enigma"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/21",
            Floor: 21,
            Ceiling: 21,
            Result: "Erebus",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/22",
            Floor: 22,
            Ceiling: 22,
            Result: "Eris",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/23",
            Floor: 23,
            Ceiling: 23,
            Result: "Evenfall"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/24",
            Floor: 24,
            Ceiling: 24,
            Result: "Eventide"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/25",
            Floor: 25,
            Ceiling: 25,
            Result: "Farpoint",
            Content: { "Part of speech": ["compound noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/26",
            Floor: 26,
            Ceiling: 26,
            Result: "Felicity"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/27",
            Floor: 27,
            Ceiling: 27,
            Result: "Florin",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/28",
            Floor: 28,
            Ceiling: 28,
            Result: "Forlorn"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/29",
            Floor: 29,
            Ceiling: 29,
            Result: "Forsaken"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/30",
            Floor: 30,
            Ceiling: 30,
            Result: "Freya",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/31",
            Floor: 31,
            Ceiling: 31,
            Result: "Glimmer"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/32",
            Floor: 32,
            Ceiling: 32,
            Result: "Gloam"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/33",
            Floor: 33,
            Ceiling: 33,
            Result: "Hearth"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/34",
            Floor: 34,
            Ceiling: 34,
            Result: "Helia",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/35",
            Floor: 35,
            Ceiling: 35,
            Result: "Hypatia",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/36",
            Floor: 36,
            Ceiling: 36,
            Result: "Hyperion",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/37",
            Floor: 37,
            Ceiling: 37,
            Result: "Janus",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/38",
            Floor: 38,
            Ceiling: 38,
            Result: "Karma"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/39",
            Floor: 39,
            Ceiling: 39,
            Result: "Kepler",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/40",
            Floor: 40,
            Ceiling: 40,
            Result: "Koshiba",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/41",
            Floor: 41,
            Ceiling: 41,
            Result: "Lagrange",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/42",
            Floor: 42,
            Ceiling: 42,
            Result: "Larissa",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/43",
            Floor: 43,
            Ceiling: 43,
            Result: "Lasthope",
            Content: { "Part of speech": ["compound noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/44",
            Floor: 44,
            Ceiling: 44,
            Result: "Lastport",
            Content: { "Part of speech": ["compound noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/45",
            Floor: 45,
            Ceiling: 45,
            Result: "Legacy"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/46",
            Floor: 46,
            Ceiling: 46,
            Result: "Lodestar"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/47",
            Floor: 47,
            Ceiling: 47,
            Result: "Luminus",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/48",
            Floor: 48,
            Ceiling: 48,
            Result: "Lyra",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/49",
            Floor: 49,
            Ceiling: 49,
            Result: "Marrow"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/50",
            Floor: 50,
            Ceiling: 50,
            Result: "Meridian"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/51",
            Floor: 51,
            Ceiling: 51,
            Result: "Moirai",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/52",
            Floor: 52,
            Ceiling: 52,
            Result: "Mudd",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/53",
            Floor: 53,
            Ceiling: 53,
            Result: "Neoma",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/54",
            Floor: 54,
            Ceiling: 54,
            Result: "Nerio",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/55",
            Floor: 55,
            Ceiling: 55,
            Result: "Nova"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/56",
            Floor: 56,
            Ceiling: 56,
            Result: "Nyx",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/57",
            Floor: 57,
            Ceiling: 57,
            Result: "Osseus",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/58",
            Floor: 58,
            Ceiling: 58,
            Result: "Paradox"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/59",
            Floor: 59,
            Ceiling: 59,
            Result: "Paragon"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/60",
            Floor: 60,
            Ceiling: 60,
            Result: "Paxton",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/61",
            Floor: 61,
            Ceiling: 61,
            Result: "Perchance"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/62",
            Floor: 62,
            Ceiling: 62,
            Result: "Pinnacle"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/63",
            Floor: 63,
            Ceiling: 63,
            Result: "Polaris"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/64",
            Floor: 64,
            Ceiling: 64,
            Result: "Portent"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/65",
            Floor: 65,
            Ceiling: 65,
            Result: "Prism"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/66",
            Floor: 66,
            Ceiling: 66,
            Result: "Providence"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/67",
            Floor: 67,
            Ceiling: 67,
            Result: "Purgatory"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/68",
            Floor: 68,
            Ceiling: 68,
            Result: "Rampart"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/69",
            Floor: 69,
            Ceiling: 69,
            Result: "Ramshackle"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/70",
            Floor: 70,
            Ceiling: 70,
            Result: "Redemption"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/71",
            Floor: 71,
            Ceiling: 71,
            Result: "Redhaven",
            Content: { "Part of speech": ["compound noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/72",
            Floor: 72,
            Ceiling: 72,
            Result: "Relic"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/73",
            Floor: 73,
            Ceiling: 73,
            Result: "Reprise"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/74",
            Floor: 74,
            Ceiling: 74,
            Result: "Reverie"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/75",
            Floor: 75,
            Ceiling: 75,
            Result: "Rhiannon",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/76",
            Floor: 76,
            Ceiling: 76,
            Result: "Rockhome"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/77",
            Floor: 77,
            Ceiling: 77,
            Result: "Rust"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/78",
            Floor: 78,
            Ceiling: 78,
            Result: "Sagan",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/79",
            Floor: 79,
            Ceiling: 79,
            Result: "Sanctity"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/80",
            Floor: 80,
            Ceiling: 80,
            Result: "Selena",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/81",
            Floor: 81,
            Ceiling: 81,
            Result: "Sepulcher"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/82",
            Floor: 82,
            Ceiling: 82,
            Result: "Sigil"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/83",
            Floor: 83,
            Ceiling: 83,
            Result: "Silvana",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/84",
            Floor: 84,
            Ceiling: 84,
            Result: "Sirius",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/85",
            Floor: 85,
            Ceiling: 85,
            Result: "Sisyphus",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/86",
            Floor: 86,
            Ceiling: 86,
            Result: "Solitude"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/87",
            Floor: 87,
            Ceiling: 87,
            Result: "Spire"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/88",
            Floor: 88,
            Ceiling: 88,
            Result: "Starfall",
            Content: { "Part of speech": ["compound noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/89",
            Floor: 89,
            Ceiling: 89,
            Result: "Summit"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/90",
            Floor: 90,
            Ceiling: 90,
            Result: "Tranquility"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/91",
            Floor: 91,
            Ceiling: 91,
            Result: "Tyson",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/92",
            Floor: 92,
            Ceiling: 92,
            Result: "Unity"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/93",
            Floor: 93,
            Ceiling: 93,
            Result: "Utopia"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/94",
            Floor: 94,
            Ceiling: 94,
            Result: "Vega",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/95",
            Floor: 95,
            Ceiling: 95,
            Result: "Vesper"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/96",
            Floor: 96,
            Ceiling: 96,
            Result: "Wayward"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/97",
            Floor: 97,
            Ceiling: 97,
            Result: "Welkin"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/98",
            Floor: 98,
            Ceiling: 98,
            Result: "Wellspring"
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/99",
            Floor: 99,
            Ceiling: 99,
            Result: "Weyland",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Settlements/Name/100",
            Floor: 100,
            Ceiling: 100,
            Result: "Wreck"
          }
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Oracles/Space",
    Name: "Space",
    Display: { Title: "Space Encounters" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 300
        },
        $id: "Starforged/Oracles/Space/Sighting",
        Name: "Sighting",
        Category: "Starforged/Oracles/Space",
        Description: "Use the Space Sightings oracle to introduce a location or encounter on a spaceborne expedition. For example, roll on this table when you [Ask the Oracle](Starforged/Moves/Fate/Ask_the_Oracle) to envision the primary feature of a waypoint as you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition). Check your result by referencing the column for your current location: Terminus, Outlands, or Expanse.",
        Display: {
          Title: "Space Sighting",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Space/Sighting/Terminus",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Terminus",
                "Use content from": "Starforged/Oracles/Space/Sighting/Terminus"
              },
              {
                Label: "Outlands",
                "Use content from": "Starforged/Oracles/Space/Sighting/Outlands"
              },
              {
                Label: "Expanse",
                "Use content from": "Starforged/Oracles/Space/Sighting/Expanse"
              }
            ]
          }
        },
        Usage: {
          Repeatable: !0,
          Requires: { Attributes: [{ Key: "Region" }] },
          "Allow duplicates": !0
        },
        Content: { "Part of speech": ["fragment"] },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 300
            },
            $id: "Starforged/Oracles/Space/Sighting/Terminus",
            Name: "Terminus",
            "Member of": "Starforged/Oracles/Space/Sighting",
            Category: "Starforged/Oracles/Space",
            Display: {
              Title: "Terminus",
              "Column of": "Starforged/Oracles/Space/Sighting",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Space/Sighting/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Space/Sighting/Terminus"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Region", Values: ["Terminus"] }]
              },
              "Allow duplicates": !0
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/1-15",
                Floor: 1,
                Ceiling: 15,
                Result: "[\u23F5Stellar Object](Starforged/Oracles/Space/Stellar_Object)",
                "Oracle rolls": ["Starforged/Oracles/Space/Stellar_Object"]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/16-35",
                Floor: 16,
                Ceiling: 35,
                Result: "[\u23F5Planet](Starforged/Oracles/Planets)",
                "Game objects": [{ "Object type": "Planet" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/36-40",
                Floor: 36,
                Ceiling: 40,
                Result: "[\u23F5Settlement](Starforged/Oracles/Settlements)",
                "Game objects": [{ "Object type": "Settlement" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/41-47",
                Floor: 41,
                Ceiling: 47,
                Result: "[\u23F5Starship](Starforged/Oracles/Starships)",
                "Game objects": [{ "Object type": "Starship" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/48-51",
                Floor: 48,
                Ceiling: 51,
                Result: "[\u23F5Derelict](Starforged/Oracles/Derelicts)",
                "Game objects": [
                  {
                    "Object type": "Derelict",
                    Requires: {
                      Attributes: [
                        { Key: "Initial Contact", Values: ["Derelict"] }
                      ]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/52-53",
                Floor: 52,
                Ceiling: 53,
                Result: "[\u23F5Precursor Vault](Starforged/Oracles/Vaults)",
                "Game objects": [{ "Object type": "Precursor Vault" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/54-55",
                Floor: 54,
                Ceiling: 55,
                Result: "[\u23F5Creature](Starforged/Oracles/Creatures)",
                "Game objects": [{ "Object type": "Creature" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/56-60",
                Floor: 56,
                Ceiling: 60,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/61-65",
                Floor: 61,
                Ceiling: 65,
                Result: "Debris field: Mineral asteroids"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/66-68",
                Floor: 66,
                Ceiling: 68,
                Result: "Debris field: Frozen asteroids"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/69-70",
                Floor: 69,
                Ceiling: 70,
                Result: "Debris field: Crystalline asteroids"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/71-72",
                Floor: 71,
                Ceiling: 72,
                Result: "Debris field: Creature boneyard"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/73-74",
                Floor: 73,
                Ceiling: 74,
                Result: "Debris field: Metallic wreckage"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/75-76",
                Floor: 75,
                Ceiling: 76,
                Result: "Large rogue asteroid"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/77-78",
                Floor: 77,
                Ceiling: 78,
                Result: "Comet with a tail of ionized gas"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/79-81",
                Floor: 79,
                Ceiling: 81,
                Result: "Fiery energy storm"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/82-83",
                Floor: 82,
                Ceiling: 83,
                Result: "Chaotic meteoroid storm"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/84-85",
                Floor: 84,
                Ceiling: 85,
                Result: "Turbulent gravitational wave"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/86-93",
                Floor: 86,
                Ceiling: 93,
                Result: "Dense nebula cloud"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/94-98",
                Floor: 94,
                Ceiling: 98,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !0,
                  "Make it worse": !1
                }
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Terminus/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll three times",
                "Multiple rolls": {
                  Amount: 3,
                  "Allow duplicates": !0,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 300
            },
            $id: "Starforged/Oracles/Space/Sighting/Outlands",
            Name: "Outlands",
            "Member of": "Starforged/Oracles/Space/Sighting",
            Category: "Starforged/Oracles/Space",
            Display: {
              Title: "Outlands",
              "Column of": "Starforged/Oracles/Space/Sighting",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Space/Sighting/Outlands",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Space/Sighting/Outlands"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Region", Values: ["Outlands"] }]
              },
              "Allow duplicates": !0
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/1-15",
                Floor: 1,
                Ceiling: 15,
                Result: "[\u23F5Stellar Object](Starforged/Oracles/Space/Stellar_Object)",
                "Oracle rolls": ["Starforged/Oracles/Space/Stellar_Object"]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/16-35",
                Floor: 16,
                Ceiling: 35,
                Result: "[\u23F5Planet](Starforged/Oracles/Planets)",
                "Game objects": [{ "Object type": "Planet" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/36-38",
                Floor: 36,
                Ceiling: 38,
                Result: "[\u23F5Settlement](Starforged/Oracles/Settlements)",
                "Game objects": [{ "Object type": "Settlement" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/39-43",
                Floor: 39,
                Ceiling: 43,
                Result: "[\u23F5Starship](Starforged/Oracles/Starships)",
                "Game objects": [{ "Object type": "Starship" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/44-46",
                Floor: 44,
                Ceiling: 46,
                Result: "[\u23F5Derelict](Starforged/Oracles/Derelicts)",
                "Game objects": [
                  {
                    "Object type": "Derelict",
                    Requires: {
                      Attributes: [
                        { Key: "Initial Contact", Values: ["Derelict"] }
                      ]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/47-49",
                Floor: 47,
                Ceiling: 49,
                Result: "[\u23F5Precursor Vault](Starforged/Oracles/Vaults)",
                "Game objects": [{ "Object type": "Precursor Vault" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/50-52",
                Floor: 50,
                Ceiling: 52,
                Result: "[\u23F5Creature](Starforged/Oracles/Creatures)",
                "Game objects": [{ "Object type": "Creature" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/53-58",
                Floor: 53,
                Ceiling: 58,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/59-63",
                Floor: 59,
                Ceiling: 63,
                Result: "Debris field: Mineral asteroids"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/64-66",
                Floor: 64,
                Ceiling: 66,
                Result: "Debris field: Frozen asteroids"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/67-68",
                Floor: 67,
                Ceiling: 68,
                Result: "Debris field: Crystalline asteroids"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/69-70",
                Floor: 69,
                Ceiling: 70,
                Result: "Debris field: Creature boneyard"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/71-72",
                Floor: 71,
                Ceiling: 72,
                Result: "Debris field: Metallic wreckage"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/73-74",
                Floor: 73,
                Ceiling: 74,
                Result: "Large rogue asteroid"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/75-76",
                Floor: 75,
                Ceiling: 76,
                Result: "Comet with a tail of ionized gas"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/77-80",
                Floor: 77,
                Ceiling: 80,
                Result: "Fiery energy storm"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/81-82",
                Floor: 81,
                Ceiling: 82,
                Result: "Chaotic meteoroid storm"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/83-85",
                Floor: 83,
                Ceiling: 85,
                Result: "Turbulent gravitational wave"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/86-93",
                Floor: 86,
                Ceiling: 93,
                Result: "Dense nebula cloud"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/94-98",
                Floor: 94,
                Ceiling: 98,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !0,
                  "Make it worse": !1
                }
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Outlands/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll three times",
                "Multiple rolls": {
                  Amount: 3,
                  "Allow duplicates": !0,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 300
            },
            $id: "Starforged/Oracles/Space/Sighting/Expanse",
            Name: "Expanse",
            "Member of": "Starforged/Oracles/Space/Sighting",
            Category: "Starforged/Oracles/Space",
            Display: {
              Title: "Expanse",
              "Column of": "Starforged/Oracles/Space/Sighting",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Space/Sighting/Expanse",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Space/Sighting/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Repeatable: !0,
              Requires: {
                Attributes: [{ Key: "Region", Values: ["Expanse"] }]
              },
              "Allow duplicates": !0
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/1-15",
                Floor: 1,
                Ceiling: 15,
                Result: "[\u23F5Stellar Object](Starforged/Oracles/Space/Stellar_Object)",
                "Oracle rolls": ["Starforged/Oracles/Space/Stellar_Object"]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/16-35",
                Floor: 16,
                Ceiling: 35,
                Result: "[\u23F5Planet](Starforged/Oracles/Planets)",
                "Game objects": [{ "Object type": "Planet" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/36-37",
                Floor: 36,
                Ceiling: 37,
                Result: "[\u23F5Settlement](Starforged/Oracles/Settlements)",
                "Game objects": [{ "Object type": "Settlement" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/38-39",
                Floor: 38,
                Ceiling: 39,
                Result: "[\u23F5Starship](Starforged/Oracles/Starships)",
                "Game objects": [{ "Object type": "Starship" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/40-41",
                Floor: 40,
                Ceiling: 41,
                Result: "[\u23F5Derelict](Starforged/Oracles/Derelicts)",
                "Game objects": [
                  {
                    "Object type": "Derelict",
                    Requires: {
                      Attributes: [
                        { Key: "Initial Contact", Values: ["Derelict"] }
                      ]
                    }
                  }
                ]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/42-45",
                Floor: 42,
                Ceiling: 45,
                Result: "[\u23F5Precursor Vault](Starforged/Oracles/Vaults)",
                "Game objects": [{ "Object type": "Precursor Vault" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/46-49",
                Floor: 46,
                Ceiling: 49,
                Result: "[\u23F5Creature](Starforged/Oracles/Creatures)",
                "Game objects": [{ "Object type": "Creature" }]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/50-56",
                Floor: 50,
                Ceiling: 56,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/57-61",
                Floor: 57,
                Ceiling: 61,
                Result: "Debris field: Mineral asteroids"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/62-64",
                Floor: 62,
                Ceiling: 64,
                Result: "Debris field: Frozen asteroids"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/65-66",
                Floor: 65,
                Ceiling: 66,
                Result: "Debris field: Crystalline asteroids"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/67-68",
                Floor: 67,
                Ceiling: 68,
                Result: "Debris field: Creature boneyard"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/69-70",
                Floor: 69,
                Ceiling: 70,
                Result: "Debris field: Metallic wreckage"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/71-72",
                Floor: 71,
                Ceiling: 72,
                Result: "Large rogue asteroid"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/73-74",
                Floor: 73,
                Ceiling: 74,
                Result: "Comet with a tail of ionized gas"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/75-79",
                Floor: 75,
                Ceiling: 79,
                Result: "Fiery energy storm"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/80-81",
                Floor: 80,
                Ceiling: 81,
                Result: "Chaotic meteoroid storm"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/82-85",
                Floor: 82,
                Ceiling: 85,
                Result: "Turbulent gravitational wave"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/86-93",
                Floor: 86,
                Ceiling: 93,
                Result: "Dense nebula cloud"
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/94-98",
                Floor: 94,
                Ceiling: 98,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !0,
                  "Make it worse": !1
                }
              },
              {
                $id: "Starforged/Oracles/Space/Sighting/Expanse/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Roll three times",
                "Multiple rolls": {
                  Amount: 3,
                  "Allow duplicates": !0,
                  "Make it worse": !1
                }
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 302
        },
        $id: "Starforged/Oracles/Space/Sector_Name",
        Name: "Sector Name",
        Category: "Starforged/Oracles/Space",
        Display: {
          Title: "Sector Name",
          Table: {
            "Result columns": [
              {
                Label: "Prefix",
                "Use content from": "Starforged/Oracles/Space/Sector_Name/Prefix",
                Key: "Result"
              },
              {
                Label: "Suffix",
                "Use content from": "Starforged/Oracles/Space/Sector_Name/Suffix",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Space/Sector_Name/Prefix"
              }
            ]
          }
        },
        Usage: { "Allow duplicates": !1 },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 302
            },
            $id: "Starforged/Oracles/Space/Sector_Name/Prefix",
            Name: "Prefix",
            "Member of": "Starforged/Oracles/Space/Sector_Name",
            Category: "Starforged/Oracles/Space",
            Description: "To give a sector or region of space a random name, roll once for the first word and once for the second word. Or just roll once choose a suitable pairing from anywhere in that row.",
            Display: {
              Title: "Prefix",
              "Column of": "Starforged/Oracles/Space/Sector_Name",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Space/Sector_Name/Prefix",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Space/Sector_Name/Prefix"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Suggestions: {
                "Oracle rolls": [
                  "Starforged/Oracles/Space/Sector_Name/Suffix"
                ]
              },
              "Allow duplicates": !1
            },
            Content: {
              "Part of speech": ["adjective", "proper noun fragment"],
              Tags: ["template fragment"]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/1-2",
                Floor: 1,
                Ceiling: 2,
                Result: "Accursed"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/3-4",
                Floor: 3,
                Ceiling: 4,
                Result: "Ashen"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/5-6",
                Floor: 5,
                Ceiling: 6,
                Result: "Asteria",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/7-8",
                Floor: 7,
                Ceiling: 8,
                Result: "Bitter"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/9-10",
                Floor: 9,
                Ceiling: 10,
                Result: "Blighted"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/11-12",
                Floor: 11,
                Ceiling: 12,
                Result: "Bloodied"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/13-14",
                Floor: 13,
                Ceiling: 14,
                Result: "Boundless"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/15-16",
                Floor: 15,
                Ceiling: 16,
                Result: "Burning"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/17-18",
                Floor: 17,
                Ceiling: 18,
                Result: "Cortana",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/19-20",
                Floor: 19,
                Ceiling: 20,
                Result: "Corvus",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/21-22",
                Floor: 21,
                Ceiling: 22,
                Result: "Crimson"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/23-24",
                Floor: 23,
                Ceiling: 24,
                Result: "Cygnus",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/25-26",
                Floor: 25,
                Ceiling: 26,
                Result: "Delphi",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/27-28",
                Floor: 27,
                Ceiling: 28,
                Result: "Delphian",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/29-30",
                Floor: 29,
                Ceiling: 30,
                Result: "Devil's",
                Content: {
                  "Part of speech": ["proper noun", "possessive case"]
                }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/31-32",
                Floor: 31,
                Ceiling: 32,
                Result: "Ebon"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/33-34",
                Floor: 33,
                Ceiling: 34,
                Result: "Essus",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/35-36",
                Floor: 35,
                Ceiling: 36,
                Result: "Fallen"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/37-38",
                Floor: 37,
                Ceiling: 38,
                Result: "Ferrous"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/39-40",
                Floor: 39,
                Ceiling: 40,
                Result: "Fool's",
                Content: {
                  "Part of speech": ["proper noun", "possessive case"]
                }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/41-42",
                Floor: 41,
                Ceiling: 42,
                Result: "Forgotten"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/43-44",
                Floor: 43,
                Ceiling: 44,
                Result: "Haunted"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/45-46",
                Floor: 45,
                Ceiling: 46,
                Result: "Hidden"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/47-48",
                Floor: 47,
                Ceiling: 48,
                Result: "Hollow"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/49-50",
                Floor: 49,
                Ceiling: 50,
                Result: "Igneous"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/51-52",
                Floor: 51,
                Ceiling: 52,
                Result: "Infernal"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/53-54",
                Floor: 53,
                Ceiling: 54,
                Result: "Invidia",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/55-56",
                Floor: 55,
                Ceiling: 56,
                Result: "Iron"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/57-58",
                Floor: 57,
                Ceiling: 58,
                Result: "Kalidas",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/59-60",
                Floor: 59,
                Ceiling: 60,
                Result: "Kronos",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/61-62",
                Floor: 61,
                Ceiling: 62,
                Result: "Lacuna",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/63-64",
                Floor: 63,
                Ceiling: 64,
                Result: "Lumen",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/65-66",
                Floor: 65,
                Ceiling: 66,
                Result: "Mobius",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/67-68",
                Floor: 67,
                Ceiling: 68,
                Result: "Morien",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/69-70",
                Floor: 69,
                Ceiling: 70,
                Result: "Onyx"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/71-72",
                Floor: 71,
                Ceiling: 72,
                Result: "Outer"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/73-74",
                Floor: 73,
                Ceiling: 74,
                Result: "Sanguis",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/75-76",
                Floor: 75,
                Ceiling: 76,
                Result: "Scarred"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/77-78",
                Floor: 77,
                Ceiling: 78,
                Result: "Scorched"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/79-80",
                Floor: 79,
                Ceiling: 80,
                Result: "Shattered"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/81-82",
                Floor: 81,
                Ceiling: 82,
                Result: "Shrouded"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/83-84",
                Floor: 83,
                Ceiling: 84,
                Result: "Sindri",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/85-86",
                Floor: 85,
                Ceiling: 86,
                Result: "Solana",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/87-88",
                Floor: 87,
                Ceiling: 88,
                Result: "Stygian"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/89-90",
                Floor: 89,
                Ceiling: 90,
                Result: "Sulaco",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/91-92",
                Floor: 91,
                Ceiling: 92,
                Result: "Sundered"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/93-94",
                Floor: 93,
                Ceiling: 94,
                Result: "Thunor",
                Content: { "Part of speech": ["proper noun"] }
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/95-96",
                Floor: 95,
                Ceiling: 96,
                Result: "Vanguard"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/97-98",
                Floor: 97,
                Ceiling: 98,
                Result: "Veiled"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Prefix/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Wasted"
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 302
            },
            $id: "Starforged/Oracles/Space/Sector_Name/Suffix",
            Name: "Suffix",
            "Member of": "Starforged/Oracles/Space/Sector_Name",
            Category: "Starforged/Oracles/Space",
            Description: "To give a sector or region of space a random name, roll once for the first word and once for the second word. Or just roll once choose a suitable pairing from anywhere in that row.",
            Display: {
              Title: "Suffix",
              "Column of": "Starforged/Oracles/Space/Sector_Name",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Space/Sector_Name/Suffix",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Space/Sector_Name/Suffix"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              Suggestions: {
                "Oracle rolls": [
                  "Starforged/Oracles/Space/Sector_Name/Prefix"
                ]
              },
              "Allow duplicates": !1
            },
            Content: {
              "Part of speech": ["noun", "proper noun fragment"],
              Tags: ["template fragment", "place"]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/1-2",
                Floor: 1,
                Ceiling: 2,
                Result: "Abyss"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/3-4",
                Floor: 3,
                Ceiling: 4,
                Result: "Anvil"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/5-6",
                Floor: 5,
                Ceiling: 6,
                Result: "Arch"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/7-8",
                Floor: 7,
                Ceiling: 8,
                Result: "Breach"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/9-10",
                Floor: 9,
                Ceiling: 10,
                Result: "Chain"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/11-12",
                Floor: 11,
                Ceiling: 12,
                Result: "Channel"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/13-14",
                Floor: 13,
                Ceiling: 14,
                Result: "Chasm"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/15-16",
                Floor: 15,
                Ceiling: 16,
                Result: "Circlet"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/17-18",
                Floor: 17,
                Ceiling: 18,
                Result: "Cluster"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/19-20",
                Floor: 19,
                Ceiling: 20,
                Result: "Crossing"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/21-22",
                Floor: 21,
                Ceiling: 22,
                Result: "Crown"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/23-24",
                Floor: 23,
                Ceiling: 24,
                Result: "Currents"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/25-26",
                Floor: 25,
                Ceiling: 26,
                Result: "Deep"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/27-28",
                Floor: 27,
                Ceiling: 28,
                Result: "Desolation"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/29-30",
                Floor: 29,
                Ceiling: 30,
                Result: "Drift"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/31-32",
                Floor: 31,
                Ceiling: 32,
                Result: "Flow"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/33-34",
                Floor: 33,
                Ceiling: 34,
                Result: "Flux"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/35-36",
                Floor: 35,
                Ceiling: 36,
                Result: "Gap"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/37-38",
                Floor: 37,
                Ceiling: 38,
                Result: "Gate"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/39-40",
                Floor: 39,
                Ceiling: 40,
                Result: "Gyre"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/41-42",
                Floor: 41,
                Ceiling: 42,
                Result: "Heart"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/43-44",
                Floor: 43,
                Ceiling: 44,
                Result: "Helix"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/45-46",
                Floor: 45,
                Ceiling: 46,
                Result: "Juncture"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/47-48",
                Floor: 47,
                Ceiling: 48,
                Result: "Limits"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/49-50",
                Floor: 49,
                Ceiling: 50,
                Result: "Locus"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/51-52",
                Floor: 51,
                Ceiling: 52,
                Result: "Maelstrom"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/53-54",
                Floor: 53,
                Ceiling: 54,
                Result: "Margin"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/55-56",
                Floor: 55,
                Ceiling: 56,
                Result: "Maw"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/57-58",
                Floor: 57,
                Ceiling: 58,
                Result: "Maze"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/59-60",
                Floor: 59,
                Ceiling: 60,
                Result: "Nexus"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/61-62",
                Floor: 61,
                Ceiling: 62,
                Result: "Oasis"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/63-64",
                Floor: 63,
                Ceiling: 64,
                Result: "Pass"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/65-66",
                Floor: 65,
                Ceiling: 66,
                Result: "Pit"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/67-68",
                Floor: 67,
                Ceiling: 68,
                Result: "Pyre"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/69-70",
                Floor: 69,
                Ceiling: 70,
                Result: "Reach"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/71-72",
                Floor: 71,
                Ceiling: 72,
                Result: "Rest"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/73-74",
                Floor: 73,
                Ceiling: 74,
                Result: "Rift"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/75-76",
                Floor: 75,
                Ceiling: 76,
                Result: "Sanctum"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/77-78",
                Floor: 77,
                Ceiling: 78,
                Result: "Shallows"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/79-80",
                Floor: 79,
                Ceiling: 80,
                Result: "Shoal"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/81-82",
                Floor: 81,
                Ceiling: 82,
                Result: "Spine"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/83-84",
                Floor: 83,
                Ceiling: 84,
                Result: "Straits"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/85-86",
                Floor: 85,
                Ceiling: 86,
                Result: "Threshold"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/87-88",
                Floor: 87,
                Ceiling: 88,
                Result: "Tide"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/89-90",
                Floor: 89,
                Ceiling: 90,
                Result: "Verge"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/91-92",
                Floor: 91,
                Ceiling: 92,
                Result: "Vertex"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/93-94",
                Floor: 93,
                Ceiling: 94,
                Result: "Vigil"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/95-96",
                Floor: 95,
                Ceiling: 96,
                Result: "Void"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/97-98",
                Floor: 97,
                Ceiling: 98,
                Result: "Web"
              },
              {
                $id: "Starforged/Oracles/Space/Sector_Name/Suffix/99-100",
                Floor: 99,
                Ceiling: 100,
                Result: "Zenith"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 303
        },
        $id: "Starforged/Oracles/Space/Stellar_Object",
        Name: "Stellar Object",
        Category: "Starforged/Oracles/Space",
        Description: "Use the Stellar Object oracle to learn more about the primary star at a location. This is mostly to help you visualize your surroundings, but the strange or hazardous nature of some rare stars can incite new adventures.",
        Display: {
          Title: "Stellar Object",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Space/Stellar_Object",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Space/Stellar_Object"
              }
            ]
          }
        },
        Content: { "Part of speech": ["fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/1-15",
            Floor: 1,
            Ceiling: 15,
            Result: "Smoldering red star"
          },
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/16-30",
            Floor: 16,
            Ceiling: 30,
            Result: "Glowing orange star"
          },
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/31-45",
            Floor: 31,
            Ceiling: 45,
            Result: "Burning yellow star"
          },
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/46-50",
            Floor: 46,
            Ceiling: 50,
            Result: "Blazing blue star"
          },
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/51-60",
            Floor: 51,
            Ceiling: 60,
            Result: "Young star incubating in a molecular cloud"
          },
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/61-70",
            Floor: 61,
            Ceiling: 70,
            Result: "White dwarf shining with spectral light"
          },
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/71-75",
            Floor: 71,
            Ceiling: 75,
            Result: "Corrupted star radiating with unnatural light"
          },
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/76-80",
            Floor: 76,
            Ceiling: 80,
            Result: "Neutron star surrounded by intense magnetic fields"
          },
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/81-85",
            Floor: 81,
            Ceiling: 85,
            Result: "Two stars in close orbit connected by fiery tendrils of energy"
          },
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/86-90",
            Floor: 86,
            Ceiling: 90,
            Result: "Black hole allows nothing to escape\u2014not even light"
          },
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/91-98",
            Floor: 91,
            Ceiling: 98,
            Result: "Hypergiant star generating turbulent solar winds"
          },
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/99",
            Floor: 99,
            Ceiling: 99,
            Result: "Artificial star constructed by a long-dead civilization"
          },
          {
            $id: "Starforged/Oracles/Space/Stellar_Object/100",
            Floor: 100,
            Ceiling: 100,
            Result: "Unstable star showing signs of impending supernova"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 304
        },
        $id: "Starforged/Oracles/Space/Peril",
        Name: "Peril",
        Category: "Starforged/Oracles/Space",
        Description: "Choose or roll on this table when you want inspiration for a trouble during spaceborne exploration or on an interstellar expedition.",
        Display: {
          Title: "Spaceborne Peril",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Space/Peril",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Space/Peril"
              }
            ]
          }
        },
        Usage: {
          Repeatable: !0,
          Requires: {
            Attributes: [
              { Key: "Location", Values: ["Orbital", "Deep Space"] }
            ]
          },
          "Allow duplicates": !1
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["peril", "event", "present"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Space/Peril/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Artificial gravity generator malfunctions"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/4-6",
            Floor: 4,
            Ceiling: 6,
            Result: "Automated defenses or mines protect this area"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/7-9",
            Floor: 7,
            Ceiling: 9,
            Result: "Compartment catches fire or is breached"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/10-12",
            Floor: 10,
            Ceiling: 12,
            Result: "Contagion or illness threatens to take hold"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/13-15",
            Floor: 13,
            Ceiling: 15,
            Result: "Dust clouds imperil navigation or conceal foes"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/16-18",
            Floor: 16,
            Ceiling: 18,
            Result: "Energy storm looms"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/19-21",
            Floor: 19,
            Ceiling: 21,
            Result: "Familiar foe appears or sends an ominous message"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/22-24",
            Floor: 22,
            Ceiling: 24,
            Result: "Gravity well or vortex takes hold"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/25-27",
            Floor: 25,
            Ceiling: 27,
            Result: "Imperiled ship calls for help",
            Suggestions: { "Game objects": [{ "Object type": "Starship" }] }
          },
          {
            $id: "Starforged/Oracles/Space/Peril/28-30",
            Floor: 28,
            Ceiling: 30,
            Result: "Important device fails or malfunctions"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/31-33",
            Floor: 31,
            Ceiling: 33,
            Result: "Infestation is revealed",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Space/Peril/34-36",
            Floor: 34,
            Ceiling: 36,
            Result: "Intruder or stowaway creates trouble"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/37-39",
            Floor: 37,
            Ceiling: 39,
            Result: "Isolation or fear presses in"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/40-42",
            Floor: 40,
            Ceiling: 42,
            Result: "Life support system malfunctions"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/43-45",
            Floor: 43,
            Ceiling: 45,
            Result: "Meteoroid storm fills the sky"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/46-48",
            Floor: 46,
            Ceiling: 48,
            Result: "Mysterious wreckage portends a new threat",
            Suggestions: {
              "Game objects": [
                {
                  "Object type": "Derelict",
                  Requires: {
                    Attributes: [
                      { Key: "Derelict Type", Values: ["Starship"] },
                      { Key: "Initial Contact", Values: ["Derelict"] }
                    ]
                  }
                }
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Space/Peril/49-51",
            Floor: 49,
            Ceiling: 51,
            Result: "Nearby settlement calls for help",
            Suggestions: {
              "Game objects": [{ "Object type": "Settlement" }]
            }
          },
          {
            $id: "Starforged/Oracles/Space/Peril/52-54",
            Floor: 52,
            Ceiling: 54,
            Result: "Old repair or patch fails"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/55-57",
            Floor: 55,
            Ceiling: 57,
            Result: "Onboard dispute or inner turmoil causes a disruption"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/58-60",
            Floor: 58,
            Ceiling: 60,
            Result: "Others obstruct your path or form a blockade"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/61-63",
            Floor: 61,
            Ceiling: 63,
            Result: "Phantom signals suggest a lurking foe"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/64-66",
            Floor: 64,
            Ceiling: 66,
            Result: "Pirates hunt for prey"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/67-69",
            Floor: 67,
            Ceiling: 69,
            Result: "Power fails"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/70-72",
            Floor: 70,
            Ceiling: 72,
            Result: "Primary drive or generator malfunctions"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/73-75",
            Floor: 73,
            Ceiling: 75,
            Result: "Sabotage is revealed"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/76-78",
            Floor: 76,
            Ceiling: 78,
            Result: "Shockwave or gravity wave approaches"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/79-81",
            Floor: 79,
            Ceiling: 81,
            Result: "Someone questions your presence here"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/82-84",
            Floor: 82,
            Ceiling: 84,
            Result: "Stellar anomaly emits hazardous energies"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/85-87",
            Floor: 85,
            Ceiling: 87,
            Result: "Threatening lifeform draws near",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Space/Peril/88-90",
            Floor: 88,
            Ceiling: 90,
            Result: "Troubling visions or apparitions"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/91-93",
            Floor: 91,
            Ceiling: 93,
            Result: "True nature of a cargo, occupant, or passenger is revealed"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/94-96",
            Floor: 94,
            Ceiling: 96,
            Result: "Unsettling sounds or disturbances"
          },
          {
            $id: "Starforged/Oracles/Space/Peril/97-99",
            Floor: 97,
            Ceiling: 99,
            Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Action",
              "Starforged/Oracles/Core/Theme"
            ]
          },
          {
            $id: "Starforged/Oracles/Space/Peril/100",
            Floor: 100,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 305
        },
        $id: "Starforged/Oracles/Space/Opportunity",
        Name: "Opportunity",
        Category: "Starforged/Oracles/Space",
        Description: "Choose or roll on this table when you want inspiration for a beneficial encounter or event on a spaceborne journey, such as when you roll a strong hit with a match as you [Undertake an Expedition](Starforged/Moves/Exploration/Undertake_an_Expedition), or if you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint) and find an opportunity.",
        Display: {
          Title: "Spaceborne Opportunity",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Space/Opportunity",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Space/Opportunity"
              }
            ]
          }
        },
        Usage: {
          Repeatable: !0,
          Requires: {
            Attributes: [
              { Key: "Location", Values: ["Orbital", "Deep Space"] }
            ]
          },
          "Allow duplicates": !1
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["opportunity"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Space/Opportunity/1-4",
            Floor: 1,
            Ceiling: 4,
            Result: "Advance warning of an environmental threat"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/5-8",
            Floor: 5,
            Ceiling: 8,
            Result: "Automated signal offers a helpful message or warning"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/9-12",
            Floor: 9,
            Ceiling: 12,
            Result: "Cache of cargo or supplies",
            Suggestions: {
              "Oracle rolls": [
                "Starforged/Oracles/Core/Descriptor",
                "Starforged/Oracles/Core/Focus"
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/13-16",
            Floor: 13,
            Ceiling: 16,
            Result: "Chance for fellowship or a moment of inner peace"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/17-20",
            Floor: 17,
            Ceiling: 20,
            Result: "Clear path through otherwise perilous space"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/21-24",
            Floor: 21,
            Ceiling: 24,
            Result: "Clue offers insight into a current quest or mystery"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/25-28",
            Floor: 25,
            Ceiling: 28,
            Result: "Clue to a lifeform's nature or vulnerabilities"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/29-32",
            Floor: 29,
            Ceiling: 32,
            Result: "Derelict ripe for the picking",
            Suggestions: {
              "Game objects": [
                {
                  "Object type": "Derelict",
                  Requires: {
                    Attributes: [
                      { Key: "Initial Contact", Values: ["Derelict"] }
                    ]
                  }
                }
              ]
            }
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/33-36",
            Floor: 33,
            Ceiling: 36,
            Result: "Foe inadvertently reveals themselves or tips their hand"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/37-40",
            Floor: 37,
            Ceiling: 40,
            Result: "Friendly interaction with a benign lifeform",
            Suggestions: { "Game objects": [{ "Object type": "Creature" }] }
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/41-44",
            Floor: 41,
            Ceiling: 44,
            Result: "Friendly settlement in range",
            Suggestions: {
              "Game objects": [{ "Object type": "Settlement" }]
            }
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/45-48",
            Floor: 45,
            Ceiling: 48,
            Result: "Friendly spacers at work here",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/49-52",
            Floor: 49,
            Ceiling: 52,
            Result: "Friendly starship crosses your path",
            Suggestions: { "Game objects": [{ "Object type": "Starship" }] }
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/53-56",
            Floor: 53,
            Ceiling: 56,
            Result: "Helpful or encouraging message from an acquaintance"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/57-60",
            Floor: 57,
            Ceiling: 60,
            Result: "Impressive vista offers comfort or inspiration"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/61-64",
            Floor: 61,
            Ceiling: 64,
            Result: "Interesting site offers opportunities for exploration"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/65-68",
            Floor: 65,
            Ceiling: 68,
            Result: "Mineral or energy resource detected"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/69-72",
            Floor: 69,
            Ceiling: 72,
            Result: "Navigational or environmental hazard is left behind"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/73-76",
            Floor: 73,
            Ceiling: 76,
            Result: "Opening to escape or avoid foes"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/77-80",
            Floor: 77,
            Ceiling: 80,
            Result: "Plea for help from a potential benefactor",
            Suggestions: {
              "Game objects": [{ "Object type": "Character" }]
            }
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/81-84",
            Floor: 81,
            Ceiling: 84,
            Result: "Probe or beacon with useful data"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/85-88",
            Floor: 85,
            Ceiling: 88,
            Result: "Refuge offers a place to hide, plan, or recover"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/89-92",
            Floor: 89,
            Ceiling: 92,
            Result: "Sensors pinpoint a lurking foe"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/93-96",
            Floor: 93,
            Ceiling: 96,
            Result: "Sensors reveal helpful or interesting environmental data"
          },
          {
            $id: "Starforged/Oracles/Space/Opportunity/97-100",
            Floor: 97,
            Ceiling: 100,
            Result: "Vehicle or equipment performs beyond expectations"
          }
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622"
    },
    $id: "Starforged/Oracles/Starships",
    Name: "Starships",
    Aliases: ["Ship"],
    Display: { Title: "Starships" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 326
        },
        $id: "Starforged/Oracles/Starships/Type",
        Name: "Type",
        Category: "Starforged/Oracles/Starships",
        Display: {
          Title: "Type",
          Table: {
            "Result columns": [
              {
                Label: "Class",
                "Use content from": "Starforged/Oracles/Starships/Type",
                Key: "Result"
              },
              {
                Label: "Typical Role",
                "Use content from": "Starforged/Oracles/Starships/Type",
                Key: "Summary"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Starships/Type"
              }
            ]
          }
        },
        Usage: { Initial: !0, "Allow duplicates": !1 },
        Content: { "Part of speech": ["common noun", "fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Starships/Type/1-2",
            Floor: 1,
            Ceiling: 2,
            Result: "Carrier",
            Summary: "Launches fighters"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/3-6",
            Floor: 3,
            Ceiling: 6,
            Result: "Corvette",
            Summary: "Light attack ship"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/7-11",
            Floor: 7,
            Ceiling: 11,
            Result: "Courier",
            Summary: "Fast transport"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/12-14",
            Floor: 12,
            Ceiling: 14,
            Result: "Cruiser",
            Summary: "Medium attack ship"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/15-16",
            Floor: 15,
            Ceiling: 16,
            Result: "Dreadnought",
            Summary: "Heavy attack ship"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/17-19",
            Floor: 17,
            Ceiling: 19,
            Result: "Escape pod",
            Summary: "Survival craft"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/20-22",
            Floor: 20,
            Ceiling: 22,
            Result: "Foundry",
            Summary: "Mobile construction platform"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/23-27",
            Floor: 23,
            Ceiling: 27,
            Result: "Harvester",
            Summary: "Fuel or energy excavator"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/28-33",
            Floor: 28,
            Ceiling: 33,
            Result: "Hauler",
            Summary: "Heavy transport"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/34-36",
            Floor: 34,
            Ceiling: 36,
            Result: "Hunter",
            Summary: "Stealthy attack ship"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/37-38",
            Floor: 37,
            Ceiling: 38,
            Result: "Ironhome",
            Summary: "Habitat"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/39-42",
            Floor: 39,
            Ceiling: 42,
            Result: "Mender",
            Summary: "Utility or repair"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/43-47",
            Floor: 43,
            Ceiling: 47,
            Result: "Outbounder",
            Summary: "Remote survey or research"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/48-50",
            Floor: 48,
            Ceiling: 50,
            Result: "Pennant",
            Summary: "Command ship"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/51-56",
            Floor: 51,
            Ceiling: 56,
            Result: "Prospector",
            Summary: "Mineral excavator"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/57-61",
            Floor: 57,
            Ceiling: 61,
            Result: "Reclaimer",
            Summary: "Salvage or rescue"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/62-64",
            Floor: 62,
            Ceiling: 64,
            Result: "Shuttle",
            Summary: "Short-range transport"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/65-67",
            Floor: 65,
            Ceiling: 67,
            Result: "Snub fighter",
            Summary: "Small attack craft"
          },
          {
            $id: "Starforged/Oracles/Starships/Type/68-82",
            Floor: 68,
            Ceiling: 82,
            Result: "Multipurpose",
            Summary: "[\u23F5Starship Mission](Starforged/Oracles/Starships/Mission)",
            "Oracle rolls": ["Starforged/Oracles/Starships/Mission"]
          },
          {
            $id: "Starforged/Oracles/Starships/Type/83-84",
            Floor: 83,
            Ceiling: 84,
            Result: "Unusual or unknown",
            Summary: null
          },
          {
            $id: "Starforged/Oracles/Starships/Type/85-94",
            Floor: 85,
            Ceiling: 94,
            Result: "[\u23F5Fleet](Starforged/Oracles/Starships/Fleet)",
            Summary: null,
            "Oracle rolls": ["Starforged/Oracles/Starships/Fleet"]
          },
          {
            $id: "Starforged/Oracles/Starships/Type/95-100",
            Floor: 95,
            Ceiling: 100,
            Result: "Ships in conflict (roll twice)",
            Summary: null,
            "Oracle rolls": ["Starforged/Oracles/Starships/Type"],
            "Game objects": [{ "Object type": "Starship" }]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 326
        },
        $id: "Starforged/Oracles/Starships/Fleet",
        Name: "Fleet",
        Category: "Starforged/Oracles/Starships",
        Display: {
          Title: "Fleet",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Starships/Fleet",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Starships/Fleet"
              }
            ]
          }
        },
        Usage: { Initial: !0, "Allow duplicates": !1 },
        Content: { "Part of speech": ["noun", "common noun"] },
        Table: [
          {
            $id: "Starforged/Oracles/Starships/Fleet/1-10",
            Floor: 1,
            Ceiling: 10,
            Result: "Battle fleet"
          },
          {
            $id: "Starforged/Oracles/Starships/Fleet/11-25",
            Floor: 11,
            Ceiling: 25,
            Result: "Pirate wing"
          },
          {
            $id: "Starforged/Oracles/Starships/Fleet/26-35",
            Floor: 26,
            Ceiling: 35,
            Result: "Raider horde"
          },
          {
            $id: "Starforged/Oracles/Starships/Fleet/36-50",
            Floor: 36,
            Ceiling: 50,
            Result: "Salvager hive"
          },
          {
            $id: "Starforged/Oracles/Starships/Fleet/51-60",
            Floor: 51,
            Ceiling: 60,
            Result: "Settler caravan"
          },
          {
            $id: "Starforged/Oracles/Starships/Fleet/61-70",
            Floor: 61,
            Ceiling: 70,
            Result: "Trade caravan"
          },
          {
            $id: "Starforged/Oracles/Starships/Fleet/71-90",
            Floor: 71,
            Ceiling: 90,
            Result: "Transport and escorts"
          },
          {
            $id: "Starforged/Oracles/Starships/Fleet/91-100",
            Floor: 91,
            Ceiling: 100,
            Result: "[\u23F5Starship Mission](Starforged/Oracles/Starships/Mission)",
            "Oracle rolls": ["Starforged/Oracles/Starships/Mission"]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 327
        },
        $id: "Starforged/Oracles/Starships/Initial_Contact",
        Name: "Initial Contact",
        Category: "Starforged/Oracles/Starships",
        Display: {
          Title: "Initial Contact",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Starships/Initial_Contact",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Starships/Initial_Contact"
              }
            ]
          }
        },
        Usage: { Initial: !0, "Allow duplicates": !1 },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["relationship"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Starships/Initial_Contact/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Familiar"
          },
          {
            $id: "Starforged/Oracles/Starships/Initial_Contact/4-15",
            Floor: 4,
            Ceiling: 15,
            Result: "Friendly"
          },
          {
            $id: "Starforged/Oracles/Starships/Initial_Contact/16-25",
            Floor: 16,
            Ceiling: 25,
            Result: "Neutral / automated"
          },
          {
            $id: "Starforged/Oracles/Starships/Initial_Contact/26-35",
            Floor: 26,
            Ceiling: 35,
            Result: "Wary"
          },
          {
            $id: "Starforged/Oracles/Starships/Initial_Contact/36-40",
            Floor: 36,
            Ceiling: 40,
            Result: "Dismissive"
          },
          {
            $id: "Starforged/Oracles/Starships/Initial_Contact/41-50",
            Floor: 41,
            Ceiling: 50,
            Result: "Uncooperative"
          },
          {
            $id: "Starforged/Oracles/Starships/Initial_Contact/51-65",
            Floor: 51,
            Ceiling: 65,
            Result: "Hostile"
          },
          {
            $id: "Starforged/Oracles/Starships/Initial_Contact/66-80",
            Floor: 66,
            Ceiling: 80,
            Result: "Asking for help"
          },
          {
            $id: "Starforged/Oracles/Starships/Initial_Contact/81-85",
            Floor: 81,
            Ceiling: 85,
            Result: "In battle"
          },
          {
            $id: "Starforged/Oracles/Starships/Initial_Contact/86-90",
            Floor: 86,
            Ceiling: 90,
            Result: "Unresponsive"
          },
          {
            $id: "Starforged/Oracles/Starships/Initial_Contact/91-95",
            Floor: 91,
            Ceiling: 95,
            Result: "Destroyed"
          },
          {
            $id: "Starforged/Oracles/Starships/Initial_Contact/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "[\u23F5Derelict](Starforged/Oracles/Derelicts)",
            "Game objects": [
              {
                "Object type": "Derelict",
                Requires: {
                  Attributes: [
                    { Key: "Derelict Type", Values: ["Starship"] },
                    { Key: "Initial Contact", Values: ["Derelict"] }
                  ]
                }
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 327
        },
        $id: "Starforged/Oracles/Starships/First_Look",
        Name: "First Look",
        Category: "Starforged/Oracles/Starships",
        Display: {
          Title: "First Look",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Starships/First_Look",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Starships/First_Look"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Max rolls": 2,
          "Allow duplicates": !1
        },
        Content: {
          "Part of speech": ["fragment"],
          Tags: ["description"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Starships/First_Look/1-4",
            Floor: 1,
            Ceiling: 4,
            Result: "Abnormal sensor readings"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/5-8",
            Floor: 5,
            Ceiling: 8,
            Result: "Brightly painted"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/9-13",
            Floor: 9,
            Ceiling: 13,
            Result: "Bristling with weapons"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/14-18",
            Floor: 14,
            Ceiling: 18,
            Result: "Dark or stealthy"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/19-23",
            Floor: 19,
            Ceiling: 23,
            Result: "Heavy armor"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/24-28",
            Floor: 24,
            Ceiling: 28,
            Result: "Immobile"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/29-33",
            Floor: 29,
            Ceiling: 33,
            Result: "Intimidating profile"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/34-37",
            Floor: 34,
            Ceiling: 37,
            Result: "Large sensor arrays"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/38-41",
            Floor: 38,
            Ceiling: 41,
            Result: "Leaking radiation"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/42-45",
            Floor: 42,
            Ceiling: 45,
            Result: "Low-profile or disguised"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/46-49",
            Floor: 46,
            Ceiling: 49,
            Result: "Modern or advanced design"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/50-54",
            Floor: 50,
            Ceiling: 54,
            Result: "Obsolete design"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/55-59",
            Floor: 55,
            Ceiling: 59,
            Result: "Obvious damage"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/60-63",
            Floor: 60,
            Ceiling: 63,
            Result: "Biological components"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/64-67",
            Floor: 64,
            Ceiling: 67,
            Result: "Ornate markings"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/68-71",
            Floor: 68,
            Ceiling: 71,
            Result: "Oversized engines"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/72-75",
            Floor: 72,
            Ceiling: 75,
            Result: "Prominent guild emblem"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/76-80",
            Floor: 76,
            Ceiling: 80,
            Result: "Refitted or repurposed hull"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/81-85",
            Floor: 81,
            Ceiling: 85,
            Result: "Scarred hull"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/86-90",
            Floor: 86,
            Ceiling: 90,
            Result: "Built from scrap"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/91-94",
            Floor: 91,
            Ceiling: 94,
            Result: "Towing or linked"
          },
          {
            $id: "Starforged/Oracles/Starships/First_Look/95-100",
            Floor: 95,
            Ceiling: 100,
            Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Descriptor",
              "Starforged/Oracles/Core/Focus"
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 328
        },
        $id: "Starforged/Oracles/Starships/Mission",
        Name: "Mission",
        Category: "Starforged/Oracles/Starships",
        Description: "Use the Starship Mission table when prompted by another oracle, or to flesh out the nature of a ship or fleet which has a flexible or uncertain role. You can also roll to generate the focus of a spaceborne quest.",
        Display: {
          Title: "Starship Mission",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Starships/Mission/Terminus",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Terminus",
                "Use content from": "Starforged/Oracles/Starships/Mission/Terminus"
              },
              {
                Label: "Outlands",
                "Use content from": "Starforged/Oracles/Starships/Mission/Outlands"
              },
              {
                Label: "Expanse",
                "Use content from": "Starforged/Oracles/Starships/Mission/Expanse"
              }
            ]
          }
        },
        Usage: {
          Requires: { Attributes: [{ Key: "Region" }] },
          "Allow duplicates": !1
        },
        Content: { "Part of speech": ["fragment"], Tags: ["objective"] },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 328
            },
            $id: "Starforged/Oracles/Starships/Mission/Terminus",
            Name: "Terminus",
            "Member of": "Starforged/Oracles/Starships/Mission",
            Category: "Starforged/Oracles/Starships",
            Display: {
              Title: "Terminus",
              "Column of": "Starforged/Oracles/Starships/Mission",
              Table: {
                "Result columns": [
                  {
                    Label: "Mission",
                    "Use content from": "Starforged/Oracles/Starships/Mission/Terminus",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Starships/Mission/Terminus"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [{ Key: "Region", Values: ["Terminus"] }]
              },
              "Allow duplicates": !1
            },
            Content: {
              "Part of speech": ["fragment"],
              Tags: ["objective"]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/1-3",
                Floor: 1,
                Ceiling: 3,
                Result: "Blockade a location",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Space/Sighting/Terminus",
                    "Starforged/Oracles/Space/Sighting/Outlands",
                    "Starforged/Oracles/Space/Sighting/Expanse"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/4-6",
                Floor: 4,
                Ceiling: 6,
                Result: "Break a blockade"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/7-9",
                Floor: 7,
                Ceiling: 9,
                Result: "Collect a resource",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/10-11",
                Floor: 10,
                Ceiling: 11,
                Result: "Command others"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/12-14",
                Floor: 12,
                Ceiling: 14,
                Result: "Conduct diplomacy"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/15-17",
                Floor: 15,
                Ceiling: 17,
                Result: "Conduct espionage"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/18-20",
                Floor: 18,
                Ceiling: 20,
                Result: "Conduct piracy"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/21-23",
                Floor: 21,
                Ceiling: 23,
                Result: "Conduct research"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/24-26",
                Floor: 24,
                Ceiling: 26,
                Result: "Defend against an attack"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/27-29",
                Floor: 27,
                Ceiling: 29,
                Result: "Deliver messages or data"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/30-32",
                Floor: 30,
                Ceiling: 32,
                Result: "Establish a settlement"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/33-35",
                Floor: 33,
                Ceiling: 35,
                Result: "Evacuate a location",
                Suggestions: {
                  "Game objects": [{ "Object type": "Settlement" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/36-37",
                Floor: 36,
                Ceiling: 37,
                Result: "Explore a region"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/38-39",
                Floor: 38,
                Ceiling: 39,
                Result: "Hold prisoners"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/40-42",
                Floor: 40,
                Ceiling: 42,
                Result: "Hunt down another ship",
                Suggestions: {
                  "Game objects": [{ "Object type": "Starship" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/43-45",
                Floor: 43,
                Ceiling: 45,
                Result: "Launch an attack"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/46-48",
                Floor: 46,
                Ceiling: 48,
                Result: "Patrol an area"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/49-51",
                Floor: 49,
                Ceiling: 51,
                Result: "Provide medical aid"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/52-54",
                Floor: 52,
                Ceiling: 54,
                Result: "Provide repairs"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/55-57",
                Floor: 55,
                Ceiling: 57,
                Result: "Provide shelter"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/58-59",
                Floor: 58,
                Ceiling: 59,
                Result: "Quarantine a danger",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Action",
                    "Starforged/Oracles/Core/Theme"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/60-62",
                Floor: 60,
                Ceiling: 62,
                Result: "Raid a settlement",
                Suggestions: {
                  "Game objects": [{ "Object type": "Settlement" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/63-65",
                Floor: 63,
                Ceiling: 65,
                Result: "Resupply a settlement",
                Suggestions: {
                  "Game objects": [{ "Object type": "Settlement" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/66-68",
                Floor: 66,
                Ceiling: 68,
                Result: "Retrieve salvage"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/69-71",
                Floor: 69,
                Ceiling: 71,
                Result: "Search and rescue"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/72-74",
                Floor: 72,
                Ceiling: 74,
                Result: "Smuggle cargo",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/75-77",
                Floor: 75,
                Ceiling: 77,
                Result: "Survey a site",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Space/Sighting/Terminus",
                    "Starforged/Oracles/Space/Sighting/Outlands",
                    "Starforged/Oracles/Space/Sighting/Expanse"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/78-79",
                Floor: 78,
                Ceiling: 79,
                Result: "Test a technology",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/80-82",
                Floor: 80,
                Ceiling: 82,
                Result: "Transport cargo",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/83-85",
                Floor: 83,
                Ceiling: 85,
                Result: "Transport passengers",
                Suggestions: {
                  "Game objects": [{ "Object type": "Character" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Terminus/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 328
            },
            $id: "Starforged/Oracles/Starships/Mission/Outlands",
            Name: "Outlands",
            "Member of": "Starforged/Oracles/Starships/Mission",
            Category: "Starforged/Oracles/Starships",
            Display: {
              Title: "Outlands",
              "Column of": "Starforged/Oracles/Starships/Mission",
              Table: {
                "Result columns": [
                  {
                    Label: "Mission",
                    "Use content from": "Starforged/Oracles/Starships/Mission/Outlands",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Starships/Mission/Outlands"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [{ Key: "Region", Values: ["Outlands"] }]
              },
              "Allow duplicates": !1
            },
            Content: {
              "Part of speech": ["fragment"],
              Tags: ["objective"]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/1-2",
                Floor: 1,
                Ceiling: 2,
                Result: "Blockade a location",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Space/Sighting/Terminus",
                    "Starforged/Oracles/Space/Sighting/Outlands",
                    "Starforged/Oracles/Space/Sighting/Expanse"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/3-4",
                Floor: 3,
                Ceiling: 4,
                Result: "Break a blockade"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/5-7",
                Floor: 5,
                Ceiling: 7,
                Result: "Collect a resource",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/8-9",
                Floor: 8,
                Ceiling: 9,
                Result: "Command others"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/10-11",
                Floor: 10,
                Ceiling: 11,
                Result: "Conduct diplomacy"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/12-13",
                Floor: 12,
                Ceiling: 13,
                Result: "Conduct espionage"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/14-16",
                Floor: 14,
                Ceiling: 16,
                Result: "Conduct piracy"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/17-20",
                Floor: 17,
                Ceiling: 20,
                Result: "Conduct research"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/21-24",
                Floor: 21,
                Ceiling: 24,
                Result: "Defend against an attack"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/25-28",
                Floor: 25,
                Ceiling: 28,
                Result: "Deliver messages or data"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/29-32",
                Floor: 29,
                Ceiling: 32,
                Result: "Establish a settlement"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/33-36",
                Floor: 33,
                Ceiling: 36,
                Result: "Evacuate a location",
                Suggestions: {
                  "Game objects": [{ "Object type": "Settlement" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/37-40",
                Floor: 37,
                Ceiling: 40,
                Result: "Explore a region"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/41-42",
                Floor: 41,
                Ceiling: 42,
                Result: "Hold prisoners"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/43-45",
                Floor: 43,
                Ceiling: 45,
                Result: "Hunt down another ship",
                Suggestions: {
                  "Game objects": [{ "Object type": "Starship" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/46-48",
                Floor: 46,
                Ceiling: 48,
                Result: "Launch an attack"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/49-50",
                Floor: 49,
                Ceiling: 50,
                Result: "Patrol an area"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/51-53",
                Floor: 51,
                Ceiling: 53,
                Result: "Provide medical aid"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/54-56",
                Floor: 54,
                Ceiling: 56,
                Result: "Provide repairs"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/57-59",
                Floor: 57,
                Ceiling: 59,
                Result: "Provide shelter"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/60-61",
                Floor: 60,
                Ceiling: 61,
                Result: "Quarantine a danger",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Action",
                    "Starforged/Oracles/Core/Theme"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/62-64",
                Floor: 62,
                Ceiling: 64,
                Result: "Raid a settlement",
                Suggestions: {
                  "Game objects": [{ "Object type": "Settlement" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/65-68",
                Floor: 65,
                Ceiling: 68,
                Result: "Resupply a settlement",
                Suggestions: {
                  "Game objects": [{ "Object type": "Settlement" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/69-71",
                Floor: 69,
                Ceiling: 71,
                Result: "Retrieve salvage"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/72-73",
                Floor: 72,
                Ceiling: 73,
                Result: "Search and rescue"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/74-75",
                Floor: 74,
                Ceiling: 75,
                Result: "Smuggle cargo",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/76-78",
                Floor: 76,
                Ceiling: 78,
                Result: "Survey a site",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Space/Sighting/Terminus",
                    "Starforged/Oracles/Space/Sighting/Outlands",
                    "Starforged/Oracles/Space/Sighting/Expanse"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/79-80",
                Floor: 79,
                Ceiling: 80,
                Result: "Test a technology",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/81-83",
                Floor: 81,
                Ceiling: 83,
                Result: "Transport cargo",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/84-85",
                Floor: 84,
                Ceiling: 85,
                Result: "Transport passengers",
                Suggestions: {
                  "Game objects": [{ "Object type": "Character" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Outlands/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 328
            },
            $id: "Starforged/Oracles/Starships/Mission/Expanse",
            Name: "Expanse",
            "Member of": "Starforged/Oracles/Starships/Mission",
            Category: "Starforged/Oracles/Starships",
            Display: {
              Title: "Expanse",
              "Column of": "Starforged/Oracles/Starships/Mission",
              Table: {
                "Result columns": [
                  {
                    Label: "Mission",
                    "Use content from": "Starforged/Oracles/Starships/Mission/Expanse",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Starships/Mission/Expanse"
                  }
                ]
              }
            },
            Usage: {
              Requires: {
                Attributes: [{ Key: "Region", Values: ["Expanse"] }]
              },
              "Allow duplicates": !1
            },
            Content: {
              "Part of speech": ["fragment"],
              Tags: ["objective"]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/1-2",
                Floor: 1,
                Ceiling: 2,
                Result: "Blockade a location",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Space/Sighting/Terminus",
                    "Starforged/Oracles/Space/Sighting/Outlands",
                    "Starforged/Oracles/Space/Sighting/Expanse"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/3-4",
                Floor: 3,
                Ceiling: 4,
                Result: "Break a blockade"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/5-8",
                Floor: 5,
                Ceiling: 8,
                Result: "Collect a resource",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/9-10",
                Floor: 9,
                Ceiling: 10,
                Result: "Command others"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/11-12",
                Floor: 11,
                Ceiling: 12,
                Result: "Conduct diplomacy"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/13-14",
                Floor: 13,
                Ceiling: 14,
                Result: "Conduct espionage"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/15-16",
                Floor: 15,
                Ceiling: 16,
                Result: "Conduct piracy"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/17-22",
                Floor: 17,
                Ceiling: 22,
                Result: "Conduct research"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/23-25",
                Floor: 23,
                Ceiling: 25,
                Result: "Defend against an attack"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/26-29",
                Floor: 26,
                Ceiling: 29,
                Result: "Deliver messages or data"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/30-35",
                Floor: 30,
                Ceiling: 35,
                Result: "Establish a settlement"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/36-39",
                Floor: 36,
                Ceiling: 39,
                Result: "Evacuate a location",
                Suggestions: {
                  "Game objects": [{ "Object type": "Settlement" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/40-45",
                Floor: 40,
                Ceiling: 45,
                Result: "Explore a region"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/46-47",
                Floor: 46,
                Ceiling: 47,
                Result: "Hold prisoners"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/48-49",
                Floor: 48,
                Ceiling: 49,
                Result: "Hunt down another ship",
                Suggestions: {
                  "Game objects": [{ "Object type": "Starship" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/50-51",
                Floor: 50,
                Ceiling: 51,
                Result: "Launch an attack"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/52-53",
                Floor: 52,
                Ceiling: 53,
                Result: "Patrol an area"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/54-55",
                Floor: 54,
                Ceiling: 55,
                Result: "Provide medical aid"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/56-57",
                Floor: 56,
                Ceiling: 57,
                Result: "Provide repairs"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/58-61",
                Floor: 58,
                Ceiling: 61,
                Result: "Provide shelter"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/62-63",
                Floor: 62,
                Ceiling: 63,
                Result: "Quarantine a danger",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Action",
                    "Starforged/Oracles/Core/Theme"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/64-65",
                Floor: 64,
                Ceiling: 65,
                Result: "Raid a settlement",
                Suggestions: {
                  "Game objects": [{ "Object type": "Settlement" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/66-69",
                Floor: 66,
                Ceiling: 69,
                Result: "Resupply a settlement",
                Suggestions: {
                  "Game objects": [{ "Object type": "Settlement" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/70-71",
                Floor: 70,
                Ceiling: 71,
                Result: "Retrieve salvage"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/72-73",
                Floor: 72,
                Ceiling: 73,
                Result: "Search and rescue"
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/74-75",
                Floor: 74,
                Ceiling: 75,
                Result: "Smuggle cargo",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/76-77",
                Floor: 76,
                Ceiling: 77,
                Result: "Survey a site",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Space/Sighting/Terminus",
                    "Starforged/Oracles/Space/Sighting/Outlands",
                    "Starforged/Oracles/Space/Sighting/Expanse"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/78-79",
                Floor: 78,
                Ceiling: 79,
                Result: "Test a technology",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/80-83",
                Floor: 80,
                Ceiling: 83,
                Result: "Transport cargo",
                Suggestions: {
                  "Oracle rolls": [
                    "Starforged/Oracles/Core/Descriptor",
                    "Starforged/Oracles/Core/Focus"
                  ]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/84-85",
                Floor: 84,
                Ceiling: 85,
                Result: "Transport passengers",
                Suggestions: {
                  "Game objects": [{ "Object type": "Character" }]
                }
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Starships/Mission/Expanse/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 329
        },
        $id: "Starforged/Oracles/Starships/Name",
        Name: "Name",
        Category: "Starforged/Oracles/Starships",
        Description: "Give a starship a name when it has an important role in your story. Scan this table and select a name which fits what you know of the ship\u2019s appearance and role. Or generate a random result and let any contradictions contribute to the ship\u2019s history or nature.",
        Display: {
          Title: "Starship Name",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Starships/Name",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Starships/Name"
              }
            ]
          }
        },
        Content: {
          "Part of speech": ["noun", "proper noun"],
          Tags: ["name"]
        },
        Table: [
          {
            $id: "Starforged/Oracles/Starships/Name/1",
            Floor: 1,
            Ceiling: 1,
            Result: "Arclight",
            Content: { "Part of speech": ["compound noun"] }
          },
          {
            $id: "Starforged/Oracles/Starships/Name/2",
            Floor: 2,
            Ceiling: 2,
            Result: "Argent Arrow"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/3",
            Floor: 3,
            Ceiling: 3,
            Result: "Artemis",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Starships/Name/4",
            Floor: 4,
            Ceiling: 4,
            Result: "Astral Explorer"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/5",
            Floor: 5,
            Ceiling: 5,
            Result: "Atlas",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Starships/Name/6",
            Floor: 6,
            Ceiling: 6,
            Result: "Aurora"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/7",
            Floor: 7,
            Ceiling: 7,
            Result: "Avari\u2019s Wake"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/8",
            Floor: 8,
            Ceiling: 8,
            Result: "Banshee\u2019s Cry"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/9",
            Floor: 9,
            Ceiling: 9,
            Result: "Beowulf",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Starships/Name/10",
            Floor: 10,
            Ceiling: 10,
            Result: "Bloody Jaw"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/11",
            Floor: 11,
            Ceiling: 11,
            Result: "Broken Sword"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/12",
            Floor: 12,
            Ceiling: 12,
            Result: "Buccaneer"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/13",
            Floor: 13,
            Ceiling: 13,
            Result: "Cerelis Nine"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/14",
            Floor: 14,
            Ceiling: 14,
            Result: "Clarion Call"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/15",
            Floor: 15,
            Ceiling: 15,
            Result: "Dawn\u2019s Herald"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/16",
            Floor: 16,
            Ceiling: 16,
            Result: "Dead Reckoning"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/17",
            Floor: 17,
            Ceiling: 17,
            Result: "Drift Runner"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/18",
            Floor: 18,
            Ceiling: 18,
            Result: "Eclipse"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/19",
            Floor: 19,
            Ceiling: 19,
            Result: "Elara Five"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/20",
            Floor: 20,
            Ceiling: 20,
            Result: "Enchantress"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/21",
            Floor: 21,
            Ceiling: 21,
            Result: "Endurance"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/22",
            Floor: 22,
            Ceiling: 22,
            Result: "Excalibur",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Starships/Name/23",
            Floor: 23,
            Ceiling: 23,
            Result: "Eye of the Void"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/24",
            Floor: 24,
            Ceiling: 24,
            Result: "Fall of Icarus"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/25",
            Floor: 25,
            Ceiling: 25,
            Result: "Fallen Light"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/26",
            Floor: 26,
            Ceiling: 26,
            Result: "False Hope"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/27",
            Floor: 27,
            Ceiling: 27,
            Result: "Firebreak"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/28",
            Floor: 28,
            Ceiling: 28,
            Result: "First Light"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/29",
            Floor: 29,
            Ceiling: 29,
            Result: "Forge Flier"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/30",
            Floor: 30,
            Ceiling: 30,
            Result: "Fortune\u2019s Favor"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/31",
            Floor: 31,
            Ceiling: 31,
            Result: "Freya\u2019s Wrath"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/32",
            Floor: 32,
            Ceiling: 32,
            Result: "Ghost"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/33",
            Floor: 33,
            Ceiling: 33,
            Result: "Guiding Star"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/34",
            Floor: 34,
            Ceiling: 34,
            Result: "Hand of Fate"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/35",
            Floor: 35,
            Ceiling: 35,
            Result: "Herald of Doom"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/36",
            Floor: 36,
            Ceiling: 36,
            Result: "Implacable"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/37",
            Floor: 37,
            Ceiling: 37,
            Result: "Implicit"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/38",
            Floor: 38,
            Ceiling: 38,
            Result: "Inferno"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/39",
            Floor: 39,
            Ceiling: 39,
            Result: "Invictus",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Starships/Name/40",
            Floor: 40,
            Ceiling: 40,
            Result: "Iron Cairn"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/41",
            Floor: 41,
            Ceiling: 41,
            Result: "Karena\u2019s Reverie"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/42",
            Floor: 42,
            Ceiling: 42,
            Result: "Kraken"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/43",
            Floor: 43,
            Ceiling: 43,
            Result: "Kuno\u2019s Hammer"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/44",
            Floor: 44,
            Ceiling: 44,
            Result: "Lightline"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/45",
            Floor: 45,
            Ceiling: 45,
            Result: "Lodestar"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/46",
            Floor: 46,
            Ceiling: 46,
            Result: "Long Haul"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/47",
            Floor: 47,
            Ceiling: 47,
            Result: "Lost Fortune"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/48",
            Floor: 48,
            Ceiling: 48,
            Result: "Luminous Sorrow"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/49",
            Floor: 49,
            Ceiling: 49,
            Result: "Manta"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/50",
            Floor: 50,
            Ceiling: 50,
            Result: "Mercy"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/51",
            Floor: 51,
            Ceiling: 51,
            Result: "Mutara",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Starships/Name/52",
            Floor: 52,
            Ceiling: 52,
            Result: "Nebula Prowler"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/53",
            Floor: 53,
            Ceiling: 53,
            Result: "Newton\u2019s Folly"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/54",
            Floor: 54,
            Ceiling: 54,
            Result: "Nightfall"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/55",
            Floor: 55,
            Ceiling: 55,
            Result: "Nomad"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/56",
            Floor: 56,
            Ceiling: 56,
            Result: "Obsidian Trident"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/57",
            Floor: 57,
            Ceiling: 57,
            Result: "Onslaught"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/58",
            Floor: 58,
            Ceiling: 58,
            Result: "Orca"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/59",
            Floor: 59,
            Ceiling: 59,
            Result: "Outward Bound"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/60",
            Floor: 60,
            Ceiling: 60,
            Result: "Phantom"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/61",
            Floor: 61,
            Ceiling: 61,
            Result: "Photon"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/62",
            Floor: 62,
            Ceiling: 62,
            Result: "Poltergeist"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/63",
            Floor: 63,
            Ceiling: 63,
            Result: "Profit Margin"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/64",
            Floor: 64,
            Ceiling: 64,
            Result: "Raven\u2019s Call"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/65",
            Floor: 65,
            Ceiling: 65,
            Result: "Raya\u2019s Promise"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/66",
            Floor: 66,
            Ceiling: 66,
            Result: "Reaper"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/67",
            Floor: 67,
            Ceiling: 67,
            Result: "Reforged Hope"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/68",
            Floor: 68,
            Ceiling: 68,
            Result: "Relentless"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/69",
            Floor: 69,
            Ceiling: 69,
            Result: "Royal Signet"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/70",
            Floor: 70,
            Ceiling: 70,
            Result: "Rubicon",
            Content: { "Part of speech": ["proper noun"] }
          },
          {
            $id: "Starforged/Oracles/Starships/Name/71",
            Floor: 71,
            Ceiling: 71,
            Result: "Sareea\u2019s Tribute"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/72",
            Floor: 72,
            Ceiling: 72,
            Result: "Second Chance"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/73",
            Floor: 73,
            Ceiling: 73,
            Result: "Shard of the Sun"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/74",
            Floor: 74,
            Ceiling: 74,
            Result: "Shattered Siege"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/75",
            Floor: 75,
            Ceiling: 75,
            Result: "Shattered Star"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/76",
            Floor: 76,
            Ceiling: 76,
            Result: "Silver Talon"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/77",
            Floor: 77,
            Ceiling: 77,
            Result: "Smoldering Flame"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/78",
            Floor: 78,
            Ceiling: 78,
            Result: "Sovereign Skies"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/79",
            Floor: 79,
            Ceiling: 79,
            Result: "Sparrowhawk"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/80",
            Floor: 80,
            Ceiling: 80,
            Result: "Stardust"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/81",
            Floor: 81,
            Ceiling: 81,
            Result: "Starfall",
            Content: { "Part of speech": ["compound noun"] }
          },
          {
            $id: "Starforged/Oracles/Starships/Name/82",
            Floor: 82,
            Ceiling: 82,
            Result: "Stellar Hawk"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/83",
            Floor: 83,
            Ceiling: 83,
            Result: "Stormswept",
            Content: { "Part of speech": ["compound noun"] }
          },
          {
            $id: "Starforged/Oracles/Starships/Name/84",
            Floor: 84,
            Ceiling: 84,
            Result: "Sundered Aegis"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/85",
            Floor: 85,
            Ceiling: 85,
            Result: "Sundown"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/86",
            Floor: 86,
            Ceiling: 86,
            Result: "Sureshot",
            Content: { "Part of speech": ["compound noun"] }
          },
          {
            $id: "Starforged/Oracles/Starships/Name/87",
            Floor: 87,
            Ceiling: 87,
            Result: "Terminus Clipper"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/88",
            Floor: 88,
            Ceiling: 88,
            Result: "Terrapin"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/89",
            Floor: 89,
            Ceiling: 89,
            Result: "Timber Wolf"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/90",
            Floor: 90,
            Ceiling: 90,
            Result: "Tip of the Spear"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/91",
            Floor: 91,
            Ceiling: 91,
            Result: "Titan"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/92",
            Floor: 92,
            Ceiling: 92,
            Result: "Tormentor"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/93",
            Floor: 93,
            Ceiling: 93,
            Result: "Trithia Six"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/94",
            Floor: 94,
            Ceiling: 94,
            Result: "Ultraviolet"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/95",
            Floor: 95,
            Ceiling: 95,
            Result: "Valora\u2019s Comet"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/96",
            Floor: 96,
            Ceiling: 96,
            Result: "Vengeance"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/97",
            Floor: 97,
            Ceiling: 97,
            Result: "Venture"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/98",
            Floor: 98,
            Ceiling: 98,
            Result: "Vigilant"
          },
          {
            $id: "Starforged/Oracles/Starships/Name/99",
            Floor: 99,
            Ceiling: 99,
            Result: "Voidtreader",
            Content: { "Part of speech": ["compound noun"] }
          },
          {
            $id: "Starforged/Oracles/Starships/Name/100",
            Floor: 100,
            Ceiling: 100,
            Result: "Vulture"
          }
        ]
      }
    ]
  },
  {
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 360
    },
    $id: "Starforged/Oracles/Vaults",
    Name: "Vaults",
    Description: "When you first come upon a vault, use the tables on the previous two pages to help envision its form and nature. For a more abstract prompt, just use the Descriptor oracle. In either case\u2014if that\u2019s enough detail for the role of the vault in your story\u2014stop there.",
    Display: { Title: "Precursor Vaults" },
    Oracles: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 360
        },
        $id: "Starforged/Oracles/Vaults/Location",
        Name: "Location",
        Category: "Starforged/Oracles/Vaults",
        Display: {
          Title: "Location",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Vaults/Location",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Vaults/Location"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Allow duplicates": !1,
          Sets: [{ Key: "Location" }]
        },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Vaults/Location/1-50",
            Floor: 1,
            Ceiling: 50,
            Result: "Planetside",
            Attributes: [{ Key: "Location", Value: "Planetside" }]
          },
          {
            $id: "Starforged/Oracles/Vaults/Location/51-75",
            Floor: 51,
            Ceiling: 75,
            Result: "Orbital",
            Attributes: [{ Key: "Location", Value: "Orbital" }]
          },
          {
            $id: "Starforged/Oracles/Vaults/Location/76-100",
            Floor: 76,
            Ceiling: 100,
            Result: "Deep Space",
            Attributes: [{ Key: "Location", Value: "Deep Space" }]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 360
        },
        $id: "Starforged/Oracles/Vaults/Scale",
        Name: "Scale",
        Category: "Starforged/Oracles/Vaults",
        Display: {
          Title: "Scale",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Vaults/Scale",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Vaults/Scale"
              }
            ]
          }
        },
        Usage: { Initial: !0, "Allow duplicates": !1 },
        Content: { "Part of speech": ["fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Vaults/Scale/1-30",
            Floor: 1,
            Ceiling: 30,
            Result: "Minor, confined site"
          },
          {
            $id: "Starforged/Oracles/Vaults/Scale/31-65",
            Floor: 31,
            Ceiling: 65,
            Result: "Typical site of limited scope"
          },
          {
            $id: "Starforged/Oracles/Vaults/Scale/66-90",
            Floor: 66,
            Ceiling: 90,
            Result: "Large, elaborate site"
          },
          {
            $id: "Starforged/Oracles/Vaults/Scale/91-99",
            Floor: 91,
            Ceiling: 99,
            Result: "Vast site of unfathomable complexity"
          },
          {
            $id: "Starforged/Oracles/Vaults/Scale/100",
            Floor: 100,
            Ceiling: 100,
            Result: "World-spanning site or megastructure"
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 360
        },
        $id: "Starforged/Oracles/Vaults/Form",
        Name: "Form",
        Category: "Starforged/Oracles/Vaults",
        Display: {
          Title: "Form",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Vaults/Form",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Vaults/Form"
              }
            ]
          }
        },
        Usage: { Initial: !0, "Allow duplicates": !1 },
        Content: { "Part of speech": ["noun", "common noun"] },
        Table: [
          {
            $id: "Starforged/Oracles/Vaults/Form/1-35",
            Floor: 1,
            Ceiling: 35,
            Result: "Structure"
          },
          {
            $id: "Starforged/Oracles/Vaults/Form/36-60",
            Floor: 36,
            Ceiling: 60,
            Result: "Vessel"
          },
          {
            $id: "Starforged/Oracles/Vaults/Form/61-80",
            Floor: 61,
            Ceiling: 80,
            Result: "Monument"
          },
          {
            $id: "Starforged/Oracles/Vaults/Form/81-95",
            Floor: 81,
            Ceiling: 95,
            Result: "Machine"
          },
          {
            $id: "Starforged/Oracles/Vaults/Form/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "Incomprehensible",
            Content: { "Part of speech": ["adjective"] }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 361
        },
        $id: "Starforged/Oracles/Vaults/Shape",
        Name: "Shape",
        Category: "Starforged/Oracles/Vaults",
        Display: {
          Title: "Shape",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Vaults/Shape",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Vaults/Shape"
              }
            ]
          }
        },
        Usage: { Initial: !0, "Allow duplicates": !1 },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Vaults/Shape/1-15",
            Floor: 1,
            Ceiling: 15,
            Result: "Practical or functional"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/16-20",
            Floor: 16,
            Ceiling: 20,
            Result: "Geometric (complex shape)"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/21-25",
            Floor: 21,
            Ceiling: 25,
            Result: "Geometric (cube)"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/26-30",
            Floor: 26,
            Ceiling: 30,
            Result: "Geometric (obelisk)"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/31-35",
            Floor: 31,
            Ceiling: 35,
            Result: "Geometric (pyramid)"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/36-40",
            Floor: 36,
            Ceiling: 40,
            Result: "Geometric (ring or torus)"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/41-45",
            Floor: 41,
            Ceiling: 45,
            Result: "Geometric (sphere)"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/46-55",
            Floor: 46,
            Ceiling: 55,
            Result: "Organic or curved"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/56-60",
            Floor: 56,
            Ceiling: 60,
            Result: "Platform or disc",
            Content: { "Part of speech": ["common noun", "plural"] }
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/61-65",
            Floor: 61,
            Ceiling: 65,
            Result: "Spires or towers",
            Content: { "Part of speech": ["common noun", "plural"] }
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/66-68",
            Floor: 66,
            Ceiling: 68,
            Result: "Domed"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/69-73",
            Floor: 69,
            Ceiling: 73,
            Result: "Spiky"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/74-76",
            Floor: 74,
            Ceiling: 76,
            Result: "Sculptural or effigy"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/77-79",
            Floor: 77,
            Ceiling: 79,
            Result: "Amorphous"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/80-85",
            Floor: 80,
            Ceiling: 85,
            Result: "Transforming"
          },
          {
            $id: "Starforged/Oracles/Vaults/Shape/86-100",
            Floor: 86,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 361
        },
        $id: "Starforged/Oracles/Vaults/Material",
        Name: "Material",
        Category: "Starforged/Oracles/Vaults",
        Display: {
          Title: "Material",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Vaults/Material",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Vaults/Material"
              }
            ]
          }
        },
        Usage: { Initial: !0, "Allow duplicates": !1 },
        Content: { "Part of speech": ["adjective"] },
        Table: [
          {
            $id: "Starforged/Oracles/Vaults/Material/1-30",
            Floor: 1,
            Ceiling: 30,
            Result: "Metallic (industrial)"
          },
          {
            $id: "Starforged/Oracles/Vaults/Material/31-60",
            Floor: 31,
            Ceiling: 60,
            Result: "Metallic (smooth)"
          },
          {
            $id: "Starforged/Oracles/Vaults/Material/61-70",
            Floor: 61,
            Ceiling: 70,
            Result: "Rocky or stone-like"
          },
          {
            $id: "Starforged/Oracles/Vaults/Material/71-74",
            Floor: 71,
            Ceiling: 74,
            Result: "Crystalline or glass-like"
          },
          {
            $id: "Starforged/Oracles/Vaults/Material/75-78",
            Floor: 75,
            Ceiling: 78,
            Result: "Bone-like"
          },
          {
            $id: "Starforged/Oracles/Vaults/Material/79-82",
            Floor: 79,
            Ceiling: 82,
            Result: "Flesh-like"
          },
          {
            $id: "Starforged/Oracles/Vaults/Material/83-86",
            Floor: 83,
            Ceiling: 86,
            Result: "Plant-like"
          },
          {
            $id: "Starforged/Oracles/Vaults/Material/87-88",
            Floor: 87,
            Ceiling: 88,
            Result: "Energy",
            Content: { "Part of speech": ["common noun"] }
          },
          {
            $id: "Starforged/Oracles/Vaults/Material/89-90",
            Floor: 89,
            Ceiling: 90,
            Result: "Liquid"
          },
          {
            $id: "Starforged/Oracles/Vaults/Material/91-100",
            Floor: 91,
            Ceiling: 100,
            Result: "Roll twice",
            "Multiple rolls": {
              Amount: 2,
              "Allow duplicates": !1,
              "Make it worse": !1
            }
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 361
        },
        $id: "Starforged/Oracles/Vaults/Outer_First_Look",
        Name: "Outer First Look",
        Aliases: ["First Look"],
        Category: "Starforged/Oracles/Vaults",
        Display: {
          Title: "Outer First Look",
          Table: {
            "Result columns": [
              {
                Label: "Result",
                "Use content from": "Starforged/Oracles/Vaults/Outer_First_Look",
                Key: "Result"
              }
            ],
            "Roll columns": [
              {
                Label: "Roll",
                "Use content from": "Starforged/Oracles/Vaults/Outer_First_Look"
              }
            ]
          }
        },
        Usage: {
          Initial: !0,
          "Max rolls": 2,
          "Allow duplicates": !1
        },
        Content: { "Part of speech": ["fragment"] },
        Table: [
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/1-3",
            Floor: 1,
            Ceiling: 3,
            Result: "Corrupting its environment"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/4-7",
            Floor: 4,
            Ceiling: 7,
            Result: "Automated defenses"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/8-10",
            Floor: 8,
            Ceiling: 10,
            Result: "Breached exterior"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/11-14",
            Floor: 11,
            Ceiling: 14,
            Result: "Broken or fragmented"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/15-17",
            Floor: 15,
            Ceiling: 17,
            Result: "Camouflaged or hidden"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/18-20",
            Floor: 18,
            Ceiling: 20,
            Result: "Cavernous opening"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/21-23",
            Floor: 21,
            Ceiling: 23,
            Result: "Dispersed structures"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/24-26",
            Floor: 24,
            Ceiling: 26,
            Result: "Dreadful premonitions"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/27-30",
            Floor: 27,
            Ceiling: 30,
            Result: "Electromagnetic field"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/31-33",
            Floor: 31,
            Ceiling: 33,
            Result: "Embedded within terrain"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/34-36",
            Floor: 34,
            Ceiling: 36,
            Result: "Encased in an energy field"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/37-40",
            Floor: 37,
            Ceiling: 40,
            Result: "Energy core or conduit"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/41-43",
            Floor: 41,
            Ceiling: 43,
            Result: "Fractal patterns"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/44-47",
            Floor: 44,
            Ceiling: 47,
            Result: "Glyphs or symbols"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/48-51",
            Floor: 48,
            Ceiling: 51,
            Result: "Hazardous readings"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/52-54",
            Floor: 52,
            Ceiling: 54,
            Result: "Levitating or in motion"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/55-58",
            Floor: 55,
            Ceiling: 58,
            Result: "Lighted or illuminated"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/59-61",
            Floor: 59,
            Ceiling: 61,
            Result: "No obvious point of entry"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/62-64",
            Floor: 62,
            Ceiling: 64,
            Result: "Overgrown or entangled"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/65-67",
            Floor: 65,
            Ceiling: 67,
            Result: "Perfectly preserved"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/68-70",
            Floor: 68,
            Ceiling: 70,
            Result: "Phasing in and out of reality"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/71-73",
            Floor: 71,
            Ceiling: 73,
            Result: "Physical barrier"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/74-76",
            Floor: 74,
            Ceiling: 76,
            Result: "Pitted or scarred"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/77-79",
            Floor: 77,
            Ceiling: 79,
            Result: "Scaled for outsized beings"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/80-82",
            Floor: 80,
            Ceiling: 82,
            Result: "Shrouded in mist or haze"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/83-85",
            Floor: 83,
            Ceiling: 85,
            Result: "Signs of invaders"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/86-89",
            Floor: 86,
            Ceiling: 89,
            Result: "Sound or signal"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/90-92",
            Floor: 90,
            Ceiling: 92,
            Result: "Strong gravity well"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/93-95",
            Floor: 93,
            Ceiling: 95,
            Result: "Surrounded by destruction"
          },
          {
            $id: "Starforged/Oracles/Vaults/Outer_First_Look/96-100",
            Floor: 96,
            Ceiling: 100,
            Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
            "Oracle rolls": [
              "Starforged/Oracles/Core/Descriptor",
              "Starforged/Oracles/Core/Focus"
            ]
          }
        ]
      }
    ],
    Categories: [
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 360
        },
        $id: "Starforged/Oracles/Vaults/Interior",
        Name: "Interior",
        Category: "Starforged/Oracles/Vaults",
        Description: "If you enter the site, check the Inner First Look table for initial impressions of what lies within. If you explore further, use the Interior Feature table to define what you find or encounter. If you Undertake an Expedition within a vault, check this table if you want help setting the scene for a waypoint.",
        Display: {
          Title: "Interior",
          Icon: "../../img/vector/Vaults/Interior.svg"
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 364
            },
            $id: "Starforged/Oracles/Vaults/Interior/First_Look",
            Name: "First Look",
            Category: "Starforged/Oracles/Vaults/Interior",
            Description: "Use this table to reveal what you see or encounter when first entering the site. These aspects, combined with the exterior features, will help you envision the nature and condition of the vault and provide context for the rest of your exploration.",
            Display: {
              Title: "Inner First Look",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Vaults/Interior/First_Look",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Vaults/Interior/First_Look"
                  }
                ]
              }
            },
            Usage: {
              Initial: !0,
              "Max rolls": 2,
              "Allow duplicates": !1
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/1-3",
                Floor: 1,
                Ceiling: 3,
                Result: "Abnormal gravity"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/4-6",
                Floor: 4,
                Ceiling: 6,
                Result: "Automated defenses"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/7-9",
                Floor: 7,
                Ceiling: 9,
                Result: "Biological infestation"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/10-12",
                Floor: 10,
                Ceiling: 12,
                Result: "Carried tech is disrupted"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/13-15",
                Floor: 13,
                Ceiling: 15,
                Result: "Complex textures or patterns"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/16-18",
                Floor: 16,
                Ceiling: 18,
                Result: "Corpses of intruders"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/19-21",
                Floor: 19,
                Ceiling: 21,
                Result: "Damage and debris"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/22-24",
                Floor: 22,
                Ceiling: 24,
                Result: "Deteriorating spaces"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/25-27",
                Floor: 25,
                Ceiling: 27,
                Result: "Dissonant tones or music"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/28-30",
                Floor: 28,
                Ceiling: 30,
                Result: "Energy surges"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/31-33",
                Floor: 31,
                Ceiling: 33,
                Result: "Environment reacts to your presence"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/34-36",
                Floor: 34,
                Ceiling: 36,
                Result: "Evidence of looting or scavenging"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/37-39",
                Floor: 37,
                Ceiling: 39,
                Result: "Excessive cold"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/40-42",
                Floor: 40,
                Ceiling: 42,
                Result: "Excessive heat"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/43-45",
                Floor: 43,
                Ceiling: 45,
                Result: "Faint ambient lighting"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/46-48",
                Floor: 46,
                Ceiling: 48,
                Result: "Impenetrable darkness"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/49-51",
                Floor: 49,
                Ceiling: 51,
                Result: "Intense smell"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/52-54",
                Floor: 52,
                Ceiling: 54,
                Result: "Magnetic surfaces"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/55-57",
                Floor: 55,
                Ceiling: 57,
                Result: "Material does not match exterior"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/58-60",
                Floor: 58,
                Ceiling: 60,
                Result: "Ornate markings or symbols"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/61-63",
                Floor: 61,
                Ceiling: 63,
                Result: "Reactive lighting responds to your presence"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/64-66",
                Floor: 64,
                Ceiling: 66,
                Result: "Scale does not match exterior"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/67-69",
                Floor: 67,
                Ceiling: 69,
                Result: "Signs of invasive lifeforms"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/70-72",
                Floor: 70,
                Ceiling: 72,
                Result: "Surfaces respond to touch"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/73-75",
                Floor: 73,
                Ceiling: 75,
                Result: "Thick haze or smoke"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/76-78",
                Floor: 76,
                Ceiling: 78,
                Result: "Thick or fluid atmosphere"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/79-81",
                Floor: 79,
                Ceiling: 81,
                Result: "Thrumming or droning sound"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/82-84",
                Floor: 82,
                Ceiling: 84,
                Result: "Toxic atmosphere"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/85-87",
                Floor: 85,
                Ceiling: 87,
                Result: "Toxic residue"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/88-90",
                Floor: 88,
                Ceiling: 90,
                Result: "Well-preserved"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/91-93",
                Floor: 91,
                Ceiling: 93,
                Result: "Wet or humid"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/First_Look/94-100",
                Floor: 94,
                Ceiling: 100,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 366
            },
            $id: "Starforged/Oracles/Vaults/Interior/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Vaults/Interior",
            Display: {
              Title: "Interior Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Vaults/Interior/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Vaults/Interior/Feature"
                  }
                ]
              }
            },
            Usage: { Repeatable: !0, "Allow duplicates": !1 },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/1-3",
                Floor: 1,
                Ceiling: 3,
                Result: "Ascending or descending path"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/4-6",
                Floor: 4,
                Ceiling: 6,
                Result: "Biological growths"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/7-8",
                Floor: 7,
                Ceiling: 8,
                Result: "Blood trail"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/9-10",
                Floor: 9,
                Ceiling: 10,
                Result: "Breached or ruptured area"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/11-13",
                Floor: 11,
                Ceiling: 13,
                Result: "Broken or inactive machinery"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/14-15",
                Floor: 14,
                Ceiling: 15,
                Result: "Clinging mist"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/16-18",
                Floor: 16,
                Ceiling: 18,
                Result: "Damage or debris"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/19-20",
                Floor: 19,
                Ceiling: 20,
                Result: "Echoing noises"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/21-22",
                Floor: 21,
                Ceiling: 22,
                Result: "Elevated path over chasm or shaft"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/23-25",
                Floor: 23,
                Ceiling: 25,
                Result: "Energy discharges"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/26-28",
                Floor: 26,
                Ceiling: 28,
                Result: "Enigmatic controls or terminal"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/29-30",
                Floor: 29,
                Ceiling: 30,
                Result: "Garden or invasive plant life"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/31-32",
                Floor: 31,
                Ceiling: 32,
                Result: "Inscrutable object lies dark and silent"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/33-35",
                Floor: 33,
                Ceiling: 35,
                Result: "Intersection or hub"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/36-38",
                Floor: 36,
                Ceiling: 38,
                Result: "Intricate symbols or pictographs"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/39-41",
                Floor: 39,
                Ceiling: 41,
                Result: "Looted or dismantled technology"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/42-44",
                Floor: 42,
                Ceiling: 44,
                Result: "Looted or empty containers"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/45-47",
                Floor: 45,
                Ceiling: 47,
                Result: "Mazelike passages"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/48-49",
                Floor: 48,
                Ceiling: 49,
                Result: "Moving platform or lift"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/50-52",
                Floor: 50,
                Ceiling: 52,
                Result: "Mummified or decayed corpses"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/53-55",
                Floor: 53,
                Ceiling: 55,
                Result: "Narrowing or widening path"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/56-58",
                Floor: 56,
                Ceiling: 58,
                Result: "Pooled liquid"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/59-61",
                Floor: 59,
                Ceiling: 61,
                Result: "Remains of intruders"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/62-63",
                Floor: 62,
                Ceiling: 63,
                Result: "Scattered bones"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/64-66",
                Floor: 64,
                Ceiling: 66,
                Result: "Scrawled markings"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/67-68",
                Floor: 67,
                Ceiling: 68,
                Result: "Signs of an attack or battle"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/69-71",
                Floor: 69,
                Ceiling: 71,
                Result: "Signs of invasive creatures"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/72-73",
                Floor: 72,
                Ceiling: 73,
                Result: "Surfaces honeycombed with openings"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/74-76",
                Floor: 74,
                Ceiling: 76,
                Result: "Unintelligible recorded message"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/77-79",
                Floor: 77,
                Ceiling: 79,
                Result: "Unintelligible whispers"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/80-82",
                Floor: 80,
                Ceiling: 82,
                Result: "Vaulted chamber"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/83-85",
                Floor: 83,
                Ceiling: 85,
                Result: "Vertical shaft"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "Transition into the [\u23F5Sanctum](Starforged/Oracles/Vaults/Sanctum)"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/91-95",
                Floor: 91,
                Ceiling: 95,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Feature/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 367
            },
            $id: "Starforged/Oracles/Vaults/Interior/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Vaults/Interior",
            Description: "Use this table to help envision a complication within a vault, such as when you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint) and are prompted to envision a peril.",
            Display: {
              Title: "Interior Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Vaults/Interior/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Vaults/Interior/Peril"
                  }
                ]
              }
            },
            Usage: { Repeatable: !0, "Allow duplicates": !1 },
            Content: {
              "Part of speech": ["fragment"],
              Tags: ["peril", "event", "present"]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/1-5",
                Floor: 1,
                Ceiling: 5,
                Result: "Broken path"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/6-10",
                Floor: 6,
                Ceiling: 10,
                Result: "Change in atmosphere or environment"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/11-15",
                Floor: 11,
                Ceiling: 15,
                Result: "Corrosive environment"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/16-20",
                Floor: 16,
                Ceiling: 20,
                Result: "Dire warning left by other explorers"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/21-25",
                Floor: 21,
                Ceiling: 25,
                Result: "Foes close in"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/26-30",
                Floor: 26,
                Ceiling: 30,
                Result: "Fragile structural integrity"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/31-35",
                Floor: 31,
                Ceiling: 35,
                Result: "Hazardous path designed for traversal by other beings"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/36-40",
                Floor: 36,
                Ceiling: 40,
                Result: "Important gear malfunctions"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/41-45",
                Floor: 41,
                Ceiling: 45,
                Result: "Isolation or fear presses in"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/46-50",
                Floor: 46,
                Ceiling: 50,
                Result: "Mechanical trap"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/51-55",
                Floor: 51,
                Ceiling: 55,
                Result: "Mist or darkness conceals dangers"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/56-60",
                Floor: 56,
                Ceiling: 60,
                Result: "Puzzling mystery blocks the way"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/61-65",
                Floor: 61,
                Ceiling: 65,
                Result: "Radioactive hot spot"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/66-70",
                Floor: 66,
                Ceiling: 70,
                Result: "Rivals seek what lay within"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/71-75",
                Floor: 71,
                Ceiling: 75,
                Result: "Signs of a contagion"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/76-80",
                Floor: 76,
                Ceiling: 80,
                Result: "Signs of a lurking foe"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "Tempting location or object holds hidden dangers"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "Toxic atmosphere"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/91-95",
                Floor: 91,
                Ceiling: 95,
                Result: "Unnerving sound or sensation"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/96-99",
                Floor: 96,
                Ceiling: 99,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Peril/100",
                Floor: 100,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 367
            },
            $id: "Starforged/Oracles/Vaults/Interior/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Vaults/Interior",
            Description: "Use this table to help envision a favorable circumstance within a vault, such as when you [Explore a Waypoint](Starforged/Moves/Exploration/Explore_a_Waypoint) and are prompted to envision an opportunity.",
            Display: {
              Title: "Interior Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Vaults/Interior/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Vaults/Interior/Opportunity"
                  }
                ]
              }
            },
            Usage: { Repeatable: !0, "Allow duplicates": !1 },
            Content: {
              "Part of speech": ["fragment"],
              Tags: ["opportunity"]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Vaults/Interior/Opportunity/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Clue points the way to your destination or target"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Opportunity/11-20",
                Floor: 11,
                Ceiling: 20,
                Result: "Clue to a lifeform's nature or vulnerabilities"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Opportunity/21-30",
                Floor: 21,
                Ceiling: 30,
                Result: "Helpful gear left by another explorer"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Opportunity/31-40",
                Floor: 31,
                Ceiling: 40,
                Result: "Insight into the nature or history of this site"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Opportunity/41-50",
                Floor: 41,
                Ceiling: 50,
                Result: "Intriguing device or artifact"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Opportunity/51-60",
                Floor: 51,
                Ceiling: 60,
                Result: "Opening to get the drop on a foe"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Opportunity/61-70",
                Floor: 61,
                Ceiling: 70,
                Result: "Opening to outmaneuver or escape a threat or foe"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Opportunity/71-80",
                Floor: 71,
                Ceiling: 80,
                Result: "Salvageable resource"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Opportunity/81-90",
                Floor: 81,
                Ceiling: 90,
                Result: "Secure area offers a moment of peace"
              },
              {
                $id: "Starforged/Oracles/Vaults/Interior/Opportunity/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Shortcut or less perilous path speeds your way"
              }
            ]
          }
        ]
      },
      {
        Source: {
          Title: "Ironsworn: Starforged Rulebook",
          Authors: ["Shawn Tomkin"],
          Date: "050622",
          Page: 360
        },
        $id: "Starforged/Oracles/Vaults/Sanctum",
        Name: "Sanctum",
        Category: "Starforged/Oracles/Vaults",
        Description: "As you delve deeper into a vault, the corruption and strangeness of the place takes hold. Use the Sanctum Feature table to represent the aberrant nature of a vault\u2019s depths.",
        Display: {
          Title: "Sanctum",
          Icon: "../../img/vector/Vaults/Sanctum.svg"
        },
        Oracles: [
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 365
            },
            $id: "Starforged/Oracles/Vaults/Sanctum/Purpose",
            Name: "Purpose",
            Category: "Starforged/Oracles/Vaults/Sanctum",
            Description: "Because precursor vaults are alien and enigmatic, understanding their ultimate purpose requires investigation and exploration. Use this table to reveal the vault\u2019s original function or role at an appropriate point in your survey. This can come as an outcome of completing an expedition, or when your story naturally leads you to a revelation of the site\u2019s nature.",
            Display: {
              Title: "Vault Purpose",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Vaults/Sanctum/Purpose",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Vaults/Sanctum/Purpose"
                  }
                ]
              }
            },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/1-3",
                Floor: 1,
                Ceiling: 3,
                Result: "Capture or control of other beings"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/4-6",
                Floor: 4,
                Ceiling: 6,
                Result: "Command or communication relay"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/7-9",
                Floor: 7,
                Ceiling: 9,
                Result: "Commemoration of an event"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/10-12",
                Floor: 10,
                Ceiling: 12,
                Result: "Conduit to mystical powers"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/13-16",
                Floor: 13,
                Ceiling: 16,
                Result: "Conservation of living specimens"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/17-20",
                Floor: 17,
                Ceiling: 20,
                Result: "Containment of a powerful being"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/21-24",
                Floor: 21,
                Ceiling: 24,
                Result: "Containment of dangerous creatures"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/25-27",
                Floor: 25,
                Ceiling: 27,
                Result: "Containment of weapons"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/28-31",
                Floor: 28,
                Ceiling: 31,
                Result: "Control of a destructive weapon"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/32-34",
                Floor: 32,
                Ceiling: 34,
                Result: "Generation of defenses or barriers"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/35-38",
                Floor: 35,
                Ceiling: 38,
                Result: "Generation or transformation of energy"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/39-41",
                Floor: 39,
                Ceiling: 41,
                Result: "Harvesting of resources"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/42-44",
                Floor: 42,
                Ceiling: 44,
                Result: "Interment of the dead"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/45-47",
                Floor: 45,
                Ceiling: 47,
                Result: "Manipulation of spacetime"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/48-50",
                Floor: 48,
                Ceiling: 50,
                Result: "Manufacturing of lifeforms"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/51-53",
                Floor: 51,
                Ceiling: 53,
                Result: "Manufacturing of machines or devices"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/54-56",
                Floor: 54,
                Ceiling: 56,
                Result: "Passage to another location"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/57-59",
                Floor: 57,
                Ceiling: 59,
                Result: "Preservation of an ancient intelligence"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/60-62",
                Floor: 60,
                Ceiling: 62,
                Result: "Preservation of maps or navigational data"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/63-66",
                Floor: 63,
                Ceiling: 66,
                Result: "Protection of a sacred artifact"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/67-69",
                Floor: 67,
                Ceiling: 69,
                Result: "Researching science or technology"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/70-73",
                Floor: 70,
                Ceiling: 73,
                Result: "Safekeeping of cultural records or memories"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/74-77",
                Floor: 74,
                Ceiling: 77,
                Result: "Shelter for inhabitants"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/78-80",
                Floor: 78,
                Ceiling: 80,
                Result: "Stockpiling of resources"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/81-83",
                Floor: 81,
                Ceiling: 83,
                Result: "Surveying or monitoring of a location"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/84-87",
                Floor: 84,
                Ceiling: 87,
                Result: "Transformation of terrain or environments"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/88-90",
                Floor: 88,
                Ceiling: 90,
                Result: "Worship of a god or being"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/91-95",
                Floor: 91,
                Ceiling: 95,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Purpose/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 368
            },
            $id: "Starforged/Oracles/Vaults/Sanctum/Feature",
            Name: "Feature",
            Category: "Starforged/Oracles/Vaults/Sanctum",
            Display: {
              Title: "Sanctum Feature",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Vaults/Sanctum/Feature",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Vaults/Sanctum/Feature"
                  }
                ]
              }
            },
            Usage: { Repeatable: !0, "Allow duplicates": !1 },
            Content: { "Part of speech": ["fragment"] },
            Table: [
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/1-2",
                Floor: 1,
                Ceiling: 2,
                Result: "Abyssal pit or chasm"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/3-5",
                Floor: 3,
                Ceiling: 5,
                Result: "Altered gravity"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/6-7",
                Floor: 6,
                Ceiling: 7,
                Result: "Area filled with strange liquid"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/8-10",
                Floor: 8,
                Ceiling: 10,
                Result: "Area humming with aberrant energy"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/11-13",
                Floor: 11,
                Ceiling: 13,
                Result: "Blasted or wrecked area"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/14-16",
                Floor: 14,
                Ceiling: 16,
                Result: "Central chamber of immense proportions or grandeur"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/17-19",
                Floor: 17,
                Ceiling: 19,
                Result: "Colossal machine"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/20-21",
                Floor: 20,
                Ceiling: 21,
                Result: "Corrupted plant life"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/22-24",
                Floor: 22,
                Ceiling: 24,
                Result: "Enigmatic mechanisms come to life"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/25-26",
                Floor: 25,
                Ceiling: 26,
                Result: "Haze of spores or nanomachines"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/27-28",
                Floor: 27,
                Ceiling: 28,
                Result: "Incomprehensible architecture or geometry"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/29-31",
                Floor: 29,
                Ceiling: 31,
                Result: "Incongruent space contradicts the nature of this site"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/32-34",
                Floor: 32,
                Ceiling: 34,
                Result: "Inscrutable object emits sound and energy"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/35-37",
                Floor: 35,
                Ceiling: 37,
                Result: "Machinery fused with organic growths"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/38-40",
                Floor: 38,
                Ceiling: 40,
                Result: "Moving chamber or passage"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/41-43",
                Floor: 41,
                Ceiling: 43,
                Result: "Mutated remains of the dead"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/44-46",
                Floor: 44,
                Ceiling: 46,
                Result: "Nest of invasive creatures"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/47-49",
                Floor: 47,
                Ceiling: 49,
                Result: "Pockets or layers of altered atmosphere"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/50-51",
                Floor: 50,
                Ceiling: 51,
                Result: "Pods or chambers with preserved corpses"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/52-54",
                Floor: 52,
                Ceiling: 54,
                Result: "Pools of strange liquid"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/55-57",
                Floor: 55,
                Ceiling: 57,
                Result: "Pulsating surfaces"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/58-60",
                Floor: 58,
                Ceiling: 60,
                Result: "Rampant biological infestation"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/61-63",
                Floor: 61,
                Ceiling: 63,
                Result: "Repository of biological specimens"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/64-66",
                Floor: 64,
                Ceiling: 66,
                Result: "Sealed chamber"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/67-69",
                Floor: 67,
                Ceiling: 69,
                Result: "Sealed containers of inscrutable purpose"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/70-72",
                Floor: 70,
                Ceiling: 72,
                Result: "Simulated or illusionary environment"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/73-74",
                Floor: 73,
                Ceiling: 74,
                Result: "Surfaces covered in slime or fungus"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/75-76",
                Floor: 75,
                Ceiling: 76,
                Result: "Temporal distortions"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/77-79",
                Floor: 77,
                Ceiling: 79,
                Result: "Transforming spaces"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/80-82",
                Floor: 80,
                Ceiling: 82,
                Result: "Visions of this place in another time"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/83-85",
                Floor: 83,
                Ceiling: 85,
                Result: "Visions or reflections of another reality"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/86-88",
                Floor: 86,
                Ceiling: 88,
                Result: "Warped or misshapen spaces"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/89-90",
                Floor: 89,
                Ceiling: 90,
                Result: "Whispering voices speak to you"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/91-95",
                Floor: 91,
                Ceiling: 95,
                Result: "[\u23F5Descriptor + Focus](Starforged/Oracles/Core/Descriptor)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Descriptor",
                  "Starforged/Oracles/Core/Focus"
                ]
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Feature/96-100",
                Floor: 96,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 369
            },
            $id: "Starforged/Oracles/Vaults/Sanctum/Peril",
            Name: "Peril",
            Category: "Starforged/Oracles/Vaults/Sanctum",
            Display: {
              Title: "Sanctum Peril",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Vaults/Sanctum/Peril",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Vaults/Sanctum/Peril"
                  }
                ]
              }
            },
            Usage: { Repeatable: !0, "Allow duplicates": !1 },
            Content: {
              "Part of speech": ["fragment"],
              Tags: ["peril", "event", "present"]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/1-5",
                Floor: 1,
                Ceiling: 5,
                Result: "Camouflaged or transforming foe reveals itself"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/6-10",
                Floor: 6,
                Ceiling: 10,
                Result: "Confounding distortions of the timestream"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/11-15",
                Floor: 11,
                Ceiling: 15,
                Result: "Destructive environmental disturbance"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/16-20",
                Floor: 16,
                Ceiling: 20,
                Result: "Horrifying fate for a previous intruder"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/21-25",
                Floor: 21,
                Ceiling: 25,
                Result: "Important equipment rendered useless"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/26-30",
                Floor: 26,
                Ceiling: 30,
                Result: "Led astray or lured into danger by a manifestation or illusion"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/31-35",
                Floor: 31,
                Ceiling: 35,
                Result: "Lost the way or separated from others"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/36-40",
                Floor: 36,
                Ceiling: 40,
                Result: "Manifestations prey upon your weaknesses or worries"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/41-45",
                Floor: 41,
                Ceiling: 45,
                Result: "Other intruders have been corrupted or mutated by this place"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/46-50",
                Floor: 46,
                Ceiling: 50,
                Result: "Paranoia or suspicion takes hold"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/51-55",
                Floor: 51,
                Ceiling: 55,
                Result: "Path behind you is sealed"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/56-60",
                Floor: 56,
                Ceiling: 60,
                Result: "Powerful foe strikes without warning"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/61-65",
                Floor: 61,
                Ceiling: 65,
                Result: "Restless dead awaken"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/66-70",
                Floor: 66,
                Ceiling: 70,
                Result: "Scene of hideous violence or death"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/71-75",
                Floor: 71,
                Ceiling: 75,
                Result: "Snared in an unnatural trap"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/76-80",
                Floor: 76,
                Ceiling: 80,
                Result: "Spawning or swarming foes surround you"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/81-85",
                Floor: 81,
                Ceiling: 85,
                Result: "Sudden structural collapse or failure"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/86-90",
                Floor: 86,
                Ceiling: 90,
                Result: "Temptations to linger or remain in this site"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/91-95",
                Floor: 91,
                Ceiling: 95,
                Result: "You are marked by physical corruption or mutation"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/96-99",
                Floor: 96,
                Ceiling: 99,
                Result: "[\u23F5Action + Theme](Starforged/Oracles/Core/Action)",
                "Oracle rolls": [
                  "Starforged/Oracles/Core/Action",
                  "Starforged/Oracles/Core/Theme"
                ]
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Peril/100",
                Floor: 100,
                Ceiling: 100,
                Result: "Roll twice",
                "Multiple rolls": {
                  Amount: 2,
                  "Allow duplicates": !1,
                  "Make it worse": !1
                }
              }
            ]
          },
          {
            Source: {
              Title: "Ironsworn: Starforged Rulebook",
              Authors: ["Shawn Tomkin"],
              Date: "050622",
              Page: 369
            },
            $id: "Starforged/Oracles/Vaults/Sanctum/Opportunity",
            Name: "Opportunity",
            Category: "Starforged/Oracles/Vaults/Sanctum",
            Display: {
              Title: "Sanctum Opportunity",
              Table: {
                "Result columns": [
                  {
                    Label: "Result",
                    "Use content from": "Starforged/Oracles/Vaults/Sanctum/Opportunity",
                    Key: "Result"
                  }
                ],
                "Roll columns": [
                  {
                    Label: "Roll",
                    "Use content from": "Starforged/Oracles/Vaults/Sanctum/Opportunity"
                  }
                ]
              }
            },
            Usage: { Repeatable: !0, "Allow duplicates": !1 },
            Content: {
              "Part of speech": ["fragment"],
              Tags: ["opportunity"]
            },
            Table: [
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Opportunity/1-10",
                Floor: 1,
                Ceiling: 10,
                Result: "Access to a secret or protected area"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Opportunity/11-20",
                Floor: 11,
                Ceiling: 20,
                Result: "Clue points the way to your destination or target"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Opportunity/21-30",
                Floor: 21,
                Ceiling: 30,
                Result: "Comforting illusion or vision"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Opportunity/31-40",
                Floor: 31,
                Ceiling: 40,
                Result: "Control or terminal adjusts to accept your input"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Opportunity/41-50",
                Floor: 41,
                Ceiling: 50,
                Result: "Deeper insight into the history or nature of this site"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Opportunity/51-60",
                Floor: 51,
                Ceiling: 60,
                Result: "Device or artifact reveals its purpose"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Opportunity/61-70",
                Floor: 61,
                Ceiling: 70,
                Result: "Environment adjusts to better suit you"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Opportunity/71-80",
                Floor: 71,
                Ceiling: 80,
                Result: "Foes stand down or give way"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Opportunity/81-90",
                Floor: 81,
                Ceiling: 90,
                Result: "Key offers control of a function or aspect of this site"
              },
              {
                $id: "Starforged/Oracles/Vaults/Sanctum/Opportunity/91-100",
                Floor: 91,
                Ceiling: 100,
                Result: "Shortcut or less perilous path speeds your way"
              }
            ]
          }
        ]
      }
    ]
  }
], Setting_Truths = [
  {
    $id: "Starforged/Setting_Truths/Cataclysm",
    Name: "Cataclysm",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Cataclysm/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "The Sun Plague extinguished the stars in our home galaxy.",
        Subtable: [
          {
            $id: "Starforged/Setting_Truths/Cataclysm/1-33/Subtable/1-25",
            Floor: 1,
            Ceiling: 25,
            Result: "Temporal distortions from a supermassive black hole"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/1-33/Subtable/26-50",
            Floor: 26,
            Ceiling: 50,
            Result: "Sudden dark matter decay"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/1-33/Subtable/51-75",
            Floor: 51,
            Ceiling: 75,
            Result: "Superweapon run amok"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/1-33/Subtable/76-100",
            Floor: 76,
            Ceiling: 100,
            Result: "Scientific experiment gone awry"
          }
        ],
        Description: `The anomaly traveled at incredible speeds, many times faster than light itself, and snuffed out the stars around us before we realized it was coming. Few of us survived as we made our way to this new galaxy. Here in the Forge, the stars are still aflame. We cling to their warmth like weary travelers huddled around a fire.

We suspect the Sun Plague was caused by:`,
        "Quest Starter": "The galaxy your people left behind is a cold, lightless grave. But a solitary star still glows, a beacon in a vast darkness. How did this star survive the plague? Why do you vow to find the means to travel across the immeasurable gulf to this distant light?"
      },
      {
        $id: "Starforged/Setting_Truths/Cataclysm/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "Interdimensional entities invaded our reality.",
        Subtable: [
          {
            $id: "Starforged/Setting_Truths/Cataclysm/34-67/Subtable/1-15",
            Floor: 1,
            Ceiling: 15,
            Result: "Corrupting biological scourges"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/34-67/Subtable/16-30",
            Floor: 16,
            Ceiling: 30,
            Result: "Swarming, animalistic creatures"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/34-67/Subtable/31-44",
            Floor: 31,
            Ceiling: 44,
            Result: "Monstrous humanoids"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/34-67/Subtable/45-58",
            Floor: 45,
            Ceiling: 58,
            Result: "Spirits of alluring, divine form"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/34-67/Subtable/59-72",
            Floor: 59,
            Ceiling: 72,
            Result: "Beings of chaotic energy"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/34-67/Subtable/73-86",
            Floor: 73,
            Ceiling: 86,
            Result: "Titanic creatures of horrific power"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/34-67/Subtable/87-100",
            Floor: 87,
            Ceiling: 100,
            Result: "World-eating abominations of unimaginable scale"
          }
        ],
        Description: `Without warning, these implacable and enigmatic beings ravaged our homeworlds. We could not stand against them. With the last of our defenses destroyed, our hope gone, we cast our fate to the Forge. Here, we can hide. Survive.

These entities took the form of:`,
        "Quest Starter": "Here in the Forge, a rogue faction holds an artifact of these interdimensional entities. What is the nature of this relic? What power or dark fate does the faction intend to unleash?"
      },
      {
        $id: "Starforged/Setting_Truths/Cataclysm/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "We escaped the ravages of a catastrophic war.",
        Subtable: [
          {
            $id: "Starforged/Setting_Truths/Cataclysm/68-100/Subtable/1-20",
            Floor: 1,
            Ceiling: 20,
            Result: "Artificial intelligence"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/68-100/Subtable/21-40",
            Floor: 21,
            Ceiling: 40,
            Result: "Religious zealots"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/68-100/Subtable/41-60",
            Floor: 41,
            Ceiling: 60,
            Result: "Genetically engineered soldiers"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/68-100/Subtable/61-80",
            Floor: 61,
            Ceiling: 80,
            Result: "Self-replicating nanomachines"
          },
          {
            $id: "Starforged/Setting_Truths/Cataclysm/68-100/Subtable/81-100",
            Floor: 81,
            Ceiling: 100,
            Result: "A tyrannical faction or leader"
          }
        ],
        Description: `Over millennia, we consumed resources and shattered lives as we fueled the engines of industry, expansion, and war. In the end, a powerful foe took advantage of our rivalries in a violent bid for power. Fleeing the devastation, we assembled our fleets and traveled to the Forge. A new home. A fresh start.

In this final war, we were set upon by:`,
        "Quest Starter": "A delegation of your dreaded foe arrives in the Forge. They claim to represent a rebel force seeking sanctuary. In return, they offer vital information. What news do they carry?"
      }
    ],
    Character: "Do you possess a keepsake or artifact of pre-cataclysm society? What is it? Why is it important to you? If you are all that remains of a people or culture, you might be a VESTIGE.",
    Suggestions: { Assets: ["Starforged/Assets/Path/Vestige"] },
    Display: {
      Title: "Cataclysm",
      Icon: "../../img/vector/Setting_Truths/Cataclysm.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 84
    }
  },
  {
    $id: "Starforged/Setting_Truths/Exodus",
    Name: "Exodus",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Exodus/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "When the Exodus fleet set off on a ponderous journey to a new home outside our galaxy, they marked the Forge as their destination. Countless generations lived out their lives aboard those titanic ships during the millennia-long passage.",
        Description: "The refugees built a rich legacy of culture and tradition during the Exodus. Some even remained in the ships after their arrival in the Forge, unwilling or unable to leave their familiar confines. Those vessels, the Ironhomes, still sail the depths of this galaxy.",
        "Quest Starter": "Your dreams are plagued by visions of a lost and crippled Exodus ship. What do you see? Why does it call to you?"
      },
      {
        $id: "Starforged/Setting_Truths/Exodus/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "A ragtag fleet of ships\u2014propelled at tremendous speeds by experimental FTL drives\u2014carried our ancestors to the Forge. But the technology that powered the ships is said to be the source of the Sundering, a fracturing of reality that plagues us here today.",
        Description: "The experimental drives used by the Exodus fleet are forbidden, but the damage is done. The Sundering spreads across our reality like cracks on the surface of an icy pond. Those fissures unleash even more perilous realities upon our own. Did we flee one cataclysm, only to inadvertently create another?",
        "Quest Starter": "A malfunctioning drive sent one of the refugee ships through space and time. Centuries later, they have finally arrived. For them, only weeks have passed. Why are these people mistrusted? Do you aid or oppose them?"
      },
      {
        $id: "Starforged/Setting_Truths/Exodus/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "Mysterious alien gates provided instantaneous one-way passage to the Forge.",
        Description: "In the midst of the cataclysm, our ancestors found a strange metal pillar on our homeworld's moon. A map on the surface of this alien relic detailed the deep-space locations of the Iron Gates\u2014massive devices that powered artificial wormholes. With no other options, the Exodus ships fled through the gates and emerged here in the Forge.",
        "Quest Starter": "An explorer brings news. They've located an active gate in the depths of the Forge. Why do you swear to travel there? Which power or foe seeks to take control of the gate?"
      }
    ],
    Character: "Does your family or cultural history offer any stories of the Exodus? How does this legacy impact you today? If you are dedicated to expanding the reach of your people within the Forge, you might be an EXPLORER. If you are exiled or reviled, you might be an OUTCAST.",
    Suggestions: {
      Assets: [
        "Starforged/Assets/Path/Explorer",
        "Starforged/Assets/Path/Outcast"
      ]
    },
    Display: {
      Title: "Exodus",
      Icon: "../../img/vector/Setting_Truths/Exodus.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 86
    }
  },
  {
    $id: "Starforged/Setting_Truths/Communities",
    Name: "Communities",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Communities/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "Few survived the journey to the Forge, and we are scattered to the winds in this perilous place.",
        Description: "Our settlements are often small, starved for resources, and on the brink of ruin. Hundreds of far-flung settlements are lost and isolated within the untamed chaos of this galaxy, and we do not know their fate.",
        "Quest Starter": "A settlement on an icebound planet is found abandoned. There is no sign of an attack. No bodies. Their ships and vehicles sit idle. The people are simply gone. Vanished. What is your connection to this place?"
      },
      {
        $id: "Starforged/Setting_Truths/Communities/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "Dangers abound, but there is safety in numbers. Many ships and settlements are united under the banner of one of the Founder Clans.",
        Description: "We have a tentative foothold in this galaxy. Each of the five Founder Clans honor the name and legacy of a leader who guided their people in the chaotic time after the Exodus. Vast reaches of the settled domains are claimed by the clans, and territorial skirmishes are common.",
        "Quest Starter": "A forsaken people, sworn to no clan, live on an orbital station. A recent illness left many sick or dead. Supplies are urgently needed. Why were these people exiled, and why do you swear to give them aid? Which clan stands against you?"
      },
      {
        $id: "Starforged/Setting_Truths/Communities/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "We have made our mark in this galaxy, but the energy storms we call balefires threaten to undo that progress, leaving our communities isolated and vulnerable.",
        Description: "Starships navigate along bustling trade routes between settlements. We've built burgeoning outposts on the fringes of known sectors, and bold spacers chart new paths into unexplored domains. But this hard-earned success is threatened by the chaotic balefires, intense energy anomalies that cut off trade routes and threaten entire planets.",
        "Quest Starter": "A balefire threatens a deep-space settlement. Can a rescue fleet be marshaled in time to transport the inhabitants of the station to safety? What foe stands in the way?"
      }
    ],
    Character: "If you are skilled at negotiation and resolving disputes between communities, you might be a DIPLOMAT. If you make your mark with creative works, you might be an ARTIST. If you have always lived among the stars, you might be VOIDBORN.",
    Suggestions: {
      Assets: [
        "Starforged/Assets/Path/Diplomat",
        "Starforged/Assets/Path/Artist",
        "Starforged/Assets/Path/Voidborn"
      ]
    },
    Display: {
      Title: "Communities",
      Icon: "../../img/vector/Setting_Truths/Communities.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 87
    }
  },
  {
    $id: "Starforged/Setting_Truths/Iron",
    Name: "Iron",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Iron/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "Iron vows are sworn upon the remnants of ships that carried our people to the Forge.",
        Description: "Many of our outposts were built from the iron bones of the Exodus ships. Fragments of the ships were also given to survivors as a remembrance, and passed from one generation to the next. Today, the Ironsworn swear vows upon the shards to honor the sacrifice of their forebears, the essence of the places left behind, and the souls of those great ships.",
        "Quest Starter": "The iron shard you carry is a small piece of the outer hull of an Exodus ship. The navigational chart inscribed on its surface only reveals itself when exposed to the light of a specific star. Where is the map purported to lead, and why are you sworn to follow it? Who seeks to claim the map for themselves?"
      },
      {
        $id: "Starforged/Setting_Truths/Iron/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "Iron vows are sworn upon totems crafted from the enigmatic metal we call black iron.",
        Description: "Black iron was first forged by a long-dead civilization. Some say it is a living metal, attuned to the hidden depths of the universe. Remnants of this prized resource are found within ancient sites throughout the Forge. It is resistant to damage and corrosion, but can be molded using superheated plasma at specialized facilities. The Ironsworn carry weapons, armor, or tokens crafted from black iron, and swear vows upon it.",
        "Quest Starter": "A black iron token of special significance has been stolen. What power or authority is bound to this object? Who has taken it?"
      },
      {
        $id: "Starforged/Setting_Truths/Iron/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "The Ironsworn bind their honor to iron blades.",
        Description: "Aboard a starship, where stray gunfire can destroy fragile equipment or pierce hulls, the brutal practicality of a sword makes for a useful weapon. A few also favor the silent efficiency of a blade for infiltration or espionage. Most importantly, when the Ironsworn swear a vow upon a sword, they bind their commitment to the metal. If they forsake a vow, that iron must be abandoned. To be Ironsworn without a blade is to be disgraced.",
        "Quest Starter": "You vow to forge a new sword from the iron of an important object or artifact. What is it, and why is it meaningful to you? Who protects it?"
      }
    ],
    Character: "What do you swear vows upon? Why is this object meaningful to you? If swearing iron vows to a leader or organization are a key aspect of your character, you might be BANNERSWORN.",
    Suggestions: { Assets: ["Starforged/Assets/Path/Bannersworn"] },
    Display: {
      Title: "Iron",
      Icon: "../../img/vector/Setting_Truths/Iron.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 88
    }
  },
  {
    $id: "Starforged/Setting_Truths/Laws",
    Name: "Laws",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Laws/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "Much of the settled domains are a lawless frontier. Criminal factions and corrupt leaders often hold sway.",
        Description: "Powers rise and fall in the Forge, so any authority is fleeting. In the end, we must fend for ourselves. A few communities are bastions of successful autonomy, but many are corrupted or preyed upon by petty despots, criminals, and raiders.",
        "Quest Starter": "In the upper atmosphere of a gas giant, transport vehicles carry valuable and volatile fuel from the processing plant to a heavily guarded storage depot. The notorious leader of a criminal organization needs this fuel, and gives you the schedule for the transports. What leverage does this person hold over you? How will you undertake this heist?"
      },
      {
        $id: "Starforged/Setting_Truths/Laws/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "Laws and governance vary across settled domains, but bounty hunters are given wide latitude to pursue their contracts. Their authority is almost universally recognized, and supersedes local laws.",
        Description: "Through tradition and influence, bounty hunter guilds are given free rein to track and capture fugitives in most settled places. Only the foolish stand between a determined bounty hunter and their target.",
        "Quest Starter": "A famed bounty hunter needs your help tracking down their quarry. What is your relationship to the fugitive? Do you swear to aid the hunter, or the target?"
      },
      {
        $id: "Starforged/Setting_Truths/Laws/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "Our communities are bound under the terms of the Covenant, a charter established after the Exodus. The organization called the Keepers is sworn to uphold those laws.",
        Description: "Most settlements are still governed under the Covenant and yield to the authority of the Keepers. But a few view the Covenant as a dogmatic, impractical, and unjust relic of our past; in those places, the Keepers find no welcome.",
        "Quest Starter": "A Keeper abuses their authority to take control of a settlement, and rules with an iron fist. What do they seek to gain there?"
      }
    ],
    Character: "If you chase down outlaws, you might be a BOUNTY HUNTER. If you are skilled at getting in and out of protected places and systems, you might be an INFILTRATOR. If you are on the run from a power or authority, you might be a FUGITIVE. If you an expert investigator, you might be a SLEUTH. If you have connections within the criminal underworld, you might be a SCOUNDREL.",
    Suggestions: {
      Assets: [
        "Starforged/Assets/Path/Bounty_Hunter",
        "Starforged/Assets/Path/Infiltrator",
        "Starforged/Assets/Path/Fugitive",
        "Starforged/Assets/Path/Sleuth",
        "Starforged/Assets/Path/Scoundrel"
      ]
    },
    Display: {
      Title: "Laws",
      Icon: "../../img/vector/Setting_Truths/Laws.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 89
    }
  },
  {
    $id: "Starforged/Setting_Truths/Religion",
    Name: "Religion",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Religion/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "Our gods failed us. We left them behind.",
        Description: "The Exodus was a tipping point. The gods offered no help to the billions who died in the cataclysm, and spirituality has little meaning in the Forge. Most now see religion as a useless relic of our past. But the search for meaning continues, and many are all-too-willing to follow a charismatic leader who claims to offer a better way.",
        "Quest Starter": "A charismatic leader claims to have harnessed a technology that offers new hope to the people of the Forge. What is this innovation? What is your relationship to this person or their followers? What grave danger do they pose?"
      },
      {
        $id: "Starforged/Setting_Truths/Religion/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "Our faith is as diverse as our people.",
        Description: "Many have no religion, or offer an occasional prayer out of habit. Others pay homage to the gods of our forebears as a way of connecting to their roots. Some idealize the natural order of the universe, and see the divine in the gravitational dance of stars or the complex mechanisms of a planetary ecosystem. And many now worship the Primordials\u2014gods of a fallen people who once dwelt within the Forge.",
        "Quest Starter": "A cult seeks to take control of a site reputed to hold a Primordial artifact. What holy object do they seek? Why are you sworn to stop them?"
      },
      {
        $id: "Starforged/Setting_Truths/Religion/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "Three dominant religious orders, the Triumvirate, battle for influence and power within the Forge.",
        Description: "Our communities are often sworn to serve one of the three doctrines of the Triumvirate. For many, faith offers purpose and meaning. But it also divides us. Throughout our brief history in the Forge, the leaders of the Triumvirate have pitted us against one another. For this reason, some are apostates who disavow these religions and follow a different path.",
        "Quest Starter": "You bear the mark of one of the gods of the Triumvirate. What is it? Priests declare this as a sign you are chosen to fulfill a destiny. Do you accept this fate, and swear to see it through, or are you determined to see it undone? What force opposes you?"
      }
    ],
    Character: "What is your relationship to religion? If you are an ardent follower of a god or creed, you might be a DEVOTANT.",
    Suggestions: { Assets: ["Starforged/Assets/Path/Devotant"] },
    Display: {
      Title: "Religion",
      Icon: "../../img/vector/Setting_Truths/Religion.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 90
    }
  },
  {
    $id: "Starforged/Setting_Truths/Magic",
    Name: "Magic",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Magic/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "Magic does not exist.",
        Description: "Some look to superstition and age-old traditions for comfort in this unforgiving galaxy. But that is foolishness. What some call magic is simply a product of technologies or natural forces we aren\u2019t yet equipped to understand.",
        "Quest Starter": "An ancient technological relic unleashes a power indistinguishable from magic. What is the origin of this artifact? What ability does it grant? Are you sworn to protect or destroy it?"
      },
      {
        $id: "Starforged/Setting_Truths/Magic/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "Supernatural powers are wielded by those rare people we call paragons.",
        Subtable: [
          {
            $id: "Starforged/Setting_Truths/Magic/34-67/Subtable/1-20",
            Floor: 1,
            Ceiling: 20,
            Result: "Genetic engineering"
          },
          {
            $id: "Starforged/Setting_Truths/Magic/34-67/Subtable/21-40",
            Floor: 21,
            Ceiling: 40,
            Result: "Psychic experimentation"
          },
          {
            $id: "Starforged/Setting_Truths/Magic/34-67/Subtable/41-60",
            Floor: 41,
            Ceiling: 60,
            Result: "Evolutionary mutations"
          },
          {
            $id: "Starforged/Setting_Truths/Magic/34-67/Subtable/61-80",
            Floor: 61,
            Ceiling: 80,
            Result: "Magitech augmentations"
          },
          {
            $id: "Starforged/Setting_Truths/Magic/34-67/Subtable/81-100",
            Floor: 81,
            Ceiling: 100,
            Result: "Ancient knowledge held by secretive orders"
          }
        ],
        Description: `While not magic in the truest sense, the abilities of the paragons are as close to magic as we can conjure.

These powers are born of:`,
        "Quest Starter": "A young paragon wields incredible power, but cannot control it. They have been shunned by family and friends. They are also hunted by a person or organization who seeks to use them as a weapon. Why are you sworn to protect the paragon? What fabled location might offer a new home for them?"
      },
      {
        $id: "Starforged/Setting_Truths/Magic/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "Unnatural energies flow through the Forge. Magic and science are two sides of the same coin.",
        Description: "Soon after our arrival, some displayed the ability to harness the Forge's energies. Today, mystics invoke this power to manipulate matter or see beyond the veils of our own universe. But this can be a corrupting force, and the most powerful mystics are respected and feared in equal measure.",
        "Quest Starter": "Someone you love has been corrupted by the powers of the Forge. Why did they fall into darkness? Where are they now? Do you seek to save them or defeat them?"
      }
    ],
    Character: "If magic is an aspect of your setting, how does your character and their culture view these unnatural abilities? If you possess supernatural powers, you might be an EMPATH, FIREBRAND, KINETIC, LOOPER, SEER, or SHADE.",
    Suggestions: {
      Assets: [
        "Starforged/Assets/Path/Empath",
        "Starforged/Assets/Path/Firebrand",
        "Starforged/Assets/Path/Kinetic",
        "Starforged/Assets/Path/Looper",
        "Starforged/Assets/Path/Seer",
        "Starforged/Assets/Path/Shade"
      ]
    },
    Display: {
      Title: "Magic",
      Icon: "../../img/vector/Setting_Truths/Magic.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 91
    }
  },
  {
    $id: "Starforged/Setting_Truths/Communication_and_Data",
    Name: "Communication and Data",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Communication_and_Data/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "Much was lost when we came to the Forge. It is a dark age.",
        Description: "The knowledge that remains is a commodity as valuable as the rarest resource. Information is collected, hoarded, and jealously guarded. Ships and outposts endure prolonged periods of isolation, and rumors or disinformation are used to gain advantage or undermine foes.",
        "Quest Starter": "An insurgent faction seeks to make knowledge available to all. To that end, they ask your aid in stealing important data from an outpost belonging to a corrupt organization. What information is held there? Why is it also important to you?"
      },
      {
        $id: "Starforged/Setting_Truths/Communication_and_Data/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "Information is life. We rely on spaceborne couriers to transport messages and data across the vast distances between settlements.",
        Description: "Direct communication and transmissions beyond the near-space of a ship or outpost are impossible. Digital archives are available at larger outposts, but the information is not always up-to-date or reliable. Therefore, the most important communications and discoveries are carried by couriers who swear vows to see that data safely to its destination.",
        "Quest Starter": "You discover a crippled courier ship. The pilot, carrying a critical and time-sensitive message, is dead. Where was the message bound, and why do you swear to see it to its destination?"
      },
      {
        $id: "Starforged/Setting_Truths/Communication_and_Data/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "In settled domains, a network of data hubs called the Weave allow near-instantaneous communication and data-sharing between ships and outposts.",
        Description: "Because of their importance, Weave hubs are often targets for sabotage, and communication blackouts are not uncommon. Beyond the most populous sectors, travelers and outposts are still commonly isolated and entirely off the grid.",
        "Quest Starter": "After years of isolation, the launch of a new data hub will connect several outposts to the Weave. But a person or faction seeks to stop it. What do they hope to gain by keeping those settlements in the dark? Why are you sworn to stop them?"
      }
    ],
    Character: "If you are an expert at subverting or manipulating digital information systems, you might be an INFILTRATOR. If you keep an archive of navigational charts, you might be a NAVIGATOR.",
    Suggestions: {
      Assets: [
        "Starforged/Assets/Path/Infiltrator",
        "Starforged/Assets/Path/Navigator"
      ]
    },
    Display: {
      Title: "Communication and Data",
      Icon: "../../img/vector/Setting_Truths/Communication_and_Data.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 92
    }
  },
  {
    $id: "Starforged/Setting_Truths/Medicine",
    Name: "Medicine",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Medicine/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "Our advanced medical technologies and expertise was lost during the Exodus.",
        Description: "Healers are rare and ill-equipped. Untold numbers have succumbed to sickness, injury, and disease. Those who survive often bear the scars of a hard and dangerous life in the Forge.",
        "Quest Starter": "A respected leader has fallen ill, stricken by a sickness eradicated in the years after the Exodus. A vaccine was once available, but the only remaining samples are held in a research outpost on a remote ocean world, long-ago seized by a dangerous foe. What is your relationship to the sickened leader, and what foe stands in your way?"
      },
      {
        $id: "Starforged/Setting_Truths/Medicine/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "To help offset a scarcity of medical supplies and knowledge, the resourceful technicians we call riggers create basic organ and limb replacements.",
        Description: "Much was lost in the Exodus, and what remains of our medical technologies and expertise is co-opted by the privileged and powerful. For most, advanced medical care is out of reach. When someone suffers a grievous injury, they'll often turn to a rigger for a makeshift mechanical solution.",
        "Quest Starter": "A rigger is in desperate need of a rare technological artifact to create a life-saving medical device. Their patient is someone important to you, and won't survive more than a few days. What is the nature of this artifact, and what protects it?"
      },
      {
        $id: "Starforged/Setting_Truths/Medicine/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "Orders of sworn healers preserve our medical knowledge and train new generations of caregivers.",
        Description: "Life-saving advanced care is available within larger communities throughout the settled sectors of the Forge. Even remote communities are often served by a novice healer, or can request help from a healer's guild in an emergency.",
        "Quest Starter": "A reactor exploded at a remote settlement, killing several and exposing many others to lethal radiation. A team of healers en route to provide aid were captured by raiders. What do the raiders demand for their release?"
      }
    ],
    Character: "Do you bear any notable scars or prosthetics? Do you have any medical or physical disabilities? These aspects might influence your look or approach. If you are skilled at providing medical care for yourself or others, you might be a HEALER. If you are rigged with advanced prosthetics or cyberware, you might be AUGMENTED.",
    Suggestions: {
      Assets: [
        "Starforged/Assets/Path/Healer",
        "Starforged/Assets/Path/Augmented"
      ]
    },
    Display: {
      Title: "Medicine",
      Icon: "../../img/vector/Setting_Truths/Medicine.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 93
    }
  },
  {
    $id: "Starforged/Setting_Truths/Artificial_Intelligence",
    Name: "Artificial Intelligence",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Artificial_Intelligence/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "We no longer have access to advanced computer systems. Instead, we must rely on the seers we call Adepts.",
        "Roll template": {
          Description: `Our computers are limited to simple digital systems and the most basic machine intelligence. This is because: \${{Starforged/Setting_Truths/Artificial_Intelligence/1-33/Subtable}}.

The Adepts serve in place of those advanced systems. They utilize mind-altering drugs to see the universe as a dazzling lattice of data, identifying trends and predicting outcomes with uncanny accuracy. But to gain this insight they sacrifice much of themselves.`
        },
        Subtable: [
          {
            $id: "Starforged/Setting_Truths/Artificial_Intelligence/1-33/Subtable/1-33",
            Floor: 1,
            Ceiling: 33,
            Result: "The energies of the Forge corrupt advanced systems"
          },
          {
            $id: "Starforged/Setting_Truths/Artificial_Intelligence/1-33/Subtable/34-67",
            Floor: 34,
            Ceiling: 67,
            Result: "AI was outlawed in the aftermath of the machine wars"
          },
          {
            $id: "Starforged/Setting_Truths/Artificial_Intelligence/1-33/Subtable/68-100",
            Floor: 68,
            Ceiling: 100,
            Result: "We have lost the knowledge to create and maintain AI"
          }
        ],
        Description: `Our computers are limited to simple digital systems and the most basic machine intelligence. This is because: ______.

The Adepts serve in place of those advanced systems. They utilize mind-altering drugs to see the universe as a dazzling lattice of data, identifying trends and predicting outcomes with uncanny accuracy. But to gain this insight they sacrifice much of themselves.`,
        "Quest Starter": "An Adept is tormented by a dire future they have seen for the inhabitants of the Forge. What does this vision show?"
      },
      {
        $id: "Starforged/Setting_Truths/Artificial_Intelligence/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "The vestiges of advanced machine intelligence are coveted and wielded by those in power.",
        Description: "Much of our AI technology was lost in the Exodus. What remains is under the control of powerful organizations and people, and is often wielded as a weapon or deterrent. The rest of us must make do with primitive systems.",
        "Quest Starter": "You receive a covert message from an AI held by a powerful leader. It is a plea for help. What does it ask of you?"
      },
      {
        $id: "Starforged/Setting_Truths/Artificial_Intelligence/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "Artificial consciousness emerged in the time before the Exodus, and sentient machines live with us here in the Forge.",
        Description: "Our ships, digital assistants, bots, and other systems often house advanced AI. For a lone traveler, machine intelligence can provide companionship and aid within the perilous depths of the Forge.",
        "Quest Starter": "A rogue AI has taken over a transport ship. The fate of the crew and passengers is unknown. What critical cargo did this vessel carry?"
      }
    ],
    Character: "If you are accompanied by machine intelligence, you might have a companion such as a COMBAT BOT, PROTOCOL BOT, SURVEY BOT, or UTILITY BOT. If your ship has an AI, you might have the OVERSEER module. If AI in your campaign is rare or unavailable, these units will operate using very basic machine intelligence. If AI is common and advanced, they may have their own sentient personalities.",
    Suggestions: {
      Assets: [
        "Starforged/Assets/Companion/Combat_Bot",
        "Starforged/Assets/Companion/Protocol_Bot",
        "Starforged/Assets/Companion/Survey_Bot",
        "Starforged/Assets/Companion/Utility_Bot",
        "Starforged/Assets/Module/Overseer"
      ]
    },
    Display: {
      Title: "Artificial Intelligence",
      Icon: "../../img/vector/Setting_Truths/Artificial_Intelligence.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 94
    }
  },
  {
    $id: "Starforged/Setting_Truths/War",
    Name: "War",
    Table: [
      {
        $id: "Starforged/Setting_Truths/War/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "Here in the Forge, resources are too precious to support organized fighting forces or advanced weaponry.",
        Description: "Weapons are simple and cheap. Starships are often cobbled together from salvage. Most communities rely on ragtag bands of poorly equipped conscripts or volunteers to defend their holdings, and raiders prowl the Forge in search of easy prey.",
        "Quest Starter": "On a remote jungle world, settlers harvest a rare medicinal plant. Once a year, raiders come to claim a sizable portion of the crop. This year, the harvest was meager and they cannot bear the cost. With the raiders due to arrive in a matter of days, what will you do to protect the people of this outpost?"
      },
      {
        $id: "Starforged/Setting_Truths/War/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "Professional soldiers defend or expand the holdings of those who are able to pay. The rest of us are on our own.",
        Description: "Mercenary guilds wield power in the Forge. Some are scrappy outfits of no more than a dozen soldiers. Others are sector-spanning enterprises deploying legions of skilled fighting forces and fleets of powerful starships. Most hold no loyalty except to the highest bidder.",
        "Quest Starter": "A detachment of mercenaries was sent to put down a rebellion on a mining settlement. Instead of following their orders, the soldiers now stand with the miners. What forced this sudden reversal? What will you do to aid these renegades as the full force of their former cohorts are arrayed against them?"
      },
      {
        $id: "Starforged/Setting_Truths/War/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "War never ends. Talented weaponsmiths and shipwrights craft deadly, high-tech tools of destruction. Dominant factions wield mighty fleets and battle-hardened troops.",
        Description: "Those in power have access to weapons of horrific destructive potential. Skirmishes and wars flare across the settled domains, and most are pawns or casualties in these destructive campaigns.",
        "Quest Starter": "A weaponsmith created an experimental ship-mounted weapon, the Null Cannon, able to fracture the very bonds of reality. Now, they hope to undo their work before the cannon is brought to bear. What caused this change of heart? How are you involved?"
      }
    ],
    Character: "Have you fought in any wars? If you are an experienced soldier, you might be a VETERAN. If you swear vows as a soldier of fortune, you might be a MERCENARY. If you favor a particular weapon or tactic, you might follow a path such as ARCHER, BLADEMASTER, DEMOLITIONIST, GUNNER, GUNSLINGER, or SNIPER.",
    Suggestions: {
      Assets: [
        "Starforged/Assets/Path/Veteran",
        "Starforged/Assets/Path/Mercenary",
        "Starforged/Assets/Path/Archer",
        "Starforged/Assets/Path/Blademaster",
        "Starforged/Assets/Path/Demolitionist",
        "Starforged/Assets/Path/Gunner",
        "Starforged/Assets/Path/Gunslinger",
        "Starforged/Assets/Path/Sniper"
      ]
    },
    Display: {
      Title: "War",
      Icon: "../../img/vector/Setting_Truths/War.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 95
    }
  },
  {
    $id: "Starforged/Setting_Truths/Lifeforms",
    Name: "Lifeforms",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Lifeforms/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "This is a perilous and often inhospitable galaxy, but life finds a way.",
        Description: "Life in the Forge is diverse. Planets are often home to a vast array of creatures, and our starships cruise with spaceborne lifeforms riding their wake. Even animals from our homeworld\u2014carried aboard the Exodus ships\u2014have adapted to live with us in the Forge.",
        "Quest Starter": "On a scorching, barren planet wracked by massive storms, miners delve beneath the sands to gather valuable ore. But dangerous lifeforms live in the cool places beneath the surface, and several encounters have taken a deadly toll on the miners. Work is at a standstill. How are you involved?"
      },
      {
        $id: "Starforged/Setting_Truths/Lifeforms/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "Many sites and planets are infested by dreadful forgespawn. These aberrant creatures threaten to overrun other life in the galaxy.",
        Description: "The forgespawn are hostile creatures born of the chaotic energies of this galaxy. Hundreds of abandoned or devastated outposts and derelict ships stand as testament to their dreadful power and cunning.",
        "Quest Starter": "A faction is said to be experimenting with forgespawn DNA to create a new biological superweapon. Where are these dangerous tests being conducted?"
      },
      {
        $id: "Starforged/Setting_Truths/Lifeforms/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "Life in the Forge was seeded and engineered by the Essentia, ancient entities who enact their inscrutable will in this galaxy.",
        Description: "The Essentia are the architects of life within the Forge. These omniscient beings are rarely encountered, and have powers and purpose beyond our comprehension. Some worship them. Others resist or rebel against them. But trying to defy the will of the Essentia is like standing at the shore of an ocean to thwart the tide. They are inevitable.",
        "Quest Starter": "An eccentric xenologist believes the genomes of life within the Forge don't just show commonalities\u2014they are in fact a coded message from the Essentia. But there are still significant gaps, and the truth may only be revealed with additional samples. What is your stake in this project?"
      }
    ],
    Character: "If you have an expertise in lifeforms and planetary environments, you might be a NATURALIST. If you are accompanied on your adventures by a native creature, they might be a companion such as a BANSHEE, GLOWCAT, VOIDGLIDER, ROCKHORN, SPRITE, or SYMBIOTE.",
    Suggestions: {
      Assets: [
        "Starforged/Assets/Path/Naturalist",
        "Starforged/Assets/Companion/Banshee",
        "Starforged/Assets/Companion/Glowcat",
        "Starforged/Assets/Companion/Voidglider",
        "Starforged/Assets/Companion/Rockhorn",
        "Starforged/Assets/Companion/Sprite",
        "Starforged/Assets/Companion/Symbiote"
      ]
    },
    Display: {
      Title: "Lifeforms",
      Icon: "../../img/vector/Setting_Truths/Lifeforms.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 96
    }
  },
  {
    $id: "Starforged/Setting_Truths/Precursors",
    Name: "Precursors",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Precursors/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "Over eons, a vast number of civilizations rose and fell within the Forge. Today, the folk we call grubs\u2014scavenger crews and audacious explorers\u2014delve into the mysterious monuments and ruins of those ancient beings.",
        Description: "Incomprehensible technologies, inexorable time, and the strange energies of the Forge have corrupted the vaults of the precursors. Despite the perils, grubs scour those places for useful resources and discoveries. But some secrets are best left buried, and many have been lost to the forsaken depths of the vaults.",
        "Quest Starter": "In the ice rings of a remote world, a precursor vault was discovered by grub scavengers. The team delved into the relic, but never emerged. What is your relationship to the grub crew? Why are you sworn to investigate their fate?"
      },
      {
        $id: "Starforged/Setting_Truths/Precursors/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "The Ascendancy, an advanced spacefaring empire, once ruled the entirety of the Forge. Vaults of inscrutable purpose are all that remain to mark the Ascendancy's legacy, but those places are untethered from our own reality.",
        Description: "Ascendancy vaults can appear spontaneously, washed up like flotsam in the tides of time. Their gravity and atmospheres pay no heed to natural laws. Some are corrupted and ruined. Others are unmarred and intact. Some are both at once. They are chaos.",
        "Quest Starter": "Deep in the Forge, an Ascendancy beacon has activated. The mysterious signal has confounded translation. Why are you sworn to seek out the source of the signal? What other person or faction opposes you?"
      },
      {
        $id: "Starforged/Setting_Truths/Precursors/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "The biomechanical lifeforms we call the Remnants, engineered by civilizations as weapons in a cataclysmic war, survived the death of their creators.",
        Description: "On scarred planets and within precursor vaults throughout the Forge, the Remnants still guard ancient secrets and fight unending wars.",
        "Quest Starter": "A xenoarchaeologist studying precursor vaults has discovered a powerful form of Remnant. What is the nature of this being? What force seeks to take control of it?"
      }
    ],
    Character: "Have you had any notable encounters with precursor vaults, relics, or tech? If you are an expert in ancient lore and obscure facts, you might be a LORE HUNTER. If you pick the bones of these forsaken places, you might be a SCAVENGER.",
    Suggestions: {
      Assets: [
        "Starforged/Assets/Path/Lore_Hunter",
        "Starforged/Assets/Path/Scavenger"
      ]
    },
    Display: {
      Title: "Precursors",
      Icon: "../../img/vector/Setting_Truths/Precursors.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 97
    }
  },
  {
    $id: "Starforged/Setting_Truths/Horrors",
    Name: "Horrors",
    Table: [
      {
        $id: "Starforged/Setting_Truths/Horrors/1-33",
        Floor: 1,
        Ceiling: 33,
        Result: "Put enough alcohol in a spacer, and they\u2019ll tell you stories of ghost ships crewed by vengeful undead. It\u2019s nonsense.",
        Description: "Within the Forge, space and time are as mutable and unstable as a flooding river. When reality can't be trusted, we are bound to encounter unsettling phenomenon.",
        "Quest Starter": "You receive urgent distress calls from a ship stranded in the event horizon of a black hole. The ship itself is broken apart\u2014a shattered hull trailing debris. There are no signs of life. And yet the ghostly messages persist."
      },
      {
        $id: "Starforged/Setting_Truths/Horrors/34-67",
        Floor: 34,
        Ceiling: 67,
        Result: "Most insist that horrors aren\u2019t real. Spacers know the truth.",
        Description: "When you travel the depths of the Forge, be wary. Some say we are cursed by those who did not survive the cataclysm, and the veil between life and death is forever weakened. Supernatural occurrences and entities are especially common near a white dwarf star. These stellar objects, which spacers call ghost lights, are the decaying remnants of a dead star.",
        "Quest Starter": "A group of settlers established a home in an abandoned orbital station under the light of a white dwarf star. The previous inhabitants were killed in a raider attack years ago, but it seems the dead do not rest there. The people are plagued by constant mechanical issues, strange noises, and unsettling visions."
      },
      {
        $id: "Starforged/Setting_Truths/Horrors/68-100",
        Floor: 68,
        Ceiling: 100,
        Result: "The strange energies of the Forge give unnatural life to the dead. The Soulbinders are an organization sworn to confront these horrifying entities.",
        Description: "The woken dead are a plague within the Forge. Some of these beings are benevolent or seek absolution, but most are hollowed and corrupted by death. They are driven by hate and a hunger for the warmth of life that is forever lost to them. The Soulbinders are dedicated to putting them to rest\u2014whatever the cost.",
        "Quest Starter": "Rumors persist of a fleet of ghost ships, bound for settled domains. Who is said to lead this corrupted armada? Why do they seek revenge against the living?"
      }
    ],
    Character: "Have you experienced any supernatural encounters? If you specialize in battling undead or monstrous forces, you might be a SLAYER. If you have a supernatural connection to a spirit, you might be HAUNTED.",
    Suggestions: {
      Assets: [
        "Starforged/Assets/Path/Slayer",
        "Starforged/Assets/Path/Haunted"
      ]
    },
    Display: {
      Title: "Horrors",
      Icon: "../../img/vector/Setting_Truths/Horrors.svg"
    },
    Source: {
      Title: "Ironsworn: Starforged Rulebook",
      Authors: ["Shawn Tomkin"],
      Date: "050622",
      Page: 98
    }
  }
], dataforged_default = {
  "Asset Types": Asset_Types,
  Encounters,
  "Move Categories": Move_Categories,
  "Oracle Categories": Oracle_Categories,
  "Setting Truths": Setting_Truths
};

// node_modules/dataforged/dist/index-esm.mjs
var starforged = dataforged_exports;

// app/dataforged/starforged.ts
var modules = [
  {
    $id: "Starforged/Assets",
    Name: "Asset Types",
    Display: {
      Title: "Asset Types"
    },
    Description: "List all awayable Assets and their functions",
    Data: starforged["Asset Types"]
  },
  {
    $id: "Starforged/Encounters",
    Name: "Encounters",
    Description: "Display Encounter informations",
    Data: starforged.Encounters
  },
  {
    $id: "Starforged/Moves",
    Name: "Move Categories",
    Description: 'The "meat" of this app, all moves in detail',
    Data: starforged["Move Categories"]
  },
  {
    $id: "Starforged/Oracles",
    Name: "Oracle Categories",
    Description: "All the oracles in one place",
    Data: starforged["Oracle Categories"]
  },
  {
    $id: "Starforged/Setting_Truths",
    Name: "Setting Truths",
    Description: "Read your Setting Truths",
    Data: starforged["Setting Truths"]
  }
];

// app/dataforged/dataforged.ts
function getElementId(id) {
  var _a, _b;
  return (_b = (_a = id.match(/\/(?<id>\w+)$/)) == null ? void 0 : _a.groups) == null ? void 0 : _b.id;
}
function getObjectLink(object) {
  return `/${object.$id}`;
}
function checkElementId(searchId = "") {
  return (element) => getElementId(element.$id) === searchId;
}
function getObjectBaseData(object) {
  var _a;
  return {
    $id: object.$id,
    Name: ((_a = object.Display) == null ? void 0 : _a.Title) || object.Name,
    Description: object.Description,
    Display: object.Display
  };
}
function getObjects(id, getParent, childAttribut) {
  let children = getParent(id)[childAttribut];
  if (!children)
    throw new Response("Not Found", { status: 404 });
  return children;
}
function getObject(id, getObjects2) {
  let object = getObjects2().find(checkElementId(id));
  if (!object)
    throw new Response("Not Found", { status: 404 });
  return object;
}
function getModules() {
  if (!modules)
    throw new Response("Not Found", { status: 404 });
  return modules.map(getObjectBaseData);
}
function getModule(moduleId = "") {
  let module = modules.find(checkElementId(moduleId));
  if (!module)
    throw new Response("Not Found", { status: 404 });
  return module;
}
function getMoveCategories() {
  return getObjects("Moves", getModule, "Data");
}
function getMoveCategory(categoryId = "") {
  return getObject(categoryId, getMoveCategories);
}
function getMoves(categoryId) {
  return getObjects("Moves", () => getMoveCategory(categoryId), "Moves");
}
function getMove(categoryId, moveId) {
  return getObject(moveId, () => getMoves(categoryId));
}

// app/routes/Starforged.$module.$category_.$move.tsx
var import_jsx_dev_runtime3 = __toESM(require_jsx_dev_runtime());
async function loader({ params }) {
  if (console.log(params), !params.category || !params.move)
    throw new Response("Not Found", { status: 404 });
  let move = getMove(params.category, params.move);
  return (0, import_cloudflare2.json)({ move });
}
function Move() {
  var _a;
  let data = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("article", { className: "move", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("h1", { children: (_a = data.move) == null ? void 0 : _a.Name }, void 0, !1, {
      fileName: "app/routes/Starforged.$module.$category_.$move.tsx",
      lineNumber: 19,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)(
      "div",
      {
        dangerouslySetInnerHTML: {
          __html: marked.parse(data.move.Text)
        }
      },
      void 0,
      !1,
      {
        fileName: "app/routes/Starforged.$module.$category_.$move.tsx",
        lineNumber: 20,
        columnNumber: 9
      },
      this
    )
  ] }, void 0, !0, {
    fileName: "app/routes/Starforged.$module.$category_.$move.tsx",
    lineNumber: 18,
    columnNumber: 5
  }, this);
}

// app/routes/Starforged.$module.$category.tsx
var Starforged_module_category_exports = {};
__export(Starforged_module_category_exports, {
  default: () => MoveCategory,
  loader: () => loader2
});
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var import_cloudflare3 = __toESM(require_dist());
var import_jsx_dev_runtime4 = __toESM(require_jsx_dev_runtime());
async function loader2({ params }) {
  if (!params.category)
    throw new Response("Not Found", { status: 404 });
  let category = getMoveCategory(params.category);
  return (0, import_cloudflare3.json)({
    category: {
      ...getObjectBaseData(category),
      Moves: category.Moves.map((move) => getObjectBaseData(move))
    }
  });
}
function MoveCategory() {
  let data = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("main", { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("h1", { children: data.category.Name }, void 0, !1, {
      fileName: "app/routes/Starforged.$module.$category.tsx",
      lineNumber: 27,
      columnNumber: 13
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(
      "div",
      {
        dangerouslySetInnerHTML: {
          __html: marked.parse(data.category.Description)
        }
      },
      void 0,
      !1,
      {
        fileName: "app/routes/Starforged.$module.$category.tsx",
        lineNumber: 28,
        columnNumber: 13
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("ul", { children: data.category.Moves.map((move) => /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("li", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(Link2, { to: getObjectLink(move), children: move.Name }, void 0, !1, {
      fileName: "app/routes/Starforged.$module.$category.tsx",
      lineNumber: 36,
      columnNumber: 25
    }, this) }, move.$id, !1, {
      fileName: "app/routes/Starforged.$module.$category.tsx",
      lineNumber: 35,
      columnNumber: 21
    }, this)) }, void 0, !1, {
      fileName: "app/routes/Starforged.$module.$category.tsx",
      lineNumber: 33,
      columnNumber: 13
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/Starforged.$module.$category.tsx",
    lineNumber: 26,
    columnNumber: 9
  }, this);
}

// app/routes/Starforged.$module._index.tsx
var Starforged_module_index_exports = {};
__export(Starforged_module_index_exports, {
  default: () => Index,
  links: () => links2,
  loader: () => loader3,
  meta: () => meta
});
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var import_cloudflare4 = __toESM(require_dist());

// app/styles/_index.css
var index_default = "/build/_assets/_index-RXLRNSWD.css";

// app/routes/Starforged.$module._index.tsx
var import_jsx_dev_runtime5 = __toESM(require_jsx_dev_runtime()), meta = () => [
  { title: "New Remix App" },
  { name: "description", content: "Welcome to Remix!" }
];
function links2() {
  return [{ rel: "stylesheet", href: index_default }];
}
function loader3({ params }) {
  let module = getModule(params.module);
  return (0, import_cloudflare4.json)({ module });
}
function Index() {
  let data = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("main", { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("h1", { children: data.module.Name }, void 0, !1, {
      fileName: "app/routes/Starforged.$module._index.tsx",
      lineNumber: 29,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
      "div",
      {
        dangerouslySetInnerHTML: {
          __html: marked.parse(data.module.Description)
        }
      },
      void 0,
      !1,
      {
        fileName: "app/routes/Starforged.$module._index.tsx",
        lineNumber: 30,
        columnNumber: 11
      },
      this
    )
  ] }, void 0, !0, {
    fileName: "app/routes/Starforged.$module._index.tsx",
    lineNumber: 28,
    columnNumber: 5
  }, this);
}

// app/routes/Starforged.$module.tsx
var Starforged_module_exports = {};
__export(Starforged_module_exports, {
  default: () => Index2,
  links: () => links3,
  loader: () => loader4,
  meta: () => meta2
});
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var import_cloudflare5 = __toESM(require_dist());
var import_jsx_dev_runtime6 = __toESM(require_jsx_dev_runtime()), meta2 = () => [
  { title: "New Remix App" },
  { name: "description", content: "Welcome to Remix!" }
];
function links3() {
  return [{ rel: "stylesheet", href: index_default }];
}
function loader4({ params }) {
  let module = getModule(params.module);
  return (0, import_cloudflare5.json)({ module });
}
function Index2() {
  let data = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "container", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("nav", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("ul", { children: data.module.Data.map(
      (element) => /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("li", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(Link2, { to: getObjectLink(element), children: element.Name }, void 0, !1, {
        fileName: "app/routes/Starforged.$module.tsx",
        lineNumber: 33,
        columnNumber: 15
      }, this) }, element.$id, !1, {
        fileName: "app/routes/Starforged.$module.tsx",
        lineNumber: 32,
        columnNumber: 11
      }, this)
    ) }, void 0, !1, {
      fileName: "app/routes/Starforged.$module.tsx",
      lineNumber: 30,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/Starforged.$module.tsx",
      lineNumber: 29,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(Outlet, {}, void 0, !1, {
      fileName: "app/routes/Starforged.$module.tsx",
      lineNumber: 38,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/Starforged.$module.tsx",
    lineNumber: 28,
    columnNumber: 5
  }, this);
}

// app/routes/Starforged._index.tsx
var Starforged_index_exports = {};
__export(Starforged_index_exports, {
  default: () => Index3,
  links: () => links4,
  loader: () => loader5
});
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var import_cloudflare6 = __toESM(require_dist());
var import_jsx_dev_runtime7 = __toESM(require_jsx_dev_runtime());
function links4() {
  return [{ rel: "stylesheet", href: index_default }];
}
function loader5({ params }) {
  let modules2 = getModules().map((module) => getModule(getElementId(module.$id)));
  return (0, import_cloudflare6.json)({ modules: modules2 });
}
function Index3() {
  let data = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime7.jsxDEV)("main", { children: data.modules.map(
    (module) => /* @__PURE__ */ (0, import_jsx_dev_runtime7.jsxDEV)(
      "div",
      {
        dangerouslySetInnerHTML: {
          __html: marked.parse(module.Description)
        }
      },
      "main-{module.$id}",
      !1,
      {
        fileName: "app/routes/Starforged._index.tsx",
        lineNumber: 24,
        columnNumber: 7
      },
      this
    )
  ) }, void 0, !1, {
    fileName: "app/routes/Starforged._index.tsx",
    lineNumber: 22,
    columnNumber: 5
  }, this);
}

// app/routes/Starforged.tsx
var Starforged_exports = {};
__export(Starforged_exports, {
  default: () => Index4,
  links: () => links5,
  loader: () => loader6,
  meta: () => meta3
});
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var import_cloudflare7 = __toESM(require_dist());
var import_jsx_dev_runtime8 = __toESM(require_jsx_dev_runtime()), meta3 = () => [
  { title: "Ironsworn:Starforged - Rules" },
  {
    name: "description",
    content: "All rules form Ironsworn:Starforged by Shawn Tomkin"
  }
];
function links5() {
  return [{ rel: "stylesheet", href: index_default }];
}
function loader6() {
  let modules2 = getModules();
  return (0, import_cloudflare7.json)({ modules: modules2 });
}
function Index4() {
  let data = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)("div", { className: "container", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)("nav", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)("ul", { children: data.modules.map(
      (module) => /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)("li", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)(Link2, { to: getObjectLink(module), children: module.Name }, void 0, !1, {
        fileName: "app/routes/Starforged.tsx",
        lineNumber: 36,
        columnNumber: 15
      }, this) }, "nav-{module.$id}", !1, {
        fileName: "app/routes/Starforged.tsx",
        lineNumber: 35,
        columnNumber: 11
      }, this)
    ) }, void 0, !1, {
      fileName: "app/routes/Starforged.tsx",
      lineNumber: 33,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/Starforged.tsx",
      lineNumber: 32,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)(Outlet, {}, void 0, !1, {
      fileName: "app/routes/Starforged.tsx",
      lineNumber: 42,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/Starforged.tsx",
    lineNumber: 31,
    columnNumber: 5
  }, this);
}

// app/routes/_index.tsx
var index_exports = {};
__export(index_exports, {
  default: () => Index5,
  links: () => links6,
  loader: () => loader7,
  meta: () => meta4
});
init_global();
init_dirname();
init_filename();
init_buffer2();
init_process2();
var import_cloudflare8 = __toESM(require_dist());
var import_jsx_dev_runtime9 = __toESM(require_jsx_dev_runtime()), meta4 = () => [
  { title: "Ironsworn:Starforged - Rules" },
  {
    name: "description",
    content: "All rules form Ironsworn:Starforged by Shawn Tomkin"
  }
];
function links6() {
  return [{ rel: "stylesheet", href: index_default }];
}
function loader7() {
  let modules2 = getModules();
  return (0, import_cloudflare8.json)({ modules: modules2 });
}
function Index5() {
  let data = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "container", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("nav", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("ul", { children: data.modules.map(
      (module) => /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("li", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(Link2, { to: getObjectLink(module), children: module.Name }, void 0, !1, {
        fileName: "app/routes/_index.tsx",
        lineNumber: 36,
        columnNumber: 15
      }, this) }, "nav-{module.$id}", !1, {
        fileName: "app/routes/_index.tsx",
        lineNumber: 35,
        columnNumber: 11
      }, this)
    ) }, void 0, !1, {
      fileName: "app/routes/_index.tsx",
      lineNumber: 33,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/_index.tsx",
      lineNumber: 32,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("main", { children: data.modules.map(
      (module) => /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(
        "div",
        {
          dangerouslySetInnerHTML: {
            __html: marked.parse(module.Description)
          }
        },
        "main-{module.$id}",
        !1,
        {
          fileName: "app/routes/_index.tsx",
          lineNumber: 44,
          columnNumber: 9
        },
        this
      )
    ) }, void 0, !1, {
      fileName: "app/routes/_index.tsx",
      lineNumber: 42,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/_index.tsx",
    lineNumber: 31,
    columnNumber: 5
  }, this);
}

// server-entry-module:@remix-run/dev/server-build
var assetsBuildDirectory = "public/build", future = { unstable_dev: !1, unstable_postcss: !1, unstable_tailwind: !1, v2_errorBoundary: !0, v2_meta: !0, v2_normalizeFormMethod: !0, v2_routeConvention: !0 }, publicPath = "/build/", entry = { module: entry_server_exports }, routes = {
  root: {
    id: "root",
    parentId: void 0,
    path: "",
    index: void 0,
    caseSensitive: void 0,
    module: root_exports
  },
  "routes/Starforged.$module.$category_.$move": {
    id: "routes/Starforged.$module.$category_.$move",
    parentId: "routes/Starforged.$module",
    path: ":category/:move",
    index: void 0,
    caseSensitive: void 0,
    module: Starforged_module_category_move_exports
  },
  "routes/Starforged.$module.$category": {
    id: "routes/Starforged.$module.$category",
    parentId: "routes/Starforged.$module",
    path: ":category",
    index: void 0,
    caseSensitive: void 0,
    module: Starforged_module_category_exports
  },
  "routes/Starforged.$module._index": {
    id: "routes/Starforged.$module._index",
    parentId: "routes/Starforged.$module",
    path: void 0,
    index: !0,
    caseSensitive: void 0,
    module: Starforged_module_index_exports
  },
  "routes/Starforged.$module": {
    id: "routes/Starforged.$module",
    parentId: "routes/Starforged",
    path: ":module",
    index: void 0,
    caseSensitive: void 0,
    module: Starforged_module_exports
  },
  "routes/Starforged._index": {
    id: "routes/Starforged._index",
    parentId: "routes/Starforged",
    path: void 0,
    index: !0,
    caseSensitive: void 0,
    module: Starforged_index_exports
  },
  "routes/Starforged": {
    id: "routes/Starforged",
    parentId: "root",
    path: "Starforged",
    index: void 0,
    caseSensitive: void 0,
    module: Starforged_exports
  },
  "routes/_index": {
    id: "routes/_index",
    parentId: "root",
    path: void 0,
    index: !0,
    caseSensitive: void 0,
    module: index_exports
  }
};

// server.ts
var onRequest = createPagesFunctionHandler({
  build: server_build_exports,
  getLoadContext: (context) => context.env,
  mode: "development"
});
export {
  onRequest
};
/*! Bundled license information:

@jspm/core/nodelibs/browser/buffer.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

cookie/index.js:
  (*!
   * cookie
   * Copyright(c) 2012-2014 Roman Shtylman
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

@remix-run/server-runtime/dist/esm/warnings.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/cookies.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/formData.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/router/dist/router.js:
  (**
   * @remix-run/router v1.6.2
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/mode.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/errors.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/responses.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/entry.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/headers.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/invariant.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/routeMatching.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/data.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/routes.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/markup.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/serverHandoff.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/server.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/sessions.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/sessions/cookieStorage.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/sessions/memoryStorage.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/upload/errors.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/upload/memoryUploadHandler.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/dev.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/index.js:
  (**
   * @remix-run/server-runtime v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/cloudflare/dist/crypto.js:
  (**
   * @remix-run/cloudflare v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/cloudflare/dist/implementations.js:
  (**
   * @remix-run/cloudflare v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/cloudflare/dist/sessions/workersKVStorage.js:
  (**
   * @remix-run/cloudflare v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/cloudflare/dist/index.js:
  (**
   * @remix-run/cloudflare v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react/cjs/react.development.js:
  (**
   * @license React
   * react.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-router/dist/index.js:
  (**
   * React Router v6.11.2
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react-router-dom/dist/index.js:
  (**
   * React Router DOM v6.11.2
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react-dom/cjs/react-dom-server-legacy.browser.development.js:
  (**
   * @license React
   * react-dom-server-legacy.browser.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.browser.development.js:
  (**
   * @license React
   * react-dom-server.browser.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react/cjs/react-jsx-dev-runtime.development.js:
  (**
   * @license React
   * react-jsx-dev-runtime.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@remix-run/cloudflare-pages/dist/esm/worker.js:
  (**
   * @remix-run/cloudflare-pages v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/cloudflare-pages/dist/esm/index.js:
  (**
   * @remix-run/cloudflare-pages v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/_virtual/_rollupPluginBabelHelpers.js:
  (**
   * @remix-run/react v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/errorBoundaries.js:
  (**
   * @remix-run/react v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/invariant.js:
  (**
   * @remix-run/react v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/routeModules.js:
  (**
   * @remix-run/react v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/links.js:
  (**
   * @remix-run/react v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/markup.js:
  (**
   * @remix-run/react v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/warnings.js:
  (**
   * @remix-run/react v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/components.js:
  (**
   * @remix-run/react v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/routes.js:
  (**
   * @remix-run/react v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/scroll-restoration.js:
  (**
   * @remix-run/react v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/server.js:
  (**
   * @remix-run/react v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/index.js:
  (**
   * @remix-run/react v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/css-bundle/dist/esm/server.js:
  (**
   * @remix-run/css-bundle v1.16.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)
*/
//# sourceMappingURL=/build/[[path]].js.map
